{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "704c9bd4-a551-462a-bbdc-b4c0a3030b08",
        "name": "Clear Cache",
        "item": [
          {
            "id": "25dea75c-0c22-4170-a8e9-759466c721e7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c62eeef6-3fb7-4dd2-8962-c76610f371a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bdbfded9-844e-4806-ad02-323ad2a8bc92"
                }
              }
            ]
          },
          {
            "id": "71d857b2-ad91-4bab-9e1e-2691e83a8b03",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cee78e4-b927-4b2e-a4a2-e3e746854c7d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5388d087-0952-475f-af0e-e99ed20e2d30"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed8fa629-3e27-4b6d-9cdd-f333857b4406",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ced1dca-10de-47e1-a9bc-0923f0eba129",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5c4ab39-78db-4833-b421-61ec4e008d6d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f628c9ed-01ae-4d12-acf3-62e3f70eb8f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ada21c8-d759-47ab-8cdf-7d26bc8cde77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12737b83-0438-4299-b384-934cb0c09303",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0698f20f-1a25-4de0-a488-5d1a1e7f5876"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4280f6d1-c8a5-4505-b605-3c75323472e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9d81132-8793-4c65-8466-3243af3450db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d4df587-45d7-4fe2-a134-aabfe48df51f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f26c6680-28ca-4389-98f4-497eebc6c9e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57375e75-99df-4542-bc0e-dcde3858c5f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6777e558-311d-479d-8b53-bc5a087b63c8"
            }
          }
        ]
      },
      {
        "id": "7db5ef37-32e6-440d-aa38-a1bcd4fcb7f2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "73014ae4-7260-4d52-a86c-34e002594fb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfa8b57f-8d2d-4688-9300-d80991a45934",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "037f6e4c-759c-4659-a59b-77743df320eb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3711ce7-7f89-4153-b2e5-e0427622c425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8406d4b-7e9a-4bfe-ba25-53e05124f29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3e0cea-2c4b-4cba-91ca-c4f2ff7ebc4b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac244d6-9093-4adc-8d63-fad142d67bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c67aa654-58fe-4961-a543-474f56cd1a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be972f-8a24-411e-8632-64ee40c679ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baf1380-5488-4566-92d1-1db1b77e98ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9467b384-dfd1-4936-aebf-0703b7abe354"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee7e4756-f417-477d-bedd-7c5e5312c71f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdc995b5-0f87-4d90-b00d-f433e4d60547",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce8ef92-06a1-4436-8462-9f4b8f252727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b6209f5-29b1-4bd2-9548-5400135e0f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5573c9a1-6e7f-49b9-993a-3184266508f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b192ea-8f1b-414e-a299-76c1d4e1c359"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "798b2531-efb4-4cf6-a337-8d38271e83cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "565655e2-b97c-41c7-a37b-3cf08719e20b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7faba493-563c-4ff6-a52a-36b688691315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f80f0467-ee64-400c-9f1f-922a1d5c4cef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d88b8411-b8b7-452d-b126-8ee4929b131f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c712e1a2-9490-48a8-ab89-12a8ea1c0467"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "341edc30-95d3-468d-8c74-f7b8ab7f6143",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1edeac35-90ff-44f4-8aa6-9bcac1091042"
            }
          }
        ]
      },
      {
        "id": "666c018c-43e3-4ca6-963b-044a46bab6cf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9ca70338-cc98-4527-a2c3-223d31bfebba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2eed6d77-7119-4146-acce-4f12ee9ae911",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4d84a6cd-beeb-4d34-a0f9-919b929eab3e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ffa5ac-4d49-495b-85b1-15a754ec8d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a10ab32-e274-4417-b70d-b1be85a4b84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3960d13-6971-412e-9c60-189204dc1aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35f17b9c-54f2-43e8-91d4-98d91635856e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695e394f-10ab-46e2-bb20-3e2591793037",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445c3af0-24a2-4438-80fb-8b5074bf5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ebe7e8-838c-4d1c-9ad1-aac13346e964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506dca28-66b3-42f2-8136-47d6f9f0f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da1d215b-b815-407c-8dad-91d0d3b93219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a55b445-f1ef-40ca-b577-5be3f1b1f340",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9bfd5-1f9c-4deb-888e-b5f35a6e88b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e5b9ca-d294-4b1a-bec6-c84025e3e3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb80d1d-32fe-4795-b5fd-2c46ccab6343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751741cf-f2b7-41ae-a220-108e0cb76cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fcf499-b5e9-4571-8ab8-050b5f3b264d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7248a4-1a4f-4a9f-a6bb-d926749ff039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80484bc4-d2bc-478c-a769-8c50a2d59a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6242aa7c-62f9-4c5f-9f62-4f62c7589d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a96b1834-2448-44e7-9a2e-fe64a416eaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7663e788-acdd-41c7-aafa-8fc5f17fb4b9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476a6f76-7e32-4bca-9f54-b6016c915749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e1ed19-9924-4daa-89a0-91f2c5e7a310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52445378-b74b-439b-b623-8afbc921c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67de5774-d11d-440e-8899-9d24753dda6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391ada87-c9c3-400c-8869-14d2d6684cf1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957452d1-f781-4aa8-b1d1-7b0de33b4965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2056c7-f460-4969-984b-e2337dd9e3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a32a9-0b66-4052-9f09-549cc8e797fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6674b8cb-1624-471f-9e0e-4c64d89e4a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28e42fe-f52e-4614-b72c-5b2b230c788a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4391cf-8331-49a1-85d5-7f884328a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8a1bb1-1c43-4ac5-a9eb-3aea06e3cb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f07282-dab4-4dda-bcac-05dd4a9bfff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a971b7f9-44ca-4ca9-9e33-e22acca7cb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42209b84-75e0-4168-8ad0-c34093358786",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e5490b-48f8-45c3-b3ca-7de3ab663ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f8ae04-adc8-4b78-bd50-ab18e6952b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f0b7f9-8246-471e-987e-27de8f87ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51394157-4a7f-4bda-9be7-6a3020df7980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b208ab1-1e26-4e73-b259-a3ddc6ce1774",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe756f5-cdde-4741-9271-649d48d24ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2b3345-66c2-445e-9c9a-9a6e2090a9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc00045-6ae4-49a9-beb6-41e6ce65c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "468e5eaa-839b-4253-a7a5-2030f82e5813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28abdb3d-c5b3-44e9-857d-568860947cba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9b8227-a15b-467d-bfb2-663f00301067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42560ce5-a524-4ba9-a9c9-57356d37d774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a845e0d-fa4d-40bd-9654-ce097940efec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d97b10f-7e17-4079-8744-5fb28e8fdf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96664b3-8e61-4fc0-a280-0efa1711abee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a9a611-867d-4f55-bf57-157ebf3f5d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a003d09d-69bb-4224-b8d6-a54354f76c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b19521c-d6c9-4523-9515-70e68ac05cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a56f6478-cd0f-4249-8bb9-da6d66a73b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22151bf5-769b-405d-9354-9b6df3770864",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dc1a2e-1934-47dc-8605-19f1b288e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4d5433-76be-4615-adbf-d8a6433c17c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df92a35-2d94-4932-ac9c-71f7a2e25b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb75558-d45a-44ed-930a-7595bfe26f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0744c15-c3f1-4d54-bc3e-4ab04bf12787",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d343b3-2ffa-4213-a60d-af3a18ad946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c35e9f1-6ea7-4e6f-82d4-5b5fc721f79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e6d278-222e-4c1e-9995-2a43711f1178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e73aa40-e316-4d0f-9ef3-72a0a6c11ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fd0a96-ffab-45d3-9934-75af265e7be8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0db482b-7564-4c3f-91fc-e4ee8f2ddfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e26d51-442c-423d-9137-65409e236de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad244be-93ff-419a-8a06-4ad5b2754512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3ff3a97-9d8e-4bb3-9aac-5b9b63ac0d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2cebe2-fd6b-4905-b614-7d1070f2a443",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda2abfc-60ed-45c6-847f-313fda6b8bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fd9e29-ad62-45cc-b0bb-9612a89da43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dadec8-02a5-48df-82af-f40e1d6bacb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "425da14a-33db-4663-ba79-cc2fda0c3c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618ff4ac-379c-48cd-8e5d-3d43e33b24de",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c986251d-6128-401f-9396-545bd2229901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6627f49-8159-431c-accc-c7cf8505de8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4fcb7-6a8f-4e3d-ab34-d06709682bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0616ed9-e0cd-48bc-938e-70c1791d7c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa34474d-4e0c-4741-8b2d-a0cc9cedf9a0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533e9d2c-e693-49a5-81d5-1e3ded4e5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c6396a-75c6-4483-9675-deb80db3e25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9a5838-5a40-4c67-b825-b6603e549018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1de1ffa4-00bf-4df2-a255-8634cf2152e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77293a7-0523-4e77-83d0-52cb7d24611b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5dfde8-655c-483e-98bd-2bf78bed12c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2294c9a-e0c5-4791-bf33-b0e00eadce77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12448db1-404d-425c-a911-647bc7261d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec55fe7-39a2-41d7-a267-66c9364ac83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f2e70c-933b-4cfd-8c83-b57cb6e3c8f4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ee0090-e515-4be8-a2a4-b02590884470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58a3e52-60c9-410e-87f3-167cd7bd1347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67267a61-1755-4e95-99af-b68ff1c42f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9244315c-fc1e-4176-bc19-7e9481034083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fac5250-3b2c-45fc-9572-7461e191765e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6230d44-67a8-4cb1-9a2e-ac50a3a33196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a447a109-fc5a-4d77-956d-e6b2f777ec00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f536b94-6162-436f-993e-d42b8f1794d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8f4081-728d-494a-9171-00f529f4a1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea2d7a5-8e5f-48ee-9ef3-f889accc41d0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ac8cda-12bb-47f2-8cdb-1d422c211949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29f4ed-824d-4dfe-ace9-2f24e55f90fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882bf005-3bc3-4e02-925c-48c9df1cc674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ce0742-9156-4640-9b3f-73f85fa0085c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49feafe-0aa3-43a6-9508-385656876701",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c223e86e-c6c9-4d8c-869d-64b3f4dcd601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163513b8-8be9-45c4-8ffe-100b601febfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd49dcf-7c7b-4221-a9c9-abf0e0c3fe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea8ca27-e631-45d1-aaf4-e9e15647634c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baef8c6a-73e5-4b8e-8c4a-70d0938c0d8e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09244c0a-4217-455e-b79c-130d6d3e9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23115cc7-8f49-465d-b553-c119267f5bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a372018-b69a-4270-82fa-37762b41cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "053d8e15-0332-49bf-b41f-22e245918059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d08bcea-3a49-48ff-a044-523500e503b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593e3cba-98c4-4556-8302-97d4ce8a74fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105154e9-67a2-4e7b-aa03-a9a6a8d5a152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b9ec8d-4ab2-4697-8133-5fac88a85bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18ec2f8-92f1-4e65-85ad-40c0a8eb575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c9b6e2-9f8d-4691-bce3-725e109cfe2f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e59bb5-1cb4-4af8-9071-ba422b4ed2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568e2e24-bcb3-4dfe-b79c-a8a35b70a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17667a1-c6b6-4ea1-8c90-7391ccc4fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a76196b-49bc-45bf-8bdd-e75950603016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df35bd9-80c8-4b6c-a38e-8dfde359364e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f414e86-1f32-484f-ba9b-7ecc288213b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fefb2ff-ef1b-43a1-bc04-f72e18daef09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ea1842-21de-492c-a6d4-0d49f64abe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80539fcf-8a64-41bc-a363-a719cde3a7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd64d473-34ae-4946-a930-88d690517c66",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e9fe4-0416-41fe-a732-b0778c4945ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10daeeb2-0545-4786-aac4-5dd8fdd0643b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e659d2-4999-4579-b444-396a56bcc19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1890804d-a57b-49db-a658-db0f6258d9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee4044-8dfd-4019-8219-8232a50496c8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a6993c-3746-4d0c-baae-1c26531eeb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3df4221-9e16-4d5d-95eb-36a4c5caacc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b606f67-4d69-4223-a538-ce59ab540bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72ac3e6-4bbc-462b-9495-dd02492cd45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acf0175-71fe-4cf3-846e-e3992b96ecdb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9073f90-a244-4f59-b373-230dd0122a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c88051-34fb-4dab-be39-e6cd50d67c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01768d44-3a37-4675-8661-e8e9812a3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "922546f8-1e9a-4fa6-8a46-954a9af18e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7566c291-a61c-4a9d-89a2-ab4b27c52ba2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e803f-58f0-4287-8935-5043a77a9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8499ac62-793e-4c24-b677-43cf4bbe4800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90ef841-6485-484d-ad4d-666f03c40b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebf7c8e-01d8-4f26-bf3e-89a0172ddcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9c7c8e-5912-4d4b-ba6f-60db24afa17c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71776e14-ac28-4134-ba96-d17a43247f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9129fd2-63c9-409d-ae3e-d0400c7d17a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28624518-a5ad-4bfe-87e9-2b8762190df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a113bf8-2abe-47a6-bd60-7a94a15d1054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408e207b-7bc7-494b-8cf8-0b3c2735f39d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc7ca9-f725-4200-8432-49f8b3bc4872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8fdf1b-a265-4ccd-accf-71ea06b8ca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9d3f72-eb35-4da8-8f2d-b28e720d6a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "558533a1-4ccb-485a-bf32-b71fdf23c664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af5d2f3-fb65-4276-b0c3-c5b4c71bef3e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59c61e1-176e-48c4-b5de-9e9c94e21fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efc7356-d4e0-4332-8058-1de8d928b1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eae3b0-b3d6-46d5-af77-38bcc13f175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d859d9f8-f8c0-4b90-ac0e-bf488f3e6f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e176962-dfe0-4bdf-a3ec-13345ed9db84",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1fbecf-d368-4671-a606-09e8a2c2bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcdb984-32c8-4d41-a2ee-6125fb33e8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3ca4a3-12e9-4211-8d27-b3a4ed6f8c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d95c9a-79f9-46f0-9377-f26a7682f0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5264b01-e7f4-40a6-8dca-f6db7d04c9c2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be01a5-8979-47b6-bc69-cc15b02470a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e52e7e5-82bb-4c6f-b510-ecbcc6707325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2ddaf3-b36e-4f13-b94e-e3219e56e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab7223e-3ec3-4826-a3df-461203ab4482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5857236b-5cf5-4cdb-b889-6b252f34cebc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb03e38-bed2-45f9-a7ae-a2074cb137fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7707c03a-2984-4c9c-a080-790c458df65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddaf17f-0164-4c42-9ada-a0bea1f2288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2a891f-2fa6-4da2-bfe1-9d124a047d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1742f4-b7e5-4d67-be70-5de97c762315",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae5ac4-9e4b-4144-a2ea-0b7b85a472fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794a6329-523a-4a79-b7dc-41939e5326d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50f4ed3-5ebe-48f1-a6de-6d82b7a7ab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "643d0666-d9fd-4f0b-80f7-17768d21f5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733fb070-6ba8-4b50-b87f-620b14d27233",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da8dc3f-b632-4216-81fa-e38192b86905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192dc661-25de-4f23-a7ae-19d559746ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ccad40-195c-483a-aa5b-552e90c7e189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14422593-b4c3-4337-9b86-07ec732bc511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1367f1e-ef57-4991-825c-20cc9f2f68fc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a2df8-53a7-41d2-ad5f-12b3c40ea05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafe5511-6180-4d6d-b388-d355eb8dc97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e96394-a02d-4b14-b5bf-f6fb56cff23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "389b74d6-eb1f-403f-8212-9110232163f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b13b39-f6ac-4e3f-95ba-99e38caf96b1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1465ccb8-4760-41c9-9b01-528495facafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce9cff8-6c9e-4362-9452-54b1bfd90a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2279d4d4-2ced-43dc-8634-0a7321d3ee9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bc8b8f-e400-4b77-92f0-443487bab88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864bcc9c-0072-4010-b505-54448803d0ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d96f98d-6bf0-4147-97da-0f1f195e6c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81199c42-9dc9-4811-b1c3-16c9ac6ce8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a315c24b-4e19-4504-ae72-72e102894d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0546d5a-a502-4410-b008-c73cbb715c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb464eb-b273-445c-b050-e35a4800f75a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcacbc9-6206-4249-8cb8-ea012629ee64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0ed151-8cf2-4e73-9978-a467a8cdb924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ecba0d-bca6-4a2e-b257-3dd836dc732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc60bc2-ee33-4198-9015-fcd1059c368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931da6e9-1617-4536-b305-f708651a989c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4998b9-05e4-4f25-94f5-dfb3671a4ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4523bce8-1a12-42f8-986d-c49818b6c9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca249d-e83c-44e6-a24c-9224eddf62da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9429503-cd54-4f4f-a82f-e7a342ccbec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72282756-f035-4749-a8fe-74a4c71022b5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74a685c-1e07-43d4-ab0d-3c973f47fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c460c5-5696-4ed2-b1a7-43682692cf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915bad86-7c2c-414a-ae44-ee12b77091f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3822070e-1f34-4ef1-a005-b445888e8b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0b3282-7d66-4a51-a3ed-4f161436ff31",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b72a5-e8d2-436e-8cc3-54231734ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e75a5-2fce-4c53-a7c9-8a109a7cb59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4514b0-799f-4040-9eaa-a585a9660dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78c41c9-dfb4-4ff0-b159-c0cddf9f3b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31947b1-f105-43be-930d-ff515d29e5e7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ed3db4-9b7d-46f6-8ba3-d4885a658e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a072e6-605e-4ec7-bc7d-c1c9951f062d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94e1da-862e-475e-8ae9-dfb58a8f748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08cd14d6-4a18-4c0a-a8cf-4c90d133d46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66436a52-9dc0-4cfa-ba82-11f50c4d0185",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb213a-349c-42fb-a9fc-9f018da4937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28466ce-ac7a-40a9-88b2-138544a6bf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0555d6af-f806-426d-bf09-a03cbac901ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4344627-48d9-46f9-9c2c-46f4b5e41507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d260e4-7aca-43dc-985d-81ac4acc25b7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e417dc-6cda-4b8f-8632-f2b34ace902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440af780-e98e-451e-bd55-5d965345e99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48ccab0-7df9-478f-bf9c-2ada97b19bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5c9185-f553-4ba7-9a9c-fa1c967592aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba6e83a-f54c-4afa-a428-5f6e94176567",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73163346-1d5a-4d3c-8b9a-7fae872470e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6523142-642f-4f70-89ca-cc044652ece7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6457e993-67ec-434a-9323-bfc16e42c678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46fa1b20-6741-42ff-ab5a-d0e76765eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be584869-0b6f-4215-8189-a32da37c21c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb455ff-80a7-43c4-a0a3-5d21a64bc748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32ed254-7534-49d5-a141-cb0617f2487c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852bf580-969c-4e89-96e0-50507ebaff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e017c28-c52f-4f38-bf98-22641d67aa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68073b48-8a2d-41d6-b9e7-6a9cdcba4102",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb16345-f848-443f-bc8d-07949c849b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d5b95d-5e53-43f8-805f-ec1f8860f862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2eb471-8ed3-4071-987b-adabb4c58c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20f04b9-02d0-48ea-9e03-60c0166afe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29071bea-e09d-4871-9d16-6648d2e4cadc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f323550-d1b8-4291-9dac-85257b1e4d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2fdb76-3fdf-4334-a9d4-b125b0af79e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c154890b-c849-4c9d-8e87-536b44001095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71222422-35a2-4a2d-aed8-32efed35bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc977c68-3148-4795-804a-796e20afabac",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779ac9c9-fd13-4de7-a384-14a60c65134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd97650b-b7ed-4a54-896c-a6f4f88c14ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad07388-24b7-432a-ab97-a7c2366b1b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56db0e6-9de0-4254-ba24-c01e9ebc7b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9b99d-06b6-45a4-b60e-dd22f9655dd7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46cd2ca-14ea-442e-9430-1dfc54141056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e500bbf2-41a9-4298-bea2-f3a33e5f181d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729fc36d-e191-4122-a7ae-c8a062538284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac6c4c3-d11b-4c12-9fc5-f7ab21815373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2e661f-b3b8-40f2-bd6b-0e0cd773de7f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413005f1-8bb8-4d5b-a530-56b4b90b3c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634761f9-1f50-4105-b4b4-4028bfd7d388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8981c7-b734-40d8-a87f-be8b00e93cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ef679c-5b21-4974-a0ad-c3605feebf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c81c527-9954-45ca-bf1c-77bd34c05de3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9568cf78-74c9-4a39-a5ed-a38ac5fa43b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347e20fa-14a0-4219-9548-2fda8788c6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143d73bf-b1ac-4840-ae9f-1e6ccab5c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f961a38c-a45e-42b7-bc12-bef29ffaf0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581d0ced-376c-4b10-8776-067235aa631d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6d4caf-ff24-4682-90ec-e58997aa9d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c2a86c-614c-48f2-94d4-a7a7755b5909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c7f35f-e07d-4125-96d1-f2156af52974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf854ea-2c18-425c-84de-6df73dbe6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44a3d0-4451-478b-976b-e22d23810f36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcca058-b888-42e6-a3bf-7838fa2aaeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a788fb5-8d21-4c55-9ff1-f7b85228961c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9226ba8-480a-4554-a3f3-58f02ee66907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "684e2284-7171-4322-b0ea-b48370b6c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a7f2bc-6921-48b4-a688-857b388f58bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a55051-12c7-4ea9-b40e-86fbe93a0d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc219740-093e-4dd7-802f-53e2a136bc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d49b63b-7c41-427b-af9d-e6437729a76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c222df5-0b00-4e9c-b16d-16ffe9e79782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353b98b-9542-425c-a980-af23b3728cbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b57839-9adf-4e1e-92cd-ea119c414375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3351b4f9-8f42-4209-8326-6e87ca7ad926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19180f38-5d41-4623-875a-a929c44396e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "699bda9e-2e6f-4a0d-8595-9ce183b3d970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e10deb-32fa-412c-ac0a-bbef8383ff0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd343fd-06f2-4219-b24f-aae6aaebebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4b4e55-fd9d-44c3-ba50-913918063252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215aa1b5-d3fd-47d4-8970-37859456d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f322f43-3fbd-4ed4-a803-d3833e892c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52c9eca-e41f-4f67-a4b5-b68a88fa28ba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ee3642-82c8-49e7-b0d0-a36cafe17ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4a1eff-34f4-4322-a4f6-5803d241efe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443f0be1-884b-4c49-bb73-4fed210f5a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fcf174-8d78-4cb6-8478-8944b5c93a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5c5b18-2545-4b8a-bc1e-48ff9b2e2aa8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da86723-de98-400d-ac88-9178edd278d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd2b8e7-2c06-4487-8a0e-897ec8ac62fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c113531-c62e-477d-b018-cc50c68bdab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d3056c-31fe-407b-b091-5957a02cf27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ade6dd-b518-4661-b076-dc4f60871701",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473fc27b-dc12-4c08-9903-642a3c1e7cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ea0427-5525-455e-af47-56459da9f8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6471c9-e2e3-4308-8309-ee9c6299bb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4304e8-f821-4f53-a060-4d27c445811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2801ed-70c0-4d1c-bb78-1b21b98e59d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af217c-bc64-4a41-a82c-cfe95fbbfdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c054a95-a80c-4ccf-96e0-20d36e557cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87467b46-9520-4ec6-9aff-59baf2cb6ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6140deb7-b53b-4350-aff9-90877023c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfbe2f2-e18e-48e2-a7ee-6a7c873bf698",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fe69c4-06fc-41a5-aea4-4ec9489e5a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a26c978-b8c5-4b2f-ad36-a4bea27095b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75098e7-d854-42ab-89be-93e76dcb32ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c926cf99-56ce-4b12-88f5-f70daf4ee9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91efd4f-3112-4bc3-b3f6-0bf56c6d1b1c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ac406d-edb4-4bcb-aa33-bb27612e25bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1336a4fe-18d7-4b32-af62-8803a7cd6816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7d7d73-c09c-4a68-8031-cbb8f1737cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24ebb50a-4f60-4430-af1c-587a58154d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e51a67-426a-41fb-bb1f-ea1974cffd1d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d22fc-d740-4287-9025-262c62f3e675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1491e2-898c-4bcb-9639-9c938ab663a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7eab1c-58f0-45a0-b09f-929bb7ae30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3fb620-cd21-4c49-a4c8-5c0afd72425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d14c6-57f5-4e3e-b638-c6f7c5fab9ed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c016f8-8f55-43f9-91f9-36516365dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eb8cf2-02b6-48bb-a4fc-1d54cf84bd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d375e6f6-ea20-4666-a012-43d51b26f518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b2e29f-093b-4d25-a542-c3b50f2c7d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfba1542-3f4b-48a2-b949-c5e71b16ee74",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aa95fb-1a98-4a0c-b932-423ea4813032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bccd4c-6ee1-4d53-b6ef-0b136814f9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932f5422-8c61-400b-af51-3f0a41e27dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3cc8aa-82a0-4fc3-9da0-f658e2f6c816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339599f-3243-454f-82cd-525d91386373",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f7e1aa-6f99-491e-869c-47f66854f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9218ebbb-4591-47e4-a570-b42d6e848a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c1223-bb38-4ffb-92c1-24fe7d494ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6215f834-005c-4e64-a533-ffebc855d208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e755374-1ef3-42e1-b97d-d4eb40326878",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aa1ed8-cb73-48e4-87fb-32e45d840d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cf474a-3cf0-49b5-a99a-271cba9896d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51385abe-8e22-4c36-a35c-943a533d13fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1604a4e-24ae-47a1-bd22-6ec630bc18f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406c5e3-c12f-464a-b970-b359aadbf45d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a350a6cc-a30a-427b-85a0-8928a78067d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b67db6a-2fcc-4bfc-abfc-0ba641db5f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad044e8e-319f-450a-a5d4-fe17488c2c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41657e7-450f-4e5e-a200-0823339f112c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d892c0ba-fca9-480c-a0b0-77c3826cb654",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea00218-482a-49b1-bfe6-fa6bfc0550c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceace8c-108c-4b7b-8031-1bb7099c51b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5298d4-ae4b-4f87-8af2-9b4cc940fa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7524ffb1-173b-4b4c-b194-5fbe6bf84dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3edbe3-92fe-4de6-afc6-22417bee52a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868b0c3b-36fa-40f2-a191-a974e1a081b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484c19ef-3584-4d62-bc82-b58ea10429e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a95e48c-f5c3-4b9e-b4d6-68ccf9d1f1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c942349-e8f3-45fa-93a3-650ad1fb1a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26668f45-5acf-497f-bc65-03da7d8c1e8b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b0fa9f-965d-4b1d-8cbe-c47fcc1efc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcb48f6-6794-4b1e-9683-a7aaca7721f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572a963e-1f05-4e41-a07c-3908232bbd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c908a7e-59f9-46dc-9b61-1b45af08eeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a84839-6237-4c38-acb4-0cac7ba33377",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b655f365-5f0d-4b0f-a754-0ddb821df66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5a2d3e-c961-422f-9441-1e1bbce732ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b13eae8-0478-4a3f-86e7-1e0ce2ff72a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c21aed-40ae-46e8-a684-5e98b02275ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc865df-f811-42e0-8240-03911889726a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ba384-b062-4835-868f-0baf0b3b5801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff74063-cd10-4e9e-b003-0fe0d5b1e268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf11c802-45ca-4d9b-af11-ebf6e4d7a370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb7c29c-2d8f-4c1c-9905-06c52af08504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3987f16c-cc5a-4501-83c7-14c48b7eae61",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef04f8ef-3e20-4f95-8698-55c6f5fca4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a64828-c75b-4e38-8011-025764712f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099cb82e-6859-4483-8a36-dfc0d450507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f107de-306d-4f4d-9786-0ba909825d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15adef6-4f52-42e0-a8b5-07a73dbf199c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e3df1-a1ae-4063-ba95-460ce73485ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ea2ef3-330d-4ff2-b9ad-a8c8636a6b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d61f1a3-9cb3-496e-9ec1-b9816557fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30af96d9-a9cb-49f2-a482-8b185df9ef9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9376a22-e481-4326-bf4b-2c6794dae0af",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc69725-682a-4429-9d5f-f257286adc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6087882-c286-4b39-9858-f66502f29783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b621f4-a238-4f16-9023-79273339c35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cceda9-2d20-4835-bf5e-8bac1e9f1c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2357527-a8a6-471a-979d-2ff8df93fa1b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f327ea-0b14-4772-8512-507335ecdf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2984dec-c29f-4274-afb7-a654a50eb098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0991526-542d-4aa3-aec8-0846c92a5ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9989330e-1fd1-483c-8d25-0f12cd556d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9487ff81-cd1c-4103-95d4-5c89ee45024e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5630866-8cdb-4345-86cc-9acdc3d66e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d07da5a-7b36-4149-bd21-764c25f664df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b483ec2-c59b-445d-9e56-8bcf6b09a459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d95f93c-ac72-49e6-9aae-6209c86871a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d917f90-7902-44fa-81a0-ad441cddcb04",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbb55fe-bf83-42b4-9445-5c126fe94cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a65894-248c-4ae1-a999-d663a89e8b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a369778d-d27b-4b4a-a5ce-b7652c95cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62663dff-3f7e-486c-8076-c7eb91c21390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62394d45-6dc6-4a3a-85cc-91c297ff8dc5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8146a6-2099-414b-b5c6-27b70355eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc938e6-8870-4ce7-b680-d3e523afa188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9a65c-08ea-4b7d-9742-b155eedc14ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f48e20a7-cdf3-4aec-a83c-49f019514ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bf31cf-309a-44e2-8720-380d2a49b44d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec406da3-4645-4c80-8c06-33e26e5adea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8baaf12a-7644-44bb-aa28-0098c846d04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595057c-581a-4524-8a48-cca997cec2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35a7806b-f505-4984-b536-7388ab6d8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e8e9a6-5f78-4841-9ffc-9e82fb4df26a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704bc717-5c43-412d-b416-3d7cdcb0b5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b757c61-4401-4dfd-9ff4-4f7c6ab66237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e98d2f-07f5-462e-bc8c-d266c0448e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74e885d-1f64-48af-9639-97c26bdb7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16f61b2-db88-4761-a689-195eefbd4dc0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e2f333-4c9c-42a8-9b8c-e3bbceac1bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c043d2a-8d7d-44e0-b5e8-b5895cc003b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36be679-3687-42c4-bc1f-2780a8743ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a837fc-7a81-4417-828d-6876f40ad8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72df2cad-ae36-48be-a831-b0d4086609c9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c42b39-d71b-4547-984c-5f5099d10921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858531c2-8386-424b-9ae8-f7a240404042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb022132-3520-4e25-9334-75e64109cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c850d67-d758-4b81-bd62-e492f3dd4f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c097887-a22c-40be-bbad-bb5f3422966b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763da9d6-6fde-4969-a865-263b090a2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82410cce-95d9-4b74-94a7-2217d83702f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484db56b-b795-496b-bfd1-cab69a66f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd1a96d-9fd7-40c9-8aac-d106cfb9cd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fe5fff-3aca-41b8-97ef-7f88166adb79",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b360d6-07fe-4e72-b22b-bdb370092a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747d9700-4a0c-44fc-9c5e-6eaeb1cf78f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d21a355-fa8b-4306-8c51-2aedfa3d059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6efc1ca-408d-46ff-bbf7-36f3e2ba72b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37688507-d4f0-4993-b894-a124851fbd9a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886bfe12-b42e-4dfd-b1b9-3ddec946bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6c54c75d-c066-48ce-a83b-fe9d36e98003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fd736e-1955-4093-a5b0-6b0668e0277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec48203-8768-4144-a25b-caae5351ec83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a90a9b2-9a5d-460d-8996-8c80df267c90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ce12d5d-7a5c-440e-89ac-1e4c60f62293",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f40e10b-9de3-4dac-b19b-9aa7a831fa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f39a4428-bb78-41a4-95e0-69c012b3f374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9913d4-d154-49e4-ac23-d20df031e14d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8295107-aebf-47c3-b2e9-372427462612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c14825a-bf76-4a1e-8080-5be4790444bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34872e84-995d-4f7b-bd10-13081d821564"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f3fa085-9a2e-4b6f-9a9e-cf94965b07d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed4e531-16ce-4465-984c-5fd1edb45bff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2239e882-e621-46f3-9083-7192e0640a31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea15321a-6d24-452e-a0c6-83120e23f147"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b7fcc59-d8e0-48a4-bd91-e819591400f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6752be62-5255-4763-a996-2877c3010d8b"
                }
              }
            ]
          },
          {
            "id": "f1ab264c-94fb-4acb-8872-45897b34ff27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4598a192-922e-47af-8fcc-107728f3ef34",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd59a94-42cf-41cd-a0ba-aca604ebe2a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa0a4f8a-bd09-47e9-a176-71284cbcdce5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfd4bc57-5e7d-4d55-88ce-3eb2432ef73c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fefe5ab6-71d0-41dc-b328-ebc9a829985c"
                    }
                  }
                ]
              },
              {
                "id": "e0c6f6c3-cc8b-41f2-8eb2-aea622f4d2b1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c020690-00b1-496c-8ebf-91097c3230ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "826f4bb5-d934-4422-9865-6b3fa21504c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a13b0f5-6ae3-4402-ad8d-e44e28fe09e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f764c84a-93c6-4664-92ec-c3d92e4f734c"
                    }
                  }
                ]
              },
              {
                "id": "66913fe3-0d03-4047-a3cc-429c7139ab9e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b70f530f-0fbf-4b17-8177-e48f779c07f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cfe51b8-761e-4a16-8a07-7da751c23829"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c61125ea-e870-4be1-bc8a-df8cd01b583c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35ea55a6-4652-4858-879e-6b3dc2d2f2e4"
                    }
                  }
                ]
              },
              {
                "id": "24cdce29-b0cb-4ad9-b2ad-5cb61b6e05f8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4199e89-1990-47f5-ba40-fb1c0323fc78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d34b0027-b944-4a2d-be04-7a31b6ff1277"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "279ef541-b0c2-4375-aa1e-044e95626000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05a2db63-76c2-4b27-8e2b-fd7e3aea672c"
                    }
                  }
                ]
              },
              {
                "id": "187ff584-d63e-4fef-a5fa-41c69d387356",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dfc707d-8057-4066-b869-47dc08439e27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb4abe18-b91c-4dd1-93c1-7a5797f22164"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efaf6156-90ae-43a0-ac56-ee020bda93c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "85242d7d-c51b-463d-b691-edc3dddc1411"
                    }
                  }
                ]
              },
              {
                "id": "96410886-b6ca-4d4b-830c-c22525b9af77",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a9994fe-b81b-4a79-bc27-3dd0148c3d94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b4c7e91-1a93-4416-a7e7-9fd615f40208"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67e90246-6640-4daf-854c-cc84d101e48e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "936f4a60-791a-4ee2-b6bc-c3138b3437e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "639f808b-14d5-45dd-a963-ba78d68e7659",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf6ac99e-b9ac-4e48-b1c1-6f016c332ecd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0be9275-031b-428f-903e-ec2549d2a5a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cfaaa85-e3a4-4ca3-a228-5f87ec9a7b44"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "261661a1-f252-4bd9-9ea1-a14887ace3e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fefc1851-d869-4c5a-bcff-293633fa8466"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26938823-e85b-45c2-aeab-7e5af27803a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86b30db0-d63e-43d8-819f-f74e1ceff084"
            }
          }
        ]
      },
      {
        "id": "ceecd3a5-9048-42d7-b9ca-fdc7335b3639",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b7814fd6-9adc-432c-9070-ea02f9db3a2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d19b06c5-a7f6-4f89-9b19-6daf315a8d4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb766691-1af8-4c1d-96ba-8b3b02e65bd6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a286cfa-5876-4d06-b653-f4ce3071a943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00aadac-1d0d-463d-a547-989820ab97a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f5a996-1966-41a1-aa67-f8d049df4131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "867fa15d-2b0a-4145-9097-8154641b085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9973bc2c-93bb-4b75-85ce-61757f870a6a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaffa3bf-05ec-44f6-a0be-d28b431e7d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cb0ab0-6c0e-47b8-a523-0ebbbe580bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579c4804-2ea3-414f-b1a9-58dce876f8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87188b07-ddd3-422d-95fd-2b6e45a81af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51aecd-4673-4d60-9d1a-d16e1f0939fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03357a6-5fa0-4adb-97ec-ad0d0e523ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387fc8e0-f7ca-43c9-a42a-dc866281e4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6262e612-3d90-4124-bd56-b24f517c85ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e42907-211b-4232-8752-3278ef9837a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b720443c-e356-4ae6-92fe-5393c8afe6de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd03b3f-dc20-46d5-a9c0-756a9020dc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6639f5-b6c4-4fbc-85c5-1f1db204a787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac17ed10-957d-485b-9667-aa09d7ea44bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "711d1f99-16b3-45a1-ab88-69c07bfac508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a91387-231d-4786-872c-b202f39383b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a79241b-6d7c-43d0-bd72-880cca15be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9dfc17-4454-4279-ae2c-c31ede6ae6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f59c7-5061-4642-bce8-d833fa507c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "134a0ef8-9364-4b3d-a83c-e9080a3dc931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ee00a7-3286-4bab-93eb-0b856ff54dd9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f4d8c-25ec-402e-bf31-557aa5413523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571e957e-7ab9-4edd-bb72-7ec7196058b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f04acba-5f7e-421e-9155-bea13ba84be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b52353b1-d4ba-4cf6-b661-300e8ec71177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2ffb08-4247-4b27-b788-704fc9e542ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd14942-9454-4de1-aa37-8df944cc2ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29ebf5a-cd30-421f-9211-83c052839d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8cba1-f7ca-474f-8890-78f4232d4ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8f26ca-b883-47e4-a16d-3288836b37b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d6bce-019b-4ea9-a5a4-17e518f16bed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f88834-55ea-4b76-ac5b-093b9ea126c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92807f66-ba06-4b54-b47d-9dd438137c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd84499-d3b4-49d3-ad5c-e15af7c4d553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b0b6a3-2e9c-4149-9fca-921b0705ada8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ec81b8-b57a-4ef8-b73c-9aee55c492ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f18f3-3859-430f-8dbf-a0df0b6990d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cfe59b-97ae-427c-9ba3-fdf0ae7e3368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e1399-2fca-4f81-b00a-f07999efa4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92368233-3ef1-4896-9291-1aae3aa3a83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48707b8f-7412-49e0-9e95-64066172da77",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f040ce18-8977-401c-9be6-5a173c42341c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f70df3-b248-4266-a4a4-e934cd34b67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93f3b17-8d27-4b3b-a60d-1882c6e80c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa18e02e-d565-467e-859a-6d50a66c8094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41369fe-c345-4990-87f8-e3731e5b320f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53cf919-89f5-45da-9c92-fbe720b34877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb70fe9-7562-441c-bfa3-60185dc0c019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47877a1-402a-4de2-818a-94895ee1f812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9333db-37a0-49ee-a727-7ae084ee671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e11a53-939a-4160-9538-59c50cdaad1b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a365b33d-5870-4edf-851b-453bebfff422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72caa05-1d5a-47bf-94c7-b23a895d0c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7106de6-1c35-499b-8988-5eae4267b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f53c9ad-8001-4c4d-877c-097015c032c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bc5ce8-46de-4d42-b135-99ca2981f8ea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab3bc37-14fb-4223-9d80-cfc91bd37e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40303655-ac22-4593-8180-f77d4fa18cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba3c454-5721-446d-8171-ad48f5120db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90c2077-07ef-494c-9857-b51083f0ae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a514e89c-317f-4b20-87bd-c2adf6341d33",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c6cc5b-b7a2-4216-a0eb-2d7df95ac5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9322577a-7f73-4da4-9834-2bb24b1e9582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debc7eac-f591-4adc-a09e-a0c1324988be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b35afc-0a4e-4d24-9d37-5d568e995bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f543b433-8692-4053-8437-3651bc0db398",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f3ef8e-2f67-4a04-af9c-588b7a8f0cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9bf262-f661-44c7-98f8-18de24398d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247075b-4c53-41aa-a8de-af162c2b0741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca3a222-b2ef-400f-a165-e1dcd3835144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3a2be7-fc05-4ea9-a576-b58a72237bb6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9facb2c5-e965-4438-8bbe-e6531c162c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a5e610-8f8a-49e2-b3fa-b4e65e6d01aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69db1c2-c186-467d-bf2f-b6d3e5a24100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb77b3a2-e480-4143-b673-ed6553d128bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f287cd61-7855-4add-ac18-ed2ba09cd665",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d08ec30-aa33-49d4-8f6e-a0be141edc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab10f78-465e-468d-bdce-260449cddf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfe894d-927a-4ad1-9904-35e50e6367bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41b62fd-00bb-486a-9029-623f8c01da85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6ffcf6-afa0-4a7e-a15e-5acd5373609b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ae8cdc-2132-40bf-b3cc-30793d61dd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23aa5e68-b9f6-4044-8511-10e33e242a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db1e321-273f-4483-9a08-f3aaa7747037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec4531e-7308-4b14-9bea-944aa442772d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52229fa2-0660-49c5-940b-69925df79010",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1183196c-7682-4b05-b87a-811de352d974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5929f9a8-cb04-41f3-95f0-5e4bedd99188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3bdc1b-a9ce-430b-94d5-abce40a044ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1256bbd2-6b7e-4fd8-a1d6-9f68a0fa5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f235ed-fc12-4b27-977a-b109abe83423",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d30c8-652b-4c4d-b592-6a38863a231d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7eb9940-c539-4c31-add3-8e378d840c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc3274-0be4-4169-abeb-99a7e4b9d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b944640-7476-4367-936c-463546538d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74daf61c-4f49-4f9d-92b2-fb84908c6b7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c54e701-0ac3-41b7-9c95-9ef2db7577a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1defda00-287c-4d15-82c3-e80d3532e6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792f10d0-0de8-436c-929d-30e517118791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7302c0-5bb2-4a07-ba41-46ab4d4b8cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ede56cc-87a2-48d0-ba4d-ea26752add55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142c3c1d-f2f0-44db-a827-e25b9f9e7e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f33db4b-0ebf-4e94-9cc8-d6bc0ad9dbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4084a51b-734c-4329-938d-29758346ee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24737c44-e412-4a47-99c4-f06eb5372ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67d15bd-2417-42a6-8bfa-ee081ec3fa57",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fcf6fc-e1c6-4034-95e9-ac220d23c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b803cc2e-9ab3-4e3f-b578-cc5a03a8c16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeea6b93-dcf6-4a90-8f50-c58db29dcc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fc5be3-d474-4b64-b35c-a28270e46b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069f9e82-d274-4f51-aec1-bf4b7b6f4ae0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263ecbe3-9f70-466a-8366-07c43cb7edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a928a5-61f6-4801-857c-abe3db2fee15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d93667-d5f0-407e-a9ee-53e233615709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9738d75-8ab7-44e1-b034-82410878b9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9fc8ff-2fb4-4d0b-a765-f729cd130b4c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9801acfe-17b8-495d-8432-6093c7f1fdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d292713-e89e-462d-88e6-8210dda66493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66f5074-31dd-4ab6-bf6c-64c40904e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6642d821-7d36-4360-86c9-51f29576c6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc4866-7c88-44bf-9ad3-27b1aed32a8e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa6e1e9-2e17-43df-aa64-cf1a390a5447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb1a284-2057-47d8-a6f0-31739de7ff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd69be91-ab38-491a-a510-706dc608b13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7e98b2-447d-4dec-b59b-507e4bf3b460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4984ac7f-8882-40a3-b943-14e9c95374a0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b9e28-2049-49d5-bf93-98ebec117895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854e4bd5-f502-4efd-ab45-6789da03ee1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bca416e-5067-4a13-8acc-4daecb4a7a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22eef0-5285-492d-95f7-77d9ba27d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1333da8a-b298-4c4b-9d1d-8802a29101ff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092498ef-89cd-40bd-8484-db195adb2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b996404a-752b-49d0-8f40-ca7222097bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b88f97-068e-412c-9288-bce13b09cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "920bf6c2-a568-499a-a833-8e1524abdbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb84251a-006a-402b-bc36-2112efa46d64",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701acb44-c7bb-4761-895c-b31992af6ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b296f50e-37e2-41a6-86bb-08acf400bc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d930da71-3ada-474e-9f7e-dd7103fbe103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04f5935-bf10-4a65-ab4d-b3daf82cb1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e2c5fb-db16-412d-8dd9-0cfcbfe22fd7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703032a-1e5b-4022-b7fd-4e35231415ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742d4062-e1ad-43c6-887b-9d5b837670f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c234a136-f834-496d-935b-f5566489bfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5b0075-91a2-4e60-af63-45791036ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c346e96-4968-439a-86ed-44afb2f2d68d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b4c81-eebb-4684-a3ac-a7d26bba5901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4815c859-fda7-47e0-bf10-16a9b302af13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110ef0f7-9406-4ebb-bd61-0a0dd58c0ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bea20e-49d8-4f22-b5e7-27affadf6759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d12c138-5b0e-4930-be12-abff0e83e361",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd043661-4bef-4a2d-8f20-a07937ce338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f6495b-04a5-4f04-999d-8382307ac068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748555f7-1d24-4826-bfd1-9fdce6c1b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa474e61-98ec-40c5-8a6a-342edaf2ff7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05900bb7-7d9d-4e72-9f03-877bed14bf1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9d43cbe-b2e8-4f35-ba48-84941d00cdbc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba16e637-d854-45cd-b5d7-30dc39134a94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98dea862-c907-443d-a22d-7d08beef4d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a281ac2-a308-4cfd-a447-9a2a65b359a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc5ca0b3-3218-4b5c-8a43-3a9f3816f80b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ffc4b2a-b295-4737-97f2-a9cb60a5f445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2028bad4-95a3-477c-9a22-f6fc24f48d18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "768343f0-bb68-4ddc-be62-5cb799e2ce85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef5e37a-2803-42fd-89c0-f572b76c0044"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "308686b6-531f-4582-8b2e-b3140a6ebca7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb7a40c9-efcc-4660-a840-8071fef77833"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "268009c0-bda9-4495-9c27-b41199b6bce7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87dabd84-1beb-445b-85d0-b5082b5dd5c7"
            }
          }
        ]
      },
      {
        "id": "cacaeb77-780a-479b-bd3b-03dc044aef48",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24702474-5e57-4360-8f66-6709f31edfec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9645aecf-40da-47e4-b239-f00f3f5feae8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6eacf38-60f3-4120-b259-ae22b5eca36d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabb1912-ca34-4e52-8a3a-5f8fc16e92f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9e7fc3-9c50-4616-8cfd-4580b20b3680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6376f-42b1-48e1-926b-89de030d09f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2118e8-8cc1-49f8-aa6d-625514e9c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3342bf-e58b-4630-8e43-fd8e99a42449",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7f6180-ddec-4192-bc89-91ef848278e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8cd127-990f-41b6-a3be-86cc1b50aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d1fb1d-d9ad-4426-b978-42cfbfd7d8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c806ec1-ee32-451f-a381-d177e87a8859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f9018c-22fd-45eb-8a1e-d78d731126e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec51a509-1454-454e-aa63-7a2a96e183ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc29342-219f-438e-a3f1-abfe8a7143e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c001d177-bc87-492c-8aab-2f0721d11c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8382e7e-4aa6-497e-87ac-c3b856419fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d78a9a-a27c-4e92-ab1c-9b18caeab3bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7418268a-1394-4512-addf-3d10d5082a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a104a4-027d-4ea7-b428-1d78ef7e8b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461a6a12-d6b1-4c2c-86a7-f8f78ba3b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5942af2-fd63-4de0-8250-4fea38792eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b20e6df-af57-4acf-8009-80486c095a57",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4def41b7-428a-49ae-81d4-9f408a18da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ab309a-cbee-4326-9d3e-456592d4cd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a96a3c-b4f0-42a0-a11e-5e6b9b7aa2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa426de-f300-4031-8757-4e92635e2995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d58f25-e792-4ba1-a5d7-00d2fee7e3cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfd69fa-8eed-47d2-9298-85dc67c1241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6f9eee-4b92-4fb7-8add-94818b9e3040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e162e3fe-1a2e-46be-86e8-433a5e05e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21c5e03a-7b75-40fa-985e-376a8f9fe3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c6e37-ba9f-4b9e-945f-86f1fe0e7d65",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000eb038-199f-48ee-808d-ae8678fc6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daf8d4a-082c-47de-a3be-84f293deec54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53538945-b84a-4141-885e-b21891f9b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b92eb9-ff84-4db9-ade8-614d0fd00b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190635d7-0c6b-424e-8e21-e67f6a41e064",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b51016-631e-4148-b9ec-7ed195323132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cad33c0-60dc-4e52-888b-cb8a78324000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57cd42e-ea4a-4607-a8c9-7033d4bbe7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c965e2c3-1dd1-43a5-9561-3afc9984523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4442338f-4259-4b9d-92b2-2c4e3bdf9277",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5730c737-9d84-4f80-a435-18a8426f5249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31caa4bc-038a-403f-9547-28b2a2279e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7e5ca3-25b7-41e6-972d-12bdcf81f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b7c74d-ff2c-4928-9e8c-6c3e291f014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05c42b0-77bd-454c-8c51-a689fb68f45f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec1d28b-d4ce-4942-b320-7c158fc1f285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067ae287-8665-40e2-bde0-bce5489f542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8119b3-cfd1-4f1b-af3c-8990a3b753f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "081046dc-b00b-487a-8f8c-5f95e1de4b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e027a20c-3bdb-4c62-a467-0edade5f5cad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5c393d-bd23-4bd7-b545-c3660a884905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a07ec4-3520-43ba-bad1-afbaafc61ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67025bf-49d1-48d3-b05a-08546e08a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cd380a5c-a1a4-4b22-a7bb-e86d98049203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf329e4-b6bb-40b7-b484-b27489fa6ed8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e035e320-cc91-4295-a282-adbe2bb4cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2705d7d-13c3-4357-8d03-3677ed86aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1777b5-6020-4165-ab70-c48f636ff277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba846012-a45b-4f1a-887f-7477737ac15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335eb447-a858-4c1f-9236-37d7f65a4809",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30268236-b2bc-4985-b17a-2f59c7b21547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2229a8c6-da9c-40a3-afec-404e0a802e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0b8279-bc85-4fd7-b863-fcbf2feff829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaf8fe1-3cc2-4c84-942b-d52aadf5b3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c1406-3a0a-477e-be1a-0b1ed0942379",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19e4b41-ca1c-46ec-b652-261fb7bf1e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00118dc3-036e-4d9e-860b-277aef60e32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1548017a-c65f-4aea-8170-2c3d75ea7b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc64c290-a78d-438f-975e-582ed07dff5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628228d-2123-4de6-bb39-587733bdd3c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a87d64-efcd-43e5-89b4-71a547487cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e855c16-7f08-4a57-aece-b94ac93edcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f25978d-4adc-486d-ab2e-9186c58da3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "584dc92b-2757-4158-9908-fefdbfd78abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067636fe-7cc1-4b55-bb73-b2d8cea1bd7b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a4bfc9-15ea-4964-8d33-05140ff3871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a370fd0f-47c8-4e4d-b3bb-320f63f7f0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabc23ed-2d0b-48a4-8ea9-22bcfed1e55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a502ba2-8711-451a-9d80-12dde6ca6808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a64b2b-e285-46f2-81b2-8982f46f14bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f9f9bc-61e6-42c4-aa06-38bdbefd4fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8348c419-57bb-477c-b2f0-7a03f4872547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b344a105-a150-4221-ab50-0558427ae0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "14248d89-3d20-4862-9f2d-44ca270975b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ae7b53-b4b4-41b2-aeae-40c98300d2ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd39ddb8-fd4f-4463-8d56-f2b07327fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd793539-113f-4cc1-96ac-52118357afe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec85a8b-24aa-41dd-9af8-5c790cadb099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc80a284-a0b2-4c95-aa86-bfe086a603cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a67489c-7aba-44be-ba25-c75524511237",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87909f82-4f73-4a3f-805a-ab0ca44b81b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7635ac59-e6a9-485f-b366-cb858295d0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bbf800-7562-4996-a187-a3fd1c3ff90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf1de99-8672-4de8-8e5b-b75d8ed2d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618b8eb5-963c-4284-a24a-e4f46bb1fa16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb8df4-d09a-40df-9300-4c73662fd19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a2d13b-b15d-4d3a-8a5d-d3e1b7181d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24be20f-7a7c-4fee-8084-56a88ec95758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f862f4a-1f87-495e-9666-ef7f025eb0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d7ee0d-5d13-42ad-9d8c-f03dfe03b8ed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e3a32-2d99-4d59-afdf-a7f428e8ce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1aecf9-102d-4460-9801-95572c1da809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584e706c-392c-4217-a00a-ae5cbf40bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2d75c4-0a36-445a-92fe-0e7fba828d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba0ae1-8ad8-4edf-b4d2-9b2a537cd554",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4e42be-1306-4424-b8a7-2c51e4481b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4e7280-eb6a-4f26-bb5a-40a71f6756ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc79786-6a44-47cf-a96d-8f71f21362ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7c7752-80ca-42a5-9ee0-b8a4dbf7f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862434a0-f40c-4455-a52a-9ee251000062",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569bd281-dca4-48aa-9c22-311dfc1de974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbc8b1d-79d2-4cc8-8844-028fec1817f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2ed521-1d03-4299-8202-9e5894be967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e090965-da7d-4287-b148-063c05e69524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79201d29-f808-4a5e-ba33-c2afac1e7249",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec8217-9c1e-4116-bd15-23f300fe7e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cee32dc-fb41-4265-9b08-259b6c999fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1e7f74-36fb-4235-a5be-ddfb24e6c1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405ade94-3604-4cb4-989d-a0e47d199637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6167536d-9a8f-4450-bed5-201d9265af3c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb802b-e9d7-408a-b6cb-8996ff2afdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1ef39a-609b-49d4-8aad-4a9f89649a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7ec61c-6406-45f1-8624-daae70b3df05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10077a37-c91f-4e7a-bd72-e260c9e3d7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed063a19-91ec-4de3-9dac-0b11b0355bb0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a78ecd-2688-4389-ad8c-8d1332fa8c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54454a61-dfb6-4fbd-b656-7f73b7001825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935ff746-5837-4e5b-8eb6-7b22de88d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc00e01-5f61-4b18-89ae-124abf029b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da53344e-a7b7-450b-9b33-f287e07a804c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9219d79-7467-4af1-afab-b2a709191f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01817b35-1e8b-4dc7-af84-ba0013fe0c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae49037-8894-44e1-9d41-b4f034fa5328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eded3b4-453a-46fd-aba0-20f8aa4812a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034510b3-c801-4928-8f67-6d4ddb3fd27c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f49fe7-d3c1-4260-b895-c0e76201fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0a3a10-4dd9-48fa-a8db-8b493969129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1578698a-aecf-4a39-a900-4db872c532f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509004d2-e545-45e0-a92e-69845e9c3f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828ec2a1-484f-4d95-889a-2343a615d6fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd4b386-834b-405e-b3c0-111e6941c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f55bb69-6d90-43c5-9ee0-762f456da829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838afc61-1f01-4799-a09c-f0e5d8f3ad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "213049c7-ec65-409e-8299-4a8af8dd73b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb13827-1138-4f03-bd95-d3bf2c66f0cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856d7d4-47b7-4bce-a6e7-0bfe4006d489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cac64a2-3ec4-468a-a62e-4ddd59c78d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302e67e-b317-48cf-a6c1-0f2c211797d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f51f7dd-f4ec-4e81-bef4-dbf7fd3d6019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c83d66b-96a7-449c-98d9-e6451f3c3891",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa75ddf5-92af-426f-ac2d-c01feaf5ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ab8e75-def2-4ce9-8260-430f29cec852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be4d7b4-52df-4201-bb71-00eacf4eec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6365e8b1-9054-4669-b6dd-1aae5b76a556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c64678-0eec-4c81-91ca-5d51cba605dc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74555514-551c-4d66-b7f4-72fed152de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff661185-bd63-46fe-875c-ead055b8cc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeca900-d3ac-4f81-9411-dbd3cdf28c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c158bd-c674-4e0c-a19d-77f006a02b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871967e0-4bc5-4db6-9d5b-1f3a7183cc1f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa7a88a-af73-44c0-969d-e3d4ea115215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8590d56b-0998-4d28-bdee-489e16b3afc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b568b8-e2c0-4854-b586-0621fb4e1e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a91238-e106-4564-8781-3603d2d1d0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36974007-fcf7-4479-bad5-10ad9a55f05c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60452b5-cfdf-435d-8f5d-061278f48e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f485d5f4-1f9e-4119-ab89-d7282ba9cb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b83b6e-00e5-4d12-ba66-4066cb9623f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f73c1b65-b158-4f5d-a3cc-c2efb2717151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c04680-caa7-40b0-9ee1-17fdc88c7885",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070aed52-4f28-426d-a4f9-2d81e306346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a094f6-66da-4efb-977c-8fe805ee4235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db7a894-d235-4a66-b5ba-bf0095b04fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "315df1bd-ae51-4686-a13a-0281c1ae541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4108a6-fead-44f8-b4fe-5acfab1126e5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf05bbc-f49c-4d9d-a8be-1d02df67cb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dabd682-1890-49c2-a6fd-b957fc70c021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f417e74-fb85-4cfe-b201-cf7cd8041a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476ac3d5-2c72-40e0-924d-ad63da769782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4475453c-4bb8-4a11-a807-e3ff6410ef54",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664ecae4-5850-4251-af40-aaa2a9e41e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d1881d-dbe9-4000-9874-9a86d6181d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c64543-6e6e-4603-9cbb-2b06adabde07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e31bc0-6b9a-4968-a103-8a2e02843b53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4d69157-b212-4d4e-87b9-8b570ee4ca45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37ea025f-0655-48c0-a4b4-2df708b39786",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc0f095-4e4e-4f85-9b73-3a5de81781aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e193a61a-6dc9-4992-ae76-76d6eab5c4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c09d6-6f5a-4ab0-8c23-4114b33944cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b5bbf45-fc2c-4c41-826c-a7323f907d30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a77d80-5a61-471f-a730-b43075b39f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cff0ec1-3b41-4a65-91d7-2377908b86a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb9d541f-57b4-4187-b7be-0b62d6a393ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbd4e64a-c6f8-46f5-8a2f-12a1742b3d0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "819878fb-3b3a-4736-8a3d-5eaf55d650ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a741414c-294a-4b67-8c1f-7a0a2bb65b88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79259b63-c3f3-40f6-bd5d-c55b55be7557",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82e78cd5-7c89-4eb1-9e6b-69307fbd83e7"
            }
          }
        ]
      },
      {
        "id": "ce542692-2793-4c78-a841-1761695908b5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cbc6bc5c-b618-41ac-b08b-f85413b4a29b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b924e32-6d4d-4aae-b70b-166b433cd481",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd5995b8-d6f7-4f5c-b5bd-081567121c83",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29817aee-32a9-4421-8839-5e0464859db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e8599-9062-4556-ad82-8a85b31bb34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2817cce5-c6e4-4ee6-b1e6-9d9cfcbf4220",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6d09bf-7a6a-414c-afdf-5e3967dd6096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2cfe88-5976-4f1c-aa29-181c2b1495f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32306532-2f2f-413d-a90d-d4ded7ddfbc7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba67f3-d33d-4be9-8c9b-16c99c7dce2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c20988-24f1-4ca8-8813-d077145a4a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe5c71f-cb1a-4cf0-bfb2-8fbc07381c63",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88222a79-ba8f-447c-8423-ccd9c4f63f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721c55c5-0a5d-4013-9b61-278eadf2194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7727bc-488d-4f1f-81aa-a748edd2e470",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b6787c-6172-4d2e-a06d-5e98db1d3a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b02e4b4-d201-4d89-8977-7d5f48a12b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a34d9e-a4e7-41a8-a5e5-f83efa157a4a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a186175-bddd-4430-884e-3b98b7f7823e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf24f98-09b8-48d2-aa8b-3537c146814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf09900-c9f5-4427-a9c0-1c1edcf787bb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7fca86-7605-4297-aeff-5b6f9be6887c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7aa305-a591-4817-a2ad-fd64832d3e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d547b03-abee-4335-958f-b668696e0408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c13d7a-8445-4ffa-b3f3-3d1f6b4d2103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3caf84-a6d9-4752-8492-eca3ccce4210",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fd7ad6-e625-450d-90c4-143f0cc0d877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f13e5f-3256-42c5-88b9-72efb664f69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5d04b5-93d9-47c5-91d7-00a115a10c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0995efe5-3ff9-4128-a91b-b8093b0fdf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1923bda-f924-4e63-b770-544f58c46e17",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951cb5c5-5814-4688-aabd-33ea7a43df2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bc4c6d-88f8-4703-919a-8cd8cd90093b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a426d46-8cf9-41c4-bd2d-60ab3321abe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b0266d-a2b1-4015-91c8-9b3059ccec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad4ec6d-c90c-4689-b56e-9a01e64d69d3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a9167d-055f-4889-91ee-ca80f206b601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9249aa2d-0f4e-4f73-b503-a431eeb12383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b69a0cf-8f22-4c13-ac46-f7aeb18f6d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229d171-aada-4ffd-88e9-bddc60c55446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79e338b-00ae-4595-a092-df8b74e963c9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c974649-6347-4f73-b4ad-56eef37833a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfe1fb0-38e3-4a3b-91a6-497a10b9c693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0079cdcb-9114-4fdc-b403-76b64b156503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d420ffc-88b6-4957-8581-791786c6929b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e9bf4e-11af-483b-9778-8d411ff516e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488753f8-2187-4d38-91f8-943662d8fa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cd9863-170e-4588-adb5-75db307336a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878df395-37ab-4d12-8977-003eea0b70fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fe79a5-d720-40d2-a8d4-d77dc1f1e5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099907da-a466-485f-81e7-85511b68e5ad",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6381a8ab-b2c0-4f1f-9795-4ae4d98bd2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7502c6-6e46-49dd-9422-f12b6969ebf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afeb149-8c02-4af9-8a1b-45974d0d978d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd0ffd-0701-4895-aad5-000ba4b5f4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dddba3d-ac83-4572-8233-cbda440c386f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d2c47c-8833-4459-89bc-864c22609406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e5fd490-e019-4c03-be54-bf6ffca99631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac73a91-5abc-4c32-96e2-06a105bacbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26614468-9846-4f18-b09d-e60174f8de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2a4f99-bf1a-4434-92c8-912d6b7e6f99",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7fb9cb-4e89-4219-8221-17d99b42808f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09874b9-4891-4135-beda-b22941992645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6670399-8a70-4896-940d-9e610be137c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf25719-6d18-4381-a634-213b6cf4c6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e459e8ce-4367-4e85-8938-b817424c8d7c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187b74cd-ed0d-49b3-b061-7c3b007104d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abf9087-d427-4c74-a367-adccbd84ce7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c2e63-5ea2-4452-a344-91365d56d0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ce4cae-2605-489a-8ef3-5dd591a8de29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c3e196-8bb5-472d-a82e-427177c219f2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91b0bf1-4043-48f8-bca7-3a00c5949dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc57f753-abe7-4ab9-afee-49f66b1e32ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b85a28-b690-47b5-a4ed-71794b8478bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddb946e-373e-46b2-a22f-898dd5c91e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fb36bd-174e-4746-bf5e-9d1209c84ef7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d4fb9-dcd2-4546-aa15-7d33d125e0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38753f8-b554-4c08-aa3f-b6bd71772e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffeca8a-acb4-4c49-ad5f-c07ae4d08b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2fc9d1-0747-4784-a8b7-88d2c49486fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c50c8c9-2f37-4739-befb-3687d4f198b7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90706850-d961-44ef-9071-266de33d5e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f92145e-930a-493d-9187-51ec283098df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bf0295-a290-4596-bc73-6020db373ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11c2070-5e80-43dd-b683-905f0318571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9815b6e7-db3d-49bb-b9fe-7a54aed6e6ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e61050a-f3af-4fba-80aa-46fcbed33e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec347ad6-cffa-430e-80f2-52890c76bfc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de49c3-d87e-41c5-9197-59c369283259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37a7948-35bc-43ef-b8ca-1acdc34d25cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bd9975-747f-4631-9594-9b6b7bcfcf32",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5423f-2e7c-4d96-b539-7e6ca2bdc975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c2fb29-6768-4d75-ad6e-b3abb1248515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87731024-34cb-4cc1-89ba-6f2045769ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e85a2b2-50b8-4181-a82d-d290fcbe8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7eced3-1e6d-4fc1-aa2f-2f21a4d5ef39",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214a23f4-fe4f-45fe-9351-f30fbd58a1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b26090-d284-4777-aea4-8171d475a85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f9076-b225-4321-90a5-f2f69ad420d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bead00-34da-4988-aab6-399db3b5523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a73d5-e673-41c4-873c-7b6af763afad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b38977-9e26-4d68-b12e-873e36c4ec02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bbdcc2-67d1-4052-81d3-64a838d924b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2258fd02-caa2-4925-b7b9-ec23c6890888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fc9e3c-e868-4eb7-815d-bd46a6c5cf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e48fc8-c8db-49dc-8a09-88f60eadb76c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737081ed-ae99-4e7d-a021-e26811588a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1026d6-26fc-40e8-b7a9-6aff168d385b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed6db20-5360-4741-8f38-7f9d292d4d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87d2db1-8977-4725-b644-263847c02a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d7277a-d565-433b-9872-6b0b01360a27",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db9aa3-ce2b-45a7-8a42-64043a1e57d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e6cd89-703e-4467-b0f9-0380a986b50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd9f793-141e-4a05-85e2-1a259d95dc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a81589e-47d4-4c32-a47f-de04cc05e852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fb7e04-6a04-4e9b-a5e2-09e39712d72b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b318972c-a31f-4330-96f7-7e40200e8fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05375e29-7bbb-4219-b5e0-fc0b9b64b620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41a5e5-c338-435e-baaa-ac094f4d087e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a618272e-ce79-4811-9017-05a72038c2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649bc515-89ea-464a-8a9a-3168b319728b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a3e74-2261-48e1-b127-e884ff310445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df3c7fc-b40c-40d0-b6ad-bea6e649eb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8ea0e4-a5a7-44bb-ab14-67e6e87878ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c9920d-5c8b-4d9c-808d-b5bdfa4ce8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b2affe-6452-4c83-9dd3-6ea855e7125a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f3e3a-738e-40b2-872c-7e9db117ef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf956487-7b50-49d5-bba0-a0005a554b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388638a5-69bc-4314-9f10-6f6fc84fe873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3f3156-4164-44f2-a264-912fddd6afe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e795d216-5a00-45ee-b309-434b48090c49",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00ff019-8ffa-4c3a-a77f-2c10cfafd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803c9f12-1f6e-4f04-bbbc-c7d814aac06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353fa225-0b0b-438f-aff4-d4335c37268f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c32feb7-2c40-447e-928b-9e20a8e3956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa6d3c-67c6-4477-8c90-974d44d4acf4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89521eb5-f4c8-4d92-81a4-20f04b051607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687f5025-46a1-4a52-bb34-9da1597e8d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0449c9fd-694b-4bd9-bb8a-84a25499ef15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d67af5-fd87-4a98-9f1c-b249fefffc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc13484e-8f1b-40d2-bdf3-0798c91c938c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13689a1-e16c-491f-8bee-2867673f5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6f0ec2-a5ef-4212-b6df-5ba92299b792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d9861d-669f-4181-8298-2bf310ac779b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fb2c89-8fa6-40b9-9562-245753321cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35644454-f282-4c1b-9ccb-4f2256b3881f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea2892a-f996-46a2-8062-38953aecde37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e14f6d7-e8c2-44d3-998d-763a1ae8838e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a6fe14-7a00-4612-96d3-dab238161c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d2f474-8ce8-4770-b134-6c43d3278147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde55076-26cd-454d-937c-52128f16d80f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d6e41b-bfc5-465b-b110-1148d79380d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5014e7a6-6f78-492a-8e82-e1f2eaf982a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37b824a-60a5-4464-87f1-abc3285e79a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe22807-107e-4bd1-b542-172b9a426ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3853592-e32f-4965-a163-3df4dae2d735",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155c1f8-a730-494c-a654-e36907227839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a006705-b19b-4604-a013-e1198f482dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e547ccf9-6102-44b1-ae5e-3daefd31874d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cdd3c7-14ad-436d-97fb-3958174707a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9420154-505d-447b-aa4d-010829341354",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba28c3-831b-4599-a0f6-0bb37f121e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b5390a-6090-4ff2-8f54-0742349f104e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e14842-750c-4fe8-9242-7c27fd3f65fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a33b4e9-d37e-4f89-919c-16c8f4db131a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d5dfd8-64f4-4610-988d-66c3892bb01b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b2212-31d8-4187-92a3-3de56af77ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe4dd6d-ff49-458c-9bce-5d9b2b12c9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db9759-da39-44aa-b98e-33e799f7076f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a594cd-2ae0-4b36-bee0-69aa0f020d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a6197-9676-43c3-a833-b622b0b483c6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb3e91d-2f40-44e4-810a-1c7729e9c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18adefda-4aa3-40dd-94ea-7a100e48ada1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11a59e6-6d61-44ac-bdf4-59f7cb0f5a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a173970e-db84-44e4-810f-df17f4e58765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741fdb36-2b21-4abd-84cb-2f1316f25f40",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f861d4e3-ceac-441a-9fc1-39344ad3ac04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7074c38d-6d49-445a-91ed-3eb8734adcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6df9d1-5369-4966-974b-7a06cbf4f5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128a3b36-4e26-479c-bee7-f7178a966c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2176966d-a3e9-4e07-99a7-0dd648f8d6f9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843a44c8-b3a9-43bf-90b1-ab9dd24c4e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3152e3-e01b-4356-985a-c3fa5415358e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d1dae0-2ed8-4a5e-9d7d-d21be649d1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2618747-6bc8-44ff-9da0-7adc30f5c323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e94e10-7569-41e0-9d42-00a537dcbbf2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02156bcc-2c5a-4773-8eb5-abb35f514134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4006005-c450-4dfa-8278-78d186698e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19647bf4-3227-443c-a0de-ef540545d238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28eaf95-d366-4439-83ff-5a46c732cef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1425a4b8-abcb-4bf2-a559-55fad2126410",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374255fa-0150-4922-a228-924a70a355f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ad4715-b66b-4e3b-97a5-9d0eab4516ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af1647-40cd-439b-9c42-7122baa8bd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65849699-3fb8-425b-b904-9545359a1966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d640c0-61f3-470d-909d-a0005138e29a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26071d58-d244-4962-9067-f98ba3de9074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280b51eb-6258-4c17-8d85-d64b318ffeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ace182-739e-4dce-bd71-d7543717f7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f059c42-5e82-4b06-a008-91e57d76b6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c351458-09c0-494f-bff2-9b7b80f5de9e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085eb96f-0ac6-4fa6-b2df-2067ff2e7765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af96d07d-894b-4241-a3fe-c61082b42454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a73078-3401-4383-824f-8a6b6a11a012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de914234-2db4-4dea-b91e-14a4d4e59ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3802630-6b0f-49dc-a4d2-fc33ea3e29fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75dc19d-17be-47bd-b831-05645730cda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513772ab-b607-476d-a732-f4949e32b714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bc2265-3c71-4003-9c25-7c063373e28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9c0eab-dacf-4fef-8e02-09bcce02ea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500b896f-f245-4bae-995f-ac240dc9a97f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c9b077-5b67-4912-9e21-e29c59b9c3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7aabfb0-1381-4795-a262-9b1e56562880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bb2704-ae6d-4b91-88e8-c492df8faa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe9114b-dfab-466e-b885-cd75b15b7543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20eddd8-91f4-4af3-b65b-e067db40fe17",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211020b2-acb3-47fb-b0bb-6e15d449fc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5edde0-ce76-4da5-8179-2cec25244bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c251300b-5b0e-439a-869f-e26fde204637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfe58ca-1f85-40a9-b96c-e0309d98f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58066f2-57fa-4f3d-a465-fd0f2bede300",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b46d7f-8e25-4994-8470-e765ac8b63ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a0ff8c-594c-497f-b903-dd71ecef9328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f260335-3ae1-4cda-9ae0-9806aee1fb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ebe275-ad12-4131-9de1-a021e21ddbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799e8fdb-ad6a-420c-acdb-943bcb16b172",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fbed11-9cab-4ca8-af88-5c72b1fd30df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee0a815-7c57-43f4-89dc-51b57701899a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b7dbc8-9e51-45b2-8765-c4701a14468d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadf574b-50ff-45a9-b107-6084c0ac7f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b4db9f-bbc0-4f99-8a28-4a5033718114",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459c3459-9c42-4df5-95d2-44e137befb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f328d2c-a6b1-4b1a-80ba-ef7dcd8197a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8deb1590-3162-4dbe-bf06-0098b16047e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fe8776-cde3-4c14-91ff-c5a8af1aecb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8356061f-57e7-4414-bda7-853155a20a3b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d274d0a-1bc6-449e-ac2d-619a0f44c8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9190706b-f985-4edb-9c00-6413e81606c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0614dd0-9e73-47b3-b586-1a306762789f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28abca6d-b262-4179-9139-2f434b7bc0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5154984-d0d9-4f8c-9eaf-9f4941e1d267",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a919cbd-9317-4397-a158-610e77d074ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d50f8d-de4d-4673-a530-41492b4fa652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6098ad9f-a66e-41b8-9301-83a40557576f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53548f0-91d0-48ad-b526-94cacc660d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a3e2bf-e5c0-41f7-8257-579687160c75",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ccd567-247f-4119-b189-8ac24e87a0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0647780-cf37-49c1-b451-47cb189ee173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8ff111-714e-498c-80ff-1fb9a80732fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8694afd0-8b63-4fb2-abf0-e722bcdaa904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cee6c3-eaf0-42cb-be33-47e7f0fd18a2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0dd30-f695-4a9e-ba34-aef4a52c7009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c71bf7-f4b3-4c8d-b069-f52028f4a89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29efb5b1-ab1e-4afe-9d99-106433875674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71188520-7b27-43e9-b688-4ebf5cdf2d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412cacd7-415d-44c0-99fd-b1fb11fba48f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c618a5c6-0e38-4726-a835-c75520ac24cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fdcb6b-bd85-4de9-a6cd-df8fd95dfe75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5077ab14-69e6-4200-9650-bd32e0f8880b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b843bb2-ba0e-4ef2-80f0-72e4c8db62a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04bf4a5-cccb-40bc-959c-61bd7650656b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8f1a8b-62e6-4e77-8729-5007aaf9209b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44caa53d-83a3-414c-a1a4-480c7b367a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ffe812-dfd6-44c6-b9cf-c697f3c8b84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea8bb36-7b0d-4db4-b160-945da1fb52b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a845479c-89a0-44fd-9e14-f559f6fe65f8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecf2851-b582-4f7e-9a96-a185da3e7cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311170fd-8de3-4c53-a127-14e12691c2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a2375-69ad-4a20-83a2-abb3091dff40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e164f56-5349-42fa-99e1-635d9b85ec6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc177215-61e2-4275-9690-d85e7d5fee20",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a421a8-807b-4d2a-8cae-bf6152972051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e3dd43-25a9-4d87-9acb-bd88626f1c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4e2bab-0bf4-4b6e-9932-4d4bc396902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6355c525-67a7-4ad7-a529-62dd999840bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b9a77-d2f3-4e9c-8d79-1ce463f31bd1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480df35c-8ef6-4c0a-bb05-94664c22bc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391d62cd-aa63-4c40-802d-4ae7f8a4376e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd89d624-dc75-4b48-8b46-e79531bb5512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3df04b9-3a9c-495c-8b8e-f0de72fc6769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08186298-0224-479b-a960-a7c36ef61ffe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886ddd59-4007-4dd3-aaa9-e0afdde99627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac179995-e3e6-4df4-a631-8e85cde329ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60413caa-3087-4169-82db-b56bf1d46808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41588c76-b70e-4a4f-af7b-aa69bac5c55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32652177-7646-48e1-92f6-233e5a7358d7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef6e41f-672a-487e-9bc7-442cf206b9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5d6525-9f90-44c0-99f2-94c490f7ec83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4422eaa-4cbb-41d6-955c-a8e8aba84b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb3c3ae-1883-4df2-9433-76f7db1d7646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bf08fe-1785-4f89-88dc-0f4101eb3676",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25c8ae0-83d8-4202-9b63-cefd71b4029c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c81e7c0-b65e-4ac0-b367-5248d321b2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e72fc-2fab-46f0-be6a-058b2bb45237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2171d8eb-ad28-4942-b412-b30b20c110cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad4953b-ba63-457e-95f8-c047b8186413",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb6ce23-b075-4a73-b145-9f5bbd1f182f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2906e16d-cf5b-47bc-a5de-e758c69669ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119baae8-8f05-4ef2-b961-629eae0e1acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aca1a46-9d3d-474a-b292-65300fae17be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fa85ee-1727-49c5-b8c6-a1664fa45763",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee2a1a5-f73d-477d-908c-6eb344869d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f5d249-59bc-476d-a12c-c4ad11fa0f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e7c4fe-7887-477e-bf71-ffb08bb1a827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fdcff8-acf6-4eba-ae3c-94f088d8bd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5576dde5-a13c-48a7-895a-1a48618c903a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70252347-a646-4fbb-8f27-0d58d9efc95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3aed34-d703-403e-b558-63745e4fed61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1afaaf-056f-46d7-9e92-6284b4fbc1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d04bd8-b7cf-4e9a-b8da-7ea547509016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98776ae1-a640-4bea-9e53-282328d01953",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d11e9-5774-4512-bc1d-4d7565872900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb78ae39-ee49-4558-b5fd-3e5b69549c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56e655d-0ee5-485d-ab7d-490a2c6e044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93d88d6-9ad4-40c0-86b9-276a06a340b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de69a44c-001a-4b95-9199-83a302bcb314",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec2c26a-4058-4922-8908-5bc4ef95a1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755985fd-16d5-439e-a71e-038ce5043646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8d460-b8ac-4058-945e-6b9b196c07b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d482be-815f-4839-9096-8bd76f2f4bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a53192c-ae6a-42b9-841b-a65c57bb3a26",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf3d87-f7ea-45ca-8fae-c31ed4c7d25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f780bb83-a004-4f13-9377-01a776b62ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc42d21-c234-486b-a217-6719abddcb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e4358b-3413-4b7f-ac18-5a2599aba909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000d7b40-6549-4c35-9671-f5f922bd6bed",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7f3c9b-4f51-412b-b2c1-a0046d7155da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9ec31d-09a1-48de-ab5a-f8f27afda3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862cfaf1-6867-4e46-ac58-71d762db5e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7125cd-9541-4128-8c58-47e84bc47059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec53a2-beac-412e-8968-8fb5b36b953d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8d224-fa40-4357-a620-d69bcfcbe4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d3b89a-48aa-4778-9947-68841eae49a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3406b5-9f32-4eea-a014-88e49a0b3f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee11265c-62e0-44a5-8469-2c7b43cec3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb24486-0dd3-4cc8-b51d-06185b399f5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bd9393-616f-41db-8c74-15d7cd96e478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1d7eb8-3457-4b82-bc53-7fefdf27fbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b0d426-6fc5-4bd0-9ca4-6c920fa38a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d263c683-34b1-4425-a6e7-df466a8f4737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fbfbd7-1bef-4eb4-80e5-5d28c792289f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2c9435-7190-407d-9880-852e1f4496e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad783b3-cbf1-43c9-895b-f4233a300331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4a812-6a88-47d6-b25d-6118b15a3d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e4a8c4-2244-485e-9a84-e0075cee4d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc055d7d-4023-4fc2-a70d-c516e843272e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1609d80-3310-4bdb-a81e-519c0c6abf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eca64bd-678a-40a7-82e9-bb65f23963c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e338d9-47ae-441f-9e91-3c668cdc4869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165dab3b-e5e5-4c06-9410-404670ad4232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf113d-1b33-441a-b3a7-d703eb2c5905",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19b050-1d24-43c7-a7f3-87f1908ffe10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d7d0a7-118a-4929-974f-9bf38b216845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442ebb75-ad12-42c2-97b1-f330461fde19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592e4e05-b634-4c64-b293-87dd3025a9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de0beb4-98ac-4e9f-b748-c717ea1adf6e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1efd73-6533-48e4-aed2-a6e520c787d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82068b5f-2f8d-4c8b-8e4d-ccf120f96184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203619fc-8b66-478e-bf1a-7f8f522e95b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5312ebc-c176-4e44-8754-707617ef9c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350df0b1-207d-456b-a9dc-749b059daa97",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1703cf6-5e8d-45ae-95c2-4e5792f813e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f19637-4ae1-4815-815f-031db46ee7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ffa7ca-7f4a-4e37-9654-02888f74da71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239eec2-2e0a-4fc8-827d-61d4e50f620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b677b-8613-4c99-b2dd-49a9791fd51d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2842d649-9eb5-46c6-91f4-366a7da70310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c591ce8-1306-4934-8afb-a7e46146b8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d274925a-9dd6-4f19-8ad6-6b516dee2bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93226739-1f43-4bdd-8f44-f787ad37fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a18240-5ea2-4c74-93c2-d4be9b11c7ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79473521-de49-4f75-b74f-12ee8f803311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f30cfd8-3fc5-4a36-9b3c-3c3fb1c27462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204a807-c98b-4341-a11d-7ebd287b6c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8705b56-4ee2-43b0-8293-e526b304ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c57ef95-c34d-4547-a1bc-87ff073abdf0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcd7938-e35a-45ba-b629-c6405a7fb214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c23b00-6d72-41c6-9b20-8f0d500b8dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c89423-8689-4441-93e0-c99eca1741e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabe78d4-0a2f-4ee0-ad86-0eeed57869ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61108f9-415e-4645-aca4-a528470b8d16",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94f0e7f-1bbb-49f4-bfb0-d476d2c316f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0482955-2369-422f-8d26-0438f3557312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c0136e-4f5d-4851-bfd1-92e1849034e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594d2cc1-4a70-4444-a5e8-8711888877cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f9b42-9a32-4253-ba02-e74cd68bc25d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac492b92-1901-49c7-b6ba-af251f8d5d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b9a4b5-8e40-4bdf-831c-800c296c4abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b8be91-ab48-4706-a454-92af6b6dde33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f55367-d790-4c9b-b540-e25f727cdff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875f7e24-103e-4e5a-bce4-0ff3c86565f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c69859a-ef01-4f53-a473-6b1407d8dc97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346afe08-e25d-4fd9-b06f-0871ddd3afd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3e0f94-4061-4bb5-a6bb-8a34504bf46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606b68fa-3bde-4d65-a0e8-9427b19d9f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b8f28f-856c-4919-a373-cdec88e90723",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1bf435-3cc1-4a76-9920-2739552795b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bd5e4d-fb74-49e7-b6b0-bd47984bcd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e6e813-86fc-4c67-84b3-a55501ac65d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fce4851-f380-4a20-bd11-5d363588a358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87c2918-ddc7-4e4c-b4fe-bed047e0d0fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a63d1b5-1430-4d28-b936-6042e2c046be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2badbeef-08e0-47a1-af35-e2ee6efba789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c650941a-0320-4eca-a1eb-10b2e93d08cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a23b33d-ac58-4c07-8b75-4613e2230e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab68507a-0077-4c56-a219-911076b9b90d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b56b22-cbf1-40e9-a7ae-36ae50ee90cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff5bd81-8b91-4e67-8e45-645e8ae794ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505770d5-e897-43cc-bcd4-42cb773fd0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346d0b9-e0ef-4a5f-92e0-06375a5166c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3da70b-7e4c-4d52-8001-f38b76b2f5f0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62080013-4967-42c0-a49d-2adff680ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc233ff-5cca-4e02-81c8-27f0465dc519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e934629-5d25-418f-85b0-b328a8a6feb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0073bd3a-b333-445f-a28e-e97ed1a50502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e208ef10-aa9b-4e96-8845-76b2b994dc38",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933f0ba-d3a4-4295-ab0d-e9a5815aa34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673b63ca-e654-4e82-a8ff-e5165e1a1fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268d6626-b021-4302-b3eb-380755aa2fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80994daa-c0d4-49e8-8056-c9f15626dc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385f6623-b9a6-421c-bf1d-b05d8e7a977c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394291d9-5e0e-41ed-b6d9-543399902389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd01a98-a564-4175-b519-a087da2e6c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60275995-3346-43b1-ba71-02c6b3fe09fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b297027-7390-4113-a491-482a0e4e6a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c7d29-bd67-4b2f-8c80-759fa078be01",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019892ed-a09a-4771-96b8-0527880228b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ebf8f0-f4d7-4da5-beae-05ec268f459d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7659bcfb-7e84-4078-8a12-9ee99b8b22af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a930303-9f68-4848-822c-7992815237da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7d40e3-0de2-4e8a-81aa-e676415ebb85",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9ebde-88ef-436c-b051-a549c462e76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcba211-ebf0-4d7d-8500-fb88810b06b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452712cc-a70b-4fad-8a49-485fd8bcb4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaf51e5-f339-4613-8c27-b6f2b0cddb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43623f9b-7bca-4fb1-9588-473f1e712693",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8be73e-6668-4d61-8e0b-efae9cc6d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5ecf32-3eab-4de2-9af9-85731d888ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e976e2ec-6a42-4179-8432-78fc479f5896",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd4b35-734f-46a4-923a-b13f1399d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac42b7a-abb7-4118-8427-51bb991dd244",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c71de50-86a9-47f9-8fe5-27fa55358efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cf411c-2030-4ecb-bb97-fd532a6ef38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64f846-ca91-467e-94d5-1470f02a6e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce249a54-ecec-45f7-a7ed-bedc463fa1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488fb3bd-cbe8-48aa-9084-94222c7a639c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba64bdb-0e5b-4079-af6b-acff23f523b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7f908b-4c77-4879-9b1b-cdc331974124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bdd066-b054-4b52-9317-021cb0e25116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff747363-fe7c-416f-8361-c0008e3a89d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d756c786-5c9c-4aa7-bfe3-e45eed982aee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fc410-510b-474b-81bf-ef9ad5819576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85008db2-ff62-4267-b9a7-04122b4dfcae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656fc3ee-b91e-47cc-8c93-3148f16df8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75982ef3-78c7-4a10-aa8b-bf20c070c8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c9628e-e4ed-4419-bd60-ae03737e5c91",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb232119-7837-4225-a92b-5180e09a030e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad37c9e-a898-4f5e-b7a7-832cf3ef2e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fec6b-8556-4524-ac69-e6288fe6a47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b44bee-f4e5-444f-9c9e-37e86d90ed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7ca1e1-1699-4695-8a9a-b90b7bec8512",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f742a-01c0-4d77-a5e7-baea5c9d1c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a3d7de-5265-4115-a00f-05314e9efb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163df890-8b06-4ddd-82cc-7236b89ab50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498184b5-917f-4617-8e1c-bf62c17ba328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b514831f-464e-4a99-b998-d0dd6fb19790",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee41ea9-65c8-4eb4-b2bc-c34063da2db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31af59e4-09f1-4c06-8527-67248cb81dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcbf88f-42ed-4d0a-835e-636fcf81f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e77949d-a058-4715-b720-14b5408423f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6731c3-2fb2-474e-856a-f711e9f154aa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed38c62-9e32-4931-90d7-99be7691b664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85caa588-afa6-401a-8092-0a5d7a361556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf423e6c-e5b6-49f2-83c9-5ccd31f84fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ccb569-d314-40a6-93ad-0611c81c3445"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccbdaea8-79f5-4f02-b3df-30ac2640b191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ca56f21-a809-49d8-94d9-c78bf7f923a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89c38f29-c2ca-4b3c-af2e-dff28ade574a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fcdb6f3-0001-43a3-b961-2fbe2b04acf3"
                    }
                  }
                ]
              },
              {
                "id": "407cb668-9d05-4391-a7d0-4766c4f7bed6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78eb3c61-e5db-4628-84dc-533ac7d78cc5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bcce4e-5848-4278-976f-8c15d509b258",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "066dd3f2-19a9-4599-a998-f416fcada107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e5eac-a69f-4cb2-948b-79ba5eecb990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2677347-e492-4897-abad-c5ec3100e21f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "253b4190-120e-4589-bcd7-0a1c33bd21e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faf0d5af-e7a8-4b06-9291-25ac22805c7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91da0b19-4dc1-4d3f-a311-bc0fd8320e3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cb893b2-2877-4653-8b38-586b71987a38"
                    }
                  }
                ]
              },
              {
                "id": "d92c0ea3-f2ab-4c5e-a226-800bf9e92e05",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f66e4df3-73a7-488d-a3f7-1e1473bb04ba",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71e246-6725-4109-a71e-a7fee0da845b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c1617a90-2553-4de8-a839-7982831655e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470980b2-023c-4415-b4cb-22d4d8c9e8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9641f19e-aeea-40d8-a225-9f01ae4c8795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef9e9189-5bb3-43fe-af7f-9b9d6897a608",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e46ab5a9-c789-4661-8231-57ab62c34011",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b408e60-2691-48c0-a2c2-12aaf2d3fdfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61c4ffb2-3c2e-4864-8187-8a5b97f0c49c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552204bc-9b92-420b-91ad-61089626bb3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8af4ff45-d24f-4300-8aca-7d60452123ba"
                    }
                  }
                ]
              },
              {
                "id": "866d9784-0f64-4c34-a67f-fb6043902e44",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22b7dae7-b94a-436e-8432-07f64eaffe7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e75598a-498e-49b3-9a02-c4e825523113"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce10e03b-66c1-4c01-ade7-34052ac7e56a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f73dfd9-96b2-49a4-a380-8ec06541ca26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0540f0d-abe8-4324-bdbc-991288315e49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7e0e9168-fe6c-4579-af4b-c5585e877bab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa4e0b2b-5e43-4ce5-874d-5d0fbaf45df6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6e08692-f274-4c45-a7f3-32b5aec137c4"
            }
          }
        ]
      },
      {
        "id": "5d31915b-ac97-4f27-89d1-a60fc791363f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9d9d5464-c443-45b4-ae03-61e180e606a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fdfd79b-95ae-4219-a31b-aa0122e1103c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecea23f3-9e3a-49cf-a918-2aea184ec1ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a762d73-31a8-47f0-adcd-3d79d8bbbb60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d86e2eb6-733c-4a80-95a3-6e3120395f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4615dc98-e9e3-4386-a198-d7012749c81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb5da959-e817-46a5-b11c-7a138f9d97f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df7943e-63ff-4479-98fb-7c1cd9f27493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad151762-505a-4236-ad90-696040e0e23c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92efe864-8419-4577-8528-63dc936fd939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b639a9d-3dbe-483b-876a-37bd5ce13168"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d213b2e3-9b7c-4de8-b423-bea92ca25bd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f0934dbe-4c5c-46c7-ab56-7c2459e0e4aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e41e68e2-9b7c-4716-956a-051c095bec23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f825d874-d924-4f96-a35d-8503772d58d5"
            }
          }
        ]
      },
      {
        "id": "557585ae-d1af-4a06-afcf-bf26ef848213",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dca91e1f-19cb-45f4-a8c0-c769c1cb86c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbc9ba43-f17f-4181-ae9e-9dd348074260",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "620618c6-140f-4449-bafa-eef4c695ecf5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7f500e-68cd-4ac1-bc3f-620bd1f44dfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa3bf1d6-d47f-443d-a8c8-3f312e1d49e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3236b960-13e9-4ea8-a1c8-28335db1fc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d4e20d9-0ac1-4073-b188-591e35b989b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2a78d0d-6519-4ce5-9f3e-99a2a294f849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7df8eab0-b6ed-48a1-b2ba-2fc1e66f575c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55223389-8f7b-469f-9092-2278e39ad7f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9292feb7-ed49-4a23-bfcb-6bc2ff47c863"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c1f0bb3-d59d-4d91-9d59-95784d29e44a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee3a4b09-0997-4031-8964-f74bbd2233c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91282a33-1c35-4a4b-8d48-d083eabd730c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "128f3fea-d7f5-4619-b564-90aad46a41cc"
            }
          }
        ]
      },
      {
        "id": "ba1fac2d-db09-4f39-8f69-0c23760d65ef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "90464712-2a22-4f8a-b207-8f30cec37ce2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b531964b-7fbe-44f8-be6f-f10c2a2742c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c1a3cb1-4bc8-4b7c-87be-ab1dbcaa30e1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa252fa-47e1-4b3c-a518-9f59c16b5d9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6321265-d0d2-4d3c-a426-3efbe88458b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5792f2a7-ff31-40fd-89ea-8d6ee5d15907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03575be9-a373-44d7-8f58-1ad1b11cf781"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd04f3cd-70e8-4757-8c4d-d9de24e61197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5e799ff-a397-4b20-905e-a583b7039039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77e0f6d9-9f4d-4ce9-8f51-01f1670be6ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0db2b41b-7163-4bf3-9e73-2760fd03c99b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d80b7520-91a1-4e28-82bf-7c4af5c93c56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bd629ee-aa0b-43e3-83df-883f9963ab58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d98c8ece-b128-483b-9c51-749f4f2c78b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8483187-9069-4ed6-b72c-0491dc965f79"
            }
          }
        ]
      },
      {
        "id": "23bedf99-dfcd-4ec6-b450-48936896b5e6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ff82c50-fb60-4d8e-a52b-33eca6aebf20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e0dfefe-d43d-4c67-b5c4-bb305792489f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "643a0df8-e044-42bc-9048-d45c64d0774d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90d390d-b1af-4c12-8ae9-df6df9382d61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbe2c239-08ab-4a7b-a9b4-2ecb55f42911",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 310.1795774647888,
      "responseMin": 6,
      "responseMax": 7463,
      "responseSd": 889.2386834038386,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695515722256,
      "completed": 1695515823101
    },
    "executions": [
      {
        "id": "25dea75c-0c22-4170-a8e9-759466c721e7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d87c7238-edc2-40f7-a05d-51c5ead098bc",
          "httpRequestId": "4ace7160-b9b9-4f4b-b355-cc7bb66d642d"
        },
        "item": {
          "id": "25dea75c-0c22-4170-a8e9-759466c721e7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "861b04d6-2145-4688-87c9-563c2c5ef5e3",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "71d857b2-ad91-4bab-9e1e-2691e83a8b03",
        "cursor": {
          "ref": "539f8abd-f703-42eb-a30d-1fd4236435f9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "58272958-8836-4c6e-9561-da14be93c37f"
        },
        "item": {
          "id": "71d857b2-ad91-4bab-9e1e-2691e83a8b03",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7805464c-3455-4f4a-8a3c-23e64f0c0e66",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c5c4ab39-78db-4833-b421-61ec4e008d6d",
        "cursor": {
          "ref": "36ea10ca-4c5a-40cf-8c3c-22d738df5013",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3a5ccf95-ff9e-4abc-8e67-749ca84bedc4"
        },
        "item": {
          "id": "c5c4ab39-78db-4833-b421-61ec4e008d6d",
          "name": "did_json"
        },
        "response": {
          "id": "9bb8e26f-11d8-4c0f-b488-d659f6d72072",
          "status": "OK",
          "code": 200,
          "responseTime": 942,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037f6e4c-759c-4659-a59b-77743df320eb",
        "cursor": {
          "ref": "17ab0dcf-2c0c-4d76-9ed8-3ed668024d97",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41c0efa8-a30d-413d-87f2-485664a0363f"
        },
        "item": {
          "id": "037f6e4c-759c-4659-a59b-77743df320eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "029ed5ea-a1ab-4fa3-a245-629e3194e8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037f6e4c-759c-4659-a59b-77743df320eb",
        "cursor": {
          "ref": "17ab0dcf-2c0c-4d76-9ed8-3ed668024d97",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41c0efa8-a30d-413d-87f2-485664a0363f"
        },
        "item": {
          "id": "037f6e4c-759c-4659-a59b-77743df320eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "029ed5ea-a1ab-4fa3-a245-629e3194e8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3e0cea-2c4b-4cba-91ca-c4f2ff7ebc4b",
        "cursor": {
          "ref": "928ec1f5-9e65-41f7-a903-8c76e83a0099",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4e3b79ae-0c0b-47b6-af7c-6672a19afdba"
        },
        "item": {
          "id": "8a3e0cea-2c4b-4cba-91ca-c4f2ff7ebc4b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "465df994-933b-4aeb-b0f5-fee9a2d42a46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 375,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be972f-8a24-411e-8632-64ee40c679ae",
        "cursor": {
          "ref": "fddf877d-6fb9-4f92-baeb-64d7893c5f4e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "450f1a93-6534-489c-a05d-75cad8b85037"
        },
        "item": {
          "id": "b1be972f-8a24-411e-8632-64ee40c679ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "99b74229-2b20-4422-a9d7-8763eabbe75b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 239,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc995b5-0f87-4d90-b00d-f433e4d60547",
        "cursor": {
          "ref": "f9381f2c-4838-4b02-b080-78614a800a7a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a314fe7c-09fd-4c02-b407-94e314d6f135"
        },
        "item": {
          "id": "cdc995b5-0f87-4d90-b00d-f433e4d60547",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "49b427da-e55e-4aac-8421-a2a9eb33e1c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565655e2-b97c-41c7-a37b-3cf08719e20b",
        "cursor": {
          "ref": "e83b82ad-dd18-48fb-9bd0-1ff5553dff28",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c3491c34-171b-4ab5-ac5c-2d3f0eb7807c"
        },
        "item": {
          "id": "565655e2-b97c-41c7-a37b-3cf08719e20b",
          "name": "identifiers"
        },
        "response": {
          "id": "735164a5-5438-45db-a485-7a2580415cd1",
          "status": "OK",
          "code": 200,
          "responseTime": 1064,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84a6cd-beeb-4d34-a0f9-919b929eab3e",
        "cursor": {
          "ref": "420510b5-5a17-41ed-87e1-1bbd7f217b77",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4b844624-f2db-4aac-968a-0ece27d64574"
        },
        "item": {
          "id": "4d84a6cd-beeb-4d34-a0f9-919b929eab3e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f98caa85-c2cd-4001-826a-71aca37cd3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695e394f-10ab-46e2-bb20-3e2591793037",
        "cursor": {
          "ref": "c4770eeb-5a6b-4ca2-b39e-dd5ecc2910dd",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7ee22869-d890-475c-89df-48228fdc525b"
        },
        "item": {
          "id": "695e394f-10ab-46e2-bb20-3e2591793037",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9f11a4de-ac0f-4968-ac38-3b2ea5e55d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a55b445-f1ef-40ca-b577-5be3f1b1f340",
        "cursor": {
          "ref": "91f7f9d8-b1f7-47fa-8f30-0cc91e8502dc",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a5c5e32-7564-4e76-b7b0-0e844014f655"
        },
        "item": {
          "id": "5a55b445-f1ef-40ca-b577-5be3f1b1f340",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef35c924-2ff1-485a-afb2-86197b79f2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fcf499-b5e9-4571-8ab8-050b5f3b264d",
        "cursor": {
          "ref": "4ae39fce-e9ae-4413-ad51-20f4b51a4c3a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "55cd4f7f-eed4-4061-b4b2-f7aa2916fab3"
        },
        "item": {
          "id": "a0fcf499-b5e9-4571-8ab8-050b5f3b264d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2a98aef0-1e93-4f2a-a2ed-417f90f81126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7663e788-acdd-41c7-aafa-8fc5f17fb4b9",
        "cursor": {
          "ref": "66ae62ba-df1c-4f05-be53-b49a1b1cf1a9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5f0aac47-97f4-400c-9b83-dba3e62c2eec"
        },
        "item": {
          "id": "7663e788-acdd-41c7-aafa-8fc5f17fb4b9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d821155e-a1fa-4357-822d-a11e3336cebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391ada87-c9c3-400c-8869-14d2d6684cf1",
        "cursor": {
          "ref": "5b223261-af1f-4de5-b0e4-bdee25ffff61",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b944741-8cad-44a4-964a-5e9b28d6218f"
        },
        "item": {
          "id": "391ada87-c9c3-400c-8869-14d2d6684cf1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9c4d8dd0-2db3-469f-aefb-e85684311e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28e42fe-f52e-4614-b72c-5b2b230c788a",
        "cursor": {
          "ref": "77c0e6f2-5865-496b-b0ce-19963405ec23",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2bcaaeac-7f56-48f8-be1c-37172ef79ac7"
        },
        "item": {
          "id": "a28e42fe-f52e-4614-b72c-5b2b230c788a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9416ae5f-4a93-440e-a842-84c41e179dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42209b84-75e0-4168-8ad0-c34093358786",
        "cursor": {
          "ref": "461d1cf4-9ca3-4134-a8cd-4ce6c81345ca",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f2c6831d-f3c8-438a-9384-69d9ffd6b8e5"
        },
        "item": {
          "id": "42209b84-75e0-4168-8ad0-c34093358786",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c3ae484b-b55c-4b3d-958f-f9fc2eecfb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b208ab1-1e26-4e73-b259-a3ddc6ce1774",
        "cursor": {
          "ref": "3bb66888-da5b-4f1d-ad00-2ff9ce344031",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a81c59a1-e6ae-44e8-81e7-2629e4196abf"
        },
        "item": {
          "id": "8b208ab1-1e26-4e73-b259-a3ddc6ce1774",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "86c75afa-d6f8-4f9a-b2b6-bb83dcaab30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28abdb3d-c5b3-44e9-857d-568860947cba",
        "cursor": {
          "ref": "5a0eab12-3113-44c5-9580-f4747646f8d7",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4119e203-d6e8-4873-a9a4-f23c7101b87a"
        },
        "item": {
          "id": "28abdb3d-c5b3-44e9-857d-568860947cba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "190cc688-5eac-44f5-a57b-a7abbb9498fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96664b3-8e61-4fc0-a280-0efa1711abee",
        "cursor": {
          "ref": "1968f75a-c390-411b-8e1b-4f8dbc2dbc8d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "48a4bee9-c741-4a96-94c9-9b5b8e351da6"
        },
        "item": {
          "id": "e96664b3-8e61-4fc0-a280-0efa1711abee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc568822-61e1-4841-9416-410f49caa4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22151bf5-769b-405d-9354-9b6df3770864",
        "cursor": {
          "ref": "e770a638-be5b-4301-a0ae-95e39cbef899",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "38f6343c-3fe5-4bf9-bccd-9490997e88a8"
        },
        "item": {
          "id": "22151bf5-769b-405d-9354-9b6df3770864",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "21084f6a-63de-4ce8-bd0f-91f0ab031c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0744c15-c3f1-4d54-bc3e-4ab04bf12787",
        "cursor": {
          "ref": "a08627df-e9c3-4fff-81e8-5a2fff99179e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c2c6dbe7-8d76-42e2-81fa-f8a953b34b73"
        },
        "item": {
          "id": "e0744c15-c3f1-4d54-bc3e-4ab04bf12787",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "27247826-933c-4722-9d40-68591c939dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fd0a96-ffab-45d3-9934-75af265e7be8",
        "cursor": {
          "ref": "0b3e21f3-d8bc-4c87-a61c-3d9dde324226",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "72c8473e-2dbf-4caa-87fe-b537b070f167"
        },
        "item": {
          "id": "f2fd0a96-ffab-45d3-9934-75af265e7be8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "deb6fe26-3f95-4916-b37e-24240dfea03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2cebe2-fd6b-4905-b614-7d1070f2a443",
        "cursor": {
          "ref": "79504376-3e5d-43a4-8ace-c889ee1de808",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b4aff98d-48fd-447c-ba7b-b70d3ef85d20"
        },
        "item": {
          "id": "7a2cebe2-fd6b-4905-b614-7d1070f2a443",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c1e0d98-b022-43cb-ae42-30963dfb2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618ff4ac-379c-48cd-8e5d-3d43e33b24de",
        "cursor": {
          "ref": "a195bfe4-9e81-49cd-a35a-c1b80c9839d0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "987517ba-5206-472b-9720-7ac6c3dfff9e"
        },
        "item": {
          "id": "618ff4ac-379c-48cd-8e5d-3d43e33b24de",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f1baba2-0e04-4493-9876-f32c42efdc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa34474d-4e0c-4741-8b2d-a0cc9cedf9a0",
        "cursor": {
          "ref": "43a41eeb-488f-4ede-8b85-8a2448f8f37f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "880e3899-c4d7-4516-a1bb-fb6558671ada"
        },
        "item": {
          "id": "aa34474d-4e0c-4741-8b2d-a0cc9cedf9a0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0c43ba4f-f390-4139-a20b-2ac2f5ec6b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77293a7-0523-4e77-83d0-52cb7d24611b",
        "cursor": {
          "ref": "47c2e2ce-6c4c-4aec-a6ba-ea2311f39cac",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "17c75fb4-b6c7-4dae-b795-340eaa199930"
        },
        "item": {
          "id": "e77293a7-0523-4e77-83d0-52cb7d24611b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "304e22fe-95d1-47ae-b8b5-eb26cd540643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f2e70c-933b-4cfd-8c83-b57cb6e3c8f4",
        "cursor": {
          "ref": "b2caec31-9079-417e-841b-70376fe467f1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f311d2e-4a37-448a-80a6-dac4578399b1"
        },
        "item": {
          "id": "e2f2e70c-933b-4cfd-8c83-b57cb6e3c8f4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "10c0c548-faa2-4c13-ac0f-3f10f2e8ae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fac5250-3b2c-45fc-9572-7461e191765e",
        "cursor": {
          "ref": "c6ab6416-94a5-4f5c-a444-2e9bdd647239",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ebaea6ff-6ae9-43e7-89a0-e20fa32fbc00"
        },
        "item": {
          "id": "4fac5250-3b2c-45fc-9572-7461e191765e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "12cf4007-f0af-46b4-96f5-a40379e1f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea2d7a5-8e5f-48ee-9ef3-f889accc41d0",
        "cursor": {
          "ref": "84bc98b2-84c8-4121-93d5-e345a9b99d98",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "038a99e7-2c83-4ab6-95ea-212ab7ce1410"
        },
        "item": {
          "id": "6ea2d7a5-8e5f-48ee-9ef3-f889accc41d0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cfd67127-ef73-46a2-adf0-8a1e23f1b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49feafe-0aa3-43a6-9508-385656876701",
        "cursor": {
          "ref": "fb8e991b-79f2-489b-858e-ddbe816d309a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9786e4ed-1392-4923-9690-c0d7be80b066"
        },
        "item": {
          "id": "a49feafe-0aa3-43a6-9508-385656876701",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "154f938c-e0c5-4d4e-98cc-9980ba0789a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baef8c6a-73e5-4b8e-8c4a-70d0938c0d8e",
        "cursor": {
          "ref": "1181a62d-4e14-40f6-9f5d-6a7b41107620",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fc605953-a2ec-4036-84b7-f48e20f671a9"
        },
        "item": {
          "id": "baef8c6a-73e5-4b8e-8c4a-70d0938c0d8e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7ab8f760-c0b8-4872-8fc3-c4f177d18434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d08bcea-3a49-48ff-a044-523500e503b9",
        "cursor": {
          "ref": "d193ec87-ba88-4563-903b-fa6f1bee225e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c255626-4e58-4120-827c-5f9f32ef99f7"
        },
        "item": {
          "id": "2d08bcea-3a49-48ff-a044-523500e503b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "73735e52-c771-438c-915f-de6d719cb4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c9b6e2-9f8d-4691-bce3-725e109cfe2f",
        "cursor": {
          "ref": "24d20f25-2a06-46c2-aa73-799b3c3e91e9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "33ab70eb-d59a-41bc-85c9-b10bb1ce4ebd"
        },
        "item": {
          "id": "44c9b6e2-9f8d-4691-bce3-725e109cfe2f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d37f470c-de86-40ed-8330-9435a420f174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df35bd9-80c8-4b6c-a38e-8dfde359364e",
        "cursor": {
          "ref": "00311495-a871-4006-b446-845da6ec6ac7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01386840-d58c-42c1-9860-90cb120ecb9c"
        },
        "item": {
          "id": "0df35bd9-80c8-4b6c-a38e-8dfde359364e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2806b48c-a01c-4122-a756-468679f1c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd64d473-34ae-4946-a930-88d690517c66",
        "cursor": {
          "ref": "10b051d5-2314-4ebe-a572-53a61f34b495",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33a93e5f-d802-47a1-b455-38eefe982e46"
        },
        "item": {
          "id": "fd64d473-34ae-4946-a930-88d690517c66",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d97015af-cf75-4c10-bd50-b6767982483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee4044-8dfd-4019-8219-8232a50496c8",
        "cursor": {
          "ref": "7855b936-0db1-4ec9-881e-77a7b997b766",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a0773d7e-da00-45ef-b881-0efe40772074"
        },
        "item": {
          "id": "bbee4044-8dfd-4019-8219-8232a50496c8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "880215a1-009c-4ce8-a942-676ec08c66e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acf0175-71fe-4cf3-846e-e3992b96ecdb",
        "cursor": {
          "ref": "7c4e8ae2-0478-4208-8a61-aa58e7bf9330",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27ea3362-0987-4bce-a8b2-c35d3c4a24b2"
        },
        "item": {
          "id": "7acf0175-71fe-4cf3-846e-e3992b96ecdb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "afddc546-3881-48da-8233-bafbdededa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566c291-a61c-4a9d-89a2-ab4b27c52ba2",
        "cursor": {
          "ref": "5d2f0874-3dd8-4928-ae25-fd959f91a31f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "708d74ec-c224-4e99-9b80-654db961275b"
        },
        "item": {
          "id": "7566c291-a61c-4a9d-89a2-ab4b27c52ba2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "912b3036-8cfd-4df2-a35f-284cf37176a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9c7c8e-5912-4d4b-ba6f-60db24afa17c",
        "cursor": {
          "ref": "b4db65c8-6567-4756-9f2d-caa9f0ae286b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3288c67a-7fd6-473b-92d1-c4fb14c31c53"
        },
        "item": {
          "id": "8b9c7c8e-5912-4d4b-ba6f-60db24afa17c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4f090cd8-0077-4d51-a886-d3733b94fa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408e207b-7bc7-494b-8cf8-0b3c2735f39d",
        "cursor": {
          "ref": "79619e32-5fed-4054-8a1b-8982b58449ef",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e1ac6ca1-b81e-4c0f-ba97-81015444dc1c"
        },
        "item": {
          "id": "408e207b-7bc7-494b-8cf8-0b3c2735f39d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f47e570-3d27-404d-a9da-7b890ddb3d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af5d2f3-fb65-4276-b0c3-c5b4c71bef3e",
        "cursor": {
          "ref": "8befd71c-60f3-4b0c-93f1-168a6dcc08ad",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "88e8b257-5c87-4f7f-ab2c-afe6cbb38e9a"
        },
        "item": {
          "id": "8af5d2f3-fb65-4276-b0c3-c5b4c71bef3e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b186594-9988-4b23-890b-b93b1272fc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e176962-dfe0-4bdf-a3ec-13345ed9db84",
        "cursor": {
          "ref": "c2dc2eda-84a9-4c90-afa2-324bf8c07660",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b0bbaf26-6560-402c-a542-e3106f2bce53"
        },
        "item": {
          "id": "1e176962-dfe0-4bdf-a3ec-13345ed9db84",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5c791187-87e2-44a7-bd15-ee3492000049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5264b01-e7f4-40a6-8dca-f6db7d04c9c2",
        "cursor": {
          "ref": "ed6e695f-7ae5-4deb-b6ff-cb4f86a46691",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8edf52ce-73d2-4daf-9ed8-b9e96be47a07"
        },
        "item": {
          "id": "a5264b01-e7f4-40a6-8dca-f6db7d04c9c2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "374a739f-f174-44ab-8da3-e79210e97c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5857236b-5cf5-4cdb-b889-6b252f34cebc",
        "cursor": {
          "ref": "f653c828-fbd1-499f-93f0-a904a1eb48ed",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ad1ec49-4670-4df2-87f3-9538fc2e9895"
        },
        "item": {
          "id": "5857236b-5cf5-4cdb-b889-6b252f34cebc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5ab53844-ecae-4343-93a3-d827e168c122",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 593,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1742f4-b7e5-4d67-be70-5de97c762315",
        "cursor": {
          "ref": "e7bc9e62-7b6f-430a-930b-c818455c5bd6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25a2e04d-cfa8-4704-993c-99ed17f7db41"
        },
        "item": {
          "id": "1e1742f4-b7e5-4d67-be70-5de97c762315",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "42149546-ab9d-49ff-be0f-8282cea6085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733fb070-6ba8-4b50-b87f-620b14d27233",
        "cursor": {
          "ref": "3f98cac2-e4a5-4d01-8ffd-b28bc249d444",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4907b578-113e-4ad1-a0fc-da6f58928ab8"
        },
        "item": {
          "id": "733fb070-6ba8-4b50-b87f-620b14d27233",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b430133f-27e8-42b5-9523-1660a0a25994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1367f1e-ef57-4991-825c-20cc9f2f68fc",
        "cursor": {
          "ref": "b18bbc4b-c4e0-4a69-b081-ead8559a202c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "26de93f3-cd2c-475d-89c4-9b63fbc203b0"
        },
        "item": {
          "id": "d1367f1e-ef57-4991-825c-20cc9f2f68fc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4890e065-770d-499f-b30e-647ca37a437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b13b39-f6ac-4e3f-95ba-99e38caf96b1",
        "cursor": {
          "ref": "35f5f244-801e-43b3-9578-be52b70f2291",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20d20d8f-8835-4c5a-9e90-3304ab7f7cf9"
        },
        "item": {
          "id": "16b13b39-f6ac-4e3f-95ba-99e38caf96b1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c92e5aab-bb6a-4987-b7fc-ab5ac00bb7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864bcc9c-0072-4010-b505-54448803d0ca",
        "cursor": {
          "ref": "3fcc0fce-1483-449f-9499-416a69dd8372",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8d1459ad-863a-4d1f-af52-269e1dde8290"
        },
        "item": {
          "id": "864bcc9c-0072-4010-b505-54448803d0ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a5ec8af9-2ce1-4481-b1f3-cb098a634eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb464eb-b273-445c-b050-e35a4800f75a",
        "cursor": {
          "ref": "2e6a51ed-ac79-49db-933e-4972f56ddd16",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f8181441-233a-4810-8ca4-f8ca191fb253"
        },
        "item": {
          "id": "cdb464eb-b273-445c-b050-e35a4800f75a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "59619d58-f530-4f4c-95f5-ed216643900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931da6e9-1617-4536-b305-f708651a989c",
        "cursor": {
          "ref": "b0d2e553-8e91-47ee-b632-778954f89532",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dbc887e1-2258-43bf-9d7c-b1468c4dae7e"
        },
        "item": {
          "id": "931da6e9-1617-4536-b305-f708651a989c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0750d06d-b8b9-459b-bf2a-8c3d5687cdc7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 577,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72282756-f035-4749-a8fe-74a4c71022b5",
        "cursor": {
          "ref": "091eee46-a71e-4d4f-b09b-5343a3dd7288",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a8f9be5-c788-4cc7-8824-cfa65dff77a2"
        },
        "item": {
          "id": "72282756-f035-4749-a8fe-74a4c71022b5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f8921f64-0e52-4fc0-aa2e-c25612ed8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0b3282-7d66-4a51-a3ed-4f161436ff31",
        "cursor": {
          "ref": "8be7b7a1-194f-463a-bb58-d83d86526c1b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0487bbc7-cd65-46ea-ba82-9e1d181e11c9"
        },
        "item": {
          "id": "1b0b3282-7d66-4a51-a3ed-4f161436ff31",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "665a6059-5086-49e8-af62-2a8334dffd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31947b1-f105-43be-930d-ff515d29e5e7",
        "cursor": {
          "ref": "0240ed94-1ba3-473e-81e9-d290d57532a9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "412bb1b0-be5f-452d-8a79-e5d42dcc7f3c"
        },
        "item": {
          "id": "b31947b1-f105-43be-930d-ff515d29e5e7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0684ecc7-0e5a-4330-a915-721cf1575d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66436a52-9dc0-4cfa-ba82-11f50c4d0185",
        "cursor": {
          "ref": "721ef7b0-8026-4d42-bd3f-7106a0f20cd6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aefb979e-e11f-44e7-a782-10419549a74b"
        },
        "item": {
          "id": "66436a52-9dc0-4cfa-ba82-11f50c4d0185",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dbd50bf0-5bd4-4179-8118-5d44d85ec37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d260e4-7aca-43dc-985d-81ac4acc25b7",
        "cursor": {
          "ref": "bfe3e5ae-8685-4947-b315-0b6a019688bf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ea43618f-734f-4b65-bd8d-7b50c8ad07e9"
        },
        "item": {
          "id": "b0d260e4-7aca-43dc-985d-81ac4acc25b7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cf714faa-e763-47b2-9959-be07b696a876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba6e83a-f54c-4afa-a428-5f6e94176567",
        "cursor": {
          "ref": "97588460-8289-48c4-9487-17d31aed4313",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5866dd1-3aeb-475f-aa73-d954eedfe3ce"
        },
        "item": {
          "id": "1ba6e83a-f54c-4afa-a428-5f6e94176567",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "45147f33-209f-43aa-8dfb-67320cfc0429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be584869-0b6f-4215-8189-a32da37c21c2",
        "cursor": {
          "ref": "09ecd3f7-8eb0-4760-af42-090889b7d0e9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "158820a1-82b7-47b7-9e11-872d26d4cd81"
        },
        "item": {
          "id": "be584869-0b6f-4215-8189-a32da37c21c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2ce5ee2-acad-4927-bf9b-67ab17f8b34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68073b48-8a2d-41d6-b9e7-6a9cdcba4102",
        "cursor": {
          "ref": "732f7608-db5b-4392-9fb2-e37488bd80bc",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3cbae327-8c19-4d86-8310-337f8a1e9d4c"
        },
        "item": {
          "id": "68073b48-8a2d-41d6-b9e7-6a9cdcba4102",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "813358a5-2c57-4cf9-8ef5-fca7a47cec22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29071bea-e09d-4871-9d16-6648d2e4cadc",
        "cursor": {
          "ref": "3696f8a4-a345-45c2-9d5c-61c21a6b3296",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "86a17138-c715-4967-9e4f-52a453df99a7"
        },
        "item": {
          "id": "29071bea-e09d-4871-9d16-6648d2e4cadc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3d8398f1-4742-4766-9e12-3a61ff835a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc977c68-3148-4795-804a-796e20afabac",
        "cursor": {
          "ref": "b3e50549-3f4b-4d3c-9366-52a24dba0f17",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "448898b0-8030-4b86-aa15-639db22df383"
        },
        "item": {
          "id": "dc977c68-3148-4795-804a-796e20afabac",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0f9c3a18-4d64-4a2f-9aec-3cf15a561fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f9b99d-06b6-45a4-b60e-dd22f9655dd7",
        "cursor": {
          "ref": "059f386c-3505-4df1-869b-8ddf1b9ed6a1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "74313b89-8377-4156-9f01-f8a6482c1654"
        },
        "item": {
          "id": "98f9b99d-06b6-45a4-b60e-dd22f9655dd7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "07049567-94eb-4aba-87d3-f932b1fc9f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2e661f-b3b8-40f2-bd6b-0e0cd773de7f",
        "cursor": {
          "ref": "c5464975-7428-4e10-b98c-2a755d101b0a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "16c6e6ef-26c7-4d41-899f-506300e07888"
        },
        "item": {
          "id": "4f2e661f-b3b8-40f2-bd6b-0e0cd773de7f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bc3eeeb1-c5ea-46ff-bb8d-f4b3f0a25374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c81c527-9954-45ca-bf1c-77bd34c05de3",
        "cursor": {
          "ref": "7d3cea97-d8b3-4a23-9e43-bfc499224be2",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f419660-d1cd-4702-9cde-81e850934b05"
        },
        "item": {
          "id": "3c81c527-9954-45ca-bf1c-77bd34c05de3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cb1ded0b-3353-4adb-8070-a841f7dfdb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581d0ced-376c-4b10-8776-067235aa631d",
        "cursor": {
          "ref": "6acc289b-3f68-4107-a67a-331e829774d3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3d3478b5-3a78-46eb-86e6-35ad77946b31"
        },
        "item": {
          "id": "581d0ced-376c-4b10-8776-067235aa631d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f7253ebd-4b72-49b4-a09e-c8c31b4ddb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44a3d0-4451-478b-976b-e22d23810f36",
        "cursor": {
          "ref": "904f7ab2-6348-419c-913e-ee0eb1630728",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57652ab6-1b4e-42de-b741-6404a87c9b64"
        },
        "item": {
          "id": "2a44a3d0-4451-478b-976b-e22d23810f36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5dfdb32d-956e-44c3-9cfc-70fca75a4e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a7f2bc-6921-48b4-a688-857b388f58bb",
        "cursor": {
          "ref": "c5b65cbb-08b0-4a7d-9b68-3ec4e853e3ae",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ba02992-01b0-468e-972a-3d786ace22a9"
        },
        "item": {
          "id": "c8a7f2bc-6921-48b4-a688-857b388f58bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b156c0a-d833-47c0-a3d6-20d885d4fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353b98b-9542-425c-a980-af23b3728cbd",
        "cursor": {
          "ref": "6f7eb6f0-b611-4c7b-a7eb-36fa23d34764",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6b6ae6d7-8223-4575-8b50-fb3351cddb42"
        },
        "item": {
          "id": "0353b98b-9542-425c-a980-af23b3728cbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a70261fe-c536-48f3-9d43-4d00b8891434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e10deb-32fa-412c-ac0a-bbef8383ff0f",
        "cursor": {
          "ref": "710c4823-44e0-4803-9ef2-d7e5452fab59",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "65d457e9-d1b5-474f-82be-49d10d137620"
        },
        "item": {
          "id": "a7e10deb-32fa-412c-ac0a-bbef8383ff0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6677e213-413c-4c6d-b23d-0df919d6b99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c9eca-e41f-4f67-a4b5-b68a88fa28ba",
        "cursor": {
          "ref": "cfc45ecc-343a-4ee7-9eb6-0a4b0381c512",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f61a7f36-0d92-4119-9cf3-2682d9b78051"
        },
        "item": {
          "id": "e52c9eca-e41f-4f67-a4b5-b68a88fa28ba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e90f7c90-11d6-4c26-98d7-ecc869955aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5c5b18-2545-4b8a-bc1e-48ff9b2e2aa8",
        "cursor": {
          "ref": "bf27e1d6-c2ac-44ff-b3be-9622694b9424",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a55301aa-abb9-4bf8-adbd-c7b3837ad609"
        },
        "item": {
          "id": "4f5c5b18-2545-4b8a-bc1e-48ff9b2e2aa8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04eb6c3e-b0b1-46f4-a4ac-9621e39cd163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ade6dd-b518-4661-b076-dc4f60871701",
        "cursor": {
          "ref": "55153952-6108-4443-bacf-917e176944a1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8031eb04-72d5-4939-b648-2aaeb39ef55c"
        },
        "item": {
          "id": "16ade6dd-b518-4661-b076-dc4f60871701",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a6750483-0ed0-4529-9c06-d1c68debc4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2801ed-70c0-4d1c-bb78-1b21b98e59d6",
        "cursor": {
          "ref": "ff0c4530-08cd-402b-860c-e7794647bd4b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff68db89-ec86-4c57-9be8-51a1f9734a40"
        },
        "item": {
          "id": "dc2801ed-70c0-4d1c-bb78-1b21b98e59d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f1bfc75e-71f8-4862-bdf9-3c1076751489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfbe2f2-e18e-48e2-a7ee-6a7c873bf698",
        "cursor": {
          "ref": "283b2e85-7746-48dd-878a-c0ddb9dda4e3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "283a7422-5a10-4d4c-8216-1d10b358d8fc"
        },
        "item": {
          "id": "3dfbe2f2-e18e-48e2-a7ee-6a7c873bf698",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51cf08bf-9243-4f71-bfd7-3d33ce0ea3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91efd4f-3112-4bc3-b3f6-0bf56c6d1b1c",
        "cursor": {
          "ref": "6f540ab6-fd06-4d93-90c1-b94919bfc831",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "989ba5bf-0f96-4c74-a2fc-2eaa7335bf33"
        },
        "item": {
          "id": "c91efd4f-3112-4bc3-b3f6-0bf56c6d1b1c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ca33ef51-46f2-4fca-bcc7-3eb1a6318710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e51a67-426a-41fb-bb1f-ea1974cffd1d",
        "cursor": {
          "ref": "e0b31e49-202d-45a4-9444-b98a194f6f15",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f02527e-2b01-4297-9edd-443ffcb2b879"
        },
        "item": {
          "id": "e0e51a67-426a-41fb-bb1f-ea1974cffd1d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "31259ca3-0547-43db-8df2-ad4f1b445507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d14c6-57f5-4e3e-b638-c6f7c5fab9ed",
        "cursor": {
          "ref": "7d57f157-d6d9-49fb-b16f-7fdcf236b98c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20c6e85a-b8ed-4927-a5ca-f1bd5dac16c4"
        },
        "item": {
          "id": "3a0d14c6-57f5-4e3e-b638-c6f7c5fab9ed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "53f483d4-1be2-4156-b97c-454700a42be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfba1542-3f4b-48a2-b949-c5e71b16ee74",
        "cursor": {
          "ref": "cad1edbf-bde2-45f0-b20f-f07d10dbd1f5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2ebfbc9a-9204-4b4b-b61f-2175881e6070"
        },
        "item": {
          "id": "cfba1542-3f4b-48a2-b949-c5e71b16ee74",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d44d77b-1099-4583-a36b-6566a29dcc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339599f-3243-454f-82cd-525d91386373",
        "cursor": {
          "ref": "48a457a0-8e93-4d85-af6c-5a6674757af9",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a6702f1-afd3-418c-96a1-d74104e3a8b2"
        },
        "item": {
          "id": "c339599f-3243-454f-82cd-525d91386373",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "854f6bf6-fd2f-480e-bbf7-5e25c882af32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e755374-1ef3-42e1-b97d-d4eb40326878",
        "cursor": {
          "ref": "6c036176-16d4-4fb0-8c3d-222b8d9e2ad0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "522590ec-d578-43a7-a2fd-7b0593494f98"
        },
        "item": {
          "id": "5e755374-1ef3-42e1-b97d-d4eb40326878",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1669e2ec-6e6a-4932-a8a1-ecf484efce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406c5e3-c12f-464a-b970-b359aadbf45d",
        "cursor": {
          "ref": "9e1ab599-3d10-4332-b06c-3dfce0cd3f36",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5515f334-7cd0-4535-8c2d-a10130fbad23"
        },
        "item": {
          "id": "6406c5e3-c12f-464a-b970-b359aadbf45d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42ada014-e87f-4f4c-ad21-e2eaae5386d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d892c0ba-fca9-480c-a0b0-77c3826cb654",
        "cursor": {
          "ref": "24478137-f253-40a6-8fbc-541ad7ae372f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45749237-77d0-40e9-be01-5875ec94308f"
        },
        "item": {
          "id": "d892c0ba-fca9-480c-a0b0-77c3826cb654",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f9df714-7c62-40b3-95fb-3a23b9521726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3edbe3-92fe-4de6-afc6-22417bee52a1",
        "cursor": {
          "ref": "5cee98b1-cf61-4646-9e2b-02b74ab02917",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9adae355-8def-4dfe-a98a-8e2c388ce6dc"
        },
        "item": {
          "id": "2f3edbe3-92fe-4de6-afc6-22417bee52a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c021b1a-ea40-4194-97a5-2da4f9446e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26668f45-5acf-497f-bc65-03da7d8c1e8b",
        "cursor": {
          "ref": "a1ceaba3-79b2-4e63-b4b5-35e6846ea003",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b6bf1524-66ac-457a-b4a3-f89ca8fdc8bc"
        },
        "item": {
          "id": "26668f45-5acf-497f-bc65-03da7d8c1e8b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d4e006f5-d770-4272-b99f-e303067cb87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a84839-6237-4c38-acb4-0cac7ba33377",
        "cursor": {
          "ref": "c4e7af16-ce82-4877-9084-f79ed0a5d97f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff2f3336-fcb5-4562-bea1-3edef4919e42"
        },
        "item": {
          "id": "e1a84839-6237-4c38-acb4-0cac7ba33377",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "951483d5-4c8c-4a52-90e0-0869308eb46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc865df-f811-42e0-8240-03911889726a",
        "cursor": {
          "ref": "ed2f52b4-7d92-4c63-9c71-b1eb6811b613",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cb1dad7a-b835-48bb-aec9-48e2365a8e29"
        },
        "item": {
          "id": "ddc865df-f811-42e0-8240-03911889726a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "333b213b-56ed-4f30-8a97-13fa69f26b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3987f16c-cc5a-4501-83c7-14c48b7eae61",
        "cursor": {
          "ref": "89c74a9f-8401-4efa-9335-3a1b6a5ef3fe",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c78c93b-6e33-4f15-8f9b-3969023c3929"
        },
        "item": {
          "id": "3987f16c-cc5a-4501-83c7-14c48b7eae61",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aec55dc7-31c3-4405-805e-45b88c825457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15adef6-4f52-42e0-a8b5-07a73dbf199c",
        "cursor": {
          "ref": "84a6ebf7-1f35-46bc-9be4-e1700ff2e5c9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f0999de5-bebd-41dd-a6b2-1bb6a7e818e4"
        },
        "item": {
          "id": "b15adef6-4f52-42e0-a8b5-07a73dbf199c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e51f2493-db18-438a-b689-2228b327be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9376a22-e481-4326-bf4b-2c6794dae0af",
        "cursor": {
          "ref": "62f3eb37-519d-4645-8acc-2e9d7593d3c3",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "20d27938-47b1-4bd5-8f75-d621d58de190"
        },
        "item": {
          "id": "d9376a22-e481-4326-bf4b-2c6794dae0af",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3534215a-aeb5-4deb-a695-19de7395aa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2357527-a8a6-471a-979d-2ff8df93fa1b",
        "cursor": {
          "ref": "d7f6aa7e-125b-4470-974d-c1ef2367e437",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ad130ec-6d3e-4632-81e2-dc292d44331e"
        },
        "item": {
          "id": "c2357527-a8a6-471a-979d-2ff8df93fa1b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fcc22f45-701b-49c0-b97b-b1e9b74b1cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9487ff81-cd1c-4103-95d4-5c89ee45024e",
        "cursor": {
          "ref": "3a4efe0d-f38f-4938-ac2b-48cec0219751",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b7beb95-3fdd-40e9-846d-25cdad583f1d"
        },
        "item": {
          "id": "9487ff81-cd1c-4103-95d4-5c89ee45024e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1320aee5-ca7a-4f78-bd89-4925223b7e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d917f90-7902-44fa-81a0-ad441cddcb04",
        "cursor": {
          "ref": "adaeab1b-4ea9-436a-a18f-7fdeed58ff29",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4fb7af60-0b87-456c-a793-0e994b8e89c2"
        },
        "item": {
          "id": "2d917f90-7902-44fa-81a0-ad441cddcb04",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "834c77a2-74af-44f2-916b-016bba7facba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62394d45-6dc6-4a3a-85cc-91c297ff8dc5",
        "cursor": {
          "ref": "0429a270-26dd-47a9-ac91-7b27e93e9ffc",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "97a18897-fb1a-4bd7-aff4-6462fa52e1d9"
        },
        "item": {
          "id": "62394d45-6dc6-4a3a-85cc-91c297ff8dc5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4113a91-23a6-415f-9b2d-077b127ea6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bf31cf-309a-44e2-8720-380d2a49b44d",
        "cursor": {
          "ref": "c41ba18d-b889-408f-bb94-81ac5fd30228",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0912950e-f24d-4589-a36b-44ea770e0f5e"
        },
        "item": {
          "id": "76bf31cf-309a-44e2-8720-380d2a49b44d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6e69c826-8693-4eed-97d3-2cb4d778d457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e8e9a6-5f78-4841-9ffc-9e82fb4df26a",
        "cursor": {
          "ref": "1979ffcf-1742-4c08-b1f6-a0755c1eeeca",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "44ca7b9d-1b13-4844-a630-0a31c1b78524"
        },
        "item": {
          "id": "e8e8e9a6-5f78-4841-9ffc-9e82fb4df26a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "61b5f9fc-d442-47a3-a8e0-5a993a12d674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16f61b2-db88-4761-a689-195eefbd4dc0",
        "cursor": {
          "ref": "b8d0e698-fbc6-48ad-ae03-08a562692757",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b5443a51-4e9f-492f-88f6-afe22bff76d9"
        },
        "item": {
          "id": "c16f61b2-db88-4761-a689-195eefbd4dc0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8f53f474-8ce7-4550-bd81-42d91f4e4767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72df2cad-ae36-48be-a831-b0d4086609c9",
        "cursor": {
          "ref": "0d28b272-907d-4e16-8d13-4ab913cbd171",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6721ab7d-8241-4c6c-a1f0-c4cf667db481"
        },
        "item": {
          "id": "72df2cad-ae36-48be-a831-b0d4086609c9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3c43dcff-e640-42e5-99fb-621e8f9a8a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c097887-a22c-40be-bbad-bb5f3422966b",
        "cursor": {
          "ref": "56cf0f52-5442-459d-912f-ec51debc0444",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f2ff9020-1566-49f2-b205-d37bbb6650d4"
        },
        "item": {
          "id": "6c097887-a22c-40be-bbad-bb5f3422966b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84a18059-21b9-4aa1-9d6a-3480500df802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fe5fff-3aca-41b8-97ef-7f88166adb79",
        "cursor": {
          "ref": "5f583db7-9fd2-47a1-aa7f-891c80af37dd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "80ddd8b5-26bd-481c-bbc3-62d6d00fd1e7"
        },
        "item": {
          "id": "03fe5fff-3aca-41b8-97ef-7f88166adb79",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d3d686d-773e-467d-a79c-2a9cd3b0c396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37688507-d4f0-4993-b894-a124851fbd9a",
        "cursor": {
          "ref": "77666754-5878-4da6-a26c-d4b815f190d3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3b7c2f7b-6417-40e3-af4d-ce8ae75453e5"
        },
        "item": {
          "id": "37688507-d4f0-4993-b894-a124851fbd9a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fede9315-d11b-44bd-b587-85642b86f998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce12d5d-7a5c-440e-89ac-1e4c60f62293",
        "cursor": {
          "ref": "eb7a568c-43f3-432f-ac84-b0b12a164ecc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b9baf9d2-346d-4b53-b4f8-3a30d9167024"
        },
        "item": {
          "id": "3ce12d5d-7a5c-440e-89ac-1e4c60f62293",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37343d94-956a-4d69-85b5-8ad1a28573ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4598a192-922e-47af-8fcc-107728f3ef34",
        "cursor": {
          "ref": "f425400e-3f5f-4f3e-8540-4ee82537a2f9",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "975e72ea-7e0c-41b0-93af-896249aad09d"
        },
        "item": {
          "id": "4598a192-922e-47af-8fcc-107728f3ef34",
          "name": "credentials_issue"
        },
        "response": {
          "id": "537420b2-2a81-4fee-9d3e-10d5d6b39606",
          "status": "Created",
          "code": 201,
          "responseTime": 6980,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6f6c3-cc8b-41f2-8eb2-aea622f4d2b1",
        "cursor": {
          "ref": "bb5daae0-2e6c-4522-bf91-e4c8868b4414",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4865c514-0f92-4dff-b8f7-4b637161d9d6"
        },
        "item": {
          "id": "e0c6f6c3-cc8b-41f2-8eb2-aea622f4d2b1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0fabfcd5-fe64-4751-a08c-8a2c7d2407b0",
          "status": "Created",
          "code": 201,
          "responseTime": 6568,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "66913fe3-0d03-4047-a3cc-429c7139ab9e",
        "cursor": {
          "ref": "16c38066-e9eb-4bcd-8602-77cd68675dd1",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a4ff2936-f8ef-4733-8190-6b0800430b3a"
        },
        "item": {
          "id": "66913fe3-0d03-4047-a3cc-429c7139ab9e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dd38f1a9-fe2e-4255-a553-76e2bd16ae67",
          "status": "Created",
          "code": 201,
          "responseTime": 6393,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cdce29-b0cb-4ad9-b2ad-5cb61b6e05f8",
        "cursor": {
          "ref": "875ad508-4a5b-481c-81db-23f3f65c31d9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9f1b9149-23d0-4dcf-b4d5-f1e1bfaf36b6"
        },
        "item": {
          "id": "24cdce29-b0cb-4ad9-b2ad-5cb61b6e05f8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a151f96b-f599-4b6a-b06e-f40d1df89481",
          "status": "Created",
          "code": 201,
          "responseTime": 6684,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "187ff584-d63e-4fef-a5fa-41c69d387356",
        "cursor": {
          "ref": "95a25904-309b-4b84-9f60-805ba5741f99",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "477e26cc-211e-4ab9-95ed-6d379a8ea884"
        },
        "item": {
          "id": "187ff584-d63e-4fef-a5fa-41c69d387356",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "93a97f31-9f0d-4465-8a11-212e29df98d7",
          "status": "Created",
          "code": 201,
          "responseTime": 7463,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "96410886-b6ca-4d4b-830c-c22525b9af77",
        "cursor": {
          "ref": "c99b7083-01e1-4dd3-8def-78b67dd220a6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff45b091-bb5a-45fa-b423-48efc24dde80"
        },
        "item": {
          "id": "96410886-b6ca-4d4b-830c-c22525b9af77",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "62689ee5-e271-4717-9b4e-dc6215139682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "fb766691-1af8-4c1d-96ba-8b3b02e65bd6",
        "cursor": {
          "ref": "85192f2c-fd5c-424d-b941-ff8bd3e69cf6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f7faaf6b-e976-4efe-a3af-6f6418c0817b"
        },
        "item": {
          "id": "fb766691-1af8-4c1d-96ba-8b3b02e65bd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63c472a0-add8-4bb5-8d8f-e37d3282250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9973bc2c-93bb-4b75-85ce-61757f870a6a",
        "cursor": {
          "ref": "f38a842b-fbb0-42ec-a96e-30ac39be5778",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "79c7a8f2-34d1-4d49-a9d9-9c03fa4f2bf7"
        },
        "item": {
          "id": "9973bc2c-93bb-4b75-85ce-61757f870a6a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68b5729c-e2dd-4a7f-8d57-1016e8b58960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51aecd-4673-4d60-9d1a-d16e1f0939fc",
        "cursor": {
          "ref": "96e7bad5-3cf2-48c3-aae0-b974ef0dceab",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c71ea2f6-4112-43ab-954d-9cdf07cdafee"
        },
        "item": {
          "id": "1b51aecd-4673-4d60-9d1a-d16e1f0939fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "197ae894-2bdf-47bc-9d4c-e030b951aa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b720443c-e356-4ae6-92fe-5393c8afe6de",
        "cursor": {
          "ref": "66b94de5-d04e-4831-bdf3-9556968dbad2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2a7cae4-da76-4665-bb5a-7d887c8db7ad"
        },
        "item": {
          "id": "b720443c-e356-4ae6-92fe-5393c8afe6de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "101ef215-4a98-41e8-a8a5-e984753036f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a91387-231d-4786-872c-b202f39383b1",
        "cursor": {
          "ref": "b49855a7-f031-4480-96fc-214b1453b73e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc2eec9b-25f7-4297-9492-9ba1fcc4457b"
        },
        "item": {
          "id": "47a91387-231d-4786-872c-b202f39383b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "93fe3cfe-dad1-4918-957f-61de29e1f345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ee00a7-3286-4bab-93eb-0b856ff54dd9",
        "cursor": {
          "ref": "897b214c-4ec5-4c72-8486-8a6798d392b4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7441f195-ba72-4335-9b15-f929cfc69126"
        },
        "item": {
          "id": "64ee00a7-3286-4bab-93eb-0b856ff54dd9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6afbb080-bbf7-48b5-b938-8a96aca42474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2ffb08-4247-4b27-b788-704fc9e542ee",
        "cursor": {
          "ref": "ca35ea9f-38ff-4b36-bdbd-0467ad52ab7a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7ddbf5a4-932b-49e0-9ed1-33189cda200d"
        },
        "item": {
          "id": "de2ffb08-4247-4b27-b788-704fc9e542ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ddcb165-fc61-4ba9-a0ee-06cddfd1df89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d6bce-019b-4ea9-a5a4-17e518f16bed",
        "cursor": {
          "ref": "82285884-4397-4f6f-ae84-98238b733ba4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4fe299ef-99ed-490a-a00f-99d73989e148"
        },
        "item": {
          "id": "d71d6bce-019b-4ea9-a5a4-17e518f16bed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "717aba8e-0ba3-4a50-a1c2-516191891b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ec81b8-b57a-4ef8-b73c-9aee55c492ef",
        "cursor": {
          "ref": "8beef588-8357-4fc5-9a20-9b94e5f638ba",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7dab385e-54ce-4394-b600-8e81787a49ef"
        },
        "item": {
          "id": "c9ec81b8-b57a-4ef8-b73c-9aee55c492ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b64cd587-0080-4217-b671-8cfb3c850864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48707b8f-7412-49e0-9e95-64066172da77",
        "cursor": {
          "ref": "ae90f914-6274-4f53-b1a7-19b19732710b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0227f8ca-d271-431a-842e-6a40d8320b00"
        },
        "item": {
          "id": "48707b8f-7412-49e0-9e95-64066172da77",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8c01a09b-4fc4-4ddb-b31e-b3e67a0312c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41369fe-c345-4990-87f8-e3731e5b320f",
        "cursor": {
          "ref": "c9f70bd7-5668-4d52-81a7-98590be1e7c3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3320bda-9bda-4e0e-b3b5-4a1f59474cea"
        },
        "item": {
          "id": "b41369fe-c345-4990-87f8-e3731e5b320f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1a0b485-efcb-42d0-a437-501548fd73fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e11a53-939a-4160-9538-59c50cdaad1b",
        "cursor": {
          "ref": "50d36bc1-6722-426f-820b-4352a2dc9578",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a478577-e6d9-4e05-9a1f-2c669d756f1a"
        },
        "item": {
          "id": "96e11a53-939a-4160-9538-59c50cdaad1b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84edf65e-7e28-4c40-8366-81458c0b4e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bc5ce8-46de-4d42-b135-99ca2981f8ea",
        "cursor": {
          "ref": "7fcd613a-a428-4901-8283-afd0abec2f48",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "39c31909-dfe7-4a5f-a751-52e9428db063"
        },
        "item": {
          "id": "f3bc5ce8-46de-4d42-b135-99ca2981f8ea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c127f10-029a-4c52-80b7-a0592df6d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a514e89c-317f-4b20-87bd-c2adf6341d33",
        "cursor": {
          "ref": "cdc982f9-1371-4f9f-a361-a0ebb8b9f0a8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b9ff5ea0-5b81-4058-beb9-4e652662fcac"
        },
        "item": {
          "id": "a514e89c-317f-4b20-87bd-c2adf6341d33",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6a4665d-37eb-4392-9ff5-3e989327c17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f543b433-8692-4053-8437-3651bc0db398",
        "cursor": {
          "ref": "063c709f-d2a7-4662-aef2-c9da032f9101",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "53f44fd3-edc3-49e9-b58b-6f3e45aeb30c"
        },
        "item": {
          "id": "f543b433-8692-4053-8437-3651bc0db398",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f6f77abf-1835-4459-919c-91e1f18d2b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3a2be7-fc05-4ea9-a576-b58a72237bb6",
        "cursor": {
          "ref": "9f8d1540-edd8-4463-b645-c985d79281b2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6670fc94-9e9e-4644-a932-f35bc43e79be"
        },
        "item": {
          "id": "0c3a2be7-fc05-4ea9-a576-b58a72237bb6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d1b70f7d-8c36-4379-a84a-9392896fb3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f287cd61-7855-4add-ac18-ed2ba09cd665",
        "cursor": {
          "ref": "36f827f8-5b05-43b0-921e-1a55be74c2a6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "61374117-cc00-4e30-a8bc-633ee5c4bfc4"
        },
        "item": {
          "id": "f287cd61-7855-4add-ac18-ed2ba09cd665",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b88f60dc-a8c1-4c80-b3dd-64a39461b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6ffcf6-afa0-4a7e-a15e-5acd5373609b",
        "cursor": {
          "ref": "19c61043-f9f3-42b1-8e10-4b9ad34c7c93",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f38d1302-5773-430d-9502-3efd14686457"
        },
        "item": {
          "id": "af6ffcf6-afa0-4a7e-a15e-5acd5373609b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a1da4342-5581-4eab-8cff-785da06a37a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52229fa2-0660-49c5-940b-69925df79010",
        "cursor": {
          "ref": "69589554-8cb7-4da9-8906-4860aca90a89",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7838767c-d9f1-4774-a250-1b6e384a6ca3"
        },
        "item": {
          "id": "52229fa2-0660-49c5-940b-69925df79010",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e4c0d1d5-6d96-41d4-8847-d7d62a23dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f235ed-fc12-4b27-977a-b109abe83423",
        "cursor": {
          "ref": "a749a71e-7abe-41fb-b5ec-04c3ce79f391",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cfdf9196-0b18-4e2f-98ea-011275ae308d"
        },
        "item": {
          "id": "d3f235ed-fc12-4b27-977a-b109abe83423",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9412b3ec-f608-49cc-8ae8-93a0d3e41fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74daf61c-4f49-4f9d-92b2-fb84908c6b7d",
        "cursor": {
          "ref": "8f0f4510-9626-4ccb-b890-2bcff0ab7fa8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3a634a7-09ed-4ef3-8619-4547501da6b7"
        },
        "item": {
          "id": "74daf61c-4f49-4f9d-92b2-fb84908c6b7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c6b7132-f88b-40dc-b5c2-697f98162cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ede56cc-87a2-48d0-ba4d-ea26752add55",
        "cursor": {
          "ref": "2bf341fe-cceb-4a12-9bcc-f42278de3cfd",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "874353f7-e1b2-421a-b788-71c1ecd3aeea"
        },
        "item": {
          "id": "5ede56cc-87a2-48d0-ba4d-ea26752add55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf06bd07-d95c-4acc-90ad-9560e0215a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d15bd-2417-42a6-8bfa-ee081ec3fa57",
        "cursor": {
          "ref": "d507e1d6-785c-4757-8c47-494b0b6fc249",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fe4a01cf-e203-42be-b5b7-1f9c52558a07"
        },
        "item": {
          "id": "b67d15bd-2417-42a6-8bfa-ee081ec3fa57",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a60452c6-072f-4060-96f1-5b83dcc4ff12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069f9e82-d274-4f51-aec1-bf4b7b6f4ae0",
        "cursor": {
          "ref": "9f5902c6-615b-45ab-9f11-179b3c899b60",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "18464a5f-0fef-4897-b2de-6a23f7f3e705"
        },
        "item": {
          "id": "069f9e82-d274-4f51-aec1-bf4b7b6f4ae0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87c882b7-13cb-4524-baee-822538a2a60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9fc8ff-2fb4-4d0b-a765-f729cd130b4c",
        "cursor": {
          "ref": "f210439e-36dd-4114-a7e5-201c31cee723",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03edde48-305f-4305-8744-4d039bd1df5b"
        },
        "item": {
          "id": "5c9fc8ff-2fb4-4d0b-a765-f729cd130b4c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "007c74cc-4b82-4680-b0ea-fdcde2b74332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc4866-7c88-44bf-9ad3-27b1aed32a8e",
        "cursor": {
          "ref": "b7ecef9f-dde2-413f-b689-c3b00f83954b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "60f0e876-43bc-4553-81d2-d07f12b2df23"
        },
        "item": {
          "id": "b6fc4866-7c88-44bf-9ad3-27b1aed32a8e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6df55a86-1a20-40ac-b741-90674476dadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4984ac7f-8882-40a3-b943-14e9c95374a0",
        "cursor": {
          "ref": "ba7cbf0c-bb0f-49c2-9de4-453eac701796",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b87c7f60-f04f-4b02-aa28-305ab39c74a5"
        },
        "item": {
          "id": "4984ac7f-8882-40a3-b943-14e9c95374a0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8b9bc0c8-8de2-4a50-9acc-d308221be56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1333da8a-b298-4c4b-9d1d-8802a29101ff",
        "cursor": {
          "ref": "68580f1e-7b5f-438c-ba26-1ff96142b9c4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b6e71711-1dcf-44dc-a9b6-6de44981b899"
        },
        "item": {
          "id": "1333da8a-b298-4c4b-9d1d-8802a29101ff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "56dd04ef-a773-425b-be0e-90eee717bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb84251a-006a-402b-bc36-2112efa46d64",
        "cursor": {
          "ref": "3cceeb6a-b51b-442a-b3c9-c8a5dc2e53d6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e9e84ae4-83a6-4c77-8066-9444982d57f6"
        },
        "item": {
          "id": "bb84251a-006a-402b-bc36-2112efa46d64",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c39886bb-35f4-413c-a67d-40437ede494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e2c5fb-db16-412d-8dd9-0cfcbfe22fd7",
        "cursor": {
          "ref": "8d56d87c-88b0-4551-929a-e0e402613e16",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0aa7f677-f71f-4a8e-a6ea-757b57631f26"
        },
        "item": {
          "id": "59e2c5fb-db16-412d-8dd9-0cfcbfe22fd7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f432a3ad-38a3-4413-bae3-58115b6a1b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c346e96-4968-439a-86ed-44afb2f2d68d",
        "cursor": {
          "ref": "57521287-2d2a-4e51-a4b3-81aaca07dc42",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "06d14629-8d72-47e5-8ad7-23d062e65cfd"
        },
        "item": {
          "id": "3c346e96-4968-439a-86ed-44afb2f2d68d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb552a4b-a2ab-4205-8e7a-b776db7ff786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d12c138-5b0e-4930-be12-abff0e83e361",
        "cursor": {
          "ref": "983adab9-52e8-4516-a87d-924360236d74",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f82d371e-2b64-4843-9d6f-57d83cf4c047"
        },
        "item": {
          "id": "7d12c138-5b0e-4930-be12-abff0e83e361",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5e301905-0ce6-46f5-af66-01e10020bc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d43cbe-b2e8-4f35-ba48-84941d00cdbc",
        "cursor": {
          "ref": "3816c7d1-28e6-4160-9875-3acc8a556e72",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "95c1ac39-6107-4665-8410-04e93fc41186"
        },
        "item": {
          "id": "e9d43cbe-b2e8-4f35-ba48-84941d00cdbc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83b3ad91-610b-40ff-b979-79cb7915a5cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eacf38-60f3-4120-b259-ae22b5eca36d",
        "cursor": {
          "ref": "aa11e6fa-d427-48cc-b7b9-337ad1e8fc6c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "15d3ddaa-d01a-4c15-aaa0-e248a886dd61"
        },
        "item": {
          "id": "e6eacf38-60f3-4120-b259-ae22b5eca36d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0096dec0-3b9f-4154-a4ba-faf3ecf918a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3342bf-e58b-4630-8e43-fd8e99a42449",
        "cursor": {
          "ref": "4ddf269e-2dc4-4da8-8f22-0e1e5cd5af77",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d5ebb7b-4016-4b88-af99-388f4fce3513"
        },
        "item": {
          "id": "ee3342bf-e58b-4630-8e43-fd8e99a42449",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba3d6a34-3cc3-47bb-91e8-11c9fa5ad42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f9018c-22fd-45eb-8a1e-d78d731126e1",
        "cursor": {
          "ref": "f974ad6f-7972-44b7-b7e5-7db2eda6e75a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ccb085db-393b-4d89-adae-a4e80f762053"
        },
        "item": {
          "id": "f7f9018c-22fd-45eb-8a1e-d78d731126e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1633766f-0acb-4213-8a31-b6a40e859417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d78a9a-a27c-4e92-ab1c-9b18caeab3bb",
        "cursor": {
          "ref": "440379b2-b8ef-47a5-8d8b-2dcf95759860",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6034cd00-fce1-407e-9349-24747595a8d1"
        },
        "item": {
          "id": "43d78a9a-a27c-4e92-ab1c-9b18caeab3bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "36cf498f-c2e7-4512-b147-94ccf7b0f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b20e6df-af57-4acf-8009-80486c095a57",
        "cursor": {
          "ref": "16159488-557b-4110-b4ef-e180fb4edcb4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "41a73c60-48d4-4a35-92f3-874fba575f6f"
        },
        "item": {
          "id": "8b20e6df-af57-4acf-8009-80486c095a57",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75391da2-9501-4a1f-a1f1-a1541a45a1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d58f25-e792-4ba1-a5d7-00d2fee7e3cd",
        "cursor": {
          "ref": "ed07ddcc-74c5-4896-a649-cc7684c424d2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4966808c-5f56-49e4-9e5e-ece138d85a91"
        },
        "item": {
          "id": "53d58f25-e792-4ba1-a5d7-00d2fee7e3cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25836398-e6c6-4569-959b-3c8c6908b912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c6e37-ba9f-4b9e-945f-86f1fe0e7d65",
        "cursor": {
          "ref": "19ca0d46-e3f2-4e88-9d6d-5aa92fc4d079",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "abead0a2-9cf7-43df-99c7-919aa889b5e3"
        },
        "item": {
          "id": "a30c6e37-ba9f-4b9e-945f-86f1fe0e7d65",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26a36a6d-7ec8-48d4-9844-bceb45b3bd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190635d7-0c6b-424e-8e21-e67f6a41e064",
        "cursor": {
          "ref": "43584e4e-6afc-4916-beb0-fa7a0de17487",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f20b9b7a-23cc-45d1-a15e-8a292270b603"
        },
        "item": {
          "id": "190635d7-0c6b-424e-8e21-e67f6a41e064",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a7b8509-8965-47f9-a2ed-df1ae484b759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4442338f-4259-4b9d-92b2-2c4e3bdf9277",
        "cursor": {
          "ref": "98d2766b-54e8-4beb-8333-69dddfb5cb97",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b4aea33e-94b7-4b22-bb1d-48ab5fca7642"
        },
        "item": {
          "id": "4442338f-4259-4b9d-92b2-2c4e3bdf9277",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f1ef635-b9ea-4960-b206-cbf8af5fd890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c42b0-77bd-454c-8c51-a689fb68f45f",
        "cursor": {
          "ref": "a4dc1202-8372-423f-8fe9-199cb803ea6e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "83d8d59e-1fcf-49d6-af38-277dd6d74685"
        },
        "item": {
          "id": "c05c42b0-77bd-454c-8c51-a689fb68f45f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "126f6d2b-8ffd-42a7-8f9d-b4181bd6c240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e027a20c-3bdb-4c62-a467-0edade5f5cad",
        "cursor": {
          "ref": "1b6def74-9634-4ae7-90ce-c05047eefe58",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d34c34e1-76db-4318-84f3-e14dd0344df4"
        },
        "item": {
          "id": "e027a20c-3bdb-4c62-a467-0edade5f5cad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2fee9cc-e395-4164-8dd0-79dd099e782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf329e4-b6bb-40b7-b484-b27489fa6ed8",
        "cursor": {
          "ref": "3f4298be-f3de-4448-bef2-89f1bf4c6846",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4b3f33dc-7baa-4594-8af3-ec284cb2e476"
        },
        "item": {
          "id": "ddf329e4-b6bb-40b7-b484-b27489fa6ed8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e69bac60-24c3-42a0-9568-9b1456f678e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335eb447-a858-4c1f-9236-37d7f65a4809",
        "cursor": {
          "ref": "ddf7970d-1b9a-4217-994a-04ee44a82d17",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8741914c-8b56-4124-873d-e45d46fa524e"
        },
        "item": {
          "id": "335eb447-a858-4c1f-9236-37d7f65a4809",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d22e051c-6bdc-4c43-ba46-d2b5afae1886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c1406-3a0a-477e-be1a-0b1ed0942379",
        "cursor": {
          "ref": "5f38018f-89a4-42f2-a197-b10216e8d4ef",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "beb26352-38c6-400d-a0c1-697f3a492635"
        },
        "item": {
          "id": "7a0c1406-3a0a-477e-be1a-0b1ed0942379",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "524859bb-a552-4e44-a4f0-eed44490b7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628228d-2123-4de6-bb39-587733bdd3c0",
        "cursor": {
          "ref": "9be4dd20-debd-486b-b8fb-e91759e5da38",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23d833f2-689c-4d18-b1dd-4631e17160fc"
        },
        "item": {
          "id": "f628228d-2123-4de6-bb39-587733bdd3c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cbf80448-a77f-48f4-b9b2-7f185b4d15bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067636fe-7cc1-4b55-bb73-b2d8cea1bd7b",
        "cursor": {
          "ref": "8d61610e-c5a5-4eaf-9b0c-117048bba653",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6aeed09a-b934-49ff-8d02-eddafcbba8ac"
        },
        "item": {
          "id": "067636fe-7cc1-4b55-bb73-b2d8cea1bd7b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae2265d2-e87d-4baf-9cf5-fa2e1e48e679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a64b2b-e285-46f2-81b2-8982f46f14bf",
        "cursor": {
          "ref": "23c10ff4-1caf-4411-ba58-2ea6b0634b23",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8deba342-ae93-4c76-8c79-681a8ef71574"
        },
        "item": {
          "id": "90a64b2b-e285-46f2-81b2-8982f46f14bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "376b2ad6-d387-44fa-853a-886e084c6c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ae7b53-b4b4-41b2-aeae-40c98300d2ff",
        "cursor": {
          "ref": "97e3afe9-fb02-4dde-bb14-d4974dd6bc23",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "28a321fe-1c04-4934-8839-a196ba1e79fc"
        },
        "item": {
          "id": "14ae7b53-b4b4-41b2-aeae-40c98300d2ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8ad5b61-1a6a-4e22-a343-f65a7fe9664d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a67489c-7aba-44be-ba25-c75524511237",
        "cursor": {
          "ref": "17dd4fb4-aedc-4ccd-9b01-c84f4c0936e7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "458816b0-32eb-458c-bb0b-210f70a8011d"
        },
        "item": {
          "id": "0a67489c-7aba-44be-ba25-c75524511237",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f98176b-cce2-4131-9784-7385185c7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618b8eb5-963c-4284-a24a-e4f46bb1fa16",
        "cursor": {
          "ref": "4fb36359-f8d3-406a-8069-4e4284f498f7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c1ac707-455f-4c7d-9bfd-6c02e8ed216e"
        },
        "item": {
          "id": "618b8eb5-963c-4284-a24a-e4f46bb1fa16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8fde15a8-4527-449e-8d4c-89d191b95185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d7ee0d-5d13-42ad-9d8c-f03dfe03b8ed",
        "cursor": {
          "ref": "bc9e8859-a2b4-4889-b588-2f00b1ba304d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1ef3c0c9-bf9a-403a-bca9-dc60ad26d009"
        },
        "item": {
          "id": "f9d7ee0d-5d13-42ad-9d8c-f03dfe03b8ed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b09edbce-f69d-468f-85c8-722976f5c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba0ae1-8ad8-4edf-b4d2-9b2a537cd554",
        "cursor": {
          "ref": "bbbe6e8b-19c1-4be0-ac64-50138ba65c4e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e0460e91-961b-4244-95eb-045029309ac5"
        },
        "item": {
          "id": "ecba0ae1-8ad8-4edf-b4d2-9b2a537cd554",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b122095e-9290-44b3-9d84-7b484c9e690e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862434a0-f40c-4455-a52a-9ee251000062",
        "cursor": {
          "ref": "8c1b7b49-18b7-4f10-bca3-3b6f2926b1e6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "28ecfe31-565e-4d05-91f4-8de9c1e1da14"
        },
        "item": {
          "id": "862434a0-f40c-4455-a52a-9ee251000062",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c072b0a9-7cb2-466e-aa13-1ae7435a841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79201d29-f808-4a5e-ba33-c2afac1e7249",
        "cursor": {
          "ref": "1756c3ac-42e2-4fcd-a020-40d24d23df66",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4f6d28e3-c91a-41f1-8efe-0e46ed387905"
        },
        "item": {
          "id": "79201d29-f808-4a5e-ba33-c2afac1e7249",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a886049b-9f48-448c-a1be-3b006fab2d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6167536d-9a8f-4450-bed5-201d9265af3c",
        "cursor": {
          "ref": "150c692c-7762-495c-a98f-272b2d0d41cf",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58256137-cb2f-48b1-a95a-b9de2671f5de"
        },
        "item": {
          "id": "6167536d-9a8f-4450-bed5-201d9265af3c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "28f0aeb4-7d46-4da8-aef6-0e9f5613df92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed063a19-91ec-4de3-9dac-0b11b0355bb0",
        "cursor": {
          "ref": "b1f1228b-d368-4ab4-8880-5044994c1c17",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "28f388a2-e0c0-4172-9516-7a392d46ade9"
        },
        "item": {
          "id": "ed063a19-91ec-4de3-9dac-0b11b0355bb0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bc37c770-d2ae-45c1-9399-20368c5dc1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da53344e-a7b7-450b-9b33-f287e07a804c",
        "cursor": {
          "ref": "86b25912-45f6-4484-accf-ae9d1ae44438",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3e79663a-446a-4812-8766-7482f5e45f55"
        },
        "item": {
          "id": "da53344e-a7b7-450b-9b33-f287e07a804c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e373dd5b-8582-4789-b967-efa9036c7f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034510b3-c801-4928-8f67-6d4ddb3fd27c",
        "cursor": {
          "ref": "d2d184df-6038-4da6-aac8-a926449c5674",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d45bc41-1385-430d-bd9e-61f5225e1edb"
        },
        "item": {
          "id": "034510b3-c801-4928-8f67-6d4ddb3fd27c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "68627ac6-0c74-4ee8-b48e-66aa9e991938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828ec2a1-484f-4d95-889a-2343a615d6fd",
        "cursor": {
          "ref": "6b548be5-4365-4bf9-8041-12a49bfdd4bb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d6c8148-f98b-4355-b05b-bcd51015ef59"
        },
        "item": {
          "id": "828ec2a1-484f-4d95-889a-2343a615d6fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "302c3dab-fbe5-409f-a81e-5ab7a6b651fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb13827-1138-4f03-bd95-d3bf2c66f0cd",
        "cursor": {
          "ref": "56a9e103-fa25-4faf-86f0-895eed79ede6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25ddc274-bae2-450d-9d4e-30ea3cca21a9"
        },
        "item": {
          "id": "5bb13827-1138-4f03-bd95-d3bf2c66f0cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f29dcac2-66b0-4931-96f4-f6a3c562d06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c83d66b-96a7-449c-98d9-e6451f3c3891",
        "cursor": {
          "ref": "2eb1b5c0-1331-4c7a-be38-81bddbba5eb3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8c9dcd10-12c2-4275-8006-86b464a53ef8"
        },
        "item": {
          "id": "1c83d66b-96a7-449c-98d9-e6451f3c3891",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a5bbec60-400c-48d6-bd91-8f60975ecca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c64678-0eec-4c81-91ca-5d51cba605dc",
        "cursor": {
          "ref": "9b86b424-8ac3-4c79-b0be-4f62fb60a400",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c36f684-258e-4732-9207-f81e2f652ac9"
        },
        "item": {
          "id": "64c64678-0eec-4c81-91ca-5d51cba605dc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d54a6cb5-38fb-494d-bd70-9f205d54d87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871967e0-4bc5-4db6-9d5b-1f3a7183cc1f",
        "cursor": {
          "ref": "596c3935-802c-4b10-b278-b35d823cdf48",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e60b1d6a-f1bd-4b6c-9e7e-91251309207f"
        },
        "item": {
          "id": "871967e0-4bc5-4db6-9d5b-1f3a7183cc1f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb788258-dee9-48d7-81e2-0b86b2cbfe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36974007-fcf7-4479-bad5-10ad9a55f05c",
        "cursor": {
          "ref": "84df5656-573f-45d9-9b28-c73d6d066ff7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e3823246-aa28-4bbd-aaf0-4783ed048bbb"
        },
        "item": {
          "id": "36974007-fcf7-4479-bad5-10ad9a55f05c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "791d222a-74ac-4223-8c04-7db4989d1df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c04680-caa7-40b0-9ee1-17fdc88c7885",
        "cursor": {
          "ref": "a0f47e6d-e8b1-4aa4-b6de-66c03957f70f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bb250f22-3d2b-49ea-8583-fab277b29f40"
        },
        "item": {
          "id": "d6c04680-caa7-40b0-9ee1-17fdc88c7885",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0606325e-2ac4-42bc-8ea4-a91841fe392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4108a6-fead-44f8-b4fe-5acfab1126e5",
        "cursor": {
          "ref": "355a8c45-e09e-4060-9e3f-7623958aa12d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "86de138b-e296-49a1-9847-5f26b12358af"
        },
        "item": {
          "id": "cb4108a6-fead-44f8-b4fe-5acfab1126e5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "18693f9f-31e5-4d4f-b84a-a8d04948a039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475453c-4bb8-4a11-a807-e3ff6410ef54",
        "cursor": {
          "ref": "6544dd83-bf43-4b7f-8466-a50413138e97",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2637f723-d99e-49a9-afac-23a61a7fe051"
        },
        "item": {
          "id": "4475453c-4bb8-4a11-a807-e3ff6410ef54",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a10c37c8-a67c-456d-8dc1-e3bba97b514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea025f-0655-48c0-a4b4-2df708b39786",
        "cursor": {
          "ref": "89598f8e-6f1b-4f06-a2ae-ab8ab6f8f5ba",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "26d38854-de11-4666-9f68-ff9bc76d5085"
        },
        "item": {
          "id": "37ea025f-0655-48c0-a4b4-2df708b39786",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05853d80-44dd-491f-aa9b-212e6f4b3570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5995b8-d6f7-4f5c-b5bd-081567121c83",
        "cursor": {
          "ref": "225273cc-5b7e-4158-8ce1-b39c76bc0fb7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5c865bc2-a057-4de7-8260-2751f26f47b7"
        },
        "item": {
          "id": "fd5995b8-d6f7-4f5c-b5bd-081567121c83",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "96face46-25b1-4929-8ae1-1d6a726d3826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2817cce5-c6e4-4ee6-b1e6-9d9cfcbf4220",
        "cursor": {
          "ref": "cf004ad7-3508-49ae-a323-c826bf40dde2",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "84db5b04-d8c0-487b-b919-945a38a18c7b"
        },
        "item": {
          "id": "2817cce5-c6e4-4ee6-b1e6-9d9cfcbf4220",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e7a3f16-0fc0-493c-b008-3482e415a8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32306532-2f2f-413d-a90d-d4ded7ddfbc7",
        "cursor": {
          "ref": "649d3557-5241-4771-8c8c-f28b49821955",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6c83a1c4-4da4-4c33-ace5-d6715f5cc2fe"
        },
        "item": {
          "id": "32306532-2f2f-413d-a90d-d4ded7ddfbc7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "91944c68-93e3-451a-932c-88113b247149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5c71f-cb1a-4cf0-bfb2-8fbc07381c63",
        "cursor": {
          "ref": "01f0d9f6-713a-472c-8b19-f8b4596fd32e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "45a6b3f9-976d-41e0-abf8-df5839dfdee8"
        },
        "item": {
          "id": "cfe5c71f-cb1a-4cf0-bfb2-8fbc07381c63",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cdd41ae9-d502-4dc5-9a83-b21051df86cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7727bc-488d-4f1f-81aa-a748edd2e470",
        "cursor": {
          "ref": "04a2cbee-cb13-40b2-8430-4999035c0ae7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6bca162a-5fc4-4dd5-ad8c-e54c71608d66"
        },
        "item": {
          "id": "eb7727bc-488d-4f1f-81aa-a748edd2e470",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3241d7e2-f158-47d3-8465-57569ce7b039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a34d9e-a4e7-41a8-a5e5-f83efa157a4a",
        "cursor": {
          "ref": "f28863bd-9e8f-4814-b2b0-bc8b77e7dcc5",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47d7dbed-b4ed-436b-a27f-50d4adb629f8"
        },
        "item": {
          "id": "41a34d9e-a4e7-41a8-a5e5-f83efa157a4a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2e6f9f1a-4a43-437a-8b09-483d9456750c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf09900-c9f5-4427-a9c0-1c1edcf787bb",
        "cursor": {
          "ref": "81643a84-e231-424a-b2b5-403c97334369",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "96ed8922-fadc-45bd-85c9-fe1bb9e4a53e"
        },
        "item": {
          "id": "baf09900-c9f5-4427-a9c0-1c1edcf787bb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3aa5a92e-bb79-4054-aaad-755db974b45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3caf84-a6d9-4752-8492-eca3ccce4210",
        "cursor": {
          "ref": "90b71440-e569-4092-9eeb-c635e3aaaace",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "66f0126d-db1c-4efd-a835-d697d3ccc1af"
        },
        "item": {
          "id": "ed3caf84-a6d9-4752-8492-eca3ccce4210",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10279852-d2c4-4a2e-9c67-c59b4ec21756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1923bda-f924-4e63-b770-544f58c46e17",
        "cursor": {
          "ref": "2ae903e2-c484-4e1e-8aaf-d3b7111bcfe9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b77eb15-6671-4329-a357-7bf32f35ed29"
        },
        "item": {
          "id": "c1923bda-f924-4e63-b770-544f58c46e17",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "09f30177-d46d-45de-a07f-2bb1985077af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad4ec6d-c90c-4689-b56e-9a01e64d69d3",
        "cursor": {
          "ref": "f9537176-8d34-4f86-98c5-d863866270e0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1ad02485-763f-44d4-852a-d41b9133194e"
        },
        "item": {
          "id": "4ad4ec6d-c90c-4689-b56e-9a01e64d69d3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bcd9710f-38b2-4af2-9a5c-a8fbc7b28e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79e338b-00ae-4595-a092-df8b74e963c9",
        "cursor": {
          "ref": "83fc2c16-234a-4b0f-9492-770f606b981a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8d7af29e-b1d1-4649-a928-1c737298353c"
        },
        "item": {
          "id": "c79e338b-00ae-4595-a092-df8b74e963c9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "92259dda-1a69-4317-86a2-e0e090679036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e9bf4e-11af-483b-9778-8d411ff516e3",
        "cursor": {
          "ref": "511b8814-7698-486e-9f56-6694c87760d4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "86efe0e9-1a7e-4b69-9f93-01fd507619e7"
        },
        "item": {
          "id": "d3e9bf4e-11af-483b-9778-8d411ff516e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83db13f4-5ac7-4f90-ab2b-21c29c9b279a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099907da-a466-485f-81e7-85511b68e5ad",
        "cursor": {
          "ref": "7b8dc2ac-8205-4487-8e2f-805202e8c540",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c97f6cd5-1bfb-422e-854a-4c879291b41b"
        },
        "item": {
          "id": "099907da-a466-485f-81e7-85511b68e5ad",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dd66748e-50a9-4e3e-8732-8130953dd08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dddba3d-ac83-4572-8233-cbda440c386f",
        "cursor": {
          "ref": "ea0b4aea-d82a-44c5-bbd3-b66f7a7a9a9b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4cbb493c-c121-4a80-980f-29d6f6ecbc09"
        },
        "item": {
          "id": "5dddba3d-ac83-4572-8233-cbda440c386f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "93dcb9cd-81e5-4159-9289-707eaecf05ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2a4f99-bf1a-4434-92c8-912d6b7e6f99",
        "cursor": {
          "ref": "eb02e4e8-7aac-4781-85e1-ce88281bacee",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9e17754b-beae-4388-8e92-9595f1f4149d"
        },
        "item": {
          "id": "db2a4f99-bf1a-4434-92c8-912d6b7e6f99",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2efe104f-889c-49cf-a154-9b0153d1f15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e459e8ce-4367-4e85-8938-b817424c8d7c",
        "cursor": {
          "ref": "f08d3914-61c7-4d7e-bb3d-20975626a245",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b6411dd1-b7ab-4052-9a8c-9cfdcdc924ec"
        },
        "item": {
          "id": "e459e8ce-4367-4e85-8938-b817424c8d7c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c06bf45f-f910-46d1-8eb9-e13f56b15473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c3e196-8bb5-472d-a82e-427177c219f2",
        "cursor": {
          "ref": "312feb4c-3d27-4ed7-8854-7ad826158670",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "85b7fd5a-ea8a-4b99-ad55-92d3137c4666"
        },
        "item": {
          "id": "70c3e196-8bb5-472d-a82e-427177c219f2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ad02fa1c-0c71-4828-b4cc-7d1160124ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fb36bd-174e-4746-bf5e-9d1209c84ef7",
        "cursor": {
          "ref": "94810dfe-3d84-4033-a1fd-5244557ea19c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6af6bcbf-8a6a-40cb-8f01-382f063cf82f"
        },
        "item": {
          "id": "78fb36bd-174e-4746-bf5e-9d1209c84ef7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e59c0aec-748f-4668-bc10-a6150295a391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c50c8c9-2f37-4739-befb-3687d4f198b7",
        "cursor": {
          "ref": "c903030d-cc96-4641-a876-350433ee1364",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7bd6c250-3fa5-4a36-99f8-af61309a3a02"
        },
        "item": {
          "id": "7c50c8c9-2f37-4739-befb-3687d4f198b7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4d4e1a4-b7c2-41af-81a0-c87b1a4a1de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9815b6e7-db3d-49bb-b9fe-7a54aed6e6ff",
        "cursor": {
          "ref": "ecdd960d-be0d-409a-bdb2-2cfd9c7c9c3d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "27d1c55e-87e9-42d3-8915-85473eacb53b"
        },
        "item": {
          "id": "9815b6e7-db3d-49bb-b9fe-7a54aed6e6ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f6f85dfb-d500-4b72-9615-d0870704b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd9975-747f-4631-9594-9b6b7bcfcf32",
        "cursor": {
          "ref": "5b242a9c-19b4-4337-a512-1248907affb2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "72bb811e-81d5-4d01-ae50-21da018fc432"
        },
        "item": {
          "id": "19bd9975-747f-4631-9594-9b6b7bcfcf32",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6fee35e5-02ab-41b6-8be1-6a94afe05e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7eced3-1e6d-4fc1-aa2f-2f21a4d5ef39",
        "cursor": {
          "ref": "8acef0df-8ee1-4644-bff3-d13fbea6d0e8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6ec80e5-04e1-4641-843c-049e495cb037"
        },
        "item": {
          "id": "df7eced3-1e6d-4fc1-aa2f-2f21a4d5ef39",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b0f759a3-b5af-4863-902c-60a0ba1e56fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a73d5-e673-41c4-873c-7b6af763afad",
        "cursor": {
          "ref": "deff2531-4738-4cae-a055-04c5c9268349",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5a642ec-ee26-43ac-a981-13a465975f72"
        },
        "item": {
          "id": "4d0a73d5-e673-41c4-873c-7b6af763afad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "15ce01fe-257a-43e6-9650-ff09119df810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e48fc8-c8db-49dc-8a09-88f60eadb76c",
        "cursor": {
          "ref": "16bf8a7c-f6ba-4893-b393-2195e65e4389",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "be67b3ba-97a2-426b-b83b-4470b2fb6ba6"
        },
        "item": {
          "id": "a3e48fc8-c8db-49dc-8a09-88f60eadb76c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2ddce9f-989a-446c-b7af-d5c901fc6013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d7277a-d565-433b-9872-6b0b01360a27",
        "cursor": {
          "ref": "cdd6779b-b8c6-49b8-a811-2680304a4bd3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5aa477bc-5e41-4e85-894f-ecad8e89091f"
        },
        "item": {
          "id": "d9d7277a-d565-433b-9872-6b0b01360a27",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "18e4fb6d-f227-4502-bc61-63040a086fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fb7e04-6a04-4e9b-a5e2-09e39712d72b",
        "cursor": {
          "ref": "e8c11046-4979-4548-8598-7818b703f433",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "31ed0a46-5b6e-45bc-afd8-deb9aa602d9a"
        },
        "item": {
          "id": "98fb7e04-6a04-4e9b-a5e2-09e39712d72b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18e85cb4-e8b3-455b-9909-e4ae4015637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649bc515-89ea-464a-8a9a-3168b319728b",
        "cursor": {
          "ref": "62df7fad-c907-4579-bcf7-5e9bb9c70d9e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b3b0902f-5162-49e0-94c5-a8112e1d01dc"
        },
        "item": {
          "id": "649bc515-89ea-464a-8a9a-3168b319728b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "754456ac-949e-40d5-abcc-383c4dafac78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b2affe-6452-4c83-9dd3-6ea855e7125a",
        "cursor": {
          "ref": "5e7e07eb-3e86-40bc-a20c-cd0f9da155ed",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "44054d71-0f8a-47b4-ae90-1fbd77791e39"
        },
        "item": {
          "id": "c0b2affe-6452-4c83-9dd3-6ea855e7125a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "40398af3-c1ca-4880-9385-8652f7f586f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e795d216-5a00-45ee-b309-434b48090c49",
        "cursor": {
          "ref": "438cac2c-9753-44e6-afc8-f00a4a79a0a0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2a33a723-4533-410c-a55b-421ddc74ff7c"
        },
        "item": {
          "id": "e795d216-5a00-45ee-b309-434b48090c49",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8b20c1fc-f098-4d43-89db-5d7eb74d3dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa6d3c-67c6-4477-8c90-974d44d4acf4",
        "cursor": {
          "ref": "b69c8379-f445-4b87-988c-261ce7dd515c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c10ff0c0-f0e6-446b-ae1f-d14db46f7ce8"
        },
        "item": {
          "id": "f3fa6d3c-67c6-4477-8c90-974d44d4acf4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "040bc0cb-1e7b-4705-b204-5e58430606e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc13484e-8f1b-40d2-bdf3-0798c91c938c",
        "cursor": {
          "ref": "314396e5-fd4e-4208-9be4-6c2fbffe733c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "326b2a8a-e363-48ea-972f-9cd77328c1fc"
        },
        "item": {
          "id": "dc13484e-8f1b-40d2-bdf3-0798c91c938c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1d756f7-d5e2-4fa0-8e06-4b5a3e3f2635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35644454-f282-4c1b-9ccb-4f2256b3881f",
        "cursor": {
          "ref": "e8c5ff58-4a1a-4c33-b6b8-259b940b86ee",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ecc57f20-1a31-4eb5-9bec-808570b6bb9b"
        },
        "item": {
          "id": "35644454-f282-4c1b-9ccb-4f2256b3881f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "00c686c1-26e6-48b3-96e7-1e2d7c2853f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde55076-26cd-454d-937c-52128f16d80f",
        "cursor": {
          "ref": "798706aa-1b0f-4307-98f7-2adf3b7bc081",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "663d0f21-186d-4d32-bc60-55321bb524ad"
        },
        "item": {
          "id": "fde55076-26cd-454d-937c-52128f16d80f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c6d59ddc-5d76-4ad8-a486-5bb5535a2494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3853592-e32f-4965-a163-3df4dae2d735",
        "cursor": {
          "ref": "c2955a01-f3a8-475a-9e16-10f3867b326b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0942394c-590e-40a0-bd1d-0cf1c840dbbd"
        },
        "item": {
          "id": "d3853592-e32f-4965-a163-3df4dae2d735",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3a809ced-94a8-4ea9-9b5e-ea1d41e0c0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9420154-505d-447b-aa4d-010829341354",
        "cursor": {
          "ref": "1950f856-635f-4291-a3f9-12711b7f3e42",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c77b7576-ede8-4133-a020-d4d7375ec71e"
        },
        "item": {
          "id": "d9420154-505d-447b-aa4d-010829341354",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "22546c50-2c17-455d-8100-3f308d639c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d5dfd8-64f4-4610-988d-66c3892bb01b",
        "cursor": {
          "ref": "a8ab9e1c-bb5a-4b4b-817e-cde14dfe7f35",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8dbf4773-500f-436a-aa19-e67eb22d20c8"
        },
        "item": {
          "id": "a1d5dfd8-64f4-4610-988d-66c3892bb01b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "186d4d75-f90f-4883-9ada-6e804e713ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a6197-9676-43c3-a833-b622b0b483c6",
        "cursor": {
          "ref": "e0a7d0ef-603a-4246-9b26-ad956cd17e33",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "71f9846b-b9b9-461f-84fd-73d92c4fc03d"
        },
        "item": {
          "id": "417a6197-9676-43c3-a833-b622b0b483c6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aa07bf20-9328-4ec4-b609-4b3f4807869f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741fdb36-2b21-4abd-84cb-2f1316f25f40",
        "cursor": {
          "ref": "b0c7979a-10a5-44ce-af81-402b31827834",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cca3981-3f4b-4101-a14a-ca6b22dd335e"
        },
        "item": {
          "id": "741fdb36-2b21-4abd-84cb-2f1316f25f40",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2ca42354-8828-4045-abe1-0784dafc7aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2176966d-a3e9-4e07-99a7-0dd648f8d6f9",
        "cursor": {
          "ref": "53627f67-b7c0-4405-842d-022dde25bf4d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5cdb5836-b8e9-4d2d-b7b0-7dcd988b154f"
        },
        "item": {
          "id": "2176966d-a3e9-4e07-99a7-0dd648f8d6f9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1abf3e8d-e061-4bb0-81fd-f2349a2baa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e94e10-7569-41e0-9d42-00a537dcbbf2",
        "cursor": {
          "ref": "fd187125-75d4-4b04-afb6-4ca6af0e2eb7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e5c430ff-f823-4ff7-86fe-18f68ee6c6bb"
        },
        "item": {
          "id": "c3e94e10-7569-41e0-9d42-00a537dcbbf2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "95996dd2-3fc3-4e54-81a6-31f0bdeb11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1425a4b8-abcb-4bf2-a559-55fad2126410",
        "cursor": {
          "ref": "6c8dbe4d-e268-4995-bc26-124659c7488f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "efd7970a-a929-427b-8387-71e4157ed9de"
        },
        "item": {
          "id": "1425a4b8-abcb-4bf2-a559-55fad2126410",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4f6d77e3-278c-497f-8e04-09a713860a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d640c0-61f3-470d-909d-a0005138e29a",
        "cursor": {
          "ref": "170fe276-5f30-4c11-a238-c87a6ae7f5e9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cdf5288-e78a-4423-b028-fd682ca9be29"
        },
        "item": {
          "id": "92d640c0-61f3-470d-909d-a0005138e29a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a4477b7-054e-49e3-b8ff-54fd143a28d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c351458-09c0-494f-bff2-9b7b80f5de9e",
        "cursor": {
          "ref": "50b3cf1f-033a-4cb1-ad8c-011fb40c35c0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8b23d495-3e1f-4017-84a1-54e423e340f5"
        },
        "item": {
          "id": "8c351458-09c0-494f-bff2-9b7b80f5de9e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bd986258-7a43-46d6-8979-3398b37bb207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3802630-6b0f-49dc-a4d2-fc33ea3e29fc",
        "cursor": {
          "ref": "cae6b4a0-c515-4115-8b67-36b857db081d",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "024b8748-e9c1-4f4a-8ca3-b37f286d3904"
        },
        "item": {
          "id": "e3802630-6b0f-49dc-a4d2-fc33ea3e29fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99bbe568-ad5e-447c-86d0-4457f03488a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500b896f-f245-4bae-995f-ac240dc9a97f",
        "cursor": {
          "ref": "3276e84d-f3bb-43bc-b4d0-6f5da8f7e901",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58c97efb-d8f0-4862-b9e1-1703b6a7c915"
        },
        "item": {
          "id": "500b896f-f245-4bae-995f-ac240dc9a97f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ee5b62c1-50c7-4933-977b-75ee108c7a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20eddd8-91f4-4af3-b65b-e067db40fe17",
        "cursor": {
          "ref": "7139f668-0d32-4cb0-943c-2f83ac9c56dc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "122f4521-0529-4ad8-9297-62ea985b30d7"
        },
        "item": {
          "id": "d20eddd8-91f4-4af3-b65b-e067db40fe17",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "160cfb1b-6d99-46a0-a8de-4def059540ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58066f2-57fa-4f3d-a465-fd0f2bede300",
        "cursor": {
          "ref": "6e35c19e-e9f1-4461-8f60-72a2c424fdd9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cdd2a433-28db-409d-8e7e-375c9bc6cf88"
        },
        "item": {
          "id": "c58066f2-57fa-4f3d-a465-fd0f2bede300",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2adb429f-2c39-4444-bdc6-dd66a3105b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799e8fdb-ad6a-420c-acdb-943bcb16b172",
        "cursor": {
          "ref": "09acd65b-ae00-4c23-a8cc-bb1455f0c0b0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b63009a6-78b1-4a3d-b768-5246d4b52e7b"
        },
        "item": {
          "id": "799e8fdb-ad6a-420c-acdb-943bcb16b172",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f862116-2b6d-419e-a60b-b6ef6e40b37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b4db9f-bbc0-4f99-8a28-4a5033718114",
        "cursor": {
          "ref": "be2e16a6-34c0-4792-9538-0037d94132de",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f7c7a1a5-34ac-42cc-baf5-6a07f2ed9353"
        },
        "item": {
          "id": "f1b4db9f-bbc0-4f99-8a28-4a5033718114",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4b922ab8-b7a1-4f7e-b808-26506a237a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8356061f-57e7-4414-bda7-853155a20a3b",
        "cursor": {
          "ref": "1e2b7330-92b5-453c-9dff-4a95d5c80a1b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3a2f739e-9351-4c5c-b41d-ea04b21f2091"
        },
        "item": {
          "id": "8356061f-57e7-4414-bda7-853155a20a3b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c96eb245-d6f0-4937-8a77-0062421ddedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5154984-d0d9-4f8c-9eaf-9f4941e1d267",
        "cursor": {
          "ref": "986f9888-3bd0-4786-9b8b-4efdcd247fbe",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fb4cd91b-4d28-4fd5-93d4-a6d4d6f1d282"
        },
        "item": {
          "id": "c5154984-d0d9-4f8c-9eaf-9f4941e1d267",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d6a09f7-4104-4cdb-a152-b1fd3bff15ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a3e2bf-e5c0-41f7-8257-579687160c75",
        "cursor": {
          "ref": "032f70fd-fca1-4c42-bc40-99baebce89c1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93158452-9069-4bda-8d02-e32edde77931"
        },
        "item": {
          "id": "a3a3e2bf-e5c0-41f7-8257-579687160c75",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d660a8ac-9013-4d81-a983-92686a60819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cee6c3-eaf0-42cb-be33-47e7f0fd18a2",
        "cursor": {
          "ref": "702ab19b-1d3a-45b8-9267-e962f82d06fa",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6d85e3ef-5adc-42fc-8c7c-2a4dac42a89a"
        },
        "item": {
          "id": "42cee6c3-eaf0-42cb-be33-47e7f0fd18a2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "37c251ce-fbc0-41a2-8f71-ef59d3fa6b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412cacd7-415d-44c0-99fd-b1fb11fba48f",
        "cursor": {
          "ref": "cd0644bd-76dc-45e9-b4e7-fe8a9d0e47b0",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "007ce235-d5a2-4967-8fda-e444647f7d02"
        },
        "item": {
          "id": "412cacd7-415d-44c0-99fd-b1fb11fba48f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a97ff59c-e4c0-4ef9-8d4b-f04ba8429bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04bf4a5-cccb-40bc-959c-61bd7650656b",
        "cursor": {
          "ref": "6a69e2d1-ed1c-4f0d-b04b-c531bbb86c23",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d7cac10d-18ae-47b9-97bc-f5409c91e701"
        },
        "item": {
          "id": "e04bf4a5-cccb-40bc-959c-61bd7650656b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24611526-59d2-4012-88b1-cdbaf6d1aae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a845479c-89a0-44fd-9e14-f559f6fe65f8",
        "cursor": {
          "ref": "f069fa64-76e5-4e9b-b1a7-e71dbff1a290",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "92a79139-7175-4094-a68e-70785d543efe"
        },
        "item": {
          "id": "a845479c-89a0-44fd-9e14-f559f6fe65f8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16fa0bef-6071-4eb0-89bf-bab8b87410c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc177215-61e2-4275-9690-d85e7d5fee20",
        "cursor": {
          "ref": "5824453c-21e4-41d1-9cad-42478e52cf7a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0380016-6506-4495-9161-d07bf7583d5b"
        },
        "item": {
          "id": "fc177215-61e2-4275-9690-d85e7d5fee20",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dcf6a39c-7d81-4ddc-87e6-f5402e218596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b9a77-d2f3-4e9c-8d79-1ce463f31bd1",
        "cursor": {
          "ref": "bac01ef4-67c2-4022-8c49-7d317e735ea0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbb48108-a1b6-425a-9474-c1a6bf837d4b"
        },
        "item": {
          "id": "2b7b9a77-d2f3-4e9c-8d79-1ce463f31bd1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9c5ba270-1c84-432f-9998-7ddb2783cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08186298-0224-479b-a960-a7c36ef61ffe",
        "cursor": {
          "ref": "d67e3019-fd65-4daf-9ef6-d49678b71263",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "44c545c8-1154-400c-a5ca-0ee58a05efcf"
        },
        "item": {
          "id": "08186298-0224-479b-a960-a7c36ef61ffe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bb9b8095-2185-45f0-8c23-42fc7b69bc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32652177-7646-48e1-92f6-233e5a7358d7",
        "cursor": {
          "ref": "113ed8e4-6da8-4ca0-abaa-860bd870d584",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9378223c-f27a-464a-9445-94aa951a346b"
        },
        "item": {
          "id": "32652177-7646-48e1-92f6-233e5a7358d7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7dabbeed-3c8c-4e30-b545-678ba3f3dad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bf08fe-1785-4f89-88dc-0f4101eb3676",
        "cursor": {
          "ref": "6cff59d8-1c7a-4b46-aca0-6c1f1cefe362",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e87c207-86dc-4688-9dc8-af952adb946a"
        },
        "item": {
          "id": "b9bf08fe-1785-4f89-88dc-0f4101eb3676",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9b715ab8-b404-46ce-9eed-894ccc5662d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad4953b-ba63-457e-95f8-c047b8186413",
        "cursor": {
          "ref": "d4e16986-695c-4bab-b8b3-3c92621231a1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f620021f-71f4-4b7f-ab39-d1390cb8bafb"
        },
        "item": {
          "id": "5ad4953b-ba63-457e-95f8-c047b8186413",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e7adaf23-b324-4245-820e-cee2dbc7cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fa85ee-1727-49c5-b8c6-a1664fa45763",
        "cursor": {
          "ref": "adfe54be-205c-4884-8658-672cd97ba05d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "63ab5599-093b-4ca0-bc43-a6af44eb23a8"
        },
        "item": {
          "id": "69fa85ee-1727-49c5-b8c6-a1664fa45763",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ddeaf5a2-a230-4023-8db1-ca2540c7f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5576dde5-a13c-48a7-895a-1a48618c903a",
        "cursor": {
          "ref": "b383af5f-58c5-43c8-962f-e137b72c3acf",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a8ac0693-398c-409d-9fcc-77ff52e75b95"
        },
        "item": {
          "id": "5576dde5-a13c-48a7-895a-1a48618c903a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "32da5f15-f7bc-456b-89de-d0fb5d96b105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98776ae1-a640-4bea-9e53-282328d01953",
        "cursor": {
          "ref": "6b69fc54-14ef-4ed6-9f42-94c87a2bdac7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5b3ede07-2b68-4cbc-aa70-54227dacaac9"
        },
        "item": {
          "id": "98776ae1-a640-4bea-9e53-282328d01953",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ae9b8c94-eb05-437f-9482-06b80481b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de69a44c-001a-4b95-9199-83a302bcb314",
        "cursor": {
          "ref": "8b81b7e7-3fba-47f9-95c6-aacf45595ca5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "df181331-1608-4c92-b22b-8aaff7c4c5ec"
        },
        "item": {
          "id": "de69a44c-001a-4b95-9199-83a302bcb314",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fb859453-db27-4ef4-b72f-a24a9ca099f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a53192c-ae6a-42b9-841b-a65c57bb3a26",
        "cursor": {
          "ref": "d1a74da9-9532-4bce-a873-1ca0b64011ac",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2067bc84-6ddf-49c7-9470-ee7e45058140"
        },
        "item": {
          "id": "1a53192c-ae6a-42b9-841b-a65c57bb3a26",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0aac2731-7493-4e97-a1fc-e465853f8a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000d7b40-6549-4c35-9671-f5f922bd6bed",
        "cursor": {
          "ref": "43dbc876-a452-4d3e-85d0-114a86dfde76",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "410d373c-5b45-4fb3-9d5c-1ac2a4e96b11"
        },
        "item": {
          "id": "000d7b40-6549-4c35-9671-f5f922bd6bed",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8a369f56-8d98-47c1-8a12-bcf364dbf9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec53a2-beac-412e-8968-8fb5b36b953d",
        "cursor": {
          "ref": "9164ac85-6bf3-4e3e-91e1-c36aae73e53a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a03b29bd-d8ba-41eb-9600-8ca1a4e5f889"
        },
        "item": {
          "id": "7cec53a2-beac-412e-8968-8fb5b36b953d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "305591ed-5b7b-447b-81ba-91f6eef81c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb24486-0dd3-4cc8-b51d-06185b399f5b",
        "cursor": {
          "ref": "f8514b29-5594-45ff-af77-2662d311200d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2b11dd69-31f6-40ad-972a-632af2706436"
        },
        "item": {
          "id": "afb24486-0dd3-4cc8-b51d-06185b399f5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cbf2ac9c-7211-4ff8-a015-239029f88d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fbfbd7-1bef-4eb4-80e5-5d28c792289f",
        "cursor": {
          "ref": "eebc1405-c0f7-4bb9-92b8-81f9bb421408",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d7e31540-3af5-45d6-851e-3b5105a0a771"
        },
        "item": {
          "id": "f0fbfbd7-1bef-4eb4-80e5-5d28c792289f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4a30c798-5e1b-4b9c-9986-d09f034a6ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc055d7d-4023-4fc2-a70d-c516e843272e",
        "cursor": {
          "ref": "b4139b21-ea6b-48b7-83c8-dbafcab2a5fb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b838550d-0de1-4a64-a726-f865ff3491de"
        },
        "item": {
          "id": "dc055d7d-4023-4fc2-a70d-c516e843272e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0ee8bb29-83eb-4b13-b505-28a884985fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf113d-1b33-441a-b3a7-d703eb2c5905",
        "cursor": {
          "ref": "fb6015ea-c5b9-43c1-b75a-7bb03e80d31c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3aaf151d-cffb-4c57-8d1c-700f230dd227"
        },
        "item": {
          "id": "1bcf113d-1b33-441a-b3a7-d703eb2c5905",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "340fd4cf-99ac-4d13-9dbc-3602c744bb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de0beb4-98ac-4e9f-b748-c717ea1adf6e",
        "cursor": {
          "ref": "2dcba246-0db9-4a41-8193-c6ac901130a2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4d4cb5cd-4797-474c-97e8-c71b83c7edaa"
        },
        "item": {
          "id": "1de0beb4-98ac-4e9f-b748-c717ea1adf6e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "554f8380-dc9a-4df2-a7b6-0a1cd06fb41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350df0b1-207d-456b-a9dc-749b059daa97",
        "cursor": {
          "ref": "6ed725b3-b541-4708-a9fc-f71b79bd353e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d6629cfd-e7a9-426d-8399-8c19c1f016a0"
        },
        "item": {
          "id": "350df0b1-207d-456b-a9dc-749b059daa97",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "884d0c09-68ae-46f4-b006-3e68613ba378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b677b-8613-4c99-b2dd-49a9791fd51d",
        "cursor": {
          "ref": "0412f76e-9fe7-408f-a05a-9f92a8956715",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2c859ddf-b57b-445a-8e2d-5e0159a9857f"
        },
        "item": {
          "id": "818b677b-8613-4c99-b2dd-49a9791fd51d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f348aa66-03e1-4f1f-bea2-d43ba6987369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a18240-5ea2-4c74-93c2-d4be9b11c7ca",
        "cursor": {
          "ref": "a7802ea1-159a-45c5-8bee-baeddbfd82e7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8baea64b-45c7-42d5-8c62-84ecf5382344"
        },
        "item": {
          "id": "03a18240-5ea2-4c74-93c2-d4be9b11c7ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "866ad4a6-1bb0-4e48-8e36-bf9327898fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c57ef95-c34d-4547-a1bc-87ff073abdf0",
        "cursor": {
          "ref": "02e58192-0225-4f24-a2d8-9ead7a41402f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "758dd20a-7088-4c9a-8549-4fb82e99e761"
        },
        "item": {
          "id": "9c57ef95-c34d-4547-a1bc-87ff073abdf0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b2dd3cb-c744-4566-8760-df89af831a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61108f9-415e-4645-aca4-a528470b8d16",
        "cursor": {
          "ref": "5d242949-2705-488e-a0bf-e2eae4f1b36b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b1dd6fb2-0599-4a02-a740-aeae173b9923"
        },
        "item": {
          "id": "d61108f9-415e-4645-aca4-a528470b8d16",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8469dc2-853b-481b-bc5b-519fa3ceef21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f9b42-9a32-4253-ba02-e74cd68bc25d",
        "cursor": {
          "ref": "ce30ca9a-1c58-4ab2-9ebc-efcd990f64f0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d2db07d7-564d-409e-aa07-c1a2b40cd095"
        },
        "item": {
          "id": "d37f9b42-9a32-4253-ba02-e74cd68bc25d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "03c6e31a-a41e-4a37-90cd-56f39634e27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f7e24-103e-4e5a-bce4-0ff3c86565f2",
        "cursor": {
          "ref": "4663d540-3dbe-484d-887a-d3e7800073e6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2620b3c6-aef9-4e5b-818a-920988e3b8a5"
        },
        "item": {
          "id": "875f7e24-103e-4e5a-bce4-0ff3c86565f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1c6d69c9-0968-42f5-87e2-803251237246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b8f28f-856c-4919-a373-cdec88e90723",
        "cursor": {
          "ref": "820cf378-6a1d-4e1b-9d71-59e14b08c85d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3f0d1edf-fd0e-49a5-b666-8ac5480a4146"
        },
        "item": {
          "id": "65b8f28f-856c-4919-a373-cdec88e90723",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f3e74a91-30b5-4423-9e38-53a616f331b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87c2918-ddc7-4e4c-b4fe-bed047e0d0fb",
        "cursor": {
          "ref": "304ce641-9c57-4b49-af8a-e05d83cbadd1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "65855f2c-77dc-4b7e-b10b-9fdef9f0a272"
        },
        "item": {
          "id": "d87c2918-ddc7-4e4c-b4fe-bed047e0d0fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d39e9cc9-f4e1-49e6-b72b-ae26a58ee0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab68507a-0077-4c56-a219-911076b9b90d",
        "cursor": {
          "ref": "cb472e0e-66e1-4275-93c4-a605c0322e19",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "aa3dd863-4dba-49bd-8736-8ffd21c252fa"
        },
        "item": {
          "id": "ab68507a-0077-4c56-a219-911076b9b90d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a6c10309-113d-407c-b231-1bb1b6b94471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3da70b-7e4c-4d52-8001-f38b76b2f5f0",
        "cursor": {
          "ref": "a7a8a191-410b-4d8c-a0ee-ad7e6a23ea60",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "962bbc57-e66e-45e7-8add-3007976d1c08"
        },
        "item": {
          "id": "7c3da70b-7e4c-4d52-8001-f38b76b2f5f0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "36c03bd9-b378-4ad0-bdea-4e2396a6b425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e208ef10-aa9b-4e96-8845-76b2b994dc38",
        "cursor": {
          "ref": "499b58a9-ca35-4f88-84f6-504678da270a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "59787dc8-ac6d-4925-ab96-6abdde15b502"
        },
        "item": {
          "id": "e208ef10-aa9b-4e96-8845-76b2b994dc38",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fcccb912-130b-431e-bdb5-1bef42efcd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385f6623-b9a6-421c-bf1d-b05d8e7a977c",
        "cursor": {
          "ref": "105976ee-891d-46df-a41f-19005d119179",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6e9837d4-1ff9-42c1-84db-894d103b90ca"
        },
        "item": {
          "id": "385f6623-b9a6-421c-bf1d-b05d8e7a977c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "da24bfa7-cb54-43ff-9bb4-78c16d4f1179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c7d29-bd67-4b2f-8c80-759fa078be01",
        "cursor": {
          "ref": "a094b69e-33fe-42e0-90b3-14c89db61e0b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "631c8e3e-4b80-4921-9402-7a8a3e403e81"
        },
        "item": {
          "id": "fe5c7d29-bd67-4b2f-8c80-759fa078be01",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "12aa0cee-3f65-4165-82b5-cce23aaf65bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7d40e3-0de2-4e8a-81aa-e676415ebb85",
        "cursor": {
          "ref": "9473d44c-14d1-404d-8c8c-344281e76bb8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "112300b8-ece2-4bc6-854c-9ca77b299fb3"
        },
        "item": {
          "id": "2b7d40e3-0de2-4e8a-81aa-e676415ebb85",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "36bb382a-3e03-446d-a854-4571a9fe356a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43623f9b-7bca-4fb1-9588-473f1e712693",
        "cursor": {
          "ref": "7da51b3e-ae3c-45b4-a78d-3c703612be80",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b125b72a-5365-426a-874e-02b1535a3fca"
        },
        "item": {
          "id": "43623f9b-7bca-4fb1-9588-473f1e712693",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5428b8fc-af91-44cf-a7f5-f20ebdda88fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac42b7a-abb7-4118-8427-51bb991dd244",
        "cursor": {
          "ref": "73ef8080-6b1c-470c-a09c-d0cc7342c2bc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f6918b2-8bbc-44e9-b5f3-f39404e1258c"
        },
        "item": {
          "id": "dac42b7a-abb7-4118-8427-51bb991dd244",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90cc505e-7a58-4f4e-aa8f-5212d4f8f0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488fb3bd-cbe8-48aa-9084-94222c7a639c",
        "cursor": {
          "ref": "3248fb38-a76b-4658-8070-54e85810c6db",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "41e2523d-ce38-4d50-af5d-d2bffe62add5"
        },
        "item": {
          "id": "488fb3bd-cbe8-48aa-9084-94222c7a639c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c4d5533a-98a7-47d9-95de-8f5bb5c71df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d756c786-5c9c-4aa7-bfe3-e45eed982aee",
        "cursor": {
          "ref": "0d0502ad-2302-41fb-a853-459507b132c7",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "159c6413-d412-44dc-8cc8-cf270a6217e4"
        },
        "item": {
          "id": "d756c786-5c9c-4aa7-bfe3-e45eed982aee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "113090ca-8d7f-4174-91f4-c27b52b403a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9628e-e4ed-4419-bd60-ae03737e5c91",
        "cursor": {
          "ref": "b48878d7-0e53-4962-baa7-54aeefbe1814",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "91fb4ad9-309c-434a-8978-36ccc6a512c3"
        },
        "item": {
          "id": "92c9628e-e4ed-4419-bd60-ae03737e5c91",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f08834c6-4843-4567-8742-5c644eead20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7ca1e1-1699-4695-8a9a-b90b7bec8512",
        "cursor": {
          "ref": "ebc2e0c6-229d-4dc7-860f-1b3228a7d57e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "da4b0ed7-ea05-4d5d-940b-50aba533023d"
        },
        "item": {
          "id": "7f7ca1e1-1699-4695-8a9a-b90b7bec8512",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "34498d0c-7d70-4386-b8fc-93da1f9ec8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b514831f-464e-4a99-b998-d0dd6fb19790",
        "cursor": {
          "ref": "7359d818-4cfe-4a1f-8052-ccc6d90e3fd2",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4a174bfb-264c-42d8-b8a5-58a4b391b5d8"
        },
        "item": {
          "id": "b514831f-464e-4a99-b998-d0dd6fb19790",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b81c2fe-9bb3-47b9-86c1-5b8aa65b9310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6731c3-2fb2-474e-856a-f711e9f154aa",
        "cursor": {
          "ref": "a73863d5-d8df-4709-837e-17fa94615402",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4610163e-e834-42e1-b4d8-76b5e3eb9e59"
        },
        "item": {
          "id": "8e6731c3-2fb2-474e-856a-f711e9f154aa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad0c24ab-2840-413c-9fd3-8826ef4127b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb3c61-e5db-4628-84dc-533ac7d78cc5",
        "cursor": {
          "ref": "c991435f-cfdd-4551-86b8-e4fe604127fc",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9d6f02fb-935f-42d4-a45d-50d1129ff51c"
        },
        "item": {
          "id": "78eb3c61-e5db-4628-84dc-533ac7d78cc5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "027dd218-bfef-4dde-9a23-c217cc03e0f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66e4df3-73a7-488d-a3f7-1e1473bb04ba",
        "cursor": {
          "ref": "cf9098ea-d254-4321-8c78-749802dee42d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d0a96a49-5c5b-4e5b-8158-6409cb6704ff"
        },
        "item": {
          "id": "f66e4df3-73a7-488d-a3f7-1e1473bb04ba",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b84d8632-e6fe-4959-8137-c88462186670",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46ab5a9-c789-4661-8231-57ab62c34011",
        "cursor": {
          "ref": "0342da2d-7d4e-4d45-92f3-e531a3b08662",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "06391793-88dc-406f-aea1-e5778eb8b85a"
        },
        "item": {
          "id": "e46ab5a9-c789-4661-8231-57ab62c34011",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33c1a369-0b24-409c-8c8c-178ab8058eec",
          "status": "OK",
          "code": 200,
          "responseTime": 1585,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d9784-0f64-4c34-a67f-fb6043902e44",
        "cursor": {
          "ref": "72dcd963-c526-432d-8572-e4de96da3b13",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3f2b5bc0-3c8e-4f72-8eff-9fb13627d5ae"
        },
        "item": {
          "id": "866d9784-0f64-4c34-a67f-fb6043902e44",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "16c20949-1c74-4af6-8a2a-eff5f9db77f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1351,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea23f3-9e3a-49cf-a918-2aea184ec1ef",
        "cursor": {
          "ref": "574eabee-c39c-4a0c-9685-5fae4e0302cc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08a4baea-c06d-4a37-8d48-a96fb880a903"
        },
        "item": {
          "id": "ecea23f3-9e3a-49cf-a918-2aea184ec1ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "03f00a13-2f8c-4895-949b-75fe2572a25a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea23f3-9e3a-49cf-a918-2aea184ec1ef",
        "cursor": {
          "ref": "574eabee-c39c-4a0c-9685-5fae4e0302cc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "08a4baea-c06d-4a37-8d48-a96fb880a903"
        },
        "item": {
          "id": "ecea23f3-9e3a-49cf-a918-2aea184ec1ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "03f00a13-2f8c-4895-949b-75fe2572a25a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620618c6-140f-4449-bafa-eef4c695ecf5",
        "cursor": {
          "ref": "2d9f6d29-641b-43cb-a4da-8683c85065c9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6d9e7393-fe99-4aec-9ee8-e3e96f24714e"
        },
        "item": {
          "id": "620618c6-140f-4449-bafa-eef4c695ecf5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad0b6a48-8524-4c1e-96b7-1454e8cbfa8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1a3cb1-4bc8-4b7c-87be-ab1dbcaa30e1",
        "cursor": {
          "ref": "cd2da030-a549-4b87-95a8-1045fa971dd3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7ce91b20-b07d-450d-9f90-8c09ae0114d7"
        },
        "item": {
          "id": "3c1a3cb1-4bc8-4b7c-87be-ab1dbcaa30e1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2c2aa472-9d92-401a-8258-4a888431d44b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}