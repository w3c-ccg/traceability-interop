{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "273a6556-5a28-4f50-8371-f64ce69f773b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e994b31-58ed-4aa6-a195-79877affdee0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75ca9dd3-97fb-4b99-ac3a-99b3961e1dc0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b7d742aa-042d-4f5a-a83d-fc4dcfd6485b"
                }
              }
            ]
          },
          {
            "id": "d485da69-3c46-41b4-87cf-3020db29e7af",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed3c9e7f-5cdc-4dc9-9ab6-d7ea1649068e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1cbe9474-da93-43a7-ad6f-8892bdcd9d31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f4000e40-4765-450f-8c02-15a960bb8830",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a70d23de-d2f7-43ea-99ca-57354ddc74c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfb6686c-d3c3-4249-8b65-3cff434e1e14",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "184ef694-2aeb-4990-acd8-56f41fcf8572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c2fb75c-36b8-465f-8ce9-cff9918067ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b9306fe-7b49-49a8-bc1a-c1f34007bb8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0abe1eaa-5634-4aa0-b3db-c413cdba4b3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fc59e6c-cf03-40a5-92f1-58d9fd5dd5e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83d4c0bb-93b4-4a9d-ac23-564e9e2027c0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f15853-c292-4ff0-885f-5444d5dce1cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59953bb1-6c69-45bd-8f38-45c53cac9d9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cba2dbd-3e74-45cb-b353-b9a6ca6e0c6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bceb0e1-1f7b-4975-aab1-b65fa473c702"
            }
          }
        ]
      },
      {
        "id": "c5b44c56-1313-4c75-98fc-743c909f6805",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "73a69a78-7e16-49f1-8ea3-1412acf189f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da8a5190-a00c-457f-aaf0-6a4a267b0c0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4fc58ac-9fd1-4f96-8b95-b5224b59d909",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384bdb93-0fad-47f2-ac3b-c2a64d355adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95ed85d-24e4-4437-96cf-25755ebea24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acae424-f7be-4472-8e19-7a439be21acb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fee8b5-29bc-4e54-a391-374359507670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "703d4dad-f3e8-4859-b47e-c8d40f4da0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc12dd5-d9f4-4016-84e2-276498e93fd1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3960a81c-d1c4-4d4c-83a2-de9689597f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27a73259-65cf-4889-8819-2d6ec8bde464"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e97b2ca9-271f-4e9b-81b8-7ffd0d96bcbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "123cac39-ebfc-4244-847b-25e203dba717",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b537341b-6e7b-4103-a0c5-f06cea95f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f35a6fe-bfc0-45bc-9163-fc98b8b0459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f77ce8-8f94-43b3-86eb-b2e756a08904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64111eb6-4bf9-4e82-8238-5b5d33aeae37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43bb8c23-30f2-4ec4-8742-d477c34ad62b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a30b6092-f822-49e1-925a-0a0d06e98e89",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee2169c2-21ab-41f7-b76c-6e1897258be5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4c4a7939-23c1-400b-a8df-d92d80986fc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "724abb87-e9dc-43ee-8dc3-f8f4de627b6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6188d98-3303-40da-a145-00f4872889ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26ae32e6-7c71-4a91-8650-779d012deda9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "030384a3-755d-4db8-b26d-3943a5e13cc6"
            }
          }
        ]
      },
      {
        "id": "73e653de-e720-48d6-9b9e-c21679ec88d5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ec56627d-1cea-4c76-9578-37087e5de77c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e93e9d3-2008-4065-a748-9c2fe0a68263",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d284e615-3f9a-4602-988b-d726964a56f4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c288b132-0a56-444b-aa49-e224cd9bf04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c008ebd-a475-4755-be3c-1a3bac3ee377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19411b4a-a212-404b-84a1-e5f0707f147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d427e1d0-06a2-436c-af38-c272a03a7a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb20755-6726-4143-8a36-c71302fb87ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ee048d-7bff-4170-a51f-da49c1f92505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e607b4b3-b8e2-4911-b993-4c64883829c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031bd43e-1672-47f1-8919-62b57a369aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd5977ec-0d92-4daf-94fd-a5e026066e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03eca07-1c4b-4791-99df-8d3d1cd5f7ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d9ab25-321a-4c2d-8185-83bed2bcc193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cec5cc-df65-41c6-a059-a6de1fba0934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9528b28-9ede-4fac-830b-589f09ed627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61649438-3919-447e-a98b-68991ec99e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571f2dfd-18b0-4f08-abcb-e986a6622076",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc1837-df6f-4ebc-b4a1-6994cbc382a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f493470-67be-48c8-ab94-7ca817e5c5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a35954a-5f8f-4189-be7a-a509fafdbf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7539d6a3-2644-49af-b68d-bc80eaab34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e191d854-ed47-481c-9835-f59091508dac",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198467e9-6f36-4881-a653-dcfe10467b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8285ae-947c-4628-956d-b72ce98f5c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e022272-6767-4035-b0f8-35a83c9b8714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3008cc72-cbe2-4049-aedd-5c91bda5bbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59089ad9-6ccd-4b22-bf42-8679d23e7064",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c927c41-7324-4a0f-af42-c5380735755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debc706f-c785-4935-8499-c8cb20c7153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a08f3c-a906-40d6-b947-a4db81f63d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef6caf05-a64f-405f-bc2a-323f40993761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17dd01b-1ea5-4ee0-9911-76a529a737b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4797eb2e-69a9-4ea0-90b0-f78b8934e691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7547a223-0dd3-48cc-ba61-d74b25e373f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78c99f-b5b0-4606-905c-c832e99091f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6c9e84-dbbf-4141-ae89-40e7cc38c703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e0e761-ae1e-41ea-a61d-38b6b16097e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3cd537-b361-4e40-8bb7-cfaf6ab25bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2778c429-f076-4779-8e88-e729db990505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fad2094-3727-4012-8520-29baf825cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed49262b-a503-48ce-91a3-c83745858c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa3699a-fb1f-41b5-bcf8-ab50719d5fc6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d477b43-399c-4690-923e-43e3cb792dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d245a827-1e40-49fb-bd2e-ad95efa5fefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d83c89-3b0c-43d7-9c57-b4b5f6899f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "991cb7cf-714b-4be5-b8e0-5f9d835e39e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf77c59-db6f-461d-b0e5-32098f6a7ccf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904ca67e-c35d-4f8f-9689-63ed30536e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3e5f72-1a4c-41ae-b567-67d172bb58df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c872006c-6ad0-41a3-8fc1-685d5fad6544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "231e256c-0dc6-4f7f-9dc4-7c337af817b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177f08f2-36b6-4553-b83f-2a3084c0c81d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e62541f-1724-4732-967b-37370988d11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e67dc56-3d31-4508-97ae-e98f0037f15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9133bc-7ccb-4ddb-87a5-f66fe37d3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7346cc04-139f-4363-9f14-2c7e2c038833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f875341-0349-464c-ab25-7ded8c1e880b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9d9b33-7d19-4e48-bac7-483e7d3597dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed6fa8f-6377-41b3-95d6-81f91d84ca0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4521c47d-0185-4f83-83c6-c17c7c1e0ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbc5e3dc-e23c-47c2-8cb0-def65d90dc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b1e48c-e360-4e9d-bfd4-949fb7752335",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d769f6d5-78f7-4a8d-9d41-db5e660d3836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eeb443-bf2f-4601-8997-ace692714b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834c3c27-33b5-4dc3-a9ac-2998b711e5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1008488-6d15-4c06-8594-f2fcd0bad59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6468e3a5-6320-4fa2-b950-019ed0b1ea9b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede0274-7a88-424a-8720-74eefe8e6fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f527b6-c0ef-4a7f-bdec-899a3b46a99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2266817e-cf79-4c53-8b8a-176ec463aa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64a34086-6362-460b-8f0f-4b03ab71981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74837a7b-13cf-4c77-a876-e86ef43b1277",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43440146-713d-4095-ad09-6fed444b569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2f5b90-4220-4d89-9f06-d559c1419584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94613b26-c13f-45ba-afa3-3d8531a85af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d6f293c-0ca5-4a04-a0fa-b2abf9d16721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf97702b-5ee8-4984-b33d-65872649f0a5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a62e6ce-26a6-4d17-849d-9865b4df11c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cee67e-74c3-4193-a534-ae4ea0ab6a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedbe5f0-e9a6-40ac-a4c7-3fc42619c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6410db4f-676b-471a-a2e5-b0fbe9d536ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5897b975-069a-4f18-8757-edb84997d384",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae7edd2-42cd-494b-ab1b-69737303a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238f8135-4aff-427a-acf2-17989679e4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac1494f-3a00-44d3-8b34-82de7fa626d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae79563e-23d1-46a2-935d-524cc6e88fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87767019-3a14-40a1-b5d9-b863b000ce70",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf45cc7-36cc-445f-9f52-f225d93c174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930f077b-38c9-4a19-904a-4da0f438ee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fdac29-7447-4209-ad6c-21a804f077b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f4f7e2-d779-42d0-b619-35d661f73c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fd8724-f7d9-4882-9830-ff55d6649535",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7546d911-eade-4b29-b48b-c7e76956f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a954753-dd3d-415a-bc86-5c61fb733dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dd8434-8550-47dc-a9a0-e1889ad2df5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d56b27-f078-4157-a982-ba41563dce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57dc58f-4e70-496b-be5a-a986d5b0d196",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1900dbf-e47b-4f34-9cc2-9ad6b815f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92910caf-971b-4913-800e-75009534846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f40516-5fb1-4e98-831e-78d187336f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa65f23d-d362-4b2c-9135-b22fa0746bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e94ba9-beec-4fa3-88a5-f7d267f4bac1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740207e3-8fc2-4114-ad3f-84376c7e1aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371dec74-582d-4128-b236-8b1a8857352b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7685c7-06de-40c3-868c-2a357d5e6d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d926583-04be-4201-a937-92761f21d931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bf9663-cfa2-4105-b64f-6e0a28ec7614",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9165907-5b83-4018-9ec6-f9858e5d79cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f45b075-963e-4e22-a91a-868db0f47b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d70d030-6676-4209-a2cc-9cdac0d19e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec55a89-24bf-4f9a-8fc3-bb7210413587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf34995-51a0-4c64-9c05-d4ba492fa3ba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9c70f4-4c1f-4c28-a109-8578606fbb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e060db39-a446-4745-b764-ddd28093e05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b247705-2a84-4223-bda9-fe130a0f7e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a02ee630-c84e-444a-9eb5-b972f08f68d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2f0496-bc83-4b8a-9c3c-7f3855534a07",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ffea71-8356-4ca7-bcc2-3e1518d66aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9363c-dd66-47b2-8759-b6d4fa9e6c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3b478f-9dc3-410e-b32a-4d36d97f789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d11b9d90-5601-47d8-9618-f9ad0616bbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4cd690-b44c-4404-9686-bd840e8eb543",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ed6557-abad-4fd0-8d2d-2fe25b1b7e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc181117-989f-4832-83d4-ce7a12b5c112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d2e4c7-82be-4435-9cf0-86fe1154952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a043ec69-7407-491e-88b3-b4a4906db21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81981aa-9489-4849-86ce-c31c4b888316",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c377b4-0d16-4bed-8bd9-35fd8155bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba90d7c3-625c-4d6d-8e5c-d2e41b11f123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9727a200-a4e7-4923-b52f-e0f11f8a61b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8065cf-b3e9-4dd1-b191-2ef672c2f6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0161d88-173e-455c-8618-cd27a7787ea9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa18e04f-828c-42d1-9c65-6fce96ffc305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c60395-0194-4424-9e05-f2285514ed77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63390d03-e97b-41fb-86aa-c2ef233842fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "839c1a6a-91fd-4ed0-8b3c-69d430b28f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d798bfdb-1583-4063-9c4e-8fb51233df19",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c48fa-7393-425a-b417-462f106b1a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6d9186-1cd8-4215-9ca8-3cda0a5bf268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b937d1-5227-4b4a-a30b-28a149fa4c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60561a40-a1dc-4eff-8276-1a27029ab174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97de9bcb-6010-439e-ae2f-f63ce639dedc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4886c3e-f41c-4ad6-b410-0589a124ce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55902e83-944e-475b-8971-4a24f6788063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1233a8e-ff2f-4dc8-88f1-06b6df88abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19b690d-92b6-47cf-b445-7c2b28e51fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c99508-175c-4802-bb99-b0fa07ee8f50",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b452e3-5d94-43ce-9944-1be94840e1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9d08c-eb72-4925-994c-9b98e12579e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7adf3b3-cd53-437e-a6b8-9a825fa2fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf69979-f099-46f1-b962-8a4f018758d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732b7d5c-bf82-479a-be9a-ced9330abee8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860ab745-c0e3-44eb-8a60-511ce71cb96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7276f7ee-0c91-4d3f-8943-10356adbb8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d893e648-0c07-4923-857b-45012933df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c014b050-4538-4e48-8010-a0f0e09e897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e398a24f-4634-4fb3-9422-085078b76e01",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26779949-398d-4c9a-9de9-b1d838ad6d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24193ec-2aec-4196-a9ea-2ca5374e0674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c430e6-3262-41a6-9c84-b6f0d2340439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6118499d-5043-47b2-8610-880bcb6ee4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d3f664-77d1-429a-9608-d88afe331b1c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca96ee67-c10c-4260-b317-eec13b7d4039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfcc659-a248-4653-a859-ccec6039874a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342a68e6-e9ee-4885-b47c-9a6d3a289492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1be5dc2-54b5-43c1-92d3-5d25803c6ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a36cfe-3312-4817-96e2-bffa799404ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97861bfe-c733-4df7-a748-6a9e2833e7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50a82f8-6487-4946-9aa8-ba81b8a1f57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8405a605-0483-4929-a9ba-ddeb951a478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ad4abb-1a94-4dae-bef5-f4323441d0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146f509d-b994-4d1c-93a4-c15662a2444a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c0ca8-ff61-4166-9717-6a1435c5cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76030ccb-f3f1-4e31-88b8-67e38b873f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e035948a-d099-41b5-b803-ffa119d32439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f5685-fdb8-4ecd-934a-fc74750d8cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d30f6c2-ad3d-4755-9c17-08ffc4482382",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447f40d6-0a5c-46af-aa56-e42df007ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c03fecc1-523c-43af-a410-c5dbe651526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f194415-38ae-487e-9bcd-ed4996ec3340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16ed353c-9c42-4453-8a21-b364fd379548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6660109-ffa2-426d-8271-1a532c37762d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db0e882-58de-4c20-acf3-18f7b286187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5651a5f6-f04d-48c3-a693-daf2feabec55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1df8e4-8e54-49df-84d0-23b485e09f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98b02026-de41-4acc-9309-8232f7810318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a488ad-4a66-461b-a03b-ee8d116deedb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68cfd82-e1d4-4eec-9279-e577c8173ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba30572-2715-407e-8f50-346d2b1d1deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76191dd9-f678-4dc0-8078-70c0784a4e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1985cb-cb34-4111-94b7-a3f530a73706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce91e5b-1287-41d0-81b4-e3f6e6cdf198",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a10dd30-6051-4d96-9a13-f83f6ed6af0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00a6b24-5395-410f-8301-7c93099fcb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bfaa72-1bca-4648-9137-dd8fb2efe4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0e66c5-62ad-4e56-b215-4b41252cb38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b898fd23-7ca2-4597-a9f9-f3d0a2930e0f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fec13a8-d207-4e2c-8819-ca4f1e3e5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d614c4-c827-475b-9a0f-aaf1dda1c869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ee0b2-6f75-4e8b-9a71-d946ffa573d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6603c418-6720-484e-ad82-b6deec94222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1261c2-2df3-46d5-ab49-a19e5ab67cef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1360b651-1cf6-441b-b301-1f26c9161a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49111e1d-f6cf-406b-be2f-3fc37d76884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1cd7ff-408f-45ad-8413-13b98e5f9210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74daa8da-8ab9-4437-a9b6-284b96e3c2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109084ac-45be-4d1e-8d47-21d337eae2b4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce0ef86-4f8c-4cf9-87e2-dfeeeaadfaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b43d21d-6bb3-40dd-b473-a038fce12556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f10d11-ada1-4a0c-a01b-9634d67a1701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e915ad4b-678d-4b71-a11a-a7f9f5da45f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e2438c-a250-434d-899a-35d2014c1a92",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a844a95a-e84c-40e2-bb4a-f219e65052b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892631dd-e92b-4281-bd54-d3146fd04c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2021ad0-2525-4a9c-9046-e5019feeea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8a03b2-8939-4631-8c71-f64b2cd0018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089b9ff-76a6-4472-aa96-57a049b26958",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c925792f-26fa-430d-950b-b16ae5af317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f923fd-af95-4b5d-8e1a-4994ed59d561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16b9a13-2b8c-4f75-ab84-9373264aac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fbb4a5-d620-4127-96fa-ca3145015d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7991a4b7-6095-40a4-968f-16733d27520f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942b9dbb-6404-48cb-91ac-308a343dbef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47b81f0-e719-4ce8-8cbc-70e1c620328b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2b779b-9695-403c-bcc6-6befdc893826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a690f-fc03-4a44-9d4f-56cc92c6bbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513c1f3f-10ad-4636-b0ee-32e41b866d6d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49497b34-c47c-4a80-8e3d-6f73ed6dd2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a33981-a61e-4f62-b2ce-02b1053da069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee534c79-e95d-4db4-9f22-aa4960534971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb6c253-5d6a-434e-8022-07db3c35f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59255749-abc2-4c15-9137-cdc80374540f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b9737a-a3be-46b1-a7ff-4def1ed4df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea9609f-a9b9-4157-8cee-016a1ea007cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656e75b-05c8-4c9e-b81f-dfc09a13f779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f7495c-f144-48f1-bbdc-a928e1ade089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650d9829-083f-4376-9ad0-fe57cf2b8235",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad57fd-a43e-45bb-94f2-e3ead4b52c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a14dac2-05df-44f0-a033-e0cad5ca3f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb8630a-0bea-4893-94ff-54bf04b1bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6646c2cf-cb67-4f66-bd69-181f31e6a65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7a2295-c01b-4521-96ab-142318153a1b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8302730-d386-4a7f-a9fb-a9b6a5e4a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42851ee8-e776-45e8-bb2e-7fabbbdf4993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715c210a-0c19-48da-a965-2b36a8e8125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70763eef-7b21-40c4-91e1-13cfe37e546e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227aa478-cd88-4297-9bc0-61ce25514fbf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978d855-e4a2-4d60-a5ad-4a07463dfafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0955ed31-a00e-4bb0-8439-d5d5dc536264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec788334-4a79-4ae7-8691-1b8fc740483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3a26fa-ccdd-4ee8-bd35-b05a9af2ea69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d25f4bb-fef9-4882-8a6d-2f37c937e34d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5945635c-d2fa-4800-a318-dfa0f237b099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a8f3d8-1fe4-4d55-b0de-bc3fb242ac50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66506d6d-82dc-4eda-82c1-394599b84310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedc5e15-b692-41b3-9fcb-e6a117482dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42864806-0afb-4a84-8ecd-69ada8a0a450",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d49e88e-df93-408d-9131-81637f9dae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fcbc6c-d32f-4624-b73c-5ef251f7268c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd910299-048f-43fa-91f8-cef1ccb558ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5819ac32-e68b-49ff-9b5f-b03081b7c840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea864119-d5a0-435c-bbe4-3892d2953565",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5d32f-fa79-49ff-8289-2b1e01aa4764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5681915e-781f-4364-bdef-23d5d3897816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515addfd-54d3-4124-923c-4730ce0ef204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1adbb54-7961-4535-a757-788d73a58cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e2d2e-05e8-469f-a50a-402fb8b13b6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caad074-a882-4905-9ba3-ccd153090a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba8e85-1947-45c0-8fdb-34cc3f0fd646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41be0eac-375f-46a1-b3d5-7f28ee5695ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2191715e-9fe1-4324-8ad2-36ea9c8cbf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba04a5a8-fdb5-4ea8-b35b-19a3f3e21187",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba68b5a-48ba-4473-84a5-b988d685d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d5e2ea-846c-4930-b258-a40e6dba8dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aa16d3-db33-43b2-8543-5963453f9b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8e62e4-3af5-4cb2-9a24-83edd6e2add6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa51df4-1bf3-4ec6-8fd3-16829449b160",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb91f057-2803-438e-aea3-b9c5631ec121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f47d50a-36fc-444c-b18c-b565cd8de495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8885ca04-b39e-4d45-8c61-36c9eaa9e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "61f2802d-64bf-4407-8549-cd7c694ae4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be24b0d5-1288-4f65-915a-3be3d8849a66",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e165fd-a568-48af-91b2-9fed544f7f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29302f67-032f-4eb9-8709-382e11769212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6dfa67-a198-4e58-850c-419bda014336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52d3474-09a3-404f-9890-0c4573b4979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46fb8a9-44c2-40b1-9073-8cdb16c3e82b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec669c76-faf7-4a65-a75c-724e64a5d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea86d34-889a-4b54-8f82-839fb0d6cda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2f9846-f2c1-4511-bd16-2962f047ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6036a75-1c58-4801-82a6-c8290af619fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0835655-80e8-4711-bc8a-8cb1b799857b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2713e3df-02f5-470e-a1db-f25acf1de7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee99bcc9-e343-4b85-aed7-bc10994fe376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5017c4a1-cb80-419a-88e2-a5706568a935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bdfad4-4c7b-4598-8195-98ffe6a208bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7123f8d7-3d25-4917-aca1-809d74553382",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f081ed12-f851-4bdc-b40b-f799dcb21b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c62a9-f9b2-4b66-a388-4888c506960c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e3fbe-81c1-4ff8-92c2-a61b03eadee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b60bc33c-6edc-4de7-8799-058e71101e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad47331-05f5-4438-9caa-946ccd4a8c94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856ef79c-4a24-4803-90f9-cdea60010e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75679c31-d8f1-4fb0-a77b-6112b622d53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acafa2df-435d-4a5c-bd39-bbae0cfe83c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ea0d99-248a-424e-a7c2-6a7ee01cfc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0945b0-2396-437d-aae5-8f2ced72aafc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934149c-f14d-411e-8b51-716c2e866ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3879d54d-3a76-44b6-b9c9-bbe25ddc7f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed07790-3573-4f2e-aec2-60929ab7dda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "562395c5-8569-4551-b6a8-4052f6fb9b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9123c94e-e4cc-4f7c-882d-9c16d29043eb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5807d8ea-10ed-43d1-8265-a5347e967964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100a9d60-0d4b-46aa-8046-49bd45b6f66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b20cd1-d62d-4e5e-a81e-f04d94711881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "630c8b2d-c5f6-4179-a308-c5d268969ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4511ecbc-73ac-41b5-a0fa-71b3e56fa3c1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882e1403-b4e7-418f-aed7-35cf59211bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e98a297-e0da-43de-b436-9ebafd7fde42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d611f6-c301-4f56-9630-6da4bb949160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc766453-e6bf-4b33-a518-b396d00ea4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d949cbbb-9a0f-4906-8905-ad218441bd89",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2163ace-bab2-4670-a59d-4e6b5368c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79159586-f7a3-42c5-9c8f-98834b9eaba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d469a71c-19f7-4440-813c-11326cb59fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2316330d-8efd-4863-b624-d84d4c3c2a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3923ae7e-2f4f-4e12-ba49-f2bbfe870357",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672c7e08-ec11-44cf-9224-146d5015eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b402088-d462-4789-93fb-50b8abad2727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93892e2-d8ae-4096-ae07-a62192a4df9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2b3f02-0cf8-4a81-b84c-57061c147093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c821f6-3cbe-4c1c-b6af-97ab53401c72",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff0aaf7-f1a2-4769-924d-7cbf3acb2195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12936f7a-4f06-4eae-bb87-03b4baac54d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e377fe5-f993-402e-9014-b40604fe60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f04086-38b5-400e-8aa6-b229ff4954eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4be4685-cc49-4f0e-8ef7-500d90d8effa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6981e87-022e-47ce-a754-f3fcbe6e6e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6248b870-2279-46ea-bbfc-e026ff0e7079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef69fe8-40e0-46cd-90df-7ba2709d162a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "713c8be6-f324-470a-8523-18675804a5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8694f4-301a-4886-99de-463335153974",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfbbe81-7f5f-4911-971c-78f9666bc174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdd0165-f0af-4624-b858-6553583edcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3178c34-3248-48c4-afa6-187dab45eda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb05bf1-2686-44ea-a5a8-30990b400959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd354ced-b056-46dc-ad16-cdba80f872e4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff834e-3112-4a23-bdd6-dba4a5d3254b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7f797d-21fe-4129-901c-c86b442841c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed7f8fa-20ee-4b53-835d-b9d534d75258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52684f4-423d-4ec8-98bd-c14cfe86624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6f4de6-ff79-473c-90dd-8864cbfdc55b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7d7f95-5435-432f-8abc-af25106a8286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb6d1ef-dbe9-4902-b0f5-5f457e6ada01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6bda73-4d28-4088-9119-a639ffdff5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "646f54b0-ba06-4a1f-ae97-e5184bab1528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec4c44-6f58-4084-af3f-5dfa3e225fe4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91db7f5e-9d47-4d8d-8146-0dd22463b237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61599cd5-36dc-4e13-8366-06c729c07a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e7196-75df-48f8-b8ea-25178fb057c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87acb203-4cdc-4674-9750-08986a9f681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336e7636-846b-454e-9119-0277aeadd6d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9330d34-44f0-4d37-918f-c88a2d788eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85071560-b57b-4249-b594-6f60b55cf3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b436c6-6985-4a1f-b953-6fc76a5fd462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "832eb16b-09e7-4ef5-97bb-8fa93f642307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0d65b1-f722-445c-8b12-7c66780e64fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c462a35-f8b9-4623-9970-d8cb8533260d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbd783c-2505-443a-b607-e6b2e966f94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a251e4ff-004f-4c38-bcc9-24b95c7e4b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99723450-e25d-404f-9a48-247f1851439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1b02ab-1651-4e3d-a375-799af7a47fdb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ac108e-e894-448b-9250-84d0d70ef5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9042df8f-e672-480a-bce6-cd0dbe18b8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec557a5b-7e8d-434f-91ff-f1c4fb56a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "626377e8-d2a8-4dac-95b8-582080402614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfe4bbc-b080-4852-a31b-fc7b5e3fd1ef",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc7dd40-6693-4b1f-a982-74a7710503bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be047aa-86f6-4fa3-a4d3-ed0aebbc2ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14b808f-e543-40cc-8460-528f79abca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ed5e97-710e-48f6-a331-3197865c8dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0b4cdc-d4ea-45ff-8a96-b75015e306b8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f7cff4-d556-4464-b07d-b049f762917c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7bcf94-934e-420c-b296-148c9ae76072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e214700-058a-4fd5-96d8-6f3fbbb0f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f8937d-37e7-42e3-9ef6-823bdbb31bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236fc96d-3447-4eb2-b6bb-3c534ff14cf1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47423673-2878-4e6c-a74b-b31e6629809b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cabb20-85c8-4452-958c-c47a7a421e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8998f79b-0755-4539-9e18-e7ac2140675c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2586a3-fa58-4730-8488-1bdb24354df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bea546-d323-4f8f-a78c-8480d20afbbf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe1bc42-3925-437f-b4f5-75d791072611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcd3bd8-4d0a-4b8f-a8fa-54430a8fac2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f9134b-ecd2-4463-b7db-1af1cb6c9c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58662785-bee6-4971-be97-d416c441b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838eb441-3297-48df-9d0c-39285766547e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0be53af-019a-486d-9422-74f6e011180b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ede87a-73cd-4637-8618-789caa63a637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61c5f30-cdcb-4a1e-ae8c-a3ae13dca94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a512026c-6516-413a-b34b-fd9f144863e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b86511-d747-4573-83fc-124099f8effa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9a3244-58fe-46ef-abe3-ad2fd9eb4129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b034bfa-00b3-4c01-963c-c67ae41a5118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323cfbd0-291d-4cb0-809a-0af9856e27d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "984bb253-fa4a-4289-bdae-396465e0abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ae1fa9-5229-425a-b5cb-579155b467a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84209f-57dc-4dbd-b1b4-e8a8f415fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748488e-b758-48fe-8c69-93c8e698fc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799e5341-9371-41db-b33e-c94998097fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3e6c8e-fd1d-46e0-801e-df00fcddbe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50608694-f595-48ab-994e-f2fe5b971e63",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a013eb-d5da-435e-8726-4de7ea4b7139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846118c9-a392-4b09-be5f-fe0996c8aa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7103e0a5-0ee5-458f-bf67-78f23a0751e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f799b614-9157-4e49-b2f0-5c617d12e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a748472a-f5f5-4127-b18b-e4ee81d50094",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7ce050-ebe4-4be3-a148-5128226585c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ebc5f1-6bb1-4a06-b528-368ab1ef9240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f0b56f-c969-4576-b7b7-573f737e5dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d440006-f009-46bb-b6ba-f3d31f34608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cfccb9-29d1-4abc-a184-3bac0e435788",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fc61a8-41e3-45c9-9c03-0a3254fe955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77cb7dc-4d3c-4227-b742-95cdccd2a281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58b581c-74ef-4f38-87be-54824dacb3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73fd5052-fbde-4f13-a333-01c8a60bb87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98cb783-a76b-43eb-b9f0-b7b7dc9bd75c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd52d80-eae2-4b33-a061-942a696cf48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec099a3-85d9-45cc-b2a8-d17688052412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a690e246-d6d9-49a1-9c7d-03ed3482ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e92fce-c36a-4e52-a036-465b1211ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd89fdc-5a1a-4464-9214-39728a3814d0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b72843-d809-4e18-8f40-25fc589a3504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c3067e-ccb0-40f0-8900-19f14a550b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fb2aa9-9231-4a3e-9212-0722d207bc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b26dde8-4c52-4daf-9861-61cd05913ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741e21a5-a812-4815-8070-1850dc80a5ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407f3317-c04f-4202-af9e-901932b9971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85426fec-561c-4fcf-817e-5cd542525c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0c0d73-b38a-4b93-8208-400708e77d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da95e27b-1f8b-4270-b037-c55c6c4a0ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad84b9-d915-4a16-b229-a36579eb50e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d8c748-f627-4b96-bf3b-c58745e4929f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87ee9ee-3e19-41b6-beb3-ee028b8bd0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a14ec7-a63d-4f01-9382-bd7acc338cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d86f15d2-3c47-4655-8784-a7cb956addcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf53f73-f63a-49a4-a531-9375d06fc40c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b311826-3e1f-45af-a913-ac563d5c65e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bb15e1-e39b-444b-abee-3d3c8a6e34fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e54d47-8b0c-433b-8dbd-6eccb64d5dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d956bf6-2e15-4d48-916a-609889d64cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bdd461-9ad6-4252-9bd9-e139798d161c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c964556-ec5f-4653-8f6b-7303f12fc40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06020d1-1d96-4d53-9beb-30aeb6416057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2315058f-db97-4c43-a068-a7e024462759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b94bbef-1482-40f9-a933-61e81211ddea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e8cc7-b778-4b90-9186-44025bc74a12",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d30583-7127-493f-95cb-f551017146ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ad05901-28be-451d-bfed-d52cff1a93db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e66a3b1-f976-408e-ac7b-a9c899d23703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5768c12d-6837-4d2e-a303-f99aa6b90bc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "424bf610-799a-4bc6-b612-7947523bdd1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "542fa0e6-dddf-4898-9948-b782a4e07f82",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd7df4b-ed79-440c-8f9f-a4cf4e3d5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ec0b6af-585a-4fb6-ac7e-83f06b33980a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ab4df6-2030-4698-b463-cb18bdf00ad5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd4946e-6ac8-4a8f-a392-fedb6f9a3a90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dad0784e-8be2-42aa-99bd-681f1c052215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f62602fa-5e3e-4c14-8bce-51084a725a0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60ee7472-e455-44cc-b1c4-e4ffca074210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3d3f1c7-66c0-4346-8872-1059e4a75e96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90de1622-c6d6-4495-bcf7-55897a6337ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25f5cf1f-50bf-4ea1-9f27-4a07e7c820f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96ebc6c2-3b42-41b5-9934-4bf2ae3e797d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "575accf7-8bfc-4751-8bc3-5ed8474800c8"
                }
              }
            ]
          },
          {
            "id": "50a44016-64af-4ced-a7de-0c970962ad3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19a99173-3a6d-4f40-8e11-8b5b0ef76ea8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fc22cae0-985c-4713-ab09-2787b00d0dba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e47d38-beb7-4289-9ca3-a0708ab3ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12c5babe-3eaa-4aa2-8f88-0604c1c34600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5cce79-fd9d-48e3-92e0-84d4a26b783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90350a93-c8eb-483a-9034-3d323497766c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbf3af22-71c1-4902-a3e6-84387b8baabf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d87183fc-85a6-454f-a467-457db14de1e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6a657ea-d8dd-4fb2-9564-7f4527d19a73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "659c95d2-d173-4e1b-867f-f783f92757d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d612c8e-d533-44e0-abd9-a067dcc206f6"
                    }
                  }
                ]
              },
              {
                "id": "ccec3739-df28-48fb-b030-28e4ee408e6a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ecd591d-79ab-4dba-8df9-c644d45e645c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a334e0f-b9b7-4de3-bb80-d7cf93ab8d8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f49caf8-31b2-4349-987f-cc6b317b7e37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e15c318b-027c-4626-8770-e65543454e98"
                    }
                  }
                ]
              },
              {
                "id": "3c05b779-eac5-4677-a0bf-5a7415f8d5bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9effbd1-6130-41ce-9e19-3ee42ce211fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea21fca6-39d5-437c-bba5-74cee64d5ee1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6efa3b50-c3d9-4eb1-a325-e35fb42ebf46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c582dbb4-cf87-4faa-9823-8f79cd94f07e"
                    }
                  }
                ]
              },
              {
                "id": "7a812654-5fdf-4351-b25a-f0a303a2657a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0dbfb4d-907c-4d4b-8566-c2d1c9bae570",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4dec7bee-e5ef-4fc3-8665-d432b162f5c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cee5f46-ebca-4ecb-927c-22aa067864b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9a5049bf-2ac3-4fd9-8ef4-d7b4347c98a8"
                    }
                  }
                ]
              },
              {
                "id": "656fe633-a9c2-4b23-8a38-e5e84aaa9ccf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "901908bd-c3c4-4a77-85ea-ab572a00d60e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c4adc0b-8b65-4abf-9674-6a6ae9922766"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f37f0a54-6646-4c35-bc24-4b33e8a74cbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8eb2f4ef-4eba-4d9b-8189-3532636d3b72"
                    }
                  }
                ]
              },
              {
                "id": "ff9034ab-17b4-437e-b065-2ad24a0c226a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "176c62ad-b472-4d40-a6a4-05f4f823f6f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebd89b38-484e-48e2-bf38-17930bd0199e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fef9b2f-9d85-4d4f-8d13-6f0434643f10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0388ef1-ea8b-4d9f-b7e3-87188aabdefb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a07506d4-e64a-4441-93de-efb7a41db9ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df12ba53-00f3-49a3-8291-716294ecdbbf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0850b48-d252-4cdd-9b85-508dbfdabc2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b78f0636-fb80-4fb0-823b-a7befb497a5e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306d1da2-d3ff-46f2-b0b6-8a4a913e4ec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c545e487-db07-49a3-a25c-22bbde130f02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c89981e6-2b1c-4dab-a9c4-66197c16dc5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfb7adad-e874-4cd6-a399-7901b05355d3"
            }
          }
        ]
      },
      {
        "id": "e5d8f5a4-8d7a-424d-aa08-3d50ad41e5b2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b714c68a-6b64-49e3-857d-5d62c398811a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00e89958-879b-4330-aa0c-40cb09b0c5cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c16cc03-b6ef-4287-a6c2-65674cecbf70",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f6fc58-b285-4696-8eed-3b49c5b44b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45a3e59-71e6-45a2-b6f1-95e09a0cef49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2617b1e-a926-4123-a607-c8bb40a0e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "107a6ee4-71de-48d5-a83f-1ddbc9d32479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4be5402-cf98-4de9-80df-4348fcb91a81",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a20733a-1a53-4ea9-9120-eaec69e88bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a662e0-edae-4d0a-bd59-ad32d8b3a9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fac13a0-d9d1-40ab-b77d-15f85ac9bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13485b97-7a2b-4453-a899-3609fd999352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407fedfd-2696-474b-9e71-30e09a504061",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dab55c-831d-4661-a66a-be92ed0a7f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5779759-d649-4128-8b2f-980c640968b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bb0c83-dec6-4cb3-910f-6cf1aea51475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7164970-9ed8-49cc-a720-16831ae03433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4435a8-5f17-474b-b984-45ff9e573c52",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6203bab8-0110-4ad7-a17e-c8674d3b0408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae18002-e21c-427c-a279-5180a5c1565f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71ec25a-6f41-44f4-b138-20c27ab10e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e25075b-507a-4942-b6f3-16588e4759d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2617a1c8-8f8f-42a9-a012-db649006f9e4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0219e61-efae-4988-8bed-ccccad21aa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8decc7f1-1926-44ce-b01b-7dc020754fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6b4699-9dfb-4195-8861-1cbdc890ba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f6b7f0-240a-42c1-9ace-768c78d66acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71dcd4d-a6aa-4fbf-b66a-3a6f0b94312d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989edf13-a46a-4537-9265-a35e39a91872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963dff18-839f-41e6-b415-03631363d1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf58d7c1-de8e-4e80-9319-e9015d045302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "467cfab1-20d7-41e4-b646-782b07c6fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94960e3c-e2e8-4f26-abfe-ed1966a4572a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc11e14-d3c0-40d1-8138-a8906f117daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd33a40e-8ee0-4f91-872d-ce81afdecfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8abce9e-7669-43a6-9dac-df08897791e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a81cc34e-2fdb-4f7f-85d9-582caba9087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea28917-43c2-4606-8c5b-911317b9226e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c9cee9-f644-4ca0-9940-959992e038a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f055e-937f-4fee-85d2-0f77f4fead80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb03143-9b52-4cdc-a6e1-d813cb47ad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3325bf50-6f3f-4472-af3a-6e874b33578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c074873-f665-4e14-b9dd-f965d7f8cb7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f21e0eb-fd22-479d-83b5-c4bb8f1fa9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78b3831-3e59-479f-80b9-59dff45acc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e12ad5-a224-4a7b-ac46-ea00776d0494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3628dc6-012e-44d3-9e7b-31a07c6b1412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aedb5fa-cb52-4a4c-ae9b-af3e502f1467",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb6105-ca37-4704-8970-3f6a46a5639f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac32d4b-43af-4c53-b816-62a4ac902291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bbf3cd-1af6-43bc-8310-c17e702da181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdfd134-1e78-4517-ad68-d4023ea9da9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af42fbf-7c14-4dc2-9209-62b93ddc4921",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c89df-e3b6-4732-8266-58a81f6ea043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079b3ffe-c9f7-4307-a8cc-af039f7c3ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5287fba-0e0d-4195-97d5-3a55b40a2baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb9d5bf-9fb6-4ce4-b02a-4610ca6c8dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05348cce-3dd2-4020-a55d-3880dd09678e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508c003c-6320-4874-b522-395ff2752f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03913950-711e-494b-8111-17292f2fa94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cbf2a2-d3b3-4888-8d38-87d9dd90314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "919160b6-13a9-4192-b2a9-81fdc3d3a159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ac63b-c5d8-4160-b099-230515c7e254",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156af3f9-7952-4731-a98e-4c394496ac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8e7734-159c-4e5f-b5e4-d7b8a6606396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132d38d0-0d7c-4454-a132-516a5dbced5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ad4398-99ff-47bd-8c9d-d9908ff7ef06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ec137a-833c-42b8-ab50-e9ba7245a536",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25a57ca-d361-4fe7-bd30-cd769238bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbb743f-dca6-49ef-a49b-471e50f43f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdaf675-18f5-4fae-9ef5-2b79ba0b6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dafb0a-e8e4-4341-9d51-359f788b4299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9e2e3-bb9f-4d18-94e9-39b7d74f1542",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1f0242-4457-49ce-9141-2b798464a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372211c3-7a4d-4370-9cf9-15ab0c5bd949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2962fa-4a94-416d-a6ab-f283081267a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5a8d4f-2715-40a8-91d4-678034ce0cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6aa52b-742b-44fc-ba9c-fdfea7d311bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af83f8-4c7e-4116-8f33-a91f07232a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c4e31c-2e45-4ac9-8cc9-7ec96876d2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491d73e6-9c8e-4ecd-b2cb-dcdffe422d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30766c0-4805-4b77-82da-8925a85fb67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71cf1d4-29cd-42bb-af00-e17ad68fb863",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4418df89-b11b-43ad-ad1c-6d45268f8ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d47ae0a-8aed-4922-8796-121633b5e1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e05903-1e94-4710-9489-b2f2c209fe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33391fbd-5716-4664-8f3b-de4f1c4cbaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89225d67-55ee-405c-b267-829d1c45a2a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef2a5e-adc7-4975-9b74-ccf5c5eb2a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6ae41d-19a8-4519-80c8-94779ba107e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf3540-5f89-435e-9b1b-bf060d549c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "277b8bc1-6536-48fe-9c05-d0f39aed8f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6c483a-a6ee-43c8-9c58-5ca1c2563158",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf4545c-edfa-4d9e-8327-5b4f37b6c8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ee0407-f70f-457b-a5ad-86ba1784af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2094546-de55-45cd-8e14-2624a36957f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0d3336-6983-4df9-84c5-a1f06c24c99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b405f08-94f5-4a5a-a48a-b8ca51542cd0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb18b17b-8fe2-467d-84f7-72a8d5bda590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cb80de-2081-46ed-9386-565caa60cd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b27c52-e905-4e9f-a93b-1fe0961e806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f27774-9916-411f-82f8-e2cbfcf49e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8f1ffd-1f16-4b50-b9f6-54ecb32fccc5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df34b5d7-7a19-47ea-99eb-6bca98806ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77e9da9-8e35-43b4-9ebe-451820bee042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938f6b23-1823-40a9-89b2-81b6d9fd06eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3648fc91-f128-423e-a39d-53534278fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff1b3b7-9b4f-4d13-a0e9-342bde7db026",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652e6114-a971-4079-8811-de9cbaf42687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff0a661-a15f-42de-a600-30d7762d5147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e09815-04f0-4105-b64e-0cc0c08e47d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3be6857-6fad-4497-b702-fc41f7a0e6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e2d36a-e852-4464-9786-291191351e19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b3d5ad-4f2a-49fd-8649-32e6f577d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193ec781-74a1-4dc8-80fb-36d869f5286c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8326e3-cbb4-4d8c-abdf-e9bbe9b1c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fdbfee-425b-4800-bb18-aee97e9b2701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad216a5-2ead-4c86-806e-7aee1cf7af16",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4704068-88e0-4e74-b18b-2b5fc5e3933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4f659a-beb1-4257-b722-21cfbc4c637b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16accbf9-1555-4f1f-8021-dc768b1cd7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cce1ea9-738a-4430-a4e1-c77afeaf11ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd1a502-4200-413b-af9a-105ee8a65ea7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4baa8fd-7fea-4d92-aa6d-05f1a76613da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327feb82-b046-4eee-9e32-9ab90e74c63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec620a9f-7428-4e8e-a7a5-e25b2664d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5994d363-ae73-44a8-9967-b173ec490bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb01865-7435-451f-bf50-243abab676e2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ebd82-2502-48e2-918f-fd28068c1736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ff9160-9dda-42a8-acea-b2abf73c2c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6489d29d-8a17-4891-938d-14506b40f33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cabbb8d-4d17-46d0-a5b3-fa0b4774443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d118b1c-1efe-4408-984b-c1d965f7cfec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725124cc-fa2e-4c8c-8278-6b4b2d3c4177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c7ebea-b1df-4290-a395-ea2252dec675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9337d8b6-5f98-48fb-8304-bb4fb3b8480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b54bd1-3df5-4df6-a48c-62249e0de3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13941e49-5abc-46e0-a0ae-b5ca15198bc9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3a22a-d485-4938-904a-1814701d5346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdf251e-5b96-4093-9599-6ed4c2cd1c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca56ea16-e182-4368-8be1-c598a5c0e423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667f4ed2-819b-4e7f-a24e-5aa658e390aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8464ba99-0468-4cec-9b18-204e8d34582e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508db9b9-cf8f-4f8a-bf34-96cd039c8313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e99c99-556a-4142-84e7-823e045b969c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab22de6-9b0b-4cfb-aa93-f1fe5489da80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2f044d-8b53-4889-9ee5-4cbd42fe7730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdd091b-4db4-4be6-9538-f164467eb509",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e742c69-eeca-4900-9bdb-7c1fd4dc9bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bff0d15-61ab-4375-96c2-10bc2b864260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740679d6-ef8c-403e-9660-16f97d11bc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "febe8800-ed08-41b6-8aa8-1cd555312660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c1e405-35ae-48f9-850f-facfa0310256",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fa0d4e-9355-4848-a7be-5099dd58b529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87b20c5-a7d5-4de4-9400-e4519c4805d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a0f534-fc26-4596-afaa-24dc138c0670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2493a06f-ff8f-4442-80d1-e4d154e30b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbb33ac-3cd4-433c-a9ca-34c818fbdd3b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602fe375-808e-49bf-bd9e-e5c82036fe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ae0e1f-f9b7-476b-99a5-5a2d09e68778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c025bb-1b85-421f-b005-8992c50374d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7400aee8-0591-4bf7-84f2-260071eb3cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c0801-0c87-4723-b20f-f519596f27e9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd999e4-80b9-4d53-bdd3-62eaa64a6510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd1ace2-77d7-4574-a9b3-10de094ac897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3660f9-17d2-47f0-b416-223ad5ef354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "710e925d-e371-41ef-8994-4ccc7c08504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5de127b-2101-45d5-bb22-874d75c0da6d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e5112-7e81-41d5-aff3-fa18f8fc4c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5428ed81-7e05-424c-be4f-fe404266b4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa11cc0-6280-4ddd-bf57-37b6aabee456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5892e7e1-1afb-4c4a-b100-71fd0f3afcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df42e4-5c80-45c0-98bc-b30edd2dd9f2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf8fa9-9693-4649-94a5-32d18ed77a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac70d52a-8811-447b-a792-79957592e665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bf493f-1276-4930-9ea1-001b874c8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec6df2b-6c8f-4e67-855d-a3062c2769a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda8e6bf-ebc6-47fb-b840-6e16f850c58f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f7717f-5a4a-451a-b569-3d62d8b246c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a3c700-1e57-4d87-8951-53d936530e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6aeadb-a4a4-48e2-aa14-ca6a39d9cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0586bfc-36d8-444f-b07f-6e8fea582ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2b8b45-9fb1-4dba-b36c-e063c0f44632",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5872ba-26e7-4a18-b46d-384138015759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b27499f-fbb9-4fbd-93ca-3db78cd10684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42656a2-e5c4-40cd-88cd-bf331064b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e2c2e9-be8a-4bf3-af79-d85cd246d497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7a55d85-443c-473b-a104-815e3a1426e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3e27801-c0a0-4cd5-b76e-99a83f153e05",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e43bd4-3e52-4688-9b44-8cbdb9e63bd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7579f881-4869-436a-8bfb-0ebe6ea81f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc5557f-bca1-485a-b572-a71ac7b4b056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6fb6863-82d6-48f7-bb1d-7df143505f10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc628150-cb60-4326-8897-a78e9e804563",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d6cb00-4095-446f-8c3b-eda1a2531716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "709a7615-be02-4295-bf30-3cb7ec55ff0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17aa427f-f431-4fbe-afda-73eb9e988b4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9adf2c9d-b51f-46d4-ac40-99d7ff4bbd75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81098b75-b8b6-408e-b36f-8a505b2e3c1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3559509f-d26a-45ef-8ec4-8a1c56b7c9f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "239a4068-9685-4f6f-8dfb-445907f072f8"
            }
          }
        ]
      },
      {
        "id": "54af8302-8367-4b83-93d2-0eb784fe12fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "886abe41-743b-4bcc-a7ae-4f59ae865246",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebc5e4c8-6a4f-4c30-8a4e-c7b4e5ce8030",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d820874-7723-4ace-b57a-ad2791807bac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d42fc4-5ba1-4b6a-93cd-460b86c659d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f0a0d0-4767-44fc-9325-769fadde4a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb09ad9-43f5-404c-a665-3d9cce641810",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d3ccd4-b2fd-42a0-9e99-aaf81439bb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6144055-81ce-4d44-9fdb-5e53e8167475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90c06a3-7190-4d0e-9ba3-f54a35744d6e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ab87e5-9ef9-43ec-9728-f878a799118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eb9bd4-ec0e-4cc4-8b92-fe12ce0e66b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b894058c-ba51-4158-82d8-e02851efdc29",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b8bf8e-c618-481a-b958-9dbe58521cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9163fac0-6f70-46de-bcc5-484eee42d216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef410fd-4f79-41c5-b901-80d2a774e5d1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93efe2e-221a-431d-a680-4161dbf1aeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90153824-0e7d-4332-9196-c992f2c39127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e2439e-1663-4944-991f-50d36d9f48c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed183ea-a740-4e52-b552-adfbc2b570e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750abc68-5d3b-412f-8a54-03a652a89976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d711cffa-7e79-40fb-b0c7-e600990dddb6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848022e3-e674-4440-b568-56c266a198bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c805c1e0-8304-4552-9637-2f9026303b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd68dd2d-af05-4681-a067-ed7c672f586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cd94d3-2ad0-4aeb-be11-607764d27f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c3cf2e-0320-4cf2-bccc-1d5503ed7b32",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43028593-e0de-4cdc-8dac-298082dd7f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f630e9f0-b693-492b-b9c2-7bfd88006e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0907fe00-8491-40a3-8ab3-619a4a33dbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5304d966-15c1-4391-81eb-71d54df4d1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c1baf7-3b7d-4eea-9984-1428f25b3122",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147179ce-7b2f-4ca3-8e01-b92d38e17358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddcb457-5ced-4667-ba8d-1fff0665aaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b02d64-92cd-465a-8a04-04af289c1cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c84c74-a6b3-4756-917d-3fbf35e9517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538c9911-0e11-4b85-a145-d599f9481675",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eae8e9-2906-4ed8-8169-d91fd385ae44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7af72c-2038-4181-b1ef-bdb7b3a8b426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311aae0e-2654-4a40-8d2a-d2bfd8a382a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89e0ad-03a0-49d1-904a-9f1dd32c5aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0335f96d-3092-4fc6-994c-f7b1e2c90995",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b237d0f-481d-4ea3-9425-ebc3c2b1320a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24113247-e4eb-422a-be3c-3c9cb452e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3a98f0-f20c-443a-8413-56ec5f719a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07927ff4-e166-4246-bcbf-8ec815ff1089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b37b116-3ccd-4f1f-9fbf-38fe1bb77aab",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd8f8db-22ff-4fa7-9805-8d340ce87c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0f7723-b3f5-4e58-8eef-078d8f890502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f7e15-c18b-4ce4-86e0-4ac598b8f03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d6707e-be9f-4b59-b836-059b0a9db0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2a6cd2-b0d2-4fb5-b7d4-cda4104007b3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9138133a-5b17-4096-b537-2386d9e97dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d7a13e-6db9-4e8b-9162-b30c0d8b1df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47946627-6f33-4106-9c9f-b78918d86d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b1f8e-e013-4c73-b92a-1cbd38e2cb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e11a1ad-1b14-44aa-839e-0913918646d5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47527977-e040-4a40-9bcd-16fe64eda824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca89867-cf9f-47d8-b79f-07afb0206566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2229a65f-3998-4966-892d-182a1e4b808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d790d6d-ac7f-4919-8386-177176cd95dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b09e76-be13-4c31-ba2d-187fa4014096",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb78d2ba-7600-4e81-8a19-0f060927fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774da28b-9b8d-46f1-9e3e-fb6f2914e4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b65bc1-4052-43eb-9043-c28ab60b3cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2122b6d-aa2f-442e-a9cb-1855e123d377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57368831-7ee6-4e53-8e8d-4fe0cc00ea1b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a5f443-7a99-4f29-8804-5ced4a4bd591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764a80d1-eaef-46bc-bdda-ffdafcb16a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5c9a82-372f-4316-9bb4-c02135bf8bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89325760-d740-45fd-a5b6-32ba2125ac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a332960a-eaea-4ca2-a4c7-7ce5c890826c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1454ba-7791-461f-a0a9-c796e487c204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae03d5ba-1cae-480c-b385-f84d2c091f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb53f30-8391-4e64-a036-822aa69a564e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1087745c-1113-4fc1-bdfb-d5f8458e0d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9976db5-9c74-4bae-a36b-e939240db347",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9690bf-3630-4c80-a002-c72c205038b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aa14f4-8967-4a3b-a82a-208bd8a34629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ce2dc0-9603-48d2-9a3f-2ee4b9c17860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c57e2c-0c8e-4fa0-beac-b95e4ba199d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a677e8f-2489-4176-8f27-011e66a10358",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6e36a8-3032-4a6a-ba16-de2b1fe2f721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79829fe-8295-4f8c-adac-6f7f854736a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fd1124-66ca-4454-8a54-dcebb2eb4aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf85a42-5f05-4b7c-b3d6-6b5d06bff180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d7d029-71af-4c59-b15a-840de799e1e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ba8c05-149d-4100-b1f1-bf8b98915010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afc4296-cbc7-4d3e-8330-ebca1c376830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7868776c-c516-48ec-bea6-94a85f702464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e15e69-b2b7-4d52-a6cd-8d2a9a6ca651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44221057-2d5e-4e23-8e14-63d5836fcad1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483e1558-d7cb-466b-b521-d1854a119b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf5d9cc-bf25-448c-9e15-267985fc0ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0813d97-d0dc-4d84-b23b-8ab984c5d8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30057b29-a73a-478f-998b-b6c85dd61a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d167ac7-3deb-426c-bb5d-a9309a2ef934",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a357f5a-00e5-4413-9b25-dc62c7d4beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97534f5c-f26e-4fbb-9546-9108dbdd86fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c939546-3559-49c8-8f8d-0139dbaebf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4859c-6d83-4c15-8bba-a4740576b396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113b96aa-a48a-44ad-a0ce-47dcb2d68a4d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70b01e-d2ab-4839-82a7-1cccf6b8113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80742663-3185-4aa6-a459-b031ee8ad9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428aa24c-29fb-415c-8f49-4397950cd8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430cfe5f-70db-4101-9b98-ff01c03188c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce0174c-0c6a-434c-9291-c32ea687e10e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe582844-05ca-4c49-b06f-e8571f2b37e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebba91d6-aec3-42d3-bb79-1811fbbb5c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a3f21-fd92-434a-bf2d-1fe5cbb634d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebca059-a648-48a1-bfb4-70d08a482443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb5026-8016-4d34-a224-114e574e750e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34e29be-67fe-4aeb-b89e-b8b76848bb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bde4c90-5750-491e-8905-63f913565027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287aa12d-e58f-476e-8dff-602b724ea81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2e37ff-9351-4172-9916-4d1b87ff3da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46e7d4c-f901-4a37-bfd4-368f385ecd5e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd655caf-1e0d-462f-afe9-c81111eb6b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392facd6-97eb-4758-b859-b4ad4f8ccafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e3b6b-ad9e-481f-880e-56ecdbefb7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00be255b-8149-4bd3-970d-fc0ce476ea1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4261618c-5c8c-4f27-a036-4b40b245afbb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf86955-2b86-4640-b413-67bffe9340d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1633fd9-fa5c-4413-95ba-18f67900210b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15923c9-9b6d-4896-bcf9-fd5d05205178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4209988e-14ad-4ba9-9e57-0b5d4fe7f804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfb2fc5-c5c2-43a8-9d09-fad0514fe808",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0fe44e-84d6-4246-be65-eb3f7fde3864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f273172-a923-483e-bf3b-b3daa5882135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec53251-de89-47d2-92c0-3dc8bb6c58d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b80ba0-0b25-4644-ac14-cd578c910a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fa9785-6133-4d7d-8e3f-db6c187ceb19",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302b2515-dc47-4c4d-acfc-0234bd2ee94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b54a39-6e6f-4b29-9a7f-009eae63ec07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb3e9db-d427-4d4b-aad6-67b58c24352f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40a56c7-58d1-44b2-ad41-ca1ba154abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9513c768-7c58-4d36-8aa4-8e55f83d4071",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ca4be-d630-48d5-9eef-817b2e71cf34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e712ef48-cff2-46e1-b99d-168d9e15196f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34765f5e-75f6-4672-a5dd-cb6b6b658145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f7d3d6-5409-4060-87c2-348d520bab51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d370e600-bccd-4d28-9e32-0a161ad48f4c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a5a3bc-e7e2-4982-8838-7c8e82404243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46580395-e6c1-42bc-9364-9daafd3c3c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6524381-1d23-4c2a-b80b-1a3e32e8ae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78593b98-b8d6-45e9-8ec1-f6dcd49d0bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877d840d-f0d3-49c6-bece-c1e086aa464c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f7d853-54fe-4fd3-9e4f-a6be99f8a30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d4b8fa-caf6-4fbf-b010-58e5793f800a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ddf7a2-3b53-4736-9201-d09221449fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200ef56b-b06e-4bb2-9426-e38e1cffd1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c2d93a-4a12-4213-bb79-b7bc2ccb9572",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c9f232-e32f-41c5-8547-d4bbe265cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f529b84-ebab-4bf3-82a2-1c3ebba5da0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6a4658-58a1-4528-b0f2-5acc9bfa3433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afa0c59-465c-4320-bb98-1d91380e34f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d85704e-bc5b-42dc-9934-83d6b62f07ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1027dc-d2af-419c-bbeb-e385bb167831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1662a753-3dca-4315-8e96-788fa9f421c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619dae07-4713-4fd7-93d4-68dff6df7646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c7da66-9f7b-442e-99e7-eb54bf8ba890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d018f53-3a0a-46f5-bad1-37d68f7dbc54",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f235abe-f287-4fef-a1b6-68372a6641b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1afad2-7a03-4426-97ac-0c184de55e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39df67-515e-4c4b-a47c-829ed67a3d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66073ea4-ccc4-4389-a7d6-b4d145e5f2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dcd709-f68d-464b-9567-966b3e0db4ba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69543e-910e-484b-aa00-439420ea541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de72283-fe10-4d95-a40e-b3b355689842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e7d93b-13ec-4a73-8491-9ef76a7fc4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb44945b-12bd-4108-ba2e-c3a23f989307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acd17c2-c506-49ca-a225-cf586bf50fb1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e27d9e-2305-467b-898f-bd637ad91b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cca678-ab62-40e7-b599-aecdfcc40242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38727a7-b00a-4bc3-a6bc-535c84c99b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28065e3c-b636-488b-8db7-8166692ba819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1119c50-1ba0-4ae2-9ac7-ed1f21619c3a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cd339a-cdc6-4c7f-bf37-cf47fb2d7117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01141228-7f9a-4926-a5bd-4d276f86ff30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f29e89e-c47d-4fd9-9550-c37e0c5f3f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77996418-4df3-4852-9116-e6f8545d14bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc678db-2415-4ec6-8a47-dfd62209670e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b87ac2-e2f9-47bc-aba0-976adaec4883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e955593-6d02-4945-a356-58b78dfe8253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63a0ad7-4ded-4e1e-bea7-30ebdcf32707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f89a0b-224b-4377-9f95-9e95186a901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464b5d34-c4ad-4f9a-8fd1-721a7d73646a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc6e894-3209-4a83-b2ef-bc4d74e58021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a4d86f-23af-482e-9432-0a17e883957f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b849f14-ce5b-438b-b6ae-058e1b6722b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d4bd70-694c-46ae-b5d4-39f719d2ebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ccecc-681e-4f65-9efd-cc16c684223d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4089b989-2768-4e0e-8314-6a5f5f5306c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c4a4c1-bf44-446f-8f31-1b9cdb9f0a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46fcc7e-e870-4c1d-ae13-0de6181b70c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13427c5c-8da7-479d-ae6f-5ef659bbecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c43b4c6-5bbb-4cd5-86e0-9bf095e5509a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4952912-c8f4-418c-8519-4f31c621d6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dcbbb9-05c4-41d6-8b2d-8b467a7a28c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ecf7bd-609d-4d09-a5fd-8b0a81a36e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf328a6-2276-468a-b593-cacbfef3a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b053227-55fa-47f6-9db8-11026dec46e6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a656468f-3b83-41c4-8343-b73561eb015b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1184d661-6622-4611-99a5-cb57c34b248a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37216bcd-bf56-4b62-ad92-659e0726b93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103ffdc8-2cad-4453-a778-c2ab30f26f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04ebe14-b9b9-4fbe-99f0-3c6bf094552b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ff240e-0648-4c11-b290-ba7326436aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fa51b3-e08a-4a39-bbd4-d3b9f507e30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e096f8a2-8dda-408b-b41e-3cfb8e6f66be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5780f9-580e-47c3-b95c-8171d697fb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97134954-41b8-4649-a0c7-9ad1fb9cc892",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebf0d0d-48fb-4d37-83d1-d843a66b307f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e703e96-d869-4ea3-84d0-ed77270827ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcffcb8-39f9-4390-b01b-c95ef1b185d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04c07b6-5ace-4a2c-b2c9-e1592afe3eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8554960-1ec6-4281-be73-a8245fab91f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d619d32a-fdd2-45ee-9e2e-aca135e00d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff782271-50a3-425c-b61a-49933cd35722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45714db-84d8-4656-8b08-36603230cab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff434d3-81d1-4199-8938-03d9a3a81ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835b6047-5bcb-4742-ba16-414a46118d69",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169729f1-1cde-4eb5-9561-d91900a3d362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48efc44-9b52-43f2-a9d6-905091993b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c5aed-68a8-410e-984b-3ccb681ddc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8138514-5a58-4f01-b2f6-b5ea335e9edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c416b9-f6f4-4c2a-8140-a4b66c397306",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc56f65-16a2-42f8-82b1-2968c4e147bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b1e73f-7c80-49c8-9201-5097bd0e2bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2bc2a4-3494-424f-8fb1-ac25e3d1ca4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650c21e6-5578-4a06-ab39-68c98c074191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39aaba9-66c4-457f-88c9-6fc986a14310",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb87aa-28ca-4e7d-905b-13b3610e9455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9b59f7-3ceb-42f2-bd8e-e13543848a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0169cd3-7cdb-4bc8-a290-82abb12f0383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df7dce8-6b47-48b2-a54a-859bc223fc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c587e8c1-4749-4f9f-bfcf-9e11f18491f6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bbcaf6-f4a0-477e-bbca-ed089443644e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0185188b-dc2b-44a7-ac81-cc80ec2c31b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d52059-4676-42e3-b700-3a939cef02c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e73aa0a-3c6f-42b5-87ff-20f216013642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a8b5ff-ac65-4e2d-9b84-db2e1d21043a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24964434-109f-4287-af4a-60003941df01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfbe894-f6ee-4b5b-af91-0671d166ae39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf18134-d4ce-4565-8693-392960299f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e890c8cd-2e47-43f4-a9d5-bb1cc42e64fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1140b4c7-6e7c-4ff3-a859-51434863fffa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446b7828-0eb5-4bac-950b-da9c9d672667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135078b0-2d6d-4d88-9ccf-a0fbae981461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ffef83-e9ee-4f49-a517-70983b19b25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d924aa12-0dba-4626-9a94-b2fe08e801e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090917fa-d502-4379-9ead-0acef65bf0a2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98de43c3-e74a-4d73-83e1-fc3267dc4b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51772d0a-af9a-4aa7-830d-4ca972dad662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0eaf81-47c8-4d74-be25-d3b81fa35a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab4e866-4ab3-49c6-9699-aa93617bad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30dfe90-ce9e-4654-850f-9201048c1a2d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ccaac8-5552-4f3b-a0ae-3410d250c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fea247-4ed4-4337-8cd6-615491cb9c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b97c6a-c440-41a1-8039-099d4b9ffe0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a4c0a6-6345-4d04-b64b-1459b1754c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af96d76-f035-46b8-8a4b-e2cc5422fd89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f5900c-e0dc-4edb-8670-ce29dcecc5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c75794f-2113-4d72-9f3a-f90c2cffbc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6ad81-ec9c-4436-b1c9-b5d9432f5fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08bcd11-4224-4e16-b28a-99a661d5e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b64e76-de21-430b-8f14-ce12ea068956",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b11534f-3dcc-48b1-add5-352b102a4bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b66608-6ffc-48ad-99b5-7dfc9e0cef6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b4b48d-cf76-4530-94c9-ca75eaa730bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9849ca-55c6-44d9-8e0b-d6671d939970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd69fc20-b371-4a28-8979-8e1e7679d5ed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eefd17-d382-4557-b5d1-37e57ade8447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6052c498-8d6c-43fa-bd9f-a5ade8be0109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15740d1f-f6ac-450b-a6a9-7b1be05f209e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8545f3e-3b60-43e1-b554-aa9561001ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9edefe-4a85-4a2c-b06b-d5ed5ab3f9cc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bbe657-2e3c-4309-8b0a-2adb95c3f146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de358ba9-c342-454b-8494-9c17e9aceef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f34ab07-82df-4cc1-9533-4c14e425cf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02d62c2-5af2-4ef3-a288-98e40879d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0493d41-fc74-4e1d-add5-48e865b9125f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea590d-7a64-4ac1-b4b7-576f6759020e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4eeee3-cea5-43d2-af6a-b335ff96ec30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67638894-85a6-4bb8-a0b3-d8183ef87644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7797b14-bb0e-4b46-9684-d1aba9bc7821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1728ef64-6c5c-49f0-a2d2-d1325674bfb1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c011437-44cc-4d72-8db2-060ee491dfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0461f6f6-1156-48b3-8787-31908d6d4da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e684695a-a95f-45ad-8a2b-017e2823d613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc728cd-dbfc-40ec-914f-8dcc85ed9376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d533ea-1d76-4f8d-8337-208255270e9e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a2c3ab-018f-4d21-8230-3da918d3d924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e724ca74-1ac0-4a67-aebb-fbc26376f0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40867d9-9577-486d-bb14-406402588cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a84292-907d-4172-8f70-7530ad014784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3058194-5bd7-4982-96e9-7f4199566b09",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334f8721-7386-4a4d-918f-efc698138bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9977eb01-52c3-4906-8a94-1e5ab5853007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbc9525-360b-459c-808c-47d141545305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91a61bd-4aa3-4c49-827a-fffcf12a723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749365eb-9bf5-43b5-8ffd-5b18cf9cc986",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e03ac9-d6cd-4bb2-ae52-6a574c4b4725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe9ff0c-8f74-43e7-9391-50de898f4eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e887a1e-9782-4b42-9649-9a645b571532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f728cbc-0b55-4064-b8c1-ce73f3888805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a06c5-d19a-43ce-ad4f-3f9736137f39",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b11976a-af18-4d09-ad85-f392b6ddf883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03771db3-a9db-46a1-aecd-a586c2eeda59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2ee872-fc99-4971-a2f2-565c8496ff87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5a66e8-c2eb-4182-8ee9-2ee845925e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e263713-b953-416e-98eb-ad37508fa627",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1d0af-45b0-4b8e-a391-70f90568e360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad3cbc1-192e-4f5c-b7a1-ed181d5f0b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe359d9f-a165-4dd8-9122-6169871fd808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aeea7ec-5bc5-481d-b30c-30e6a8e6cb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4543c9-d15d-4bb9-a2fc-835fad0aec12",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b41f18-b4aa-49a4-9065-bf3a240555b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80aa774-a072-4dc2-9e40-f92470774cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9b6c11-0615-4362-8252-40e5010af559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ef4d34-586d-4488-bbf3-818f50184c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3833740-a1cd-4cb2-9bf1-8f41d10ca473",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f0e8cb-cb23-4e10-bdf1-51d61e82cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521d9b42-12cf-4954-bf20-9fe0b2b09d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a78326-25d1-4aaa-af20-6a6221197e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3215467-8379-4e50-977d-0c59b8f1dd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ef9520-d2ca-4552-b13a-3e757a6b76f0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82967cf-1f71-4a52-89f6-075f7fa4bd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036cfbfa-3d28-4cb1-a0e5-efc3ee125097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ca905-25a7-4828-94ab-ff1dda9cbfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6352ab2b-cdd8-489f-bc03-a74b37b39f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6727be3c-ec78-48c3-8ad4-e67b9add6b2a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67bb057-b3c4-4ab8-95a7-61c4da954891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8e4161-6f34-4eae-87bf-7003092ba7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408ee842-a402-4858-8ce9-fcdd7a9a4ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5c9d53-0725-4a1e-bfa8-c28519d9a689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb8463-2d53-4489-923a-7925a6fac6d3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e82d32-e46a-427b-ae18-df45dc19e4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1152c7fc-8284-4633-8b0b-10b44f710ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002e8360-f636-4924-ae5f-1ff65144867a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3858e77f-3287-45ff-849c-4d5a8a090789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec3c4ed-b1b1-49e2-a3b0-071f45a02406",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1232cd8-8f68-4f85-9069-bf80d53d8857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0b29ce-34c8-4aff-9ef4-42166371e671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec27d3a-ffad-4228-9826-f94107b1c908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5720221d-00ee-482f-b3d2-62d92dd677a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0334f1-fbfd-4c8f-b851-4c6036799d51",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bec8fc4-b084-4329-8074-05e3aaf1a816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f76d50-a2a7-4562-9e0e-e8a68c0443ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d40a25-0d1e-4e6f-a365-a2446a8e9ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa29a0e-c6f6-4342-8238-e7df93c650a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b25ab4-e7f6-4f00-b48e-c4e0f17c157c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de50a3ea-5d95-4dae-9750-e289ec8d7916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7371919c-31d5-40a1-9233-71b16067f1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a65b5f5-e39f-4d40-a3f0-7bbaf31fcca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c43b09b-191a-47ad-b863-593094721b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ebb367-64c6-4c6d-84fc-30ff49b23133",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b8b92-02de-40d0-87ad-33512e12aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f314d020-00b6-4c10-aa03-70b07b9f46a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7627a031-9da3-468c-acf4-5732aeea54c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5a3735-d13f-4770-ac0c-5a762bcdf676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860bfa0b-c535-4f02-806f-cd99052e4274",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0183bf3c-33a6-4883-88a2-8e845b5363c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ab8293-a4b3-41d8-83fa-452c49d12bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f982287-071e-47a5-b049-37496f770a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef47855-c798-4565-8c97-e41f3b03093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb7083-bc6a-492e-8d7c-b7016e036b96",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebbfc0d-1219-449f-9041-a30b4eec86bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63ccbb7-d35b-46a6-8336-2032012de926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7c4af-a169-4a6f-96d2-867b8af8bbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd601c54-55d9-4f16-b61d-76742e863293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2b1cd-8877-4877-a2f1-9610a6a9119e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc0c914-42d1-4b62-8ec5-09a3e6631cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f5b2b9-8db8-49b5-a3e5-8b73e1483d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b112f70-1cdb-450a-8315-e2ed9bc1c63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c0380d-aed3-485c-871c-aa4981b5fa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1abdde-5057-4f09-ab02-60c94b6c1024",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33feb81-d03a-47a0-96dd-500d8cc10e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9464576a-e0a0-4c25-9d9f-96b48409ecad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207aa4d6-9f18-48ed-b69e-73e37ba9b8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b020237-e143-45d5-b21a-f28d3dedf914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b3e29b-73ba-4065-8069-b8ca7c177b48",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd81d8a-f048-490f-ae1d-6d947318327b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e501883c-806c-470b-b40f-498f09e76604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8d015e-84c9-4d67-b591-bf1a86f05670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a76340-1549-42a8-9cb9-9b7de028858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2083e3e7-5191-4e82-a215-c88ac46af187",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105e579c-2bfd-4451-921a-e20ad8896d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06684f33-a7cf-4cbf-86f0-489074e8eb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d52aa4d-dd63-4d9b-a692-9ee2a912cb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6912aca-07e2-42b6-87ce-0bc2a8496ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfde04b-d2a5-4ee7-82df-fd9f8bfd4356",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e637cef0-711c-4d44-b01f-15c179341724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a427867a-072c-4df3-983d-fb392dfc3cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aaba6b-a80a-45cf-b3a8-ab33d81c3324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cefc54-e550-4858-a06a-ea8034af6472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa9cde7-7866-41e8-ac38-522c388ee4d8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e1e739-ea16-49ea-85c0-b5a594fcca7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c822b7-d8dd-43f1-b316-9b6e03ff1eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05a54ef-f914-48be-a600-989ffc62fe4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5baf51-dddb-4185-aa3b-bcdce379a34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1920b9-d564-4a8f-af98-0f05cda39f69",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094e4ad3-2912-46b9-8fe1-e04f59515be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e84d83-19ef-42ef-8796-d6354ffa5044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4b4411-7bda-4bbd-831a-47bc681e5f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7841aab-b2e8-463e-b70c-e6a8b261d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1957ad-4d42-4295-b206-fc42e0f9dffe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bce9a9-e98b-4d14-94c5-b34b9bed1656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b8fe71-17c9-4d39-a3e4-d205fa96796a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a15f958-e1e3-4b67-b919-5cdea4408bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7531b6-6760-411f-a6b9-e4fb0b8b72b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10a422-8ac6-42f7-baeb-efd23fd5ae6c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b51892-d242-4dc5-be01-dee03ed012eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a910976a-ca23-40ff-b1c1-43c3af641018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97f3201-a839-4e46-9256-5725e3a8b6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c62986-3927-4720-adf0-ff2412a0ead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937bb3ce-ee07-449f-9785-bcf1a9c37fe0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0608cfe6-a94c-4d53-b65a-50735a705c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba21a03-02cd-45a8-93f4-fcaff590cc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6e11e1-6e88-4880-ac7d-cc8dfb04f69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbaa6b6-7181-4032-9687-c44458c56f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c0e28c-0ab9-4e99-8c45-98246b3709e1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058b66a7-7cc3-4fd7-b1b2-406deb298843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac12a017-c9e5-456c-b20d-d7b0fb09c08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df373dfb-1dcb-4acb-8286-c7a3c0140b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a303ac-3a50-49d6-9064-f0bf3785e53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26978ea1-8f04-41ee-a7c5-5d2c4ca04253",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d2f509-e8ee-4935-b1da-af69c7467e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f5b3fe-6dbc-4162-9353-f067c80d76ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e13c18-28fd-4c9b-8ab3-98c0bd183e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1a67dc-0866-456a-a064-198ae30966f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d9092a-8d87-4398-86bd-46f876c4aa51",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179c2a57-1114-42d6-a886-e2b43e26b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4bc50f-2ce9-4397-9dfa-ea3d44e22122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0c6728-580b-4e54-994c-9b1e2a18a8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43cde0e-c899-4c59-8172-e8da2ccd020c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fcef37-740c-41ea-8625-7c28e648e804",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becbae41-fdab-4410-b45a-926e02f9f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dedb7bc2-302e-4a2d-a22a-67c1cf76977b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7793c6c0-2d24-4c5d-97c7-9ab81336c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ce7057-53f2-4e3f-819a-698f1f325700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe255d8-fd50-44e5-9030-d582c26b4b59",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068eb28a-7839-42f8-ab3b-1abb8fd7efb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1d2978-c1db-402b-b662-6518d0608338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014c421-2ad0-4afd-808b-9a0b7e283f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c62bfd-ee6f-459b-8230-580b93d63aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f499f8f-94eb-4294-b313-50899b4fccb7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48903ef8-43cf-438f-b067-61c48088d410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26905733-7084-4977-b5f1-d2a076431133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f72c46a-25f9-4a5e-acdd-7a1a6b0c9295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ce945d-ed2c-4f26-8d9b-30e410e7a57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c7356a-fad2-442f-bfd8-34093f072502",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9141bd-ce7e-4a18-9e0e-61302b314de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277b306c-5ddf-4c4b-a742-df7dab9af3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233b9607-dbcd-4675-813e-dd901135e977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c7ed23-0815-4194-aa41-b4852362ddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32eca58-f7ce-44ed-8252-ccbdfc84cece",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b8228f-ff1b-4e54-869d-1aa12d5ee2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2279cd65-e4b2-4c73-9bba-85541c411a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318712f6-2313-41af-8b05-380f2f9df264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218ecf1a-8f63-4e34-b744-d94f5959595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f4d9f-56b3-406e-8615-9724d5234886",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88c09f8-e69f-4086-92d1-47645df87a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb0b0a4f-84ed-4527-8f6e-634fa5cc073d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6009ae6-159a-4337-964a-a63fcdc40b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db42bbe5-30cd-4580-b904-befb016fbc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4ce857-d50a-4851-8be8-11125b24e978",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66ed59d-01ba-4690-8962-7ac3f0e3fba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a769a2a-6930-4c9a-80be-432499c61852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2e7f05-aada-481f-b220-78a0ea9cb5a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe2d55c-9ec5-4061-ac5c-cfd935c975a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473ecbd2-a5f2-4426-b3c5-46f2a23f11e7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a00db2d-11af-4a7c-9858-d0ae102faacd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f034d6a3-851e-47fc-bd3c-d69352412e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee671d7-0040-4e23-b743-8340b07f6621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23d0072-92b5-491c-ad21-b6712032c6f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "296e964d-f783-45d3-a78c-815ece8b922d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2113efc-019e-413c-a56e-db2c2204d0b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb0df5fe-ebfc-4d15-875b-42408ff86e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "912d46b6-b4d8-4357-b6b9-bf998a36811c"
                    }
                  }
                ]
              },
              {
                "id": "edd92c62-ed4b-477b-8db0-b4d62ebb0d60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5635645c-8767-4fbb-bae8-3e2136aa9c38",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551c32b7-7ad4-4b5e-9197-4f0f080db23c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "57f0fdaa-bd9a-4ae2-9eab-87f1653aa7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de63dfb-a2d4-45b3-b64e-084babb0f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3482f53c-ed4c-45a2-81e5-724f9a2853ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "437e4691-606d-462a-91b3-ef2b03000167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06f22b77-b669-4e60-9477-5d31a68d51fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19f98d3a-99b1-40ed-80a5-8bbebb434d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6085d832-a397-4906-a7ad-27e1cdf6a36d"
                    }
                  }
                ]
              },
              {
                "id": "3bec6ff5-ad2d-47b5-b529-3ed8ff95eb89",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2ab7a2d4-ac86-4563-a981-8ca535d61c2a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5150d04-2b52-4d28-ad06-f973bbbd84c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c340e3f0-c753-4e8c-ab9c-680cde5b1e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9fc32d-5d26-4816-ae52-0c562163383b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01c4f6d-f77c-484c-9607-b93712a85243"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d6a08bc6-eb64-4c7c-842a-cdd062a9f1d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c8e549d-3014-4a43-9c2e-8ba8c85c15ce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f0f1da-9798-42fa-add9-0bfaca83e0ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fe1b2a68-b8bd-4958-afd9-f27a4bca1341"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "814f0abc-b895-4b68-b5d7-7e7271508b1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2b3f7c3-a318-4702-95e1-71f15d64f862"
                    }
                  }
                ]
              },
              {
                "id": "416edd8d-9923-43ba-b78b-7677c0cee88b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c643609b-ba05-46d6-bb13-89458c1fdc2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "255a99c4-a991-474a-a529-fa253afb60a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c271d7-6c52-40a8-ba2a-eba598ada3d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0fb6c2e-71ec-48bf-b1e2-d236030c3ceb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f14097e3-dc84-4a39-8b6f-c2960133263a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "90fdd2f1-2f3f-43d6-bc1a-e58cfe74ca36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da1e33b7-99a7-47a2-aad8-ec807283c2bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf776f08-ac34-4bbf-b263-7c096fc84b33"
            }
          }
        ]
      },
      {
        "id": "dc05034b-e92b-471e-904d-842d0d7212d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cb9d9f53-186e-4cc4-9e8f-14275735a4bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a18a802-bc71-44db-a4e3-fe1a03db7ac8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d9da76f-8ad2-4dc9-b7f0-1bcd1ccdd055",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e556e0f5-14f7-4ed2-8e32-64d22f43a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9894407e-53df-4d16-b26e-da2941a4dac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671dcc06-4bc4-46b3-882b-2f50b9019a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a4b6298-cb26-4245-b172-8fbdaa86ba54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f815668-4336-4a83-b4bc-3603bf30cb85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44dd53e5-716c-4d28-9d15-5f61cd6b58bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76d4edf9-09db-4a5d-a5bc-3751206df1e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4373ec83-b200-4b80-bad2-31ec21b3e1a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5285851f-d091-41dd-bf23-9973240d16a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7ac4b2b4-1770-4bfb-a238-32511c0a15f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffb8df14-465e-43b3-b829-068c3375b262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92db2500-ba1a-4447-b6a7-757af4a37110"
            }
          }
        ]
      },
      {
        "id": "753aa4d9-e1e6-4c53-96fb-e495304b0d37",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d51f35e0-06fc-42bb-b178-c79e2992bf2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d96b6d65-f1ce-461f-9d44-192a7ee77bea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ed72320-de21-45ea-8add-24a8f174f669",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d27ea-6791-4504-9d04-7eccee6ce09e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d06499-5bc7-40fb-b125-d347f9f5ea72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c0a4ad-fc85-4569-878d-02ec92c5b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73027773-8fa5-4e81-9fcb-647630be9bca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77988c8b-ca89-41e1-8e86-5a507232b484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2965b7e5-f0a2-4696-875d-236fe48b7463"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bde10915-14aa-4762-8276-a9958d698b46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97254c5a-59e8-489f-88d1-83a067bd97a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0c066dc-03b4-4b09-b611-1d1ccfce58e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06683901-e456-41de-a901-7ef85e2b9753"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44f4f503-c8da-4c06-a073-f19f0f105fa9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b0fa2e2-204f-43ff-8d8e-f441bb741191"
            }
          }
        ]
      },
      {
        "id": "0bf423bb-d62e-4ab5-962b-96ea6ba5264e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f5275458-ed4b-4f30-84fd-452394142adf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e548529-6b6c-4ffa-a6bf-2966ef740045",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2385ef66-453a-4ec5-b5a1-aeb2537e538f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ede27f-be6e-4f31-8bf1-d9ed46f9dce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0302c72f-9dbb-4e89-b188-b733d6da949b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce54348-7bf7-419b-a111-5107e20f1673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f03bd765-e8a1-459e-9f84-dff711f7b37d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a19c916-b5a9-4055-a669-a56cc930fd2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a9d14e-5c75-47cd-a583-0fc63a80eb88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ade9973e-926e-4aaa-8d3c-21652b90f034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0958dd0-8315-4214-b445-8a78c09ba3e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519333ec-6a4f-4ad1-adc5-10e1f853ba4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fd895d6-315a-4b7a-b173-cfec38941431"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "611a535a-1dac-4f50-9717-e098f2aeba01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f115705b-f53a-4313-8b64-cff36646fe2d"
            }
          }
        ]
      },
      {
        "id": "8a20c5b1-ea05-46a9-8581-bd4f91ba5a5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "877ed714-800b-4917-a036-5b53b0aa0407",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0126466e-7818-4f4c-a98a-e9f357478414",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9d496c4f-ef63-4135-a3a3-7dc0068e957d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "284a460e-b8de-4fe4-80c7-8edc2cb06aa6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73713d0a-e3c5-4615-a073-826b81a558b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 251.6666666666667,
      "responseMin": 7,
      "responseMax": 5180,
      "responseSd": 802.3663019716628,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716856623508,
      "completed": 1716856695418
    },
    "executions": [
      {
        "id": "3e994b31-58ed-4aa6-a195-79877affdee0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "52def05a-88fc-4152-b0c5-1456eba225ce",
          "httpRequestId": "827ba3cb-ee34-4b0e-b13f-d03169a169c8"
        },
        "item": {
          "id": "3e994b31-58ed-4aa6-a195-79877affdee0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b1c61e0a-9027-48db-87fa-953b8e1022c6",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "d485da69-3c46-41b4-87cf-3020db29e7af",
        "cursor": {
          "ref": "94b20c32-1e7a-4103-9314-f8c0905c3eeb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "036f4bbd-4cda-42e1-a80e-18270399528c"
        },
        "item": {
          "id": "d485da69-3c46-41b4-87cf-3020db29e7af",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20505420-905e-4c8b-a700-2920160996ba",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "cfb6686c-d3c3-4249-8b65-3cff434e1e14",
        "cursor": {
          "ref": "d7cbdfce-1a29-4960-88c3-d3217c2ca159",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b561f28c-1c61-4361-afed-eb1ed309fd24"
        },
        "item": {
          "id": "cfb6686c-d3c3-4249-8b65-3cff434e1e14",
          "name": "did_json"
        },
        "response": {
          "id": "6552dc24-4532-4ba0-8b5d-fed574577499",
          "status": "OK",
          "code": 200,
          "responseTime": 662,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc58ac-9fd1-4f96-8b95-b5224b59d909",
        "cursor": {
          "ref": "e370e059-8d3a-4d1d-b9b3-c23be0136db4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f95e6aa0-4f70-4d0f-82e7-1a995201e8f7"
        },
        "item": {
          "id": "d4fc58ac-9fd1-4f96-8b95-b5224b59d909",
          "name": "did:invalid"
        },
        "response": {
          "id": "454d0ff9-ed84-4ac3-ab67-7e6c65817dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2310,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc58ac-9fd1-4f96-8b95-b5224b59d909",
        "cursor": {
          "ref": "e370e059-8d3a-4d1d-b9b3-c23be0136db4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f95e6aa0-4f70-4d0f-82e7-1a995201e8f7"
        },
        "item": {
          "id": "d4fc58ac-9fd1-4f96-8b95-b5224b59d909",
          "name": "did:invalid"
        },
        "response": {
          "id": "454d0ff9-ed84-4ac3-ab67-7e6c65817dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2310,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acae424-f7be-4472-8e19-7a439be21acb",
        "cursor": {
          "ref": "68e6dba7-c48d-4d3d-a180-a49b99ec53c3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00eb5eca-20a2-4782-bce4-720f365b8ebc"
        },
        "item": {
          "id": "6acae424-f7be-4472-8e19-7a439be21acb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "17f04315-05c1-4a36-9c52-63201bc0b809",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2733,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc12dd5-d9f4-4016-84e2-276498e93fd1",
        "cursor": {
          "ref": "59a11c63-76e9-4a03-9c91-8306d9c737e9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6cc16248-2df7-43e6-bba2-aa5042390c45"
        },
        "item": {
          "id": "4cc12dd5-d9f4-4016-84e2-276498e93fd1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a0ddcd87-943c-4b90-aa4b-1a0943dbe99c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2273,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123cac39-ebfc-4244-847b-25e203dba717",
        "cursor": {
          "ref": "5a4b44e4-2cfc-42eb-87f2-90086d5da924",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef776280-7b9e-489e-a979-5ce373ad401c"
        },
        "item": {
          "id": "123cac39-ebfc-4244-847b-25e203dba717",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a87550d4-ace5-45e5-8d84-c36e583a38e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30b6092-f822-49e1-925a-0a0d06e98e89",
        "cursor": {
          "ref": "5f0f7fec-5b53-41aa-9cfc-2a533ca27170",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ea9ac8ed-fd25-4fec-a036-48530ddb4079"
        },
        "item": {
          "id": "a30b6092-f822-49e1-925a-0a0d06e98e89",
          "name": "identifiers"
        },
        "response": {
          "id": "ce2b635c-60c6-42db-b3c5-f280e37572ac",
          "status": "OK",
          "code": 200,
          "responseTime": 2185,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d284e615-3f9a-4602-988b-d726964a56f4",
        "cursor": {
          "ref": "892b43b2-2880-43e3-8392-e8c050ea3af0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf7c6e3f-47e8-434f-887e-03e4dffe85e4"
        },
        "item": {
          "id": "d284e615-3f9a-4602-988b-d726964a56f4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "387bbb91-e124-4e76-9923-6be5c0c15d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb20755-6726-4143-8a36-c71302fb87ed",
        "cursor": {
          "ref": "00f6d52d-c2b0-4b71-89d4-fd07cbe261cb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cac78157-6bb3-447f-bd97-f34f30ffc8e0"
        },
        "item": {
          "id": "7eb20755-6726-4143-8a36-c71302fb87ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1cfbd999-d8c6-49a2-8978-598420a58464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03eca07-1c4b-4791-99df-8d3d1cd5f7ad",
        "cursor": {
          "ref": "64ad0f40-28d9-47f6-8666-205613b1752f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f805b559-5db2-47b7-ab8b-2707f60f4aa6"
        },
        "item": {
          "id": "f03eca07-1c4b-4791-99df-8d3d1cd5f7ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8d8f1559-3e73-4f3c-9ba0-eb7bf92f762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571f2dfd-18b0-4f08-abcb-e986a6622076",
        "cursor": {
          "ref": "472ae9af-acaf-4256-aad1-8c872582e11f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cfa9b41f-e196-4fb5-a7c1-d5a2cd7129fa"
        },
        "item": {
          "id": "571f2dfd-18b0-4f08-abcb-e986a6622076",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f978818d-74f8-41e4-b7fa-6318d3667c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e191d854-ed47-481c-9835-f59091508dac",
        "cursor": {
          "ref": "700b6e94-14b4-4071-b969-55e2e3ed5a72",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e63142bb-1d44-44cb-a3b6-cad3f028ad69"
        },
        "item": {
          "id": "e191d854-ed47-481c-9835-f59091508dac",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a108d322-d4d9-4967-bde8-6ee7e652422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59089ad9-6ccd-4b22-bf42-8679d23e7064",
        "cursor": {
          "ref": "fbbb86bd-78d4-41cb-8524-308fd6ba45fa",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "45bec5ea-766d-45f7-a527-2d8dc7c31bb1"
        },
        "item": {
          "id": "59089ad9-6ccd-4b22-bf42-8679d23e7064",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88b64ab2-8b8c-453a-9de9-957750165e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17dd01b-1ea5-4ee0-9911-76a529a737b1",
        "cursor": {
          "ref": "78e56c08-be21-4eb0-b9dc-daffcd923401",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "484731d0-169f-4dee-8468-7031878cda18"
        },
        "item": {
          "id": "b17dd01b-1ea5-4ee0-9911-76a529a737b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "92a6898c-797e-4460-a4a3-f6302ff399c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e0e761-ae1e-41ea-a61d-38b6b16097e8",
        "cursor": {
          "ref": "50e19b88-55ec-406a-aee6-dd915edb43d7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7c031d1b-d9e1-4cae-8be4-7b8ee6e4260b"
        },
        "item": {
          "id": "b3e0e761-ae1e-41ea-a61d-38b6b16097e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "91b614fe-fb1f-4b39-b43e-3302e2dc283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa3699a-fb1f-41b5-bcf8-ab50719d5fc6",
        "cursor": {
          "ref": "72ba6f9e-4031-4723-a20d-b07791097b86",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea42d3e9-08c0-4361-82b4-86aa43b50a33"
        },
        "item": {
          "id": "bfa3699a-fb1f-41b5-bcf8-ab50719d5fc6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c11eea26-58fc-408a-83d6-ecfdff660366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf77c59-db6f-461d-b0e5-32098f6a7ccf",
        "cursor": {
          "ref": "70ec5712-4420-40b3-8ffb-a78114628bc0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b5bb2186-18f7-4dc1-b480-f9fa17df0160"
        },
        "item": {
          "id": "9bf77c59-db6f-461d-b0e5-32098f6a7ccf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1ecad722-6a46-40b5-ab84-055ad0fc51e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177f08f2-36b6-4553-b83f-2a3084c0c81d",
        "cursor": {
          "ref": "99b08b81-56f3-437c-b846-3ae1bed11570",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "56bf8bf1-8bd5-4f17-8b09-8468a14acf2f"
        },
        "item": {
          "id": "177f08f2-36b6-4553-b83f-2a3084c0c81d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c421f67d-7a3e-4d6b-8fcd-39e6ac1315c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f875341-0349-464c-ab25-7ded8c1e880b",
        "cursor": {
          "ref": "634de0be-61aa-4e29-acf1-5ccb6a2803d6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cd593f00-7895-4133-985d-2af77af127d9"
        },
        "item": {
          "id": "3f875341-0349-464c-ab25-7ded8c1e880b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57289533-071a-4098-9240-7a5ea6981c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b1e48c-e360-4e9d-bfd4-949fb7752335",
        "cursor": {
          "ref": "65600329-71a9-4c4e-90fc-413547403811",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8d01784-a2d4-4e0c-9f6e-ad607d730242"
        },
        "item": {
          "id": "a8b1e48c-e360-4e9d-bfd4-949fb7752335",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c05d718-5d0f-4c1e-801d-9d33ab62b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6468e3a5-6320-4fa2-b950-019ed0b1ea9b",
        "cursor": {
          "ref": "09328aff-5155-40c9-a7d9-b59b1a1d65b0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c75e3e57-4dde-4865-be22-de0f5cb0e22a"
        },
        "item": {
          "id": "6468e3a5-6320-4fa2-b950-019ed0b1ea9b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9f5881b3-9d1e-4a2f-a55d-2e6d738f0835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74837a7b-13cf-4c77-a876-e86ef43b1277",
        "cursor": {
          "ref": "6a046841-393f-4337-b957-d5e088c40f0a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ffad8e2a-b898-4285-a019-1a0f1c1696f1"
        },
        "item": {
          "id": "74837a7b-13cf-4c77-a876-e86ef43b1277",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "565d4f53-24da-450b-9617-61d535d5c5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf97702b-5ee8-4984-b33d-65872649f0a5",
        "cursor": {
          "ref": "bb7fa4c5-5f85-47d2-b2e5-c9673488b61b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1ee51538-92e8-4679-926b-58d2ae1f8cc3"
        },
        "item": {
          "id": "cf97702b-5ee8-4984-b33d-65872649f0a5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "15c1973e-f4ef-40b5-9ef1-ae2b1a34e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5897b975-069a-4f18-8757-edb84997d384",
        "cursor": {
          "ref": "fe7fd58b-8694-48d2-90d4-cb131d3f0447",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3f4de6dc-d4be-44c4-a204-ac7efa20c876"
        },
        "item": {
          "id": "5897b975-069a-4f18-8757-edb84997d384",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d45f18d1-fb87-49bc-9beb-4606b7513304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87767019-3a14-40a1-b5d9-b863b000ce70",
        "cursor": {
          "ref": "020612e4-0d9f-4f64-a6a6-fb91a5ab1e6e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6719e0d0-62e2-4bb5-b227-0ec2e2d31ea6"
        },
        "item": {
          "id": "87767019-3a14-40a1-b5d9-b863b000ce70",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6ca41e0c-bfc3-4085-8d50-1b4922f0720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fd8724-f7d9-4882-9830-ff55d6649535",
        "cursor": {
          "ref": "86eedb0e-2260-46b1-bc00-58b66d504e48",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4c96775b-afd2-44fe-9995-60d516af6abc"
        },
        "item": {
          "id": "f1fd8724-f7d9-4882-9830-ff55d6649535",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c92469a3-3bfe-48ee-b96c-51319ba302c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57dc58f-4e70-496b-be5a-a986d5b0d196",
        "cursor": {
          "ref": "682a589f-6684-4b95-8b3f-578898e1b69d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95fe834f-6605-4776-9ecf-7590d6c70c8f"
        },
        "item": {
          "id": "e57dc58f-4e70-496b-be5a-a986d5b0d196",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "636e6bd0-a22f-4c9a-8625-91db2c258a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e94ba9-beec-4fa3-88a5-f7d267f4bac1",
        "cursor": {
          "ref": "103ad694-f40b-469e-a14d-5608b516a06e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d90418b-7295-493a-9e20-1cced27dffaa"
        },
        "item": {
          "id": "16e94ba9-beec-4fa3-88a5-f7d267f4bac1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad1fa3dd-4c53-4753-8e95-9829cf5c49ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bf9663-cfa2-4105-b64f-6e0a28ec7614",
        "cursor": {
          "ref": "d27c1815-128c-448d-b43d-fb4434de6998",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "259849a4-be6d-49d0-8bb1-ac590efa03a5"
        },
        "item": {
          "id": "d5bf9663-cfa2-4105-b64f-6e0a28ec7614",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "263c5b49-080c-4372-89f9-a9c55d89f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf34995-51a0-4c64-9c05-d4ba492fa3ba",
        "cursor": {
          "ref": "8417324e-d024-44a1-91b1-66fba7d6ccb9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "497ab345-df14-44b2-a880-b6859f445514"
        },
        "item": {
          "id": "bcf34995-51a0-4c64-9c05-d4ba492fa3ba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4218d2da-c40e-4de6-8741-a6417927c14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2f0496-bc83-4b8a-9c3c-7f3855534a07",
        "cursor": {
          "ref": "416571a4-1e8a-461b-8a9f-ca4c06b8f9dc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "05716a11-0197-4546-aadf-abf8d288f8fc"
        },
        "item": {
          "id": "6c2f0496-bc83-4b8a-9c3c-7f3855534a07",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0a5a40de-51da-48aa-8c2b-9d2b2d636d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4cd690-b44c-4404-9686-bd840e8eb543",
        "cursor": {
          "ref": "339f1288-48fd-433b-994d-48bcc0bc7c2c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9f2c7486-ae1d-475c-887b-f54bfb984bdb"
        },
        "item": {
          "id": "aa4cd690-b44c-4404-9686-bd840e8eb543",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f08331e5-2a6e-4826-a526-9a7e6325317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81981aa-9489-4849-86ce-c31c4b888316",
        "cursor": {
          "ref": "88ac3cb4-890c-4f1d-9855-1106faca2c30",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cdba42c6-559a-4262-b285-a28671b0b774"
        },
        "item": {
          "id": "b81981aa-9489-4849-86ce-c31c4b888316",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3a7e0efd-9099-465f-b64e-818868a6b49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0161d88-173e-455c-8618-cd27a7787ea9",
        "cursor": {
          "ref": "3d46e093-5bf5-4c13-9320-84f6982c8ddd",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ea03e1ff-e5b3-40fc-a351-52a6a9d6ee25"
        },
        "item": {
          "id": "d0161d88-173e-455c-8618-cd27a7787ea9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5591254b-e3a3-4043-874c-98b9b45d2f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d798bfdb-1583-4063-9c4e-8fb51233df19",
        "cursor": {
          "ref": "9b4f612c-7053-4958-a60b-c5c589f706dd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d70417d3-8f8a-4b4c-9e7c-d96c3bcf7f49"
        },
        "item": {
          "id": "d798bfdb-1583-4063-9c4e-8fb51233df19",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f776a227-6cca-424f-8b28-7c444509d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97de9bcb-6010-439e-ae2f-f63ce639dedc",
        "cursor": {
          "ref": "626d4339-d10a-4a70-a2ba-6fd356f6432e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4473926c-413d-4ffb-9f94-a73d15e25763"
        },
        "item": {
          "id": "97de9bcb-6010-439e-ae2f-f63ce639dedc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3bfcb443-e065-4b75-bcfd-e66e32b9d4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c99508-175c-4802-bb99-b0fa07ee8f50",
        "cursor": {
          "ref": "fa198b8b-656b-414d-8da6-3c7bd0e772d1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a71b66f0-f8cc-45fe-bff7-bf9877c8cb1c"
        },
        "item": {
          "id": "71c99508-175c-4802-bb99-b0fa07ee8f50",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "663ad206-ae8e-48ee-9c51-2f5ce08fc0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732b7d5c-bf82-479a-be9a-ced9330abee8",
        "cursor": {
          "ref": "491a50f7-0b4c-4bd6-8d8c-053c4590a1ac",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "95780cf0-8263-488a-bdd1-71063a06b569"
        },
        "item": {
          "id": "732b7d5c-bf82-479a-be9a-ced9330abee8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1693ba6f-d2db-451f-a318-49ecc692f52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e398a24f-4634-4fb3-9422-085078b76e01",
        "cursor": {
          "ref": "3c41f6b6-cb97-432f-9159-920c96a1d12d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c99d8289-e66e-4ad0-ad7d-6242a1e2b53a"
        },
        "item": {
          "id": "e398a24f-4634-4fb3-9422-085078b76e01",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ec0d0906-2b78-4f76-b85b-c2fdf3d228cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d3f664-77d1-429a-9608-d88afe331b1c",
        "cursor": {
          "ref": "f6b7990c-d3e2-4b8f-a752-37398f2fcd6c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2a30c4fa-bdfd-4a20-a189-bbe18bc25fbb"
        },
        "item": {
          "id": "03d3f664-77d1-429a-9608-d88afe331b1c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4024cba5-92ee-4ab2-ab80-1cdaa1b881e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a36cfe-3312-4817-96e2-bffa799404ff",
        "cursor": {
          "ref": "7259ba4e-5694-4b43-8335-e4c891a6a2af",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "45d96d7a-f385-4fc4-9ef5-4c6213992f87"
        },
        "item": {
          "id": "24a36cfe-3312-4817-96e2-bffa799404ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95162724-6089-4c6c-becc-c64a40443c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146f509d-b994-4d1c-93a4-c15662a2444a",
        "cursor": {
          "ref": "c89fd3ab-cc34-4656-a95d-23e579802785",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9b4f6708-84c3-4191-88a3-5a434d1ee376"
        },
        "item": {
          "id": "146f509d-b994-4d1c-93a4-c15662a2444a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f181ad8a-2e24-4284-81ed-d510e8a766ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d30f6c2-ad3d-4755-9c17-08ffc4482382",
        "cursor": {
          "ref": "2489bcdc-067d-4cc3-ae9a-806717800b2e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0373e8cd-4ed6-4c23-abb7-29858dae535c"
        },
        "item": {
          "id": "9d30f6c2-ad3d-4755-9c17-08ffc4482382",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4cbbd8c-99ef-4885-b823-f5bdabe9b16d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6660109-ffa2-426d-8271-1a532c37762d",
        "cursor": {
          "ref": "800dcc58-6a04-41a2-80bd-8e2e2b7e56ab",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8d52a36-74e0-4c39-b13d-155119b56bdc"
        },
        "item": {
          "id": "a6660109-ffa2-426d-8271-1a532c37762d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "442064e3-b03f-4711-ba8b-be6598f22db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a488ad-4a66-461b-a03b-ee8d116deedb",
        "cursor": {
          "ref": "5200bb1c-065d-4d3c-8525-8014f476d2a7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c040273b-5454-4866-b319-568990fa1c2c"
        },
        "item": {
          "id": "05a488ad-4a66-461b-a03b-ee8d116deedb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "299c536c-f529-430f-828b-df57f35767cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce91e5b-1287-41d0-81b4-e3f6e6cdf198",
        "cursor": {
          "ref": "e1de121f-cb39-4cc7-971c-0aae89779922",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73709187-16a2-4e6b-b84f-f53d7cca3877"
        },
        "item": {
          "id": "9ce91e5b-1287-41d0-81b4-e3f6e6cdf198",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2b1fc958-8c76-414b-bfbe-13351410d4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b898fd23-7ca2-4597-a9f9-f3d0a2930e0f",
        "cursor": {
          "ref": "42ef4f6c-48ca-41e0-9856-a54dafa59130",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7553decd-4da1-4e6a-8209-a67467f083ad"
        },
        "item": {
          "id": "b898fd23-7ca2-4597-a9f9-f3d0a2930e0f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "26da8bd0-b459-4fda-a761-eaeeed42063e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1261c2-2df3-46d5-ab49-a19e5ab67cef",
        "cursor": {
          "ref": "361bfeeb-c1c7-4782-856d-10b4621384f2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a6503aa2-5d3f-471a-a605-1f63454c0e02"
        },
        "item": {
          "id": "ce1261c2-2df3-46d5-ab49-a19e5ab67cef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "094c6b07-ee26-41f1-9de1-b80465291485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109084ac-45be-4d1e-8d47-21d337eae2b4",
        "cursor": {
          "ref": "20eb53a0-7c86-4b81-89ec-0943d08b7fff",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef633967-d039-4ce7-b68d-4695f2fdf062"
        },
        "item": {
          "id": "109084ac-45be-4d1e-8d47-21d337eae2b4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7bdea8bb-09a3-497f-972a-a70e5b5a081f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e2438c-a250-434d-899a-35d2014c1a92",
        "cursor": {
          "ref": "f6924026-e0a3-4043-9cb5-b95e0ed6576c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cc6d7ae4-3811-4a10-8130-bdf98ffbe32b"
        },
        "item": {
          "id": "32e2438c-a250-434d-899a-35d2014c1a92",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7bf7a060-01d2-40a8-8786-39bf41d73f11",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089b9ff-76a6-4472-aa96-57a049b26958",
        "cursor": {
          "ref": "9474da2a-fa15-4d4d-8e1b-088644206db7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "37a53c0a-0866-45c4-8607-92b32333c56f"
        },
        "item": {
          "id": "d089b9ff-76a6-4472-aa96-57a049b26958",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0dbc066d-5575-43c3-a9d7-b5069c67140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7991a4b7-6095-40a4-968f-16733d27520f",
        "cursor": {
          "ref": "a1583e55-6bc6-43fb-8017-11387d8f1445",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c53a4ba8-4e9e-4797-af17-e0cbdda6b5c6"
        },
        "item": {
          "id": "7991a4b7-6095-40a4-968f-16733d27520f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7a7ab911-b7b0-4bee-ae4f-aef1681b3b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513c1f3f-10ad-4636-b0ee-32e41b866d6d",
        "cursor": {
          "ref": "935aea49-1de0-4d34-817a-ec26115c47f5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c90d1160-3a7b-4813-a519-785f64f3c625"
        },
        "item": {
          "id": "513c1f3f-10ad-4636-b0ee-32e41b866d6d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b7e7787-c139-4fbc-96d0-46225001027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59255749-abc2-4c15-9137-cdc80374540f",
        "cursor": {
          "ref": "3e51b367-4576-4df5-a834-3e2a419605fc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "20544545-6aae-4ade-b57b-ba40322110b7"
        },
        "item": {
          "id": "59255749-abc2-4c15-9137-cdc80374540f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e1a70853-7c46-4329-9043-28f9d289e465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650d9829-083f-4376-9ad0-fe57cf2b8235",
        "cursor": {
          "ref": "e26aaf8a-2048-47a7-bfac-20797438b151",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3a2220c8-cd46-4a01-95db-be5452d95a91"
        },
        "item": {
          "id": "650d9829-083f-4376-9ad0-fe57cf2b8235",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d07be98a-031d-48d9-a8eb-7378be2c4140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7a2295-c01b-4521-96ab-142318153a1b",
        "cursor": {
          "ref": "07f765d0-bfe7-475a-9c72-d043d1ceb45e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f55fc8d8-23df-42f8-9dd0-a45a8d3c58e8"
        },
        "item": {
          "id": "fb7a2295-c01b-4521-96ab-142318153a1b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5497f486-4953-4768-abd7-ad128bc45a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227aa478-cd88-4297-9bc0-61ce25514fbf",
        "cursor": {
          "ref": "b8f5fcb6-da4f-414a-a9a3-e734cde28b01",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63df7820-6085-482a-9953-2297645437ca"
        },
        "item": {
          "id": "227aa478-cd88-4297-9bc0-61ce25514fbf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "299f8abe-4e2f-4eaf-910a-0d722f83170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d25f4bb-fef9-4882-8a6d-2f37c937e34d",
        "cursor": {
          "ref": "42c99424-b3fa-439e-bcb3-a096b116d304",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "da7a9ed2-a515-493b-8e8d-8f91222f393c"
        },
        "item": {
          "id": "3d25f4bb-fef9-4882-8a6d-2f37c937e34d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "705391c3-78b4-4690-9264-855d49b100ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42864806-0afb-4a84-8ecd-69ada8a0a450",
        "cursor": {
          "ref": "672d6457-f7af-4a88-914b-e564e80c5afc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "16ab399c-9da8-4906-8248-33e9737b123d"
        },
        "item": {
          "id": "42864806-0afb-4a84-8ecd-69ada8a0a450",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8f316d29-438c-4849-8c88-75940193369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea864119-d5a0-435c-bbe4-3892d2953565",
        "cursor": {
          "ref": "3bd68d1a-78f7-4ad4-90f5-5d84a5f748c2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "69bad3b6-1b35-4a3e-b6d9-ce63086dba4f"
        },
        "item": {
          "id": "ea864119-d5a0-435c-bbe4-3892d2953565",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6403e86e-2a24-45e4-8845-c729adeb1597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e2d2e-05e8-469f-a50a-402fb8b13b6d",
        "cursor": {
          "ref": "fad273bb-195d-475b-bf6e-4df5271730b6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5f4a4f6-4980-4535-818e-ef298eea4840"
        },
        "item": {
          "id": "633e2d2e-05e8-469f-a50a-402fb8b13b6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "478625f5-f667-43d8-8bfd-6383a3b81cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba04a5a8-fdb5-4ea8-b35b-19a3f3e21187",
        "cursor": {
          "ref": "a24704d0-6889-423d-9860-1ff4d1b802db",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "de82795f-2f02-427b-85e7-15978f248342"
        },
        "item": {
          "id": "ba04a5a8-fdb5-4ea8-b35b-19a3f3e21187",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "486ae05c-9cd3-43bc-a2b4-42b1d41fede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa51df4-1bf3-4ec6-8fd3-16829449b160",
        "cursor": {
          "ref": "edb35b0c-7a2e-4aa1-8e2a-6fd2896c40f1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "679f6845-73db-40cd-bdbd-59ab79e82921"
        },
        "item": {
          "id": "1fa51df4-1bf3-4ec6-8fd3-16829449b160",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a3b494f2-2c0f-4466-934a-66a6915898ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be24b0d5-1288-4f65-915a-3be3d8849a66",
        "cursor": {
          "ref": "4979ca51-308c-45c2-8a21-8ad6c1aa29ed",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cc372821-2e05-427a-82e2-d611e8b6836a"
        },
        "item": {
          "id": "be24b0d5-1288-4f65-915a-3be3d8849a66",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5446136e-e377-4966-99f4-a4cdba5cafde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46fb8a9-44c2-40b1-9073-8cdb16c3e82b",
        "cursor": {
          "ref": "221c8fd2-b5b0-4147-bbee-a210fec013ba",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4193b372-7f7a-4d13-84cb-6338cb31b920"
        },
        "item": {
          "id": "d46fb8a9-44c2-40b1-9073-8cdb16c3e82b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "76d143f0-6188-438f-aab5-dd479638170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0835655-80e8-4711-bc8a-8cb1b799857b",
        "cursor": {
          "ref": "17856c61-b80a-4f59-8356-362fdedb5928",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1b1aa3ae-c696-48f2-96ad-9d56f7c4253f"
        },
        "item": {
          "id": "d0835655-80e8-4711-bc8a-8cb1b799857b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fc6c762f-faee-4041-be2a-8c929e703cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7123f8d7-3d25-4917-aca1-809d74553382",
        "cursor": {
          "ref": "6e5d49d3-5c62-4ac2-8bb0-f246eb436102",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa491ae3-758b-4f4e-86d0-30f8fdc79338"
        },
        "item": {
          "id": "7123f8d7-3d25-4917-aca1-809d74553382",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "002bfe7e-c331-462f-9d1a-3a42a268550e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad47331-05f5-4438-9caa-946ccd4a8c94",
        "cursor": {
          "ref": "e2966f28-ed3a-4ffd-b16d-982eb0e77800",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "794e094b-45f1-4022-8951-153b46375eaa"
        },
        "item": {
          "id": "dad47331-05f5-4438-9caa-946ccd4a8c94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e93b38b8-b0b1-4094-8faf-663130f9a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0945b0-2396-437d-aae5-8f2ced72aafc",
        "cursor": {
          "ref": "bc0805d5-249b-4618-b9d1-5e9abab4532c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "13a5e74e-cd50-42a5-b218-020c0ba673fd"
        },
        "item": {
          "id": "5a0945b0-2396-437d-aae5-8f2ced72aafc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4c828d06-4e8c-455d-925a-a2e2cf075c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9123c94e-e4cc-4f7c-882d-9c16d29043eb",
        "cursor": {
          "ref": "31d93583-ad2d-4e9c-938a-fb376c8530bb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "07e97f3b-07ff-47f2-b14c-7b243dab56a9"
        },
        "item": {
          "id": "9123c94e-e4cc-4f7c-882d-9c16d29043eb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fc831679-1eb0-49fc-89ff-3f0ca5e13af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4511ecbc-73ac-41b5-a0fa-71b3e56fa3c1",
        "cursor": {
          "ref": "a70db26d-151f-48b8-828c-db79adb435a6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "33df1bf0-ccff-45e6-a3d6-daedafdeedf7"
        },
        "item": {
          "id": "4511ecbc-73ac-41b5-a0fa-71b3e56fa3c1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "76db7d6d-a359-41ad-a763-ecd2ba9b3151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d949cbbb-9a0f-4906-8905-ad218441bd89",
        "cursor": {
          "ref": "0052747c-c43c-440d-aebf-5dcbf732959b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4d007a41-58eb-4be1-a7c9-2adecfbff87d"
        },
        "item": {
          "id": "d949cbbb-9a0f-4906-8905-ad218441bd89",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f0a737a7-c2cf-43b9-9c1c-beff974fc3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3923ae7e-2f4f-4e12-ba49-f2bbfe870357",
        "cursor": {
          "ref": "5ebf776a-23bb-4ab2-b25f-e2aa6295d235",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b4b9eb29-8e18-4055-9135-bc209a150dec"
        },
        "item": {
          "id": "3923ae7e-2f4f-4e12-ba49-f2bbfe870357",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "86cdb690-0627-4f4f-be8b-0ec281911304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c821f6-3cbe-4c1c-b6af-97ab53401c72",
        "cursor": {
          "ref": "ac442ad0-d0b8-4416-9a9e-effb3df8c688",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "21d632c2-fe9a-4f65-b41d-45ca566dd371"
        },
        "item": {
          "id": "14c821f6-3cbe-4c1c-b6af-97ab53401c72",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3edbb6e3-60fb-445d-8353-634430e7344c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4be4685-cc49-4f0e-8ef7-500d90d8effa",
        "cursor": {
          "ref": "9d27ffc6-6084-44fd-a906-b82f81ea63a8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "060e318e-0134-4e25-9638-223bfffb460f"
        },
        "item": {
          "id": "e4be4685-cc49-4f0e-8ef7-500d90d8effa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "725e8308-a468-4b72-98ad-499403cba957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8694f4-301a-4886-99de-463335153974",
        "cursor": {
          "ref": "f603aef4-9234-41e3-8975-1008c0cfaa84",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "96c90596-7d51-469a-a95f-caf2a03ffe87"
        },
        "item": {
          "id": "3f8694f4-301a-4886-99de-463335153974",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4aa245b2-c3bf-4a08-a227-43f74f63de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd354ced-b056-46dc-ad16-cdba80f872e4",
        "cursor": {
          "ref": "795029c8-822e-47e4-ad58-5249e2115996",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3c288c03-1322-41df-9af9-bce72e9f45fe"
        },
        "item": {
          "id": "bd354ced-b056-46dc-ad16-cdba80f872e4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "991c217f-38ea-43b8-b3a4-3afe80edb79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6f4de6-ff79-473c-90dd-8864cbfdc55b",
        "cursor": {
          "ref": "c87e7987-4719-452a-b74e-1d9367c99abf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e721a407-545b-4cd5-954a-a46f35558a60"
        },
        "item": {
          "id": "bb6f4de6-ff79-473c-90dd-8864cbfdc55b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f50f31eb-4ce9-4f31-a2e1-e66c16528172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec4c44-6f58-4084-af3f-5dfa3e225fe4",
        "cursor": {
          "ref": "445f6b5d-4b29-4874-b4b6-e2c6e798f37e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14d11db3-9d00-493e-97cd-3558aabb64df"
        },
        "item": {
          "id": "7cec4c44-6f58-4084-af3f-5dfa3e225fe4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9222635c-c661-40da-a2cc-a7d3bbf434c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336e7636-846b-454e-9119-0277aeadd6d6",
        "cursor": {
          "ref": "a602f49a-465a-41e7-b231-dce73ec55870",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9c4de4ba-8a36-43c3-bc2f-2254a523fcf4"
        },
        "item": {
          "id": "336e7636-846b-454e-9119-0277aeadd6d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d38b4546-9a50-4ddb-94e8-1d9cff993d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0d65b1-f722-445c-8b12-7c66780e64fc",
        "cursor": {
          "ref": "420e109a-f3a4-4fd7-b91c-8ef852daed3c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "54a5a5f2-de8f-479a-8d45-2929ea02a320"
        },
        "item": {
          "id": "5c0d65b1-f722-445c-8b12-7c66780e64fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fb24f670-9a04-481d-803e-ac703fb1dcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1b02ab-1651-4e3d-a375-799af7a47fdb",
        "cursor": {
          "ref": "2c6a261e-99c6-4c47-b971-98350fe572d3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2e56851a-cd49-432e-a671-cc38ca6e9c7c"
        },
        "item": {
          "id": "0f1b02ab-1651-4e3d-a375-799af7a47fdb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8a76ec76-53e9-4536-af01-8cd33a3639df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfe4bbc-b080-4852-a31b-fc7b5e3fd1ef",
        "cursor": {
          "ref": "cae3dc3a-0cae-44b5-8bb7-26f34db5e49b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "028d7ad9-4afe-4fcf-8cf4-eebf804e0e7b"
        },
        "item": {
          "id": "adfe4bbc-b080-4852-a31b-fc7b5e3fd1ef",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0bb00a9-3bde-450a-8c94-252c86a53fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0b4cdc-d4ea-45ff-8a96-b75015e306b8",
        "cursor": {
          "ref": "8545256a-61d9-498c-ac8c-f4387bb47792",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "09369844-8d2e-49f7-8867-cbbb56d698a6"
        },
        "item": {
          "id": "ee0b4cdc-d4ea-45ff-8a96-b75015e306b8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "281d9e0a-7def-477f-a922-7bf45692745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236fc96d-3447-4eb2-b6bb-3c534ff14cf1",
        "cursor": {
          "ref": "ac6554ea-646f-452d-b17e-612b20c4a554",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b9daeac1-51f2-4b81-89c4-cd984215b2b0"
        },
        "item": {
          "id": "236fc96d-3447-4eb2-b6bb-3c534ff14cf1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "af962522-3a83-4599-99a3-fc8706176a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bea546-d323-4f8f-a78c-8480d20afbbf",
        "cursor": {
          "ref": "e23c47db-c7b9-4644-a8a1-c8f8e7e7ad6c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9d039f07-5736-4fb2-8baa-167397940755"
        },
        "item": {
          "id": "e4bea546-d323-4f8f-a78c-8480d20afbbf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0e44067f-ae19-4e47-9d03-900c9674cb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838eb441-3297-48df-9d0c-39285766547e",
        "cursor": {
          "ref": "bd0b38b9-8402-4f46-9ad1-f86053f49abe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8d1d1249-723b-4246-a250-f498cb3f6bf4"
        },
        "item": {
          "id": "838eb441-3297-48df-9d0c-39285766547e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c1d67010-ba06-483e-a32f-1dc1a4ca2dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b86511-d747-4573-83fc-124099f8effa",
        "cursor": {
          "ref": "bdc1c78d-745d-454e-b120-d5bf3c8f04a4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87fb9620-8ae7-42ab-9c41-6b4e77c4b2b3"
        },
        "item": {
          "id": "97b86511-d747-4573-83fc-124099f8effa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ee831ce-f98d-47a3-b414-d3561414b0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ae1fa9-5229-425a-b5cb-579155b467a5",
        "cursor": {
          "ref": "44d42758-391c-458c-9759-37bf90e830f9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3909597-c9ff-4164-a1b0-6afcd2ecc8a1"
        },
        "item": {
          "id": "19ae1fa9-5229-425a-b5cb-579155b467a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e961ca85-6aa9-4c6e-ba9d-6b491cf4a9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50608694-f595-48ab-994e-f2fe5b971e63",
        "cursor": {
          "ref": "eaa42def-e801-43a2-b9b3-20ccae0b4234",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93a55e77-e201-4fef-a4b8-e26f38ab4454"
        },
        "item": {
          "id": "50608694-f595-48ab-994e-f2fe5b971e63",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2338c79e-52e1-491b-85ad-ba7cf5dd12b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a748472a-f5f5-4127-b18b-e4ee81d50094",
        "cursor": {
          "ref": "0954aa65-260d-4a3a-9d03-def77a8e5994",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "024d118a-bae9-4cb2-8c74-09878e7bb9da"
        },
        "item": {
          "id": "a748472a-f5f5-4127-b18b-e4ee81d50094",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "703bcf4e-23ec-4597-bed9-5d8b953c7abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cfccb9-29d1-4abc-a184-3bac0e435788",
        "cursor": {
          "ref": "a74807ce-b2f2-4da9-aa5e-9f020f8508cc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "285a071b-5994-454c-8d94-3533befe4899"
        },
        "item": {
          "id": "45cfccb9-29d1-4abc-a184-3bac0e435788",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cdd3da42-bcf7-40dc-82a6-e41f3c716ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98cb783-a76b-43eb-b9f0-b7b7dc9bd75c",
        "cursor": {
          "ref": "2d2a6aa6-fb88-441d-a6ca-60b16f1ea4ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13c2f3d5-4853-4ddc-965c-77bd23422160"
        },
        "item": {
          "id": "b98cb783-a76b-43eb-b9f0-b7b7dc9bd75c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f55029e4-d189-4d81-8ecc-fb4617e4ba97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd89fdc-5a1a-4464-9214-39728a3814d0",
        "cursor": {
          "ref": "74f61974-7726-4167-8ef3-55a844fa086b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6f21bb7d-eb38-4113-ae2d-e482eb2b12cf"
        },
        "item": {
          "id": "3dd89fdc-5a1a-4464-9214-39728a3814d0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a94eca8a-4ce9-4ffe-9519-8f49a8399dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741e21a5-a812-4815-8070-1850dc80a5ee",
        "cursor": {
          "ref": "289bc269-bfa2-43eb-85ba-e2d9734e5bd2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7347786a-344b-488b-9eeb-9e0fca2e5443"
        },
        "item": {
          "id": "741e21a5-a812-4815-8070-1850dc80a5ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a9730842-0ae6-4152-ab60-aafc030733a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad84b9-d915-4a16-b229-a36579eb50e6",
        "cursor": {
          "ref": "b3a8b2b3-5140-4fd5-8704-684f3aee4fcc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65cbb327-361c-4f27-971e-5d9ed7442829"
        },
        "item": {
          "id": "57ad84b9-d915-4a16-b229-a36579eb50e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fe5638b2-a5b1-4712-bc66-9814a723038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf53f73-f63a-49a4-a531-9375d06fc40c",
        "cursor": {
          "ref": "7a669755-ab42-4c03-965c-2848d43b15a0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6cb0d736-945a-41c2-bbe4-ad17b4278a68"
        },
        "item": {
          "id": "bdf53f73-f63a-49a4-a531-9375d06fc40c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "067f6129-8adc-4ee8-a256-9f9f6dcdf932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bdd461-9ad6-4252-9bd9-e139798d161c",
        "cursor": {
          "ref": "bb71bb56-97a4-4af8-9d1a-d94508b7173a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3c4c24c-7a1b-4b4a-9908-105b591fb332"
        },
        "item": {
          "id": "98bdd461-9ad6-4252-9bd9-e139798d161c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "705896e9-25a4-4aa3-8716-127f519b2793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e8cc7-b778-4b90-9186-44025bc74a12",
        "cursor": {
          "ref": "8ba18968-9915-4edf-b746-ad2ea871e0bf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "75ee20cc-2959-4bb0-90e0-aff28a57ad30"
        },
        "item": {
          "id": "a48e8cc7-b778-4b90-9186-44025bc74a12",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "62ea4059-0445-40b1-92b2-8d10ab9f7c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542fa0e6-dddf-4898-9948-b782a4e07f82",
        "cursor": {
          "ref": "11b9d54a-c31e-4c87-80fe-bd4a60bf412a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "66e2393d-b3d4-472c-8e11-69554d36793a"
        },
        "item": {
          "id": "542fa0e6-dddf-4898-9948-b782a4e07f82",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "408e54b7-1de4-47d5-8722-c28b74c6771e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc22cae0-985c-4713-ab09-2787b00d0dba",
        "cursor": {
          "ref": "01869103-4763-4e62-9b37-4f05d6a72107",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b80f0ab1-319a-47a7-a4dd-25303460eeb6"
        },
        "item": {
          "id": "fc22cae0-985c-4713-ab09-2787b00d0dba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d5a8f47c-9128-494d-992f-d0a399e2e01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dbf3af22-71c1-4902-a3e6-84387b8baabf",
        "cursor": {
          "ref": "fdc38078-0ce7-4e0a-8bf8-ad4e890e5b3f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "52a9a2ca-6277-4bda-af74-8404b5e5d3eb"
        },
        "item": {
          "id": "dbf3af22-71c1-4902-a3e6-84387b8baabf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23643ce2-777a-4b23-9b58-71c2b4320ada",
          "status": "Created",
          "code": 201,
          "responseTime": 5180,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec3739-df28-48fb-b030-28e4ee408e6a",
        "cursor": {
          "ref": "712302ff-2212-4030-8527-ff2e2fadedd5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c61e9feb-050d-41ab-bfd4-e26cf1dfba54"
        },
        "item": {
          "id": "ccec3739-df28-48fb-b030-28e4ee408e6a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "26bf41cd-b788-4aed-885c-27df3d4773d8",
          "status": "Created",
          "code": 201,
          "responseTime": 4888,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c05b779-eac5-4677-a0bf-5a7415f8d5bd",
        "cursor": {
          "ref": "b12d67ae-37ff-463c-ad09-18703051e52c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "54e353fa-9688-4715-bf28-a1897bbdc536"
        },
        "item": {
          "id": "3c05b779-eac5-4677-a0bf-5a7415f8d5bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3e5d4740-1eea-4c01-b797-f41584014a02",
          "status": "Created",
          "code": 201,
          "responseTime": 4804,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a812654-5fdf-4351-b25a-f0a303a2657a",
        "cursor": {
          "ref": "346ee27c-5e59-4d68-acd3-d867449c9865",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e3c17045-7bff-488c-80e9-739154ac1c9f"
        },
        "item": {
          "id": "7a812654-5fdf-4351-b25a-f0a303a2657a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78c4fbb6-d2fd-4498-b054-fb187bad0f8b",
          "status": "Created",
          "code": 201,
          "responseTime": 4143,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "656fe633-a9c2-4b23-8a38-e5e84aaa9ccf",
        "cursor": {
          "ref": "43b41042-2f5f-4227-ae3b-668d31d55e43",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4618f600-303c-4553-97ed-f25d1c9d67a2"
        },
        "item": {
          "id": "656fe633-a9c2-4b23-8a38-e5e84aaa9ccf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9bee7ea-e41e-4bf7-b362-dad4b5085d19",
          "status": "Created",
          "code": 201,
          "responseTime": 4365,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-28T00:37:47Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-28T00:37:47Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ff9034ab-17b4-437e-b065-2ad24a0c226a",
        "cursor": {
          "ref": "7afb4016-f6d4-48e0-b15a-7fc58b5449ce",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9179b88-8075-48eb-b491-01bfa5d52b5f"
        },
        "item": {
          "id": "ff9034ab-17b4-437e-b065-2ad24a0c226a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c28ff9c-5c0f-4d0e-87b8-ea124b0c3107",
          "status": "Created",
          "code": 201,
          "responseTime": 4831,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c16cc03-b6ef-4287-a6c2-65674cecbf70",
        "cursor": {
          "ref": "13066b03-58e9-4afa-a65a-f9f18b03dad9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e42d30d4-dc6a-451c-885b-349351e029e2"
        },
        "item": {
          "id": "8c16cc03-b6ef-4287-a6c2-65674cecbf70",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1dd62ebe-7b90-4bde-897f-f2c09407053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4be5402-cf98-4de9-80df-4348fcb91a81",
        "cursor": {
          "ref": "9a91f4f7-9cd7-48dc-b47e-fafece932cf3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ead9a9a0-21da-4e9a-a483-0cda6422b181"
        },
        "item": {
          "id": "f4be5402-cf98-4de9-80df-4348fcb91a81",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "699abb3f-6218-49a6-9c4b-e6e427054f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407fedfd-2696-474b-9e71-30e09a504061",
        "cursor": {
          "ref": "3cdaa7ab-ca97-4945-91fc-6ad2d75581f6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12b4387d-a0b9-44d6-8eb7-70d898eda6f1"
        },
        "item": {
          "id": "407fedfd-2696-474b-9e71-30e09a504061",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f2a3323d-fdb4-47f7-8a7d-46b2a61b2fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4435a8-5f17-474b-b984-45ff9e573c52",
        "cursor": {
          "ref": "c299a60e-8937-40b6-935d-93f402e85112",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0efe3915-a665-4024-a556-fcac741c0b0e"
        },
        "item": {
          "id": "cb4435a8-5f17-474b-b984-45ff9e573c52",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aeb29a2d-0e91-4b76-adad-a35feb1c542c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2617a1c8-8f8f-42a9-a012-db649006f9e4",
        "cursor": {
          "ref": "baf8a644-e98f-403c-b83a-69a544446e98",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "17e91d39-2c44-41d1-ab9c-14d7717f6dca"
        },
        "item": {
          "id": "2617a1c8-8f8f-42a9-a012-db649006f9e4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1494a121-c019-43d8-803c-a1d13e1e43aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71dcd4d-a6aa-4fbf-b66a-3a6f0b94312d",
        "cursor": {
          "ref": "cefc4095-a4f6-48e0-9073-9c4c282ddffe",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f31840cf-e8a6-40d9-9ad1-ccdd5ac7d1ed"
        },
        "item": {
          "id": "a71dcd4d-a6aa-4fbf-b66a-3a6f0b94312d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e460e0f0-3049-47e1-805d-480a32a32af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94960e3c-e2e8-4f26-abfe-ed1966a4572a",
        "cursor": {
          "ref": "a3ebcc5d-bb36-4248-8700-b9d937662cec",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2f1f8a7e-caec-4ef2-8fc7-97aee4bb98ff"
        },
        "item": {
          "id": "94960e3c-e2e8-4f26-abfe-ed1966a4572a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "917922b4-5774-49fd-9293-b58ffa350efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea28917-43c2-4606-8c5b-911317b9226e",
        "cursor": {
          "ref": "c4f50f1b-df43-4282-9455-5196f2e51c5b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "612586c5-2df5-428c-a973-c8d3d5e1d218"
        },
        "item": {
          "id": "aea28917-43c2-4606-8c5b-911317b9226e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e992948-8d7a-4981-bac2-6ac9d6ba5252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c074873-f665-4e14-b9dd-f965d7f8cb7a",
        "cursor": {
          "ref": "9f4ee6e0-f109-40d2-8bd8-1e83d7421376",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "583a9bfc-c98a-4fbc-ad4d-d379385a1cc0"
        },
        "item": {
          "id": "4c074873-f665-4e14-b9dd-f965d7f8cb7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdecb52c-15d2-4701-ab1b-de2a3f493ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aedb5fa-cb52-4a4c-ae9b-af3e502f1467",
        "cursor": {
          "ref": "cf2086af-c72c-4814-accc-623370625b57",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "76c18bc7-05b2-4d9a-9e36-0246d0340613"
        },
        "item": {
          "id": "8aedb5fa-cb52-4a4c-ae9b-af3e502f1467",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc295f88-773a-4591-80f7-d6b64102869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af42fbf-7c14-4dc2-9209-62b93ddc4921",
        "cursor": {
          "ref": "0f194fac-f422-4ad6-a244-5ed73349bc2d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "17886141-b34c-4f33-97e5-e603802918fd"
        },
        "item": {
          "id": "3af42fbf-7c14-4dc2-9209-62b93ddc4921",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "283dbf70-c366-46cb-983d-c00b99e56385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05348cce-3dd2-4020-a55d-3880dd09678e",
        "cursor": {
          "ref": "4eb67472-e548-4a60-a69e-e23dce8ddf25",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b5dd1345-c306-4e97-a0f6-1092af34e346"
        },
        "item": {
          "id": "05348cce-3dd2-4020-a55d-3880dd09678e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "95ee2224-d8f5-4bee-8880-27bae8d4d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ac63b-c5d8-4160-b099-230515c7e254",
        "cursor": {
          "ref": "1c6a072c-4e9b-4e9a-a717-42775872fdfe",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3fe22f63-e88a-4460-a729-39a2aa4c6326"
        },
        "item": {
          "id": "b30ac63b-c5d8-4160-b099-230515c7e254",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ac5f29d-be42-4830-823a-a9fadb40727d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ec137a-833c-42b8-ab50-e9ba7245a536",
        "cursor": {
          "ref": "f88c7495-adee-47f5-9326-64480473b2d0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8829a6a2-86a6-4856-8863-50778ff7835a"
        },
        "item": {
          "id": "d6ec137a-833c-42b8-ab50-e9ba7245a536",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "79df740c-fbc2-4e35-8658-30c674d1b9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9e2e3-bb9f-4d18-94e9-39b7d74f1542",
        "cursor": {
          "ref": "bbd53f17-78f3-44ec-b8f2-48e24c7e4e64",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81ca16f4-e8a2-4e69-a8aa-799721475551"
        },
        "item": {
          "id": "d0d9e2e3-bb9f-4d18-94e9-39b7d74f1542",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1483cf55-d8de-4104-8076-77585890e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6aa52b-742b-44fc-ba9c-fdfea7d311bd",
        "cursor": {
          "ref": "a3fdb137-1a53-4841-8816-5c4c354abead",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e0e6009-062f-4987-aea8-8053de0a67d0"
        },
        "item": {
          "id": "9d6aa52b-742b-44fc-ba9c-fdfea7d311bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f54ecac4-ad14-4729-8b7e-7d8d0d81281d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71cf1d4-29cd-42bb-af00-e17ad68fb863",
        "cursor": {
          "ref": "380413e6-fbdf-49c5-91ef-3dcea869d63c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5d202939-4e34-4d3e-aa4a-15e140f1fa5f"
        },
        "item": {
          "id": "f71cf1d4-29cd-42bb-af00-e17ad68fb863",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "66f17cf2-6e4f-44a0-8ba1-993a74c2ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89225d67-55ee-405c-b267-829d1c45a2a0",
        "cursor": {
          "ref": "7125c5c8-35d2-4bb9-851c-df071f47640c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9850f45b-3f3d-41ae-a271-0a9f27eb8f89"
        },
        "item": {
          "id": "89225d67-55ee-405c-b267-829d1c45a2a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "388094b8-e359-4275-8ef1-776307ef81ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c483a-a6ee-43c8-9c58-5ca1c2563158",
        "cursor": {
          "ref": "bb38b534-7aca-4043-b029-5bf86ef5a8ad",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ca8f0b89-a7e4-438f-bd20-def362fdf2fd"
        },
        "item": {
          "id": "6d6c483a-a6ee-43c8-9c58-5ca1c2563158",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf34bdc2-d017-4b10-a319-5f7aa07b8679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b405f08-94f5-4a5a-a48a-b8ca51542cd0",
        "cursor": {
          "ref": "af98bda2-81d8-488d-93c8-e7094003c37c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0784ab8c-8734-487e-bddc-177c7851c078"
        },
        "item": {
          "id": "4b405f08-94f5-4a5a-a48a-b8ca51542cd0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a63de8d8-d4ae-4804-b8e3-95e7a41669a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8f1ffd-1f16-4b50-b9f6-54ecb32fccc5",
        "cursor": {
          "ref": "6078bfec-b330-421e-80ec-8bdcdf4bf631",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c1efe1a1-0d73-404f-a762-e544f9ec4ebe"
        },
        "item": {
          "id": "cb8f1ffd-1f16-4b50-b9f6-54ecb32fccc5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76c9d5dc-d773-4cec-a8d1-d4b17083f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff1b3b7-9b4f-4d13-a0e9-342bde7db026",
        "cursor": {
          "ref": "a8408714-1e22-4743-bf9b-73c84abd855c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "03820afa-bd71-490b-82af-1744a792e78c"
        },
        "item": {
          "id": "0ff1b3b7-9b4f-4d13-a0e9-342bde7db026",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "377aeba5-90c2-4526-9c12-ede40535df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e2d36a-e852-4464-9786-291191351e19",
        "cursor": {
          "ref": "1423f3b4-3323-42be-99b5-54cb5084e549",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5458be20-a6a9-47a5-951d-1bc82af19d75"
        },
        "item": {
          "id": "b9e2d36a-e852-4464-9786-291191351e19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5bd12b92-7d6c-4f95-9436-18a25cf67c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad216a5-2ead-4c86-806e-7aee1cf7af16",
        "cursor": {
          "ref": "48ccb454-3fbd-4aed-ad79-0b1186e18016",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "349f2f93-0904-4d04-a651-e475501cc092"
        },
        "item": {
          "id": "8ad216a5-2ead-4c86-806e-7aee1cf7af16",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96534083-4a99-4ee9-bb2a-c1fe576388f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd1a502-4200-413b-af9a-105ee8a65ea7",
        "cursor": {
          "ref": "7d036790-91da-450c-bd4a-9e02db9a0226",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0036f392-8b46-4de9-93d2-93aab8006975"
        },
        "item": {
          "id": "5bd1a502-4200-413b-af9a-105ee8a65ea7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ae237b5c-094c-4957-ae44-85a9a6f4e2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb01865-7435-451f-bf50-243abab676e2",
        "cursor": {
          "ref": "7631492b-5f83-44e1-bfeb-decfc9f63140",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e68a1440-cad4-4bee-a4b4-bcfb4b07fc7a"
        },
        "item": {
          "id": "5fb01865-7435-451f-bf50-243abab676e2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9c8bed80-3984-4544-b357-8ae5248350aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d118b1c-1efe-4408-984b-c1d965f7cfec",
        "cursor": {
          "ref": "5d2d1c1c-4142-494d-bf98-f44ca73cb06c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "362abfc8-7452-4927-846e-6adb023e9aa4"
        },
        "item": {
          "id": "5d118b1c-1efe-4408-984b-c1d965f7cfec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "def5c028-7583-4b24-84b2-5ec7ccf1ca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13941e49-5abc-46e0-a0ae-b5ca15198bc9",
        "cursor": {
          "ref": "3b3d6855-80e2-456a-b672-e88601562e45",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26acd0f6-76c4-4e83-9ec6-81b712cc4ad4"
        },
        "item": {
          "id": "13941e49-5abc-46e0-a0ae-b5ca15198bc9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c48a8547-6f9b-4bd2-a071-9cd2af0c2069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8464ba99-0468-4cec-9b18-204e8d34582e",
        "cursor": {
          "ref": "c3fac86f-a79e-4f5e-bc6d-e7587ff21b83",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "58b4cdbb-fa99-4bb8-baea-6f285b82b777"
        },
        "item": {
          "id": "8464ba99-0468-4cec-9b18-204e8d34582e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "703f35bb-1919-4afb-8da4-75c4d78ebcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdd091b-4db4-4be6-9538-f164467eb509",
        "cursor": {
          "ref": "4bc98994-35a3-4b21-aa62-f44a2df1deb9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f6d98e5-a0b9-4798-bf58-794b87d4293f"
        },
        "item": {
          "id": "0fdd091b-4db4-4be6-9538-f164467eb509",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3246fea7-406e-4cf6-87c4-23408b4b0dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c1e405-35ae-48f9-850f-facfa0310256",
        "cursor": {
          "ref": "f6c9fd62-bd13-4ea8-815f-932117b5a6d8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7d3a3016-d387-4db3-875c-766a682a6fff"
        },
        "item": {
          "id": "54c1e405-35ae-48f9-850f-facfa0310256",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "369c2d38-ed92-480d-a30a-dc15f74f6b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbb33ac-3cd4-433c-a9ca-34c818fbdd3b",
        "cursor": {
          "ref": "3b8c826f-14d0-4af6-bdb1-b535fb086739",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f178251-049c-4af9-8331-1250fa915cc2"
        },
        "item": {
          "id": "7cbb33ac-3cd4-433c-a9ca-34c818fbdd3b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dfd123ab-207b-4db5-961b-ead9025cbbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c0801-0c87-4723-b20f-f519596f27e9",
        "cursor": {
          "ref": "fc860b10-33f2-4409-8e03-ba5253c9f654",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a026afb0-2de0-40a9-a79e-def9c534bdda"
        },
        "item": {
          "id": "869c0801-0c87-4723-b20f-f519596f27e9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c727ef0e-ba18-4eb1-a14a-49ad817acf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5de127b-2101-45d5-bb22-874d75c0da6d",
        "cursor": {
          "ref": "284c25e0-59e2-4b9c-8791-208c5aa0eae7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "40c27fd0-19cd-4724-9128-0e5f821e9fb8"
        },
        "item": {
          "id": "d5de127b-2101-45d5-bb22-874d75c0da6d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c1cb9530-a15f-4bf0-ad26-59065d3e3f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df42e4-5c80-45c0-98bc-b30edd2dd9f2",
        "cursor": {
          "ref": "11418b95-3507-4d96-be86-50543d079bcd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "afbd25b7-eca1-47e9-81c7-a451f2eb835d"
        },
        "item": {
          "id": "a0df42e4-5c80-45c0-98bc-b30edd2dd9f2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1e95f0ed-c3b5-4253-99f1-64d78d05c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda8e6bf-ebc6-47fb-b840-6e16f850c58f",
        "cursor": {
          "ref": "1c8baa9d-91a0-44e2-94e1-4b6177d5bb69",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cb6d637a-5089-4a44-b8a9-39e90dcc74d0"
        },
        "item": {
          "id": "eda8e6bf-ebc6-47fb-b840-6e16f850c58f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5562e5c6-6244-4377-af12-f9bc5611a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2b8b45-9fb1-4dba-b36c-e063c0f44632",
        "cursor": {
          "ref": "25977198-a4e2-4304-bb15-1c4c6d80d5ef",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b9be084a-39f2-4a87-8b9c-ab653cf2848c"
        },
        "item": {
          "id": "7d2b8b45-9fb1-4dba-b36c-e063c0f44632",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e49dbe8c-8a3c-4230-b9cc-4bbfb129a474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e27801-c0a0-4cd5-b76e-99a83f153e05",
        "cursor": {
          "ref": "cc7962c2-031c-496d-980e-33df13b66263",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1c323cc8-7043-4c06-8f03-bc55f4d18dcf"
        },
        "item": {
          "id": "b3e27801-c0a0-4cd5-b76e-99a83f153e05",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d907577f-aea6-4a34-ba97-64288f397ef6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d820874-7723-4ace-b57a-ad2791807bac",
        "cursor": {
          "ref": "11d5eb9a-9855-4d34-aaea-48c05732435e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3423ae03-d47c-48dd-a19f-479c8c2b3237"
        },
        "item": {
          "id": "1d820874-7723-4ace-b57a-ad2791807bac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e7ebd00-a993-4d9e-b7f0-9309e4484c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb09ad9-43f5-404c-a665-3d9cce641810",
        "cursor": {
          "ref": "bae0c1e5-9ddf-4a75-ad80-db86f084ce1b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2269dd3-64e5-47a6-9cc1-fa5b060f539e"
        },
        "item": {
          "id": "cfb09ad9-43f5-404c-a665-3d9cce641810",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "77396939-3f33-4a6a-8cf7-52ba4dcff477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90c06a3-7190-4d0e-9ba3-f54a35744d6e",
        "cursor": {
          "ref": "7382dcc6-5acb-4546-83d3-97eb94e221ca",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f0353b26-8fcd-4237-a950-e9ab8e7285ea"
        },
        "item": {
          "id": "c90c06a3-7190-4d0e-9ba3-f54a35744d6e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "283f669d-2897-48dc-84ae-ec55c76dfe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b894058c-ba51-4158-82d8-e02851efdc29",
        "cursor": {
          "ref": "8e47dcd6-2aac-4ac3-a135-c07bc591ffe5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a7a669da-b782-4e60-86e9-681c08c23844"
        },
        "item": {
          "id": "b894058c-ba51-4158-82d8-e02851efdc29",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf790344-b88d-4070-97b5-94a82f7d2220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef410fd-4f79-41c5-b901-80d2a774e5d1",
        "cursor": {
          "ref": "0a8482f7-1266-459e-858d-d1d437470588",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e7915bec-4452-42f3-8632-4a1679fc02b2"
        },
        "item": {
          "id": "5ef410fd-4f79-41c5-b901-80d2a774e5d1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5939a189-57ba-48dc-a593-82c750a1b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e2439e-1663-4944-991f-50d36d9f48c3",
        "cursor": {
          "ref": "b9380ab6-a199-41bc-89ce-911b54447e28",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d9226517-e2d2-4ce2-9657-693e0cf7f48d"
        },
        "item": {
          "id": "06e2439e-1663-4944-991f-50d36d9f48c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "165d30a9-f02c-466b-b478-0f99fb0ff3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d711cffa-7e79-40fb-b0c7-e600990dddb6",
        "cursor": {
          "ref": "237921ac-b4a6-41e7-96a5-1ce40723d144",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "791fe9d6-d1d1-4126-bc30-361abbefa912"
        },
        "item": {
          "id": "d711cffa-7e79-40fb-b0c7-e600990dddb6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce354b66-7903-4282-8f30-2d85ab1f307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c3cf2e-0320-4cf2-bccc-1d5503ed7b32",
        "cursor": {
          "ref": "8db5468b-1023-45c5-9959-69a3c6109b7c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c8405ca7-b3b3-435c-8ac8-7a4ddff5ba37"
        },
        "item": {
          "id": "91c3cf2e-0320-4cf2-bccc-1d5503ed7b32",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1ab9bfd3-9ff2-4f41-b45a-6376d031f220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c1baf7-3b7d-4eea-9984-1428f25b3122",
        "cursor": {
          "ref": "f7c5f634-fbc1-41fc-98a0-15c1ff1a482a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d99a8baa-29e7-48cc-b335-afac047b818d"
        },
        "item": {
          "id": "c3c1baf7-3b7d-4eea-9984-1428f25b3122",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ea19505c-1c74-4a82-b8cb-1c46d64120df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538c9911-0e11-4b85-a145-d599f9481675",
        "cursor": {
          "ref": "3baca8fd-6a0a-48e3-8cd6-cfa226ac1007",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbdcc274-96fc-4c93-9657-1a390cdc1bbc"
        },
        "item": {
          "id": "538c9911-0e11-4b85-a145-d599f9481675",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d73ea491-e8c5-4095-a5ff-ac351ba8705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335f96d-3092-4fc6-994c-f7b1e2c90995",
        "cursor": {
          "ref": "e1276baf-dad1-4f97-8598-d439743de13a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54b1551d-f4e4-470c-a52d-4ced19454424"
        },
        "item": {
          "id": "0335f96d-3092-4fc6-994c-f7b1e2c90995",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6be44311-8374-4645-897e-11582c59057a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b37b116-3ccd-4f1f-9fbf-38fe1bb77aab",
        "cursor": {
          "ref": "5e39e2d7-893f-4dc7-b97c-98fdb64db705",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30b3002d-9db7-4cbb-9a92-9f2bcef22f0d"
        },
        "item": {
          "id": "0b37b116-3ccd-4f1f-9fbf-38fe1bb77aab",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dfc229bc-a881-4837-8c95-bb452c596f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2a6cd2-b0d2-4fb5-b7d4-cda4104007b3",
        "cursor": {
          "ref": "5cc359e3-9bac-4c13-9ef8-0b45b81a7d2c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7ffaf1e8-c476-41b9-a90f-486d4b4e17e1"
        },
        "item": {
          "id": "8f2a6cd2-b0d2-4fb5-b7d4-cda4104007b3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a1aa3c99-0c7e-4a59-8d83-696af4b9aa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e11a1ad-1b14-44aa-839e-0913918646d5",
        "cursor": {
          "ref": "571a14ae-06fd-4e11-b8ce-e42b9bb732e1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b56b6e80-fed5-4676-ab57-1acf7473254a"
        },
        "item": {
          "id": "1e11a1ad-1b14-44aa-839e-0913918646d5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "227f4498-e19f-40a3-acb7-1adfeb812d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b09e76-be13-4c31-ba2d-187fa4014096",
        "cursor": {
          "ref": "1602c1b0-4a20-4b41-8898-eb339fc420e4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "61e06fac-f6a7-41a3-af37-be27b19c40c8"
        },
        "item": {
          "id": "e1b09e76-be13-4c31-ba2d-187fa4014096",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1c6fdb19-9289-4256-9e19-38283f9a2ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57368831-7ee6-4e53-8e8d-4fe0cc00ea1b",
        "cursor": {
          "ref": "44cbb1cc-6489-4f7b-a6b7-a52b625e1578",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f54fa7d2-119f-4660-9d7a-a11d81db0f45"
        },
        "item": {
          "id": "57368831-7ee6-4e53-8e8d-4fe0cc00ea1b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "377bdca0-54b7-4449-8494-039c01527f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a332960a-eaea-4ca2-a4c7-7ce5c890826c",
        "cursor": {
          "ref": "ec24af92-0a24-4c12-a93b-06ff45006ab7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "026cf6d2-bc3d-4b4e-95fb-c5647055eaa2"
        },
        "item": {
          "id": "a332960a-eaea-4ca2-a4c7-7ce5c890826c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "043c6eb6-6959-4e6b-854d-8786cbe64453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9976db5-9c74-4bae-a36b-e939240db347",
        "cursor": {
          "ref": "6cfb9c89-8511-402e-ba69-acf65c8f7abc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e39e1162-20d2-4b8b-949b-26477c74693a"
        },
        "item": {
          "id": "c9976db5-9c74-4bae-a36b-e939240db347",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "892b172d-fbc1-48ed-8bc4-ab135e4c6a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a677e8f-2489-4176-8f27-011e66a10358",
        "cursor": {
          "ref": "4284d35b-84ce-4199-872d-a5119fe79265",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "473c7962-2cfa-405f-a64f-230e6fc984a9"
        },
        "item": {
          "id": "1a677e8f-2489-4176-8f27-011e66a10358",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b0c0dd5d-831c-448a-b0ec-5d7548744514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d7d029-71af-4c59-b15a-840de799e1e6",
        "cursor": {
          "ref": "829d3d8c-e6d0-44ca-9c38-14fedb27c121",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9845db21-6443-4c90-b01e-7338f5c8d4b1"
        },
        "item": {
          "id": "f6d7d029-71af-4c59-b15a-840de799e1e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c03b20be-8e54-40ee-8704-0268794a3a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44221057-2d5e-4e23-8e14-63d5836fcad1",
        "cursor": {
          "ref": "34775727-7e24-48e8-89aa-d9645617b4a4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "622d83ae-ed78-49b9-bb7a-0f77be95df4c"
        },
        "item": {
          "id": "44221057-2d5e-4e23-8e14-63d5836fcad1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47de5375-fffb-4774-a3c4-44e6310c4102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d167ac7-3deb-426c-bb5d-a9309a2ef934",
        "cursor": {
          "ref": "9fd23329-9356-404f-8ccf-dde5c41f5eb1",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1b467f78-6a15-488a-8e8e-020b31c17971"
        },
        "item": {
          "id": "1d167ac7-3deb-426c-bb5d-a9309a2ef934",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b4129494-1034-481e-b906-f6a655fd0bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113b96aa-a48a-44ad-a0ce-47dcb2d68a4d",
        "cursor": {
          "ref": "6b31a211-1ac1-4769-a9ac-7a7ce1823b0f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e9b756d-4c21-42b2-830a-68acebfe9916"
        },
        "item": {
          "id": "113b96aa-a48a-44ad-a0ce-47dcb2d68a4d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d74e7557-83cb-43b0-b2af-6c8165f225b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce0174c-0c6a-434c-9291-c32ea687e10e",
        "cursor": {
          "ref": "8485250e-73af-4696-855c-7f1cc552b566",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f63aac2c-0c9f-4787-9d52-125daf290dfb"
        },
        "item": {
          "id": "bce0174c-0c6a-434c-9291-c32ea687e10e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "24228438-85f0-43df-95b6-1b2d030b8df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb5026-8016-4d34-a224-114e574e750e",
        "cursor": {
          "ref": "5a8e6e7c-70c3-4750-b21e-d5a97119137f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11d349ce-1a98-41b6-9496-2c7ef2e4507c"
        },
        "item": {
          "id": "8dbb5026-8016-4d34-a224-114e574e750e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "33363d27-6ba7-490a-b20e-67cf4e478d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46e7d4c-f901-4a37-bfd4-368f385ecd5e",
        "cursor": {
          "ref": "f8ce6e52-3321-4589-8347-f825b63d24da",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1e6f2669-abef-48cc-b837-b587c2364d67"
        },
        "item": {
          "id": "b46e7d4c-f901-4a37-bfd4-368f385ecd5e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "65180f20-e321-41fc-8ed5-c2e88e9ade23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4261618c-5c8c-4f27-a036-4b40b245afbb",
        "cursor": {
          "ref": "0f592487-4446-4076-ab55-64919b583202",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eb1f4819-3e06-4eed-a32a-232d1f5b2620"
        },
        "item": {
          "id": "4261618c-5c8c-4f27-a036-4b40b245afbb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "de189baa-06b2-4f6e-b20d-7755e016a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfb2fc5-c5c2-43a8-9d09-fad0514fe808",
        "cursor": {
          "ref": "fb977bd3-34bb-4eb5-bb36-aebc16455ab7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "11760a50-9122-49e9-bd76-317876e9f816"
        },
        "item": {
          "id": "2cfb2fc5-c5c2-43a8-9d09-fad0514fe808",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "541e21d4-0704-4b34-9a95-bfadc91f9eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fa9785-6133-4d7d-8e3f-db6c187ceb19",
        "cursor": {
          "ref": "9b6cf593-f2e3-4923-9104-d3f2b8642b21",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a467f8ff-6ef7-4723-aa12-b802a4160879"
        },
        "item": {
          "id": "95fa9785-6133-4d7d-8e3f-db6c187ceb19",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ee968e6-836f-41be-b502-48269078f288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513c768-7c58-4d36-8aa4-8e55f83d4071",
        "cursor": {
          "ref": "5c83ff59-a3af-4020-81ab-5cc8ce5d686d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ce4eb7e5-ab8a-4ece-9d0f-69a538d05fc1"
        },
        "item": {
          "id": "9513c768-7c58-4d36-8aa4-8e55f83d4071",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a61fd33-0f0e-42f5-86ec-bc69e86ece16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d370e600-bccd-4d28-9e32-0a161ad48f4c",
        "cursor": {
          "ref": "5cc2062d-03bb-4dc9-9282-a419f51fd9c4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51682f7a-cc33-4152-94dc-7eb5b23a3eb0"
        },
        "item": {
          "id": "d370e600-bccd-4d28-9e32-0a161ad48f4c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "53ba2764-95c8-47bd-ab95-ccb44eed5f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877d840d-f0d3-49c6-bece-c1e086aa464c",
        "cursor": {
          "ref": "dcca99d0-04e8-4d6b-9bdd-2b4b3d4ac72c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9f06e49e-5fcc-4244-b944-03b64b48b0a5"
        },
        "item": {
          "id": "877d840d-f0d3-49c6-bece-c1e086aa464c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8898f56d-c1bb-49c8-9fc1-b5032a980c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c2d93a-4a12-4213-bb79-b7bc2ccb9572",
        "cursor": {
          "ref": "9e6be471-1ddc-47bc-8c63-98d76b3feaa8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f221c17f-4979-45c7-b5e4-895f251968ee"
        },
        "item": {
          "id": "c2c2d93a-4a12-4213-bb79-b7bc2ccb9572",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d0ac9283-f56e-437c-9b82-918b22b4a24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d85704e-bc5b-42dc-9934-83d6b62f07ef",
        "cursor": {
          "ref": "3204686b-d384-4e40-8d14-b109838e74db",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "00a182cd-ef82-4a9d-9dbd-c3474c06ed17"
        },
        "item": {
          "id": "5d85704e-bc5b-42dc-9934-83d6b62f07ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2d17e43c-6098-40d3-94b2-1222fd5440f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d018f53-3a0a-46f5-bad1-37d68f7dbc54",
        "cursor": {
          "ref": "3fc7ab6d-a659-4244-82c6-19f6ec46d03a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c4300a0c-7a06-41a9-b254-898112e7ca2e"
        },
        "item": {
          "id": "5d018f53-3a0a-46f5-bad1-37d68f7dbc54",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "19b39df4-0fe0-429b-975e-57d4b80e7dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dcd709-f68d-464b-9567-966b3e0db4ba",
        "cursor": {
          "ref": "0b225a7a-8289-48eb-b8be-6a19872973fc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c01b9b9-69ac-424a-a686-694a4991d20f"
        },
        "item": {
          "id": "a0dcd709-f68d-464b-9567-966b3e0db4ba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8abee84d-5280-4efc-9fdc-93d5e945e4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acd17c2-c506-49ca-a225-cf586bf50fb1",
        "cursor": {
          "ref": "c21e57b1-0556-4532-966f-3bd988a0945b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6c83b096-8c44-4b3f-803c-7f2083a76f0a"
        },
        "item": {
          "id": "6acd17c2-c506-49ca-a225-cf586bf50fb1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "72fd4b86-5a38-4186-8ef5-4197275e38de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1119c50-1ba0-4ae2-9ac7-ed1f21619c3a",
        "cursor": {
          "ref": "66720728-5087-4a1a-9fed-231a5fa8182b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a464268a-a4d5-43f5-9ca3-28db634f1855"
        },
        "item": {
          "id": "b1119c50-1ba0-4ae2-9ac7-ed1f21619c3a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "331e1146-6a85-47f7-af33-a608af9897c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc678db-2415-4ec6-8a47-dfd62209670e",
        "cursor": {
          "ref": "d782721a-ce20-465b-928f-26c946bab2ab",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e9e441bc-7bc0-4676-99e8-833e4030805a"
        },
        "item": {
          "id": "8fc678db-2415-4ec6-8a47-dfd62209670e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f3ac505-7841-42db-8d9f-1f401d255014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464b5d34-c4ad-4f9a-8fd1-721a7d73646a",
        "cursor": {
          "ref": "5ffd5ea9-0225-4c69-899a-d4d72bed593c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "981dd7cf-c2d7-4e63-b38f-d6eaa3bc5de8"
        },
        "item": {
          "id": "464b5d34-c4ad-4f9a-8fd1-721a7d73646a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "035d859b-7139-42df-a9a1-699ce09c023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ccecc-681e-4f65-9efd-cc16c684223d",
        "cursor": {
          "ref": "205ec6a0-d2ca-452a-ba2d-5dba6e1db79e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "076167d8-f829-41ee-a2fb-fe7815eb6e0b"
        },
        "item": {
          "id": "d62ccecc-681e-4f65-9efd-cc16c684223d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "32ea5a2b-0a74-4695-aa7b-73aa76743e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c43b4c6-5bbb-4cd5-86e0-9bf095e5509a",
        "cursor": {
          "ref": "caee0057-8ed9-459f-a528-1804d27762b9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ecd40f92-ccda-4775-b142-005c4d16b35b"
        },
        "item": {
          "id": "1c43b4c6-5bbb-4cd5-86e0-9bf095e5509a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7b2f4091-00cc-4256-a627-8cd4e810faaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b053227-55fa-47f6-9db8-11026dec46e6",
        "cursor": {
          "ref": "4d6c92ad-2e62-4069-83e9-cf722e02b518",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "02511a2f-027f-4f1c-a0c3-ccc7d62d7895"
        },
        "item": {
          "id": "2b053227-55fa-47f6-9db8-11026dec46e6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3460b191-1a49-448f-9538-8cd7e8fdfd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04ebe14-b9b9-4fbe-99f0-3c6bf094552b",
        "cursor": {
          "ref": "c7c58579-f05d-4dae-986d-d360785ab9a5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5c3983cf-1a1f-4aca-9e32-4679e79f7f26"
        },
        "item": {
          "id": "a04ebe14-b9b9-4fbe-99f0-3c6bf094552b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d790da8f-ff84-46e3-969e-2740b0ecfeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97134954-41b8-4649-a0c7-9ad1fb9cc892",
        "cursor": {
          "ref": "a370aba7-a88e-4bfa-969d-10207a56669c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d2f7ba39-f4e5-4d48-87a1-1db65a907ddb"
        },
        "item": {
          "id": "97134954-41b8-4649-a0c7-9ad1fb9cc892",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "45744fe0-c240-4725-a1e6-1788f0189d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8554960-1ec6-4281-be73-a8245fab91f6",
        "cursor": {
          "ref": "00498304-f058-4d9b-a1f4-9d24c017c355",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba35080e-34e1-41c6-8e50-3a09ce5be94b"
        },
        "item": {
          "id": "f8554960-1ec6-4281-be73-a8245fab91f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b931d685-c7bc-4236-9148-52c8b768d98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835b6047-5bcb-4742-ba16-414a46118d69",
        "cursor": {
          "ref": "c978433b-6444-4818-b2a6-5006a3e5c657",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d716f043-3eb3-45e1-a6c5-20e20d0edf4e"
        },
        "item": {
          "id": "835b6047-5bcb-4742-ba16-414a46118d69",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7cc6d291-e50b-4a5f-88a4-1fe0f3ebdc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c416b9-f6f4-4c2a-8140-a4b66c397306",
        "cursor": {
          "ref": "5677dac7-606c-4c3f-90f2-fa72bafbe675",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0f5537af-2d9f-460a-92b5-6999c0caf98d"
        },
        "item": {
          "id": "e8c416b9-f6f4-4c2a-8140-a4b66c397306",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f1aa536b-d3b9-4584-8232-7c8053b58fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39aaba9-66c4-457f-88c9-6fc986a14310",
        "cursor": {
          "ref": "71778c06-9b58-4b2c-81b3-5f8dca99cfff",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d93d1d73-02a3-4f3b-8b04-6e44301b3b67"
        },
        "item": {
          "id": "c39aaba9-66c4-457f-88c9-6fc986a14310",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "655ec4d9-de81-4250-b796-597d3676b1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c587e8c1-4749-4f9f-bfcf-9e11f18491f6",
        "cursor": {
          "ref": "035a185b-a836-43be-843f-e6a51789c034",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "09f652b9-71ac-42b9-9f58-cd96e0672525"
        },
        "item": {
          "id": "c587e8c1-4749-4f9f-bfcf-9e11f18491f6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2a7421e7-5c39-4984-ac2a-bbb9065ffba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a8b5ff-ac65-4e2d-9b84-db2e1d21043a",
        "cursor": {
          "ref": "bbd87a70-e922-4816-a677-1c3de0077126",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d95cf382-0779-4a48-9ffc-510216896c31"
        },
        "item": {
          "id": "90a8b5ff-ac65-4e2d-9b84-db2e1d21043a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7781a79b-8752-4ba6-a238-32d167bcc6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1140b4c7-6e7c-4ff3-a859-51434863fffa",
        "cursor": {
          "ref": "e38cf8c7-4fa8-46b3-a843-ca74fdd2b16b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5ad48c0f-aacd-4acd-b6c4-9f2cbd0f0adf"
        },
        "item": {
          "id": "1140b4c7-6e7c-4ff3-a859-51434863fffa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a24b898e-8ee7-497c-9388-6b16b368ebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090917fa-d502-4379-9ead-0acef65bf0a2",
        "cursor": {
          "ref": "555c6bf0-b582-44a9-89b0-118db43bf1d4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d2c3c11d-220e-4fa7-9635-208db2b91f97"
        },
        "item": {
          "id": "090917fa-d502-4379-9ead-0acef65bf0a2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c0f1c52d-3aa9-48c6-baa8-746e12823be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30dfe90-ce9e-4654-850f-9201048c1a2d",
        "cursor": {
          "ref": "0028a9b6-de91-4eb4-919a-12c5beb6b605",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c4e8fe0d-7650-4b5e-b858-264a64b5903f"
        },
        "item": {
          "id": "e30dfe90-ce9e-4654-850f-9201048c1a2d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "70270572-ed49-4969-871f-afdb1905e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af96d76-f035-46b8-8a4b-e2cc5422fd89",
        "cursor": {
          "ref": "5401ed6e-2a25-46f2-9e8f-99c4c78e43df",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5a62a320-700a-40b0-91c6-b45871c22129"
        },
        "item": {
          "id": "2af96d76-f035-46b8-8a4b-e2cc5422fd89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9849fb5f-f581-4124-95ca-c7ec7f28017b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b64e76-de21-430b-8f14-ce12ea068956",
        "cursor": {
          "ref": "5d3d49fc-855d-4b82-aca9-f901434afeb9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "94e3fb38-15b2-4543-ac9d-146117d18a2e"
        },
        "item": {
          "id": "27b64e76-de21-430b-8f14-ce12ea068956",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "60130cc7-562b-47df-9159-23e1a85497ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd69fc20-b371-4a28-8979-8e1e7679d5ed",
        "cursor": {
          "ref": "cf2f0655-38f7-48dc-be56-d3149eaa7e87",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8794589f-6ef4-4d92-b548-4b0b19e584f2"
        },
        "item": {
          "id": "fd69fc20-b371-4a28-8979-8e1e7679d5ed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f5f13a3f-ebc2-4f19-b71a-42dc8385d0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9edefe-4a85-4a2c-b06b-d5ed5ab3f9cc",
        "cursor": {
          "ref": "1405947a-1183-47e8-9ccd-8342d6001e3b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "afe10061-cfff-4635-b554-61c5d987b7f1"
        },
        "item": {
          "id": "4f9edefe-4a85-4a2c-b06b-d5ed5ab3f9cc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0107f847-ae75-4fb6-8a9c-488924c22354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0493d41-fc74-4e1d-add5-48e865b9125f",
        "cursor": {
          "ref": "136f42cb-c885-46c0-a71a-16b306a6990d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cff1606c-1d9a-4d2d-a92d-b674030369e3"
        },
        "item": {
          "id": "b0493d41-fc74-4e1d-add5-48e865b9125f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "13645da8-712d-4f2c-bb05-3a7ce20bcdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1728ef64-6c5c-49f0-a2d2-d1325674bfb1",
        "cursor": {
          "ref": "d6d94077-cc08-4c58-be2d-8b98c298eaa8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "356cf741-c371-4cae-a232-f37e2316a206"
        },
        "item": {
          "id": "1728ef64-6c5c-49f0-a2d2-d1325674bfb1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eed08bed-75c3-4dbe-a16e-e77dbd4a3b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d533ea-1d76-4f8d-8337-208255270e9e",
        "cursor": {
          "ref": "d77fd266-b0a4-47d6-a90e-d653fed71b8a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b1cfd295-3eb6-4915-b54e-53e2e3693723"
        },
        "item": {
          "id": "72d533ea-1d76-4f8d-8337-208255270e9e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4234c3c1-f360-41a9-adec-237df2df3299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3058194-5bd7-4982-96e9-7f4199566b09",
        "cursor": {
          "ref": "2a8c9a57-029f-4f3e-93b2-93fd0077ff07",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16e777c9-f55e-4d1e-bbe5-9895d2b8740b"
        },
        "item": {
          "id": "d3058194-5bd7-4982-96e9-7f4199566b09",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c5d5084a-e520-4b3a-a2e3-b8bc32b0462c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749365eb-9bf5-43b5-8ffd-5b18cf9cc986",
        "cursor": {
          "ref": "db1e5c10-a873-4497-9bcd-6f35737a9ce9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8b930d96-4d0c-4dc4-9d01-d764831d4e26"
        },
        "item": {
          "id": "749365eb-9bf5-43b5-8ffd-5b18cf9cc986",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "69eece41-f59a-42af-946c-c54619efd4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a06c5-d19a-43ce-ad4f-3f9736137f39",
        "cursor": {
          "ref": "87e9cb8c-8d98-4916-8338-548ca2a27294",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e63b4691-36a5-4f75-b3a3-50f8fe29ca19"
        },
        "item": {
          "id": "802a06c5-d19a-43ce-ad4f-3f9736137f39",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78b87831-a62c-4732-b582-fa6fba5c735e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e263713-b953-416e-98eb-ad37508fa627",
        "cursor": {
          "ref": "4ef86f7d-2c81-4e87-819b-9d726513f33a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb8c4df5-6f67-40bf-8c84-0ed792ce00d4"
        },
        "item": {
          "id": "1e263713-b953-416e-98eb-ad37508fa627",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "62f75c8f-5c58-4dfd-9793-a6d25ca5432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4543c9-d15d-4bb9-a2fc-835fad0aec12",
        "cursor": {
          "ref": "d7783598-0e1e-41ee-9fec-03d3f264b413",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4202bd46-48fa-482d-82e9-3a0d37e66706"
        },
        "item": {
          "id": "1c4543c9-d15d-4bb9-a2fc-835fad0aec12",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0abd864e-a1a0-49c2-8932-f348d21c1d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3833740-a1cd-4cb2-9bf1-8f41d10ca473",
        "cursor": {
          "ref": "99b08ab5-1d32-49e9-b088-0c4ee190ed15",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d1d16b85-ec4a-456a-b84d-defbf1a07d7a"
        },
        "item": {
          "id": "a3833740-a1cd-4cb2-9bf1-8f41d10ca473",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bb6c5cde-4e18-450c-9fe0-c521b60c373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef9520-d2ca-4552-b13a-3e757a6b76f0",
        "cursor": {
          "ref": "a5f24b1f-2ee7-491b-bb20-3131b5bc9351",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e79134bc-6429-4978-9c62-6f9ca3b3592c"
        },
        "item": {
          "id": "56ef9520-d2ca-4552-b13a-3e757a6b76f0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0476a66b-efb0-4424-8db2-681e7388724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727be3c-ec78-48c3-8ad4-e67b9add6b2a",
        "cursor": {
          "ref": "1862055e-f320-4b7f-811c-26f41f5f4c62",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9a7926f-f200-4eed-a366-173900d175f4"
        },
        "item": {
          "id": "6727be3c-ec78-48c3-8ad4-e67b9add6b2a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9e87f05e-df15-4fa4-bbab-9383e0ff86f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb8463-2d53-4489-923a-7925a6fac6d3",
        "cursor": {
          "ref": "919cc841-761c-4960-ba6f-b4415ab46da0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5d084895-8ce1-4b1f-a8d6-3594c57be511"
        },
        "item": {
          "id": "6aeb8463-2d53-4489-923a-7925a6fac6d3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dec2face-d9c5-4f1c-a0c7-711173a5191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec3c4ed-b1b1-49e2-a3b0-071f45a02406",
        "cursor": {
          "ref": "495c4d07-850d-4575-b679-29fed223c01e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f728721a-4b82-4476-9a2c-965ca5ce39d3"
        },
        "item": {
          "id": "cec3c4ed-b1b1-49e2-a3b0-071f45a02406",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "04825a0d-ea49-442a-bcc0-10af4c70b85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0334f1-fbfd-4c8f-b851-4c6036799d51",
        "cursor": {
          "ref": "237e7ce9-b6a6-4929-b90d-a146a3f33e6c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9df48282-77c6-484f-98ad-00711f6cf862"
        },
        "item": {
          "id": "2d0334f1-fbfd-4c8f-b851-4c6036799d51",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "558067e6-459a-4c07-a85f-caf3c9b65d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b25ab4-e7f6-4f00-b48e-c4e0f17c157c",
        "cursor": {
          "ref": "9c30405c-24b0-48ac-b7c4-2eb1da99b988",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "68ec54b9-cbef-42fc-ba9c-ef700a7a1414"
        },
        "item": {
          "id": "67b25ab4-e7f6-4f00-b48e-c4e0f17c157c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "035aacad-1011-481a-81e9-5ac44d6fabfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ebb367-64c6-4c6d-84fc-30ff49b23133",
        "cursor": {
          "ref": "4dad28c7-ae10-48df-bba7-c42538d1dd2a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "62485337-0b5a-4b52-aa6e-bed461b23352"
        },
        "item": {
          "id": "49ebb367-64c6-4c6d-84fc-30ff49b23133",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e4f7824c-81db-4dc2-b70d-3d228b533ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860bfa0b-c535-4f02-806f-cd99052e4274",
        "cursor": {
          "ref": "21a0c9f9-9adb-4abb-b31c-41686cadb4c2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "16206288-944e-4a22-b55c-d54570e41551"
        },
        "item": {
          "id": "860bfa0b-c535-4f02-806f-cd99052e4274",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d4b6ee59-210d-4484-bee5-420178ca7bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb7083-bc6a-492e-8d7c-b7016e036b96",
        "cursor": {
          "ref": "423c217e-d370-4f0e-bdf4-594b88ab9043",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f3673d5e-3cfb-415d-9142-e7a48cd3a2f7"
        },
        "item": {
          "id": "96cb7083-bc6a-492e-8d7c-b7016e036b96",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc995b51-a502-4bea-a82d-46541c290eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2b1cd-8877-4877-a2f1-9610a6a9119e",
        "cursor": {
          "ref": "e69e9be2-d4e2-4b71-b0df-898d720b6e57",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1a476d50-3ae9-4356-89cb-09ba7d91c676"
        },
        "item": {
          "id": "21b2b1cd-8877-4877-a2f1-9610a6a9119e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "72865c89-c2ab-4751-abf4-59426b9bd22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1abdde-5057-4f09-ab02-60c94b6c1024",
        "cursor": {
          "ref": "2c137622-c356-497c-95a9-57bdff8740f3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "361563a8-0754-46cc-ab37-72912d9291e7"
        },
        "item": {
          "id": "1c1abdde-5057-4f09-ab02-60c94b6c1024",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8e20fc81-1735-4df4-bf3a-32678af0763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b3e29b-73ba-4065-8069-b8ca7c177b48",
        "cursor": {
          "ref": "e7980c04-245e-4585-8473-b4f5502470d1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5229152e-3168-4520-b369-fdf060f93745"
        },
        "item": {
          "id": "e6b3e29b-73ba-4065-8069-b8ca7c177b48",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1ed3d6f3-ac92-456c-8694-c916199d131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2083e3e7-5191-4e82-a215-c88ac46af187",
        "cursor": {
          "ref": "4975a563-2cb0-4587-b0ce-403a05204050",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2959b586-3d83-4dc1-a049-b2e1a4e11e08"
        },
        "item": {
          "id": "2083e3e7-5191-4e82-a215-c88ac46af187",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98861e65-1b54-4aea-a019-1cd365bd7bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfde04b-d2a5-4ee7-82df-fd9f8bfd4356",
        "cursor": {
          "ref": "215b7e56-5e66-47b6-af9f-e3992a5fc798",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c38f140-aa90-4dc9-8a3b-e78901e36862"
        },
        "item": {
          "id": "bcfde04b-d2a5-4ee7-82df-fd9f8bfd4356",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dbc96ee1-ef46-4a46-84da-5ed34d6fa4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9cde7-7866-41e8-ac38-522c388ee4d8",
        "cursor": {
          "ref": "e99a6cde-1291-453e-a550-bcfbb8c1bcaa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87a65b70-b93c-48fa-86df-e28666f925e4"
        },
        "item": {
          "id": "5fa9cde7-7866-41e8-ac38-522c388ee4d8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b76069a-ff53-4a51-95c0-c77b8c860f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1920b9-d564-4a8f-af98-0f05cda39f69",
        "cursor": {
          "ref": "d4a106e9-f474-4ec5-bcf9-4d08c654b75b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3d719e26-755d-4094-ab71-a46b2d21e9a2"
        },
        "item": {
          "id": "1a1920b9-d564-4a8f-af98-0f05cda39f69",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "834f401d-4401-46cd-adf6-cf795525587e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1957ad-4d42-4295-b206-fc42e0f9dffe",
        "cursor": {
          "ref": "7db636d6-1fa0-49de-827c-f2969d07319b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1268dbb8-7b28-4e7c-ada7-7059855b4694"
        },
        "item": {
          "id": "3f1957ad-4d42-4295-b206-fc42e0f9dffe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6dba7843-324b-47e3-9313-4816b25b34dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10a422-8ac6-42f7-baeb-efd23fd5ae6c",
        "cursor": {
          "ref": "16e9c8b6-46c3-42a8-aef7-461fae79b75c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c777e03c-d02f-4a84-9295-397716e1df3b"
        },
        "item": {
          "id": "0b10a422-8ac6-42f7-baeb-efd23fd5ae6c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "de98f32c-f495-4926-a280-23767d45af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937bb3ce-ee07-449f-9785-bcf1a9c37fe0",
        "cursor": {
          "ref": "1e411189-597c-40ab-a761-77f11b8227aa",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cc6d4e33-eb38-40b7-b75a-18f8521783dd"
        },
        "item": {
          "id": "937bb3ce-ee07-449f-9785-bcf1a9c37fe0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1bbf161-385c-42c9-a399-81909576fdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c0e28c-0ab9-4e99-8c45-98246b3709e1",
        "cursor": {
          "ref": "1dc08a71-76c7-4112-85ff-19d34cd1c830",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "671ae1b6-5a2a-44fb-a94c-377a7f3c5fce"
        },
        "item": {
          "id": "75c0e28c-0ab9-4e99-8c45-98246b3709e1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fce82a1a-3485-49d9-9604-7a29a69ecaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26978ea1-8f04-41ee-a7c5-5d2c4ca04253",
        "cursor": {
          "ref": "95bf1492-428d-4e63-9b54-540a29d1e9ba",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "82cbda6d-e44b-4276-a909-77f9386c8353"
        },
        "item": {
          "id": "26978ea1-8f04-41ee-a7c5-5d2c4ca04253",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e645b080-08eb-49c1-b4f5-69ed2b6d030f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d9092a-8d87-4398-86bd-46f876c4aa51",
        "cursor": {
          "ref": "70da1952-8a34-4edf-ba64-fa3792193602",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91b9f785-92f1-4e96-a25b-76dbc73e9108"
        },
        "item": {
          "id": "73d9092a-8d87-4398-86bd-46f876c4aa51",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d433ee1-5b98-4624-9875-6c837491192a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fcef37-740c-41ea-8625-7c28e648e804",
        "cursor": {
          "ref": "db3a9cd7-59c2-4252-80b4-572dbf2c3d4e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ddc66b28-dd26-4788-b0c8-a9f5bf6a6fcb"
        },
        "item": {
          "id": "87fcef37-740c-41ea-8625-7c28e648e804",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4fbc9566-9b46-40a9-89dd-68f41334aae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe255d8-fd50-44e5-9030-d582c26b4b59",
        "cursor": {
          "ref": "b248f5b7-cf6a-4afc-bacb-ea63f8df3497",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "24837414-7ab3-4cf7-8cfb-bcf92962d6da"
        },
        "item": {
          "id": "cfe255d8-fd50-44e5-9030-d582c26b4b59",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "81df200a-b76a-4a44-a0c0-18660b8926ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f499f8f-94eb-4294-b313-50899b4fccb7",
        "cursor": {
          "ref": "87bfeff3-73b8-4ab0-b53a-26f86c6e28bd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "59214464-d32c-493e-b53e-8bb28d1e8564"
        },
        "item": {
          "id": "4f499f8f-94eb-4294-b313-50899b4fccb7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7abbf35c-119d-4a0a-bfd0-fe50ab046089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c7356a-fad2-442f-bfd8-34093f072502",
        "cursor": {
          "ref": "05e9293a-4754-4426-9b03-5aa9dc440f7c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8762531c-09d7-4227-a84e-d9a0f3d9d4a8"
        },
        "item": {
          "id": "d4c7356a-fad2-442f-bfd8-34093f072502",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa5c2372-1ef3-449a-8b75-8c6a75d41175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32eca58-f7ce-44ed-8252-ccbdfc84cece",
        "cursor": {
          "ref": "fcd9faa1-642e-42da-a6b2-bcd645ac8221",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dabfc18b-9edb-430f-aa4e-a71ba5504e26"
        },
        "item": {
          "id": "e32eca58-f7ce-44ed-8252-ccbdfc84cece",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a0c3efbf-9ab2-4055-834c-b02e4de8f854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f4d9f-56b3-406e-8615-9724d5234886",
        "cursor": {
          "ref": "a777b4d4-a1d7-462e-879d-458d99dcced0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "16d6c27f-76d8-49f7-b080-a69691e984c1"
        },
        "item": {
          "id": "829f4d9f-56b3-406e-8615-9724d5234886",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c2111d99-c183-4811-985f-82677906a65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4ce857-d50a-4851-8be8-11125b24e978",
        "cursor": {
          "ref": "30371cb1-15ff-4f9f-8b90-ab86c8ef9117",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "849f1f0a-20f0-45bc-983b-405b94ff98a7"
        },
        "item": {
          "id": "bb4ce857-d50a-4851-8be8-11125b24e978",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "02e22dbf-2662-44a8-bcf9-c619e05087f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473ecbd2-a5f2-4426-b3c5-46f2a23f11e7",
        "cursor": {
          "ref": "8758efe2-e9aa-423f-8d5a-359ad9964f23",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "03457576-3267-461f-ae91-4d932f7cb562"
        },
        "item": {
          "id": "473ecbd2-a5f2-4426-b3c5-46f2a23f11e7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92e2f2bb-dcf0-4552-bef0-7cf9fa7a7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5635645c-8767-4fbb-bae8-3e2136aa9c38",
        "cursor": {
          "ref": "d8d48819-1e6b-4894-b1dc-b907056d65e7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6e64e353-1301-41d3-893b-4efcd318a0b5"
        },
        "item": {
          "id": "5635645c-8767-4fbb-bae8-3e2136aa9c38",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c992102-46cf-43c0-9b36-b88e9c822eac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab7a2d4-ac86-4563-a981-8ca535d61c2a",
        "cursor": {
          "ref": "15542340-94f5-4e45-8394-2b62f84843be",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "681e16eb-0b48-4be7-bcb9-521c4b851b50"
        },
        "item": {
          "id": "2ab7a2d4-ac86-4563-a981-8ca535d61c2a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7e12a2b0-31ef-4a26-bb7f-0f71344c105c",
          "status": "OK",
          "code": 200,
          "responseTime": 2284,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e549d-3014-4a43-9c2e-8ba8c85c15ce",
        "cursor": {
          "ref": "c1eeeebe-2fa7-4191-95ff-3c36112a8924",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "87c8183f-e01f-40ef-93b4-cbaa4ee89f41"
        },
        "item": {
          "id": "2c8e549d-3014-4a43-9c2e-8ba8c85c15ce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d48b090f-04aa-439c-8241-be13bd4bdf9d",
          "status": "OK",
          "code": 200,
          "responseTime": 2832,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "416edd8d-9923-43ba-b78b-7677c0cee88b",
        "cursor": {
          "ref": "a37d81e3-60e2-4a8c-8f59-c18a12c60d67",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "76e03745-6aca-42b9-b748-775471212bf0"
        },
        "item": {
          "id": "416edd8d-9923-43ba-b78b-7677c0cee88b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1c1451a4-07a6-4fbd-9a5b-d43bdccac279",
          "status": "OK",
          "code": 200,
          "responseTime": 2661,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9da76f-8ad2-4dc9-b7f0-1bcd1ccdd055",
        "cursor": {
          "ref": "3b8128e8-93ac-4a25-ab82-fcd56318b6c2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "09e15c69-637b-42b9-bf74-f1c242bcde13"
        },
        "item": {
          "id": "0d9da76f-8ad2-4dc9-b7f0-1bcd1ccdd055",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bbda904a-f223-4544-a0ed-4dc0505bbe9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9da76f-8ad2-4dc9-b7f0-1bcd1ccdd055",
        "cursor": {
          "ref": "3b8128e8-93ac-4a25-ab82-fcd56318b6c2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "09e15c69-637b-42b9-bf74-f1c242bcde13"
        },
        "item": {
          "id": "0d9da76f-8ad2-4dc9-b7f0-1bcd1ccdd055",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bbda904a-f223-4544-a0ed-4dc0505bbe9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed72320-de21-45ea-8add-24a8f174f669",
        "cursor": {
          "ref": "3723c177-44a4-433e-a598-a98fa4b102fe",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d9019a77-45b9-4fc3-b520-95a20e233709"
        },
        "item": {
          "id": "2ed72320-de21-45ea-8add-24a8f174f669",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "824c4fdb-421b-4ec8-a8b3-6616607f6398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2385ef66-453a-4ec5-b5a1-aeb2537e538f",
        "cursor": {
          "ref": "99577a6f-25b4-466e-bee8-0cbe4b4e4e87",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4dc5e90a-9886-4e26-a55e-a8213b8e0ce7"
        },
        "item": {
          "id": "2385ef66-453a-4ec5-b5a1-aeb2537e538f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea53169e-9736-4349-a191-109de1ce3d45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}