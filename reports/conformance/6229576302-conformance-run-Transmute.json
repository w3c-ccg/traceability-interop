{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "824b1829-310c-4447-b137-d0002a10f241",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a65577b7-150d-45cf-aa5e-c55f20c9254c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "005f2876-5b90-4afc-9f29-a937ad57a662",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e45c0f72-a8a9-408d-b997-edea466e4aa7"
                }
              }
            ]
          },
          {
            "id": "96423655-036d-44cb-8478-1262acbe3705",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90005e9b-3858-4cd3-aa4d-4dafc145f664",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6dcade1-b56b-4ead-90c7-0db683f3d6ce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cddd20b9-4b67-42ef-8799-bb2b98a47eb3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "23ea17bc-b0b4-4795-abc6-3bf8ba924b63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f60f9890-546e-4162-a81a-93e6eebad718",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a076e3a-4b07-465d-8f6c-84ceff2c9bd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b8cc942-c5b0-467f-a8f6-673636ba1cb2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ea57fe2-5c56-42e9-9872-6cf4d37a8647",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28907301-3ee5-4424-9611-3138fe5b9792"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "062c0f78-f762-4c0d-80a0-6bfeb08aabd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4ddad0b-374d-4f12-8e14-c5f16cc57c2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa082491-0a6e-46d6-8dd7-6968ba4d9fe8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1bce8fd0-9284-48bf-b81c-0c4cf053ad08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06cc0f10-9123-4cc8-9793-b82d25c2b0b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cd8cde6-a671-4aa2-92c5-51bb5282fef0"
            }
          }
        ]
      },
      {
        "id": "9d636395-e3b2-4181-b7e2-4697d4088e21",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a93f12e-1f42-4b57-b738-c0639bbc9fc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90c2edcf-ee0c-4fdf-9de0-6966eef86663",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24217001-c1fd-4d23-916b-4dda97e2a7e8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002b0f59-a059-482f-9dc8-12c6d1dee7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02239aba-b183-46ba-9a90-088ad2393844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cf7791-7cad-437b-b630-f80d8881b716",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45bce73-8534-4f0b-8763-794439d7fe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "858d97ab-d932-42c8-b359-fca7492c5829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33270e73-dc4a-41af-892f-82f38e23f09f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efaf62-79db-4c63-b21b-1145b680131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef353512-06b5-4b9a-85b0-fed7c4c11a2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e6f613a-7c45-4cca-a9aa-a3c989417ccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd365f2e-e1d3-4a51-881c-0dbc5d2dfbb3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f730e8c1-13d0-43c5-9bea-90efa1c82e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1a556ed-eb91-467b-95b0-c17d1d4c65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e3d978-64c1-4ba0-9ab7-0505cbaa9979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9471e537-4ef6-423f-8fe3-b832df6b3bb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1f9b06f2-6f67-4849-92a2-4dbac36750b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb0cdca4-f374-4fbc-bed3-bbdd3bf87659",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9780290-0ff0-480c-8f15-79ddaa091aa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fce1c301-2ca9-423b-a6d5-d98ecf06a37c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "039456bf-196c-4808-85f1-7974dacd7168",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "87c43936-4db5-47b0-b156-31a26a66b4bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49efd813-0c37-437e-a222-f6d8597bfd57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "161875ec-7e73-463d-9128-19683723eb4f"
            }
          }
        ]
      },
      {
        "id": "df949c8d-a41e-4ac4-9fab-afeb62b564d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa30d6b8-bb76-4a5a-a988-23cfda90d3e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ecf7f1-b7a4-4857-8850-d8e6e79217a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5dfcb47f-f609-43cb-b03f-5c29ae28990b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387603e-0a91-4b4f-b711-40150183dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e454c6-e5e8-4db1-8be9-dde4a14ade2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fbdfb4-2d3a-4e86-8d26-fbe90ee95a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98cb8b69-eb0a-4ff0-9f02-ebec0c4557ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4e57c7-14b4-4d2f-af0e-ec2fec2b48e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e00c302-8f48-4139-9145-c9439383c1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1202a041-2a53-4488-8d94-1782bf3fcf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005300e-61de-40f7-a8d8-684b4d57068c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2443c72e-67d0-4203-a897-3508b14d5aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5ac3a6-d056-4213-bb42-40f7316684f1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82d4a54-0538-4b4c-8bad-b5fa45cdd5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779633f9-4378-4624-afe6-04e16333c409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7cdc19-944c-429a-9198-8f59004758e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3cc0980-5939-4ba1-b544-b9a88d25b122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d3317-5718-47e3-9fd1-2a1a36676197",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81580da-90e4-477a-ac8b-48aff57ead77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c945f11-c876-4a5f-ae5d-0b9d7b2c148a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cb3bf4-d42c-4bf9-affb-1a95bd56db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e13936e-8c8b-4825-9755-5ebdcdfd538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13ec6dd-517b-4eac-b35f-606cff25feaa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dd1478-8ce1-4c48-b249-8391de7b7f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ca0811-8e4f-4d8c-99e9-37146fd7b6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa1ee8f-8b95-45ad-8a9e-0cd98725b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54f7101a-fafd-4581-81b0-596c9d456d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433ce8e1-bc81-4e63-984e-b899a5376a09",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999e2f68-c37a-40d2-a321-babe8f2bfef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91393de4-d3a8-493a-94db-cd8879271427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc449442-6e92-4715-b416-fb130a9ce1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba9959ac-3ea2-41d5-8c96-eb797695bba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8da353-bdb4-4411-ad1c-4d346d06002d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ad98c-bec9-4c28-8333-29e4539b72dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ed7875-5886-4cc9-98d9-49a3a4645d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7522f490-ed3e-4fb4-8495-2c3cbc380d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dcac232-99e4-40d6-805c-8a420bfc57f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af017f9b-2a9c-49e5-862a-f706bd84659e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c9fc12-8884-41b4-9a59-eb4df34ffa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d9c132-29a0-4bd2-bbd0-df62c8df0b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af8e636-e295-4f7b-b290-aedf896398c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2502671c-f85a-4061-93ee-070c5549fd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc954db2-8b7b-4343-8c9c-080a916a88f5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56614c58-6c1f-4a99-9a04-ede502e41f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f0252b-c7f9-4325-b797-716d94763279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99e1c7e-1d97-4702-a626-cf4458ed0a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac6217cd-00aa-4760-8e07-80247077f87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75516058-6924-4c05-8632-73b81d6207d9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708797f3-1cf8-4029-88fe-3d6f0db0f52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1c4eac-c1b9-4a08-89e7-507ac76f6054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32c26bf-89af-4215-b8b2-d3948f9c4b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f4f3fab-4317-4071-93e8-0b66ff034381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b42b65-8e58-4f05-90f0-8295e89ccaae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871aeb0c-f773-4d4b-b00a-e94e41314eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2443a8-0783-4c82-84f0-b38abdd6c728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccc145e-e62d-421c-861d-cea985594c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b67483e0-3430-4cda-8ea1-bdf2d3b41bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d20b01-ddf7-4d2d-9963-15263f2baaca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e70d93-487e-47bb-aa71-9b0ba1c7712c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2444e4a-0ded-416b-9822-27432062eee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc0a74-866e-41b9-9d98-9a8497506708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7c76066-fe08-4b14-9eb7-17e8ea31225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc5e192-8cc2-4a53-89ae-d4d452869a08",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bce65c-459c-4bb5-8aa7-0316a115d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9e17c3-dfd6-4b88-9acb-1d9da64090a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40747904-1e47-440f-9a8a-ea4966eb4992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92a681d9-92b2-4297-9730-58418b8d5f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd2dda-4f62-4ab4-b208-abae572dbf80",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808d86f0-d9d5-4f5a-9bad-b1b8b8ea9778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97acec15-f1ef-40c2-be19-8f8788755c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf65856d-325c-4f50-b492-7ed0cac88028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73244aa6-5cb8-4eaf-9196-31762b863ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dccf4a2-38f8-44c0-b4c1-d0689f8b8c19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d5c09-c36e-4bd6-8452-1017d05a39bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711305e4-24ac-4ea1-8814-232bad57210f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827aac2c-14aa-476a-800f-9bf4a61d7070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b69f5db1-fefd-4817-b99d-6f56571f5d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e4303d-eb21-4e31-beda-69aa509397e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7bb49c-116a-4579-8448-8cf7a6c74c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0ab9c8-ec5e-414a-a270-90815610848a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee4247-c0e9-4975-a17c-fb1a5efbf74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0467ef3-17fd-4406-82f5-b6b82799acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784d1258-616c-40b7-98de-f1f232b980c4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999297f3-8dec-49cd-b43b-8866f7aeef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdd5ebf-a848-41e6-83b1-e1382b25bb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3d9ead-6448-4b57-9d9d-63f7f8de5037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31bfd6b4-e584-4b91-96ff-ac8012c4e73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642d6cbc-3c18-4100-8f6c-1948f46435bc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c0e39a-3a19-412d-aed5-f178404f9cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde2a34e-dd31-4163-baf2-08e4a30b489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b20ed5-1f95-4755-93b8-a91149e0b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9351135c-c5ce-4340-a0b0-479676f18361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a098b1c7-af44-48c7-9914-91a1c2b9ab53",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa1c396-58c4-40ae-92f1-b6cb09078b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5907b222-1194-49e6-94b3-6695cab62614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ba6ae7-4b71-41a2-97b9-55dfb3fbf8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "950e375d-3c9f-4425-9440-2b16e1ee40e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cfa9a0-7d43-4921-a7d3-85922926ff57",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1e383a-b632-4bee-add4-235be014885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96072b7a-3336-4bab-9b71-6b309fe56a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c71b11d-8807-4fef-ae13-5879b70eba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0943be47-64e2-4fdb-b125-25262c367fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4584932d-1652-4baa-812e-987d2ee07814",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b94327-6a38-400e-a222-ea85b44a4ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b236063-c6bb-4364-bb79-f9f0a0dc85e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040fff7e-9fb4-43e0-9d87-4cb806928264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14d99c3-0fc4-41b8-9e03-fbb9db288a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac56a3fe-4042-49a5-b56b-d507bcc21eec",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1468c45a-6edb-4316-a292-1bb0b29d78be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7b07de-c17e-4c45-93ae-b55f811365d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c744af9-0e1d-4170-827d-c4836c2fa148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a15cff-55b7-49b4-9488-0251b7a4a7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ceaa8-30ed-40f8-bd8f-6834e8dd164a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fd821a-bd08-4c85-b4a1-fbfe864d9d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8763a114-4a1f-4752-a60e-5fd9b72f57c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c93bb-cb5d-4cff-ae4f-e2b928979ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9d3cfb-2291-4a61-a7a0-5a0eb259ebec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd0442e-d586-4c7b-953a-440b1df0998a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eadc36-87ce-4cca-87d8-1a3cf174ce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983ce087-e071-4d98-bb8f-a538f7ca8c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab838b-d65b-44d9-9cba-7db67b6b293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebaeba1e-2ef4-4e80-ac29-19b9c3ce643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972183ea-df69-49ff-ba6f-d5f675b995f7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c30c9-423d-43df-a16f-b634ea8e8220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe83ec1c-bcd2-4c41-8154-04d91abc884e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6658087d-5654-425d-8997-a2a9c25c8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b7089d-4061-4158-8636-78d955cefc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5dde11-3960-4565-8375-4e8b81dfe6bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4941980-4e67-44b4-b865-4bcc701dd3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6564fb25-8277-48b3-9f47-b1942e7b750e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89487819-1ed1-4d49-b710-7425d2011488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba3070f-f0a2-419f-b6a7-5c2db98a1c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0218e5f-f11b-4c01-b3e1-1d9d4108d31f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909f3782-42dd-4cb2-9b96-44b39d11244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52e6544-6f0e-479a-980a-219c9e1b24ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ade54a-7a2e-45cc-b4f2-e1b776e5d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "663e40f7-31d4-4372-874b-1b2a3a565106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800caf83-8c44-4d26-896d-b66390b042e2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cc04ab-6bfc-4d78-ae6c-9dec0068c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69211daf-af38-473e-acb8-36f71b010482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff8bff-7769-4e83-968b-0e9122a90398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc710a5-ade9-4b8f-8dd0-68141fd2891a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f94711-0a19-421a-85a8-4370d686d8e6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ba2d0c-3833-4306-abfc-052aa10ff87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd36976-695f-4cea-9386-b8fb7a9fa648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1181164e-dcc8-47b2-87aa-bbe8524c54cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a46cfc-4172-441d-88cd-fed4718de377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9edfb73-c4e6-44a2-98e7-bdb4e14c6fd1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26e85c8-bfad-4675-8ce6-bbeadea7ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2408fa-223f-410d-9451-b13a9345e84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7559a75-eabe-4830-8f78-314ac4d67597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d64e06-ac03-41ed-90bd-9ed37690eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eb143c-db5e-4cb2-b7d2-1c8198fbabc7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db068e-1f6e-438b-a306-08dbc14a060d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2aaa9c-d3b8-41fd-87bd-1ff4fbe849c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c443b207-c3c9-4671-b359-a444225a0360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54604213-ccdc-4e7e-8a3f-28da0404ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a963fd7-8f65-429d-bc09-05974f975a54",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd5cfb9-91bd-4983-afc1-1c9348ae3d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426319c9-45e4-4ae6-bf2f-51e7d84abec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da902f5-e446-444a-8ae7-cdcfdb5580eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dda54f-aec0-43c0-87f8-53eb74e067f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77afe0b4-e505-49ce-a688-f829ac7cbbe8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f520f4-9d43-4a77-9661-0002c2a1bca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96fabee-4395-4231-bbe4-4372ac63b546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b513dc94-f5e3-4592-a0bd-1bf08b934a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb04d8d4-487a-4b29-88b6-d1b59e61430d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bee541-63ec-45ea-8a29-f7f996ed72cc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dbd09e-2f0d-4361-aa97-bef4acf48e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e48a10b-fdc0-4340-a654-256b61862da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0622e70-bf50-4a22-bdde-2ef1896dcd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ae990a-c9f5-4781-94c9-d31e2a0b2457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505d4148-3786-4f76-865a-24ae97ee7f2f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64f14f-da6b-4d0c-9c5c-8255e0f2727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a747c03-235c-45b2-95a9-639d25a00a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2593493a-e8b6-47b1-aee0-975f624bf27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92e7db95-29cd-46b8-b4fa-26df47f80e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f56c3-589e-4792-b69d-c2ee1e0bbcfe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c71b3c3-d7c3-49f1-a68e-bd06b3dc8db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4018502-acc4-4313-ad9d-a3aaf536a7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fb8335-1af5-4055-af4e-0361a4dc7b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f753e0e-7c24-4ff8-aa83-907d3d9e8a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edcc002-7e64-40e6-ab4a-9765b700dd81",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e1cec8-8cc8-4369-aeea-c64f0f1362af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb070d29-7f8d-4bfa-ae54-2594b380c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6d48e1-a373-43e8-9a83-8eae5355a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabe5bbc-fdb0-4ae4-b1df-ff7d4015e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4a5768-b6b3-4d3b-abb3-c94592203c7a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605c3202-89e7-4112-b043-47ac9bff84f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6e1e4b-6bc4-4e94-8280-cac89013c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5be4c3-3db9-404c-a11e-8a43b63abe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4213af07-df0d-48af-a421-fddf658cefdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d983cbf-ebdb-4152-8ef8-58eee87251d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09909f0c-b6e7-448c-982e-a145a221de2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698f52c1-706d-472e-af79-70c1a06f2741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5af4c7-a4eb-4584-abe0-90c624d9e9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "086073be-96b5-46f1-a4b6-838747bdd418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c0c03b-26b0-4aa0-b364-dfc5f4c74898",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de25f7d5-97f4-4fc3-8635-396c5b7a111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd5feea-ad25-41b0-a835-45bb0d814ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173f081c-dc48-441a-9d0e-5ea13aa0ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fe3cdb-ae82-4193-b3d1-e168e96d83da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f563f29d-427f-42af-ae17-74ade9d9a04c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff170d4-fadd-43c9-bc98-dfa6814c0381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ec25c7-a1bc-4442-bdb3-913b5712cd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c370cf4e-9ac3-4a71-91c5-1770c7d9356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81649af5-2930-4d56-a965-bab6290218dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f8ad98-562b-441a-985b-342a60ad70c2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75a631a-102b-4d2d-a558-b8903ef64fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50ac110-3b47-4c18-8e8a-8e08cd4017c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656ed26b-34d3-4992-b717-a68bdedff79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7bb3a7-3c38-4e7d-8471-823f1a43b46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861caab5-bf5b-4056-a06c-40c35414cb6b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969a5c26-a227-4058-977b-ab8067cb69dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0565040b-1545-48d0-a835-2ac4f03d72d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c334df5d-797f-40aa-8607-e12b8a61c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fae41a5d-2741-4f46-b241-e3105a5d49ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618e9f7b-fd80-44fa-9fe2-6d0d7fa39d40",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9136598-48b9-4906-addf-9d26586bf080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a137a230-d785-4415-bcbe-9c4397e48e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357b7030-2ee7-4168-abff-fa52719e80f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca88c2a8-31ef-4cf2-8ff5-c1eab4606907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a97f5-8e1a-4684-bae4-d89013e7944f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17fa87e-1783-417b-8049-d2020754d795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e87879-6777-45e3-82df-f00ed45b25ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc5d638-da21-44cd-99b3-fa9cd5ec3582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a3db70-237f-4172-86a7-a6861b13169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70486940-fcb5-47c3-8ec6-62a9229513c3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d89e66-dff1-455a-93c4-4922821eea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c590d7-ca4f-4963-b4d0-5d4ed5ab87e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdf9ccc-5d26-4aaf-9ddc-2118fb91638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb79b09-8f11-4870-a6df-b09433162fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90574ba-d1a1-43ba-919a-83e8ad173061",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9448d8a0-97b0-4a65-beea-a023bfd74739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2870f683-2fce-4987-82f5-7e6485ea9b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b202716-64dc-41a1-abba-05fd8700e186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7037a2fe-f5cb-4de4-8348-b87a03346586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4488d0-5703-46bd-8b37-aab1e8107371",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea567aa-971f-4111-b55f-745066ec0011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec454680-7dab-408e-b398-1b6f1e68413d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4b69c-ba4d-49e5-af55-acdb31c002e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65801be1-4897-47a0-9b81-ef468db17eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27840d52-0cc7-4d57-b718-d403c9ae61b8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e294f0a-e158-4e39-ae5e-3f83c15f5b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8342d752-cccd-4096-be60-0ae09a705e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c4f666-fad5-4d9b-ad33-7b0aa117ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fdc2e6-5252-44d7-b8cc-f262163afc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34da4ac7-c216-4d45-934b-f84207244c1c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e8805e-a032-4981-b615-67ff0611179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315a4aad-0985-4a76-803d-2b4d0c2eec2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f33fa0-369e-4c91-9c1e-96287bc85291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7032293-2cdd-4184-aa3e-8b55084c1008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3b6d2-731a-4e09-95f5-21cb086ce7e5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518875e1-ce47-4386-a15f-527eae120a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f041eb-d7ae-4b90-a6ec-cf4ff0a19195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be93343b-11f1-4a04-9ad6-d04b73724387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33ef862-e005-4712-b9fb-63eba7aec8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bcfb7d-e5e2-4f0e-a667-0ce66f5059bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b66e6c-c5fe-492e-ab73-d5d9da30fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451879d1-1fc5-4e19-963b-bb87f2bf8838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1acaa0-e194-4971-a93b-ef7c4f8af77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3830001f-9df5-4a08-88a9-72f6a473905e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636fad9a-74bb-4390-86b8-1d5c3fc7ef47",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d76f2-53c7-46a5-ba76-a032f5876eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0171bd8e-88a3-4c09-bdec-23018cc7d27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4675e58-ac1d-4281-b5e7-a5d8270f6f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "740292b4-db01-4b11-9739-3db855daa540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4de3c2-6314-47e3-b252-255876402edd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e71ce-d8fe-4df1-b47b-aad47840fe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3222987-b48d-4a08-8047-0888fa3f9b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb3bfc6-69c0-4028-96e1-3876aaa6522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "132a6a85-14fa-428e-9421-cb32f740f3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9eec02a-4a7b-49e7-8c05-26bdcb003668",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671e8c86-03a1-4734-9ff7-4846c3dda929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e457b06-1950-414d-b285-63f33f7cb873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e38fc3-710a-4123-b8eb-c820295aeae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc355e8-136e-4a3a-a961-f5c557ab1a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e982de6-3f99-4876-ab30-e89ef1fa3bda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d54a94a-8958-49cc-b256-471059b6b026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ed6864-3bb1-4898-807a-daa63ca171b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f10c4c-26e0-4f47-a8f7-2ed68ee410b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bb838722-b125-458e-90e7-875a379a46b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93476f07-630b-4f10-b74d-8ae5e0ffed08",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cebfb52-8571-466a-802e-d69a9f60db73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8797abd6-9b0f-468e-9555-1c8f51a1ad0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb46c48-03d2-49f6-b7d4-bd23e307a4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0494442a-d8e7-49b9-8cfa-26f0ecf28db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f66c506-95ef-4e37-b55a-28beeb19d813",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4008aa2c-7c78-4482-82f5-14302c29606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1c8820-e37c-4be9-9a1e-2352b77d8bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359bd1d2-68f5-4cdd-ab04-177c3ccebeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c56151e-de9e-4f43-bb7e-8051e8c0d091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2580eca2-0a08-467a-8753-760e02042a3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877672d-86a6-4037-9526-945ac431033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d624ad-f759-40db-a6b6-400879beb6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaedb772-5db0-41fd-b33d-6b0004bf327e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "315dc6bc-c5db-4bb6-b0a7-e3f7fa721238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37ac408-0dcb-4852-9fce-2d3b88c467ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dac629-29e8-4938-bcae-f9687ead25d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2059bf-3729-48b8-be5f-7f3858147f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ec953-d0ec-4d39-bc54-adbcef68f1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ececc45-52b9-4447-987e-4be94a1c5431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bba0cae-dc53-4e83-9a41-5d2858404340",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce12ff8-ed57-4e47-94d6-5b825f63b2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ce6c1f-b41f-41cb-ac60-8741a22a542a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e80639f-82be-42c1-b4d1-8447bcf837c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eca014b-a6e1-4d1d-83bd-bd93d3edf526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861958c4-56d3-4216-859d-bfb891da0dd2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f8702e-b02d-47db-8de7-afa3ad0e5bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dea9315-877b-4aec-9bb1-6490411b51a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdfa247-f873-4580-95b8-06382fe8d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7bc7c7-58a6-4a56-9725-ed51b1f706e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1767194-05d9-4a57-b67c-d05c1d7f66dd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f99b80-2efa-4949-976b-5de4f174886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1d4ec9-78ce-49d4-bf2b-d7425106e0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd2ebb-f69f-4465-baa4-90d3e6f2d797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50e1655-7b38-4c02-9132-52565e8df58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef96311-e669-43ca-b0ad-cb3d92cf9957",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb2dab8-1b5e-44ee-94d8-4d14a25de8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87b88f7-b3f5-4648-b198-4fa12dfc76cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9024160-eff8-48c3-bcc3-6245c0c01a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ac0c72-fcab-4e35-ae4e-725573177fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d25802-ff35-4921-ae15-392a0e5be51d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8326a1-5b66-4352-9391-d677822b8145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bedb0dd-919b-4507-a892-795f2fe98bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea16c249-04fc-44af-83d9-340e4c7769b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81533eee-975f-47c0-aaa8-873a8293c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1080d8e5-914e-48f6-bed3-f06c39abbb71",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2e1081-f21d-49bb-964e-7701f08fb7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaca95c-1790-4842-9a89-83bcc0dfa1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8088d7-13a9-4a03-bb3b-431d38e2e629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "469ebd0f-7e1d-4157-b3df-f1392aa78045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a614f1-ac61-4e17-a8e3-de14f8db295e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4963a7e-adef-46fb-b6bc-7ec6b2783b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b10b427-086c-4253-9608-e280501026ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f514774c-b7cb-448d-bf57-c93b701a5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7431f3d-2ab5-4c92-82f9-140d5d26df61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe1c3d6-c999-4636-8349-08b8dfcde956",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23007943-5269-4827-8d9e-6d239da9b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2f978e-f5be-45b3-9d5b-330821ebaa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee492156-699c-4cc6-9d32-b4029d65bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e46b7c-0569-4c4f-b4f7-d48e0e277089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69faf3c7-afb2-481d-8699-75aa871b0767",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0927d197-4408-46a8-b47b-2f78c5c6b952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80bc42e-2144-428e-8b32-d785af6f58fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8f5024-b77e-447a-a980-f44cb3fdbf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0860f39-1c1d-43c6-9827-0c19d7e88dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf0732-6cf2-4099-babd-04c387b5afdd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488f366a-a30f-4220-bf13-579566f0e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f34ef-3841-44e9-8d0a-b616b6adcfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e59247-2787-4302-8267-e4ec02931a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ef69ac-1ea3-4912-a3ce-2592ac83dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be552c01-653b-4121-94ce-d28fef85da2e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db179b7-fcb6-4379-b3f2-07a91105ff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b202071b-5cad-4b79-96c8-f63e6becd46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8c1c8e-2778-4bfe-b7a4-2dd7e05db8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ace9ba-5907-4a00-ab76-553c5eefab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5f6e9f-db79-4571-b8a6-1ddebbc1ba71",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205bddc4-bdf2-4d3f-9e6b-6f782e82b5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c253569b-dad0-4dff-8633-b2d5d4043556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b673e548-9230-4930-8dd9-06301d704b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4d4a8d-88e1-44ae-b858-77b4cc43d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a406c1f-4c16-4f6b-bf90-fe4f49e3229e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bf5db2-eec1-49f3-a4f1-5218407b8b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e2ba42-4a21-461f-b99c-c61597c9f72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c5212d-a32c-4139-b41c-8215e39c9619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7638765a-0321-4c07-a7e8-7b85e8a234db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264f4afa-c466-4cb4-bb5e-85f993e6373a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6949f345-daf8-4706-88fc-6bc05a8a0cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094ad1de-ef3d-4214-961b-ac7e9bc0e613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e0d214-5a98-41c5-bc63-b3c12674184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62fda1e1-b0ab-4070-9988-504589349b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff4a3ac-fd78-4344-8dfa-0275921dba0a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d200e684-51b9-457b-99e4-9f97c5612982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661db450-e1fe-48eb-91ea-d609340b2254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ec187-f090-4742-9946-3c7397b02b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d02ae7e-5b45-4e00-bc41-bc04a7022edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574a58f-aa30-478c-bbc5-13e619c1bfe1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1fffe2-b21c-44e8-aa22-81e82924d2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2d1086-782d-426b-b22a-4a431f367ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae2018-e917-4ae0-af6a-fb85e30b2dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffba127-f535-4630-94b1-1229a88f9d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729488e-028c-4d45-a387-b9f94ab21da9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6146ec2c-92ea-4096-aa13-44f70477fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf999959-2c22-4368-acfa-2801231d79d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6c2840-dfb4-49a6-a706-6a86b84fe12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "717a208a-3830-49ba-a708-cbe8848a0260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3a4be5-c63d-453a-aee7-c1494eb3b500",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577cfcf6-19a5-464a-a83e-f4ef7a7ef89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf9bc78-fe23-435f-8f0a-044b1ac70ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c98738f-ad81-4d74-a1ea-9611ab4570fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b7bb13-8d9d-45ce-b274-5b6e3242796f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cb47bb-3195-4eb9-b6c4-5beaf498821c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95846789-bdfb-4f9a-9d78-9ebeba22190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6172367-8de6-45fe-8e3a-d2f0527cb3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa228b15-3c52-4764-8df1-6fe042b4ac2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2eea6a-f74b-4681-beb7-26fff6a7cf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6cfcd6-7314-4fa6-b83e-9642124f7ca7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5015d3-5c11-4298-8e72-62347a242bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3460211-ebad-442a-85b1-ead2837efe3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac251d3-ae92-4df3-b0ef-f3b152028a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e49f47a0-f7fa-4e45-9ff0-822c4bee6aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33ce14-1162-43f5-a980-416e87050956",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e23fff8-cff2-4088-a011-cb9a13b6411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413e3263-de3d-45ec-8d25-5f3505ef6a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205632e8-17a4-4279-90e1-19d71e6a9093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0efb9b7a-62dc-4ed4-8471-ee13cae7903e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a5e20b-927b-4ab0-addc-ad970a18d1cd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73e6c11-3d39-4a54-9bc0-4f5c5f2aeb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dd57f9-76c4-49b8-8491-67a84014ac63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19494bb7-2b96-4e86-9fa9-05fc800fdb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad32ed8-c0b7-4124-bfce-5978baf28132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19c9d27-4813-4ed3-abe3-4b2efbbb6ed7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372d5005-0ea6-4b04-abd8-d33a9549959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63a0f4f-c467-456c-82a5-0fccde987ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6879ce25-874c-452b-8632-2c2745f1ccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff64351-1f61-44ca-976f-8db480ca8d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42909f1-c6ec-4c3e-8cd8-7e5b0f2ef6d9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c49fc-d6c1-4846-a29d-2f0713b06299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0a14f2-669e-49b4-b2ee-8c7fdb88ceeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbee97f-32f5-43ac-948b-6a2456fac4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eef1668-00be-4665-93a9-be8c1a74ba06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab4c44e-9bf8-4cee-895d-54d442e82f8b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589fb0e7-67a7-4482-a81f-04138898e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd966613-dc3b-48a9-b3b1-08ebdb20776d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e8cf56-e116-427f-839c-c00eaeed83b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de134207-d4f7-4f41-9ddb-680309d47d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19447ca5-f1b7-4c6d-87d2-9a80417e22d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ce7061-7a68-4742-a492-5dad258414cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9886e777-2180-46fa-89da-a3b39f2a34cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1430e7cb-55bf-48ca-8e00-c84bbc4fd945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2b1894-ad71-4bba-839a-13e3b48ef56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee83c1c-df8d-4918-a52d-55397f8881cb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dae995a-faa9-4f66-a44d-45b15949f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac27107f-8060-413b-a55c-402f40662a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ab618-9a5b-4965-8506-fc37dfc7fa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b22cafa-b0c1-4e3f-850b-bd54186831c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e5c8e1-830a-4140-bfcc-d63cc9a7d462",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21a990-80ad-4d14-93d1-ae5819715cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ce335-ea15-45ae-af36-274b9402f09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8815bbca-2ee1-4431-8684-04edd8145eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3491ce-e052-4dc3-8aaa-03e0eec2fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb2453e-f5f8-4b19-b384-2c5e5f876334",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b266f7d6-5d62-43db-92aa-74ffb62b3acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daf7355-0a70-41b1-9925-573c6ae60377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afc9de1-f6cf-4f53-aa47-7eb1da3dbcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "02e5ad5f-b801-4c2d-a02f-3ba4e23f1a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc17d47-d8c9-40c5-b4e5-e5482ec38075",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d8cded-500a-4562-a8b2-ce2154cd2bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6b189e-2239-4993-b1e0-c329b81eb816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623781fd-17f9-4c02-918c-225cef605cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b477074-0e4c-4c82-991c-c5fd22b0e924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1878b51f-6df3-481a-a135-030e70a104db",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1209fcc-b708-4727-b1b9-cb9c13dc040b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94c6e0b-8a07-4ab6-a599-8878eefc670f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f8edbf-46ce-47db-b696-cc5040e38e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf8ca1d-3263-4b23-95b9-a7a5813592e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e231c9-a492-4ebc-89df-b09b2fd15c70",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b244c3c-a69e-4918-b496-7ead06a3a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "134d32c4-c5a7-4f70-8bc0-444fc0bedfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800d55f5-271a-47d2-ac90-aaf62022f47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "952bb67c-7cc3-4297-92e5-b3246a8ce1a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4af722c-1f2e-41c2-b7a1-4df732fbee9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8aa166e-1d8d-415e-b1b4-03054a3a0482",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66d630c-ed05-44e3-8e4c-0a76c1809d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d58f070b-b593-4d64-b9bb-ca37e746573c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e86129d-58d5-4358-920b-2bdaff518473",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a8908a1-c820-498c-99ff-6063df12e05b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74631dd1-4794-4a6c-b9d8-ef871ed42db3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b6c9cdf-ffec-4be7-baeb-c17ee5ed2153"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a09cd629-ab40-44f8-8b90-51dc3b61cc13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bc5ae61-97a1-43e0-80aa-9a10199651ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18d3aac7-4545-4b0b-a1d3-0cb042b6dd28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27201d0f-4e0d-4663-afbc-9146bf025a4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45cc9e80-3b78-44c9-9234-46ac5b7c4e17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2131c74-ab2b-40cb-9b0a-487e39058322"
                }
              }
            ]
          },
          {
            "id": "eea94b50-71fe-454d-97ae-988f6610758e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49e58a2f-db86-4fe9-ad12-379c491c6175",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "357d31a2-ab4f-410d-a6db-c5724ae1289d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2637f5a-adb3-4e0f-9168-14e5b3b9cb66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f60343-b15d-4490-b618-5d64fb5833e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be1777cf-f03f-42c8-b3ff-39552f5f454d"
                    }
                  }
                ]
              },
              {
                "id": "d83689ef-54cd-42b6-888a-2f51e7ada983",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a32ea10-035d-4a65-a110-855bd121e1c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "111f9ae3-6ef8-4ae5-bee6-bfd7fc44fb9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e814ce5-e3e0-470f-aff8-7ca0ab19eb7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edd92316-3354-42dd-9c07-89b16f795735"
                    }
                  }
                ]
              },
              {
                "id": "75cd5391-69af-41c3-a2bd-54bd97aad8ff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f34dbcf1-5497-4e31-aba6-fe85c6c61a5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a32156f-ebd0-46a5-829d-2d8af4f3d959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bad4bf3f-e2fc-4fc7-89da-0da02489ff34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41a8f4c2-269e-4db9-883f-f6567cb52434"
                    }
                  }
                ]
              },
              {
                "id": "02ebe9e1-b709-46ce-867f-8fa4f2659363",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4b90223-a0e2-4eae-90a0-5d2f1ef7a27a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a90fa24e-51cf-4b5b-b8bc-20bb5aae2044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23881a2a-a517-412c-8378-bd7f331d9652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d34849a4-43c0-43ee-b036-15d63608e71e"
                    }
                  }
                ]
              },
              {
                "id": "d09c3a9e-8f9e-45bc-a39b-12ae343dc612",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a16821-e2f3-400d-acb0-b7ec27102790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e296790-a7b1-441a-9968-10b7e7c09391"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced772c3-ba6e-43f8-b50c-3bf73ed49654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "596f844d-91b4-437a-8b20-9c26b4713562"
                    }
                  }
                ]
              },
              {
                "id": "dabe39a8-b347-490a-97ba-ca160a60e0a1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7753aa6d-90e8-4825-8b63-87e74aea1dbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9f0c55c-6cd8-41e9-b28e-7dabb0c36250"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "121c8f3f-aea7-4385-ba1a-00a0290213d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e9a7a39-545b-4d47-8c84-126fa33891e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfc3b4a6-1127-4e29-958d-7a94dc7abcf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eda61ae-44c3-45d1-b4f1-c02c7d9d16ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b78b370-2447-4c5b-8e1f-fda3709811ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af782124-368a-46ed-b14e-2695b8f69337"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "811ae0db-7525-4ff1-8895-af66f6825889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "31e3b9bf-5bbd-44b8-b1bc-b3c611749be9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c202574-b721-4938-a931-7d1a33cd0f49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f2df661-994d-47bb-9201-819d1530a1e6"
            }
          }
        ]
      },
      {
        "id": "06ee056a-21d0-4a6f-aae6-e82f353d2b67",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ba5f8ee8-5882-48cc-bceb-9d865fde0e9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5b14337-f77c-424b-af0f-571d736f1a6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d57360e-e906-4029-a641-850a638e64b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2804b3cb-6f55-466c-95a4-802bf64cf1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff75ca7e-3ea9-4f7d-bae8-97d68fb165c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30af938c-aede-4067-a481-bdc11536fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4adcf180-659b-485c-be0a-52a0ee626335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160c4a2d-961f-4997-bb0c-6ac15ae7edd3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90714dbf-b923-4025-9aa1-063181da820f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84006a4-d626-4068-875a-ad67bb23b09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1109764f-a860-4293-8e3a-c3dfe6442ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "534249ac-5c61-4252-af6f-2605ab0da30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0350ad89-6c8f-48fa-adfc-6f7d2eb86fa4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dcaa7a-3fde-4b3c-bc32-3b656082ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cfb54a-088a-4e8c-8487-c118b3d3ee2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8647775-9098-44d2-a710-1a5c3a8c64a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee441ae-222a-4ab4-b5f8-feeae685f747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36125b6-e65b-4df6-a251-f10138004d74",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec90093-57fe-4be1-8975-1989f8546b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e4ccd5-7c22-45d7-99e6-ba75d4c15645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c06b6-1150-45fd-85f3-579dca18d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6525ed22-5a88-427b-a96f-234c6c8e56fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3a7718-1c1e-4685-bcff-16ac901798e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c021910-b194-43de-94fb-ae6864a3f54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd27813-0491-4bc1-ba8d-38cfc5c101cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea491e3-db0e-49a9-a6c3-3e65af2c3635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8f1f5c-d4dd-4db6-b6b9-6db96abfcd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44280b10-d063-4560-92fb-fe48045ac75b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60c50bd-f36e-4ebb-8c89-526f11d40930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82eb1b5-bc47-4d6a-bf02-334f9cd408fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221a8669-03d2-408a-80d8-d2fea165daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c23fe039-1c3b-473c-b3a3-9c0f13db3a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82548081-adaa-4ddf-a3fb-851b3db7fa20",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff89377e-87c0-4925-ab9c-cdeb3e613221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba82ae72-74f0-46c5-a974-39bca34d9b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7cc63-7aa3-48e6-8f79-abcba95cd37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee5f398-9df4-4e25-8b4c-8156b80115f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe3011c-cd1a-4e05-9765-a0e720d10a11",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a93e26c-636f-4738-82e1-64dc43945276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c97223-121d-4a60-8204-aec9ffe20615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787c1136-7ad0-4ff7-bc26-ec124fc74dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95aea6f-c1c3-494a-910f-1395325e8981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4d5730-6a4a-4f0d-bdba-61b9f12c42ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b72869f-0d48-404f-b91f-ea08171a89e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f194cc7-930d-4038-8254-c74ad6942057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b84e79-dc7e-4699-9d2e-0a7df5ae6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91747400-6889-4f0c-8119-9393621a7d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee68f84c-5e6c-4f5e-8967-910094f1a33c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d36933-7589-43f2-be19-4418ea2f7b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c277c6-ba7d-4ca2-9925-7552f87a109d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a900a1eb-baae-44d6-b78b-50addfcc9fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49747692-5923-4806-83a4-7c6e66fe43d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8406b36-7d9a-49e4-9ff8-f53e56bd8493",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c783b4-c6bd-4558-afde-76f3d69f33ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3963c-6ff9-43f4-8665-0d301ee5ff41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf640e39-32ce-41eb-a012-3b003866f0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "51a2f330-0ca9-4456-b935-ddf5defd109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb23284-d338-411d-9dc5-6f2c45ffb2f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6689f2-0cf2-4886-a739-860907c3f999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9624b7e-170c-48e7-811d-f8f02707c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d42d428-f746-464d-97a8-8d1b737705e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1acad90c-2088-4f5a-a42e-f9055fd276d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864b8250-2473-476e-af1c-851c65b9c202",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d200b2-9e63-4698-9867-d456c7a7015b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a212e994-6f60-4f2c-87a5-a70c05bd3715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b93728d-b8d3-44e5-94ad-af6ed215d4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "938b79ba-5586-4562-b111-24eb210fb039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98df70f2-9a1c-40d5-8e9a-abb4862f6103",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db78c6b-d4ec-4724-8d59-868156ae47f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b2ce58-6163-4159-b96f-0d0bcdd018a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfd482a-8b79-4f2a-bd28-c8c19c46621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "36793996-1212-4d8c-9ea0-c443efcffe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc08258-19af-4069-8515-f4a82e47d2c6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27684e72-e07d-4f83-8620-006604f417eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa325dad-2478-4e14-84fc-9ff43e712bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedce232-14ab-4a10-9feb-5aaa536a5d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbe14b7-1562-4d52-be60-5dcfb7163493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a164a5f4-6ae1-4f8f-a81e-c1edbbeab0b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f66b132-f3d4-4975-ac41-939a2157c3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c47a4a2-2d6e-4f0d-9b19-9268d3591660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850a3655-6442-49c3-82e8-05134fc3833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2cc512-f5a2-4783-a5b0-93d09e31c5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58beafaf-d058-4811-b591-cee21bdd35d3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80b2110-8d88-40f5-ba31-5a399335a2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7908becb-778d-4bc1-a857-66a286ff4c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf71ab93-111d-4f5a-bcae-914f4e45a0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f678c7e-1ac1-41bc-9a84-21ffa1b89421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57756c2-6105-4405-b792-7a6943b79613",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d6e7a9-8619-45f3-8e52-03e954610a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feea56d-2de7-47a9-8faf-0f8fb9ef387e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad85ac5-091a-48a4-89c8-89f630fc9b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be52aeb6-85b4-440f-8a89-3803150bbfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb17239-c388-4605-a1fa-6bceeaeb8a77",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297ab396-3b3a-4273-9c94-1b091db67693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decb2b17-8b4e-464a-9d08-b86f4bb51a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675c11e1-fc40-4cac-92c6-62b2937c46a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "800b8f6c-d0cc-4f1f-a7c7-f23c3a8f36fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46cd6d4-001f-4839-bcad-be745a104a39",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5275a-d488-4128-a655-f37222b826a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d3e15d-c8cc-42bd-90eb-98748299e28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ed240-4e95-4299-bf8a-a158433b25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dde6069-c1a4-40db-b667-ae0160fae767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026402cc-0d25-48ce-8b97-4163414f4cae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67debba0-2816-4548-8c24-97d41a7c3e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e7765-8f13-4638-b8f3-78a7e452f5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e02c65-c230-4bdc-8af1-f9bd59205143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c96ed9-a986-4d6e-9a28-72fa1dd8b91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b0e1fc-c083-4c1d-b6d9-c8aed499648c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc1575-e40d-44d6-bf06-d9d1c93efdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609412de-28fe-4b65-8b9f-084bfecdaa98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14e8ee2-12d8-461b-87ec-a4abf37998f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c4129a-c6ff-4c1f-8337-13070dd4c09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bff10e2-7bdd-431f-84cf-6dc296454cbd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3d9151-7127-4a64-b59e-8928e3e475b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ede03-f378-4672-b9e3-edfec45187d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2d515a-96e7-4529-80bc-0e36dc5ac0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c4bfff-c4ff-4a29-b6d9-966dae2429da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbcea75-226c-4514-9cf1-ad8fcf0b1dbe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8749763d-61bc-4e15-af40-9bf46473b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25763078-7e94-463d-9188-c99ef49fe4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e04998-96a8-44e3-9159-5840f2b9db35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "193e863b-87b4-42aa-9207-c4840beb9b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3138e329-658c-430b-9820-86152c8817f6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b2214c-e7d4-4865-982d-4bdc2bb99d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe0dca2-0163-4240-9f8b-6d893131bc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e74a2-91bd-4d49-9606-e379768e0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5a3dd7-b31f-44bb-918e-52fa609046f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd2c9ee-9d58-4c7b-bf90-7a3294d33ec3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e6c12-9d6f-40b1-ae8f-e2eefed383b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfff217e-85ef-4681-9d65-49d1db00310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8baf04d-7ed0-4572-bbe3-743b1ce27f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7e8147-a063-4e36-9d09-2f81d3d09f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7ee99e-9d4d-4649-b3c4-8fb4e2bc5916",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea3c77-7f8f-43e0-aaec-2cd23e8ea7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea011d5-a6a7-489a-b18f-409e8f5d2e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d92e0a-07f7-4e0f-a3f6-47ccb1ad0582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d64f319-eaa4-4a72-a647-d04898c80461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20f6d8-679b-40f9-8cbc-6cf4d4e21b17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3394bfa-adec-434d-9e0e-1e5c81d55fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f757e955-7d72-49f9-b9d2-ec5f08094e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f972f0b-0cbd-4c7d-a149-4077914a9101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ca90fd-fb38-4aa6-a3d4-f1ac8f72ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dfc612-27e0-4068-88b6-539d20891be1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acaf812-3d5b-438c-b52f-a2edd03b2310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab934623-9d69-403f-b151-5ec8b918248e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be7237-b941-49c9-98f6-5ec0ad73e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c51456d-24db-4b7b-a858-69699b7882fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1965b8-0277-4bf4-8b7e-e6a7ebf08301",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d42c128-6f9b-4b0d-b0e2-59b98ff72214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2673e460-e807-41a7-94fa-2e19c92b6329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c5d3f1-c0e2-48e7-9d0d-7aa65cdfb33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49fcfdf-04f9-4814-be70-7e98c6e7e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a352cc-0b4b-43a8-be77-debd2f94886b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea906ac-d936-44cb-9e0d-c89bcf6f3335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94817f4f-cad9-46c4-87f3-0d992f9bd9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb8935-cbf3-4707-8bdb-587c7678ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24a03af-a695-4678-9a1b-50ce58f9cb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa21aa73-6a6d-4ced-b64c-e1aa9ce1aaac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a64e2-14fe-4484-ae4c-8a2b3fee9bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5add0ae2-32fb-4155-abaf-552da6869c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59955bf4-6fde-495f-a93d-7a1067c8a17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45660629-7ba2-40a7-b057-195ffa9c1de0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8b7d8ee-0a51-4af0-b7d2-deba8bf3695c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b46bc02b-3847-4c6a-8c02-e70932eb16f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd52a9-62bd-4ee0-90fd-23423f239824",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8fba45-699b-465f-99bd-d5ff4f9068d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f82df4-aedc-4dda-9338-c46fff8f845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b1e19c-c21c-4284-b6e3-4da1a152992d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "138e138a-adb4-47ab-9fc3-8ef889ed3fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f514ff5d-a6b0-4ab3-89e0-64b77dfd8864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7209cff0-3692-450a-8fbd-7d899f06a0a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bbc0272-99b6-49e7-879b-ebf93a5df72d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68120d1a-d44a-42a3-93c3-6795a639a83f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bfd871e-55b2-4502-a2d7-df326762e3e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "430b45a5-cf9b-4267-aa3d-24b014d5e424",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21523fed-50ed-483c-9476-850b64fde362"
            }
          }
        ]
      },
      {
        "id": "46ad84b4-751c-4ac8-b78b-c6311c9bd603",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ad380f82-7b20-4439-8235-542aab63e2dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d36168f-697a-48a4-93d9-328f2e181aef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cb64a7f-e578-4f6a-ba2c-b6ec44580e9f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86d1a72-d9dd-426a-bd61-7db415116cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0897e0-58a5-4405-9132-f4107fa7878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd69c78-80f7-4770-b675-ba853177d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "010786a3-378e-4c65-a357-307925fd9421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c48f4b-92ed-4fe5-8ec8-96f24dc097cd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943df9a3-ed49-4de3-be7f-978ea9d199e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8a0f36-c498-4c6f-8788-875891aaf099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd1f23-d464-4260-aebb-54fb625cb2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48cb359c-4773-4e68-ac7b-3fe5d7a80040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2134a95-f5d5-41c9-b21b-44b106caef41",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003ba472-1127-4e99-8795-936627b786b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cabd1a-3915-4ccf-87c2-1db2e4d74dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f8b437-df29-47af-912d-cb85d3439d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15f21ba-b066-4b2d-890f-7cec3cdc1f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116961ab-e05b-49da-8d98-b33368f5e2ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f053af14-56be-436f-b840-c3dcd7186e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd4971-506b-41c5-9ccd-0be153105b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d43adc-fbca-4282-8532-723767b5c91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6915f297-9374-44ae-b9f0-08c9a2713146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd2811a-3f4d-46c2-a4a5-8c18e4d1ca2c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5f76e-707b-45bb-97de-04c515f2d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db033e7-6182-4692-a954-e062b63aef47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba2e20d-1868-48dc-9260-0bb613972d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e54994-98fd-43f2-9035-2ceda567965c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9bb0bc-699e-4bc0-95e8-b8dd518b6c76",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693d62fd-e99e-4b9d-a1c2-fdd351a415a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d13da42-f28a-4a9f-8cd7-770f3c48c53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd84971-dd6e-48d5-9873-8ae6bb9b19ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4004f67c-961b-4254-ab46-5f89ef4ea897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0a2f82-7c65-4bd0-9a23-f08f03d91ff0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad06f1d2-9334-46dc-84cb-b0f77d496a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b685e6d5-642f-4c12-8ccc-c50a5d97cb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ec2732-dbe9-4b41-ada4-c731a8017886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8aacb10-e749-418a-942a-c49700c2bfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68ae4c7-6401-4cf9-8bb3-354b991bc21b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1130474-47ed-4d67-b1b8-e1d6c9307a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5ced46-3059-4fca-80d8-eed21eee937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b2f254-a2eb-403a-afce-afded5a4e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f47939e-bab4-4383-b11a-c5a8eba5d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a0776a-f280-4355-9781-567f8d58e6c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de61e99-bfce-4965-b187-12752339e6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6daff023-e1ec-4ec7-853e-78bc09099c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584e8ce-495d-487d-be42-c51f1be81b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f187cd82-e6c3-4605-a453-64471f4af704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2251f7ef-f4ad-496a-81a4-ecc56d46409f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14bf6a6-98b5-4c59-87dd-74276b5f0b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c70aac0-c1d4-4fc7-8702-f304e3a26e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4aef37-0577-4a9d-9aa3-6972cbdc4bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbc8da8-9d79-4a58-9030-e7bdd1b6d09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e369f0-75f2-4ff1-bc93-65771feb85ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dd24eb-5985-4c1a-9829-d2b44463be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3444baa6-7e91-46aa-88ef-7e6f3e0baad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e8ec44-3a5f-4886-8611-6227f2c8b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0a10b002-ba6c-4c56-b790-fb0f3dab3f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5002c0-5e23-4aed-8179-79acf7b4647c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8820433b-cfb5-46da-9553-92243f63bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3efa25b-026b-46b5-95a7-8dcf19b6af53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56edfd26-11b0-4e49-a505-d7539df1592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd45f6b1-84c6-4052-958d-458cbad4d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259dce9-9110-4408-a903-dba2e502613f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff339609-5b84-4ad4-a4fd-688a13a75847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5611d962-6c9f-4af2-8918-a6d57388da3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549183b4-0590-4431-8779-cebf663fc67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab207157-3d52-40d1-b2c0-88909696246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abc200c-9528-414b-9f3f-f781b326297a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec89da2-c084-41f8-b5a7-0757099c69b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb68542-480d-4808-a6e1-477b959c3232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badbdf0c-20dd-4eda-a575-ced50521fd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d89f51-1026-4340-a4a2-25ae09c7c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2b631f-822e-497a-b3ae-17e23196e038",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd8a774-73ed-47a4-b33f-26ff64dc91d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27faeee8-9358-4d05-a704-ab2cc1ed590d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d72266-8a33-4c58-b287-dfc1a9b0118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd46e94d-000c-4b82-8cfa-4af23c39bb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369d75ba-182c-40ce-96f5-6a7dae823095",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c635926-b701-4d27-94dd-8305c4aaddee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a959fb7c-08a1-44ff-9a29-b5f449b8a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0155176-ee66-4fe8-a0af-066fd8f34b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a1661f-715a-40ee-8ded-1cfa08bdd3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30ef97-30cd-4d39-a752-789591bda806",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd99015-44be-4bea-8956-7f760d2f3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cb457d-fa9f-41ed-b3a0-e3db3d62bb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4963a5c9-bea4-403c-826b-b78a4c7972f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "55937fc4-f5a6-4f55-ad1c-9bdbe5f9b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b3e757-ce8c-48d4-a60b-2f5e4bd2a8b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73340b8b-7228-4ade-a16d-ffba245be286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3d9563-4a2d-4db8-94c0-f109383bc49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8879e0-75e3-418d-adb3-3027ddae8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fd2616-ddc5-4bfe-916f-0ee3c7ca36ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4236516a-e261-4102-b5d8-3734ab7c5906",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba51ca-1607-4589-aaad-7c06c5b80286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e5f1c1-8997-4b93-821e-971d5ce94f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522218e5-032d-4ab9-850a-6734a708904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b478ea-ad8b-43d5-9d5f-a9df373cdae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368979c3-225a-4b09-825e-80f683d0bf8d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe5a23-6c86-415c-8279-a56e7326612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b263ada4-f033-4f35-8dfd-563c87c76014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3faf0cf-f161-455d-8e26-b075c43e9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02dde9c8-6c2a-465e-a356-6ecb5793af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924849e9-42dd-44b1-b3ed-bcd9c9251740",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08b2d8-262b-4890-9187-74527ee3fe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3963832-6ccf-4ad0-88ee-1983ac852c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5bcbad-f9fa-4d14-a73c-5580c0e4932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe49d0f4-6903-4754-8364-134856d55026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa5ba22-870b-4453-a613-168381d0b654",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df79ef60-9591-4de6-85f5-4c3b735af821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f56710-8af5-4376-b792-b7665b8e8d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c156dc-48b5-45bb-a16b-6bd395c6b67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac331b8-3fcb-4fa8-82bf-53276aadde90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65010a8-5a8f-4c84-9c99-cf25ec663b0f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57506ea-a1c2-458c-b9a8-798c3caa5e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324fb610-e631-4605-92ec-90f904864c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba970001-76b6-484e-8f3f-b0f51e33a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d99401-b6fb-486f-b083-12f85d6d7e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6042c85-8d74-47a7-bbfd-0dd1397fee18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38642cf-a63a-4fb4-8b57-8282471fcb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099226b6-9dea-450c-9621-aa258454fb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e048cc4-eac9-40bf-b417-c74af9787487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1547d82e-05e6-45f6-8fac-7574cbc43642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e75587d-d1f1-48ae-880f-01449ccb1208",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dbdedf-05e6-4bf7-be07-ec9aaf977f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3568e1-5aa0-48e7-9bcf-cadad5e67240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dfbdc5-da4c-43c8-b522-6397049dd66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e714a873-e2c8-4220-8ab6-fbaf621c037c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6d5d8c-8d52-47f9-9429-6f83702907c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322bcb14-5036-425b-9b97-c2dd5c491a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717bfdcd-05b5-4208-bc21-754e1da2c7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8951b4a7-2eee-4096-a023-2a83044627e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2e1105-e164-404a-a977-fd3d4295530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0233aa9-5005-4d05-8bf0-31ee641bfd1d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a007625-5215-4e17-a57f-10f9be22dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712af536-e143-47a5-ad05-5a64f94f0090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957d1836-757e-4d5e-acaa-5afef2d238dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e551d980-6b35-467f-989e-98a1e4279919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992be497-f8e5-4753-907b-3e306f56ecc3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8413f600-a39d-40b7-9dc0-dbd3dc7a7e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b4969c-1265-4f95-91c5-d21ea6c4d847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f2a04f-0f3a-404a-9510-8d16faf3f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400ffedc-cc23-486e-b1d5-d88bf3c7a7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e182a486-652f-404b-85ee-aabdd4499544",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b569f-bc19-44cb-9ec1-49b9761dbd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5e6cee-664b-4156-805a-b65ef5d8e966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035eff37-dabc-4108-be30-2f54707f0f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2ead81-8478-4a18-b6ea-03fdc681d4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acd0283-6080-4550-ab56-cae2175f3a43",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe0d82a-2261-4c64-9fa2-e31f06c57869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6aee38-92fe-48f4-9836-3d5b46a3a634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac6a35e-ce2d-4835-a249-9f5b91507252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747e0fc4-9431-4ac4-ba4e-ebebf3bb86d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e87634-62a9-4711-9609-d3c00dc64872",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e6070b-d797-426f-b689-59c8aa53e0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b292090-0402-4d39-ba45-966d9f1895b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceaaad8-6528-44d0-a4c8-c9db40c73de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "047def82-9f7d-4ff5-9959-615e5c7cf255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3576b5ca-aa9b-4a76-814e-f4d46119a01d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9759baf-c5e1-4e12-876c-52b12026e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470182b0-8b5a-4c3f-91cd-a028f2a21f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d9c1fd-0b48-4385-84c9-5a0fae3283cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "690e3a4e-c200-48eb-97e4-fa107a0a7aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab83f467-550d-4e6f-91ef-4852e710e2dd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77c8ffc-6075-4f47-8b06-f739f654b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f125ea2b-784e-4bf6-a290-50f8aa059858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df757ca4-42ed-4ab0-a48d-bbce4eb09e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b52acf-ad2f-4e16-8120-7b0589839b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9275678a-95d6-4a2e-a33b-0b4238046408",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14426ae1-633e-4c93-97a8-dacf17186dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab70d356-08a4-4e46-982d-cfc811e9a549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f628a2de-35bf-429a-8af9-97e521e4d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6479367-571f-4f2a-a87e-f3e685ff50f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6b26d-173b-472f-bea5-7a5be05235de",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ebb6cf-fd1c-4e0f-9e4e-f093e871463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23be30c-a542-4acd-b7b6-b81b35fc91b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e6c63e-3563-43a8-a81b-fa27d2ba3935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb7d749-3659-4088-9a5f-fefab5c0ef90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68cfc27-d5ce-4c47-a224-0679568929bf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dde185c-cf64-473b-8448-42c52b2eca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a509ff9-5d77-4d94-8f4b-596acd306e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b4b81a-1653-4383-868a-70d410316169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fe90fd-3e85-4689-9768-ab56db7a4e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91d09b4-c8f7-4964-a1f4-d8303be053f4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94680fe-6839-4c51-91d7-ba731c091bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e2d748-089f-42eb-8082-269a38cdba80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2137729d-3010-48a8-bd92-5ac1ced2d275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23202e1f-0057-4ccf-bbee-2a879f8a02e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa235497-ac80-4876-9705-d775c4f518b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3d1ad1f-0bf2-455d-b2e6-f3fa55f24f2b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a3ffa9-6290-4c36-b4bc-f12487fc43c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbd2199-cd4c-476a-8a05-fbf88efd6bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84fc8b-8775-452e-9f5d-cc1b6a941494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb7daa95-8902-42ab-b9d5-35a1cd3164ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c18abdd7-cf7b-406c-9a8d-6241e98c4b5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea667b26-deae-4387-be77-37c90b579ae2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a8864a-97d9-49d5-8546-a3541b421be6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eb08909-f444-419e-a365-15cb76a3da8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d603a3-3433-4f7f-b938-59ae951a84c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7eefdc42-6dd1-4860-af4c-13c892bef2e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eab32b3-5dad-42fc-b144-78abc6369426",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daf6f19d-59a5-4ebd-990c-f72c3aa09eca"
            }
          }
        ]
      },
      {
        "id": "c3c593b5-7c7d-4972-af45-30f15f069d76",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ac06b2c4-2a6c-490d-9e1b-b2d49821197e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e3cc793-858e-4181-a2d8-e02e1fec83ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1107e4c2-9ff6-4e63-a19c-d2f701ccecd9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed785694-aa0b-4489-9572-896d5c5ff5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64017432-9ed0-43ef-a5a3-0bd27c4eac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a723cbe-3b6f-4b07-bcf0-0f59e3ab9425",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20d8da7-1ff2-4f4d-8c74-e786783e6525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f7c7ac-9a1a-4ae1-84a0-f4ef58e9c524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab9722a-0bd0-4671-a314-a3359a667ba2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d639d8-a777-4c19-88ff-b5e89cfee42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0743fd-6bc3-490b-ada3-01fc47cfa29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c63e76c-d72a-4b3e-be13-fdeafcfe9093",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f5f6c8-5aac-4080-8d92-c73d39610a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd5943a-b8f7-48c7-a9d8-ee4d58ba5fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8095dd-0270-4700-a8a9-3051b122c22c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652ecbe-221b-4101-8141-e8c902eb1027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d1898d-d945-4939-92c5-7bdb0a9e1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692b5c8-c861-490d-b89c-51da8541f8c2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490ebc1-de15-4d8c-8069-909813fbd6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f027cc-4786-4df9-96f0-e8802d7e0644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d000edb5-0599-487a-b9ee-b3fcdbc913c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939113be-532b-436d-9727-c75a632dd8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9b6e5f-c19c-4e36-99f6-500b098bfb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0e0a71-3e59-4588-941a-079e131fe376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1296bea6-3ffb-4c62-a352-e54f0f008280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa24664-4540-4bc5-b582-9ce746e0d4a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480cd23c-f9cb-43bc-8e1e-00bcf4f8b83e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d438e4-2dea-4741-ad89-7e179ad3c194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e029a87d-761f-41e6-8d0a-ec05faa490c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1750d1d4-4b30-4b10-8a41-f4b4ac70f62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dde760-f6e8-46ff-bab9-7c1718aafb8c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdd79d6-3211-41b1-bd08-8bce700d09dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ff5c44-9d1b-4b59-af7d-ee5b72e277be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d892e1a-ca4f-45b9-bc72-cd5b7d277ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c880e2-66f2-4e63-854e-8a596fb89c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a1e285-28e9-4bdd-b3bb-114d0c9519b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a128c653-7e74-4457-93b5-cdbd67d366da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9dd5ab-4583-4dc0-be5d-e39be673c9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04a4de-0048-42da-9a4a-050a97a4ecba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8c3bb2-1cf7-4a3b-8ae7-9bccbf8bb0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00d7f3a-453d-49d5-9591-bead26bdbf99",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c91a5f-0d7e-4bdd-837d-7329110ae613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78885e8d-a27a-4772-828c-693681f26717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa3cfb2-9398-4194-90cc-7e3d59617c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88551b6c-393f-4166-b09c-8e8a180394e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450fcd3e-bb1e-460e-9408-1314ad13ad5d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b4f956-6b4d-431e-b9c3-77928b0fa10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff4f5c4-1a89-4db7-896f-e3673fc8c52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace62b84-dfd4-43f1-9364-610b2bc1ae0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8458d263-5468-4055-9364-a1fc7cdac692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a164a54a-4e3c-48ba-a91a-3984ffebf823",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91b2cf7-7e0f-47d3-adeb-4a9c9abcabe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8317858-ab64-41cb-9080-0ee4e606a756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704eaeab-2ccf-4707-a4c1-36df4c3632c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2331ad5a-2e24-482a-8037-9881fa67ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd674464-de29-409d-abb6-91206f4bd9ee",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8657dc46-061f-4796-a7da-8a1d070b9203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31308d5-7d87-42c4-b866-829dd0329476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d15a5e-a2d5-4045-82cc-1b4dde5dd84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b24616b-7a8b-497d-8e83-8ec35b86ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7da59a-20af-4cd2-8795-b1a9a8685ad7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4053bdcc-5528-4645-9497-b74083152d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2dfa45f-75d0-4f0c-8461-5aa412a3b9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529c6732-3462-42ca-98b8-5c1685203845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32ac790-c222-4c7e-8a47-edf3558d36c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5dbbc7-11d4-4134-96b8-ee9e49a5305c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7533ebd-b97a-4a11-a98d-de2bd90beb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbb21ca-9903-47bb-a21d-5fa5a559e16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673750d9-9158-45d4-838f-829a828d029f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96102ad2-7aaf-49eb-85de-3c62e58eccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce551012-0eb1-47a6-becd-d9113514f021",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7925c25e-cdcb-4a9b-b12b-a1abff595c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372b9eae-e083-4685-b702-71e5265eeb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e4a005-358b-48df-b668-416e8e2d499d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f324f2-25c6-481a-8c5c-a019b85389fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c655b99-0874-4685-b1a0-9c599fef2ed4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21cfef-e0b7-4b85-98f1-01c29d3c2dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fd77df-e999-4851-9c06-b6b899500af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aa2361-9655-4027-98c0-1d9fc6331ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac356ebf-a79b-4130-8ccd-a8de35996b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a76ff53-782b-4d1f-a373-5e8709b3b880",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b4acaf-ec44-435b-9da1-ad66b2ba5007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb3e5a7-a82d-4393-810d-7a4e7a7d61a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6187c6-585c-4186-99e5-aaec822f127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116fb4a0-1097-4cdd-b95c-d2277f7ddc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e4aab-d89f-47f8-810b-82d78ec823c3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbff90b-73ea-4d3f-853d-2f02c1fc5806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c80b65-d354-4687-a05a-e4ecc2b7281d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd0ea30-66e8-4929-a13c-e325c117a4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95ee891-7ba6-473c-9822-040fef273ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0d7148-b772-495c-ac6d-35e9d425658b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ec0477-b134-422f-9142-66baf9998bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169aa2f9-516a-46c1-96a5-2d75f55cc717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dd324b-306d-4ecf-9410-06943dd8c022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8184424-6db2-4b7d-8295-0f32c7057d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f51cb6c-60c1-4a96-bc35-0e70b64e8410",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55fbc35-4369-4deb-9e79-d6c8424a1bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093c465f-3113-4e10-baea-04639879ca55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac04029-cfd7-4b6d-b05f-1b4210f62092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0630c3a-6447-4f59-9fcf-8c1df890de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14573f3f-ff46-4597-b5c4-ebdd686d0100",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb9b927-2e1d-456d-877c-e5b664b845e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d7cb19-c091-4a68-9dba-01fbd15d9e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348efb0-aab3-4091-8c0e-a10cdf51f48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ea6243-54a4-4ece-8de3-0ae777821d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc27fc-e464-479f-b36a-2b5758ad0540",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329d5d93-b24f-4d33-9e85-92124bb8bffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a324528d-a433-474e-968b-a59997c59745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c269a4-7d2b-4ca5-84bd-de2cf82738d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c59172-25f1-4202-a97c-c39987bc1260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b470b53c-0c42-48b1-ad8d-d47f83984e5b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf973224-df43-4c99-b999-d0780ff227b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a64ee8-8656-46ad-b2b1-9d7aa658a40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c31b40-be5b-4a75-a437-51fe9f529fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e47e0-8971-4a97-b06b-ad6bee665ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf6e276-7805-4ecb-a0a8-d3b950a3454a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff741368-75d4-4170-8d98-530a8df227ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4e56ea-9bf6-445e-a083-233974ff0b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09f2b43-c3ed-4411-b9ab-8cd1ab39b2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6229722-80d4-4510-a6fb-d908b5e1a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19209dad-3261-44d7-bd5d-97eaed61af6f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b09aa1-e1b5-4233-92a3-a4f3792c291c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b0ecd5-d15d-4fa0-99e8-f898e92000ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb849f9e-527b-4dea-8437-7e5a3152a302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae1509a-4584-4b4f-991f-5c68962b4bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a3a5c7-3aea-4cf4-82c2-ad9759969017",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668874aa-a2eb-417a-a4ec-7798649fd87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdaed07-f94d-46a1-b070-9503f9f4bab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1689aa9-3de8-4fca-8d48-2518a465c8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae881fa-da88-43fc-8ecc-6ce00edff720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9cb8ee-4af8-4cbf-8c33-f476d687fb40",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c769a07c-7a4d-4236-a9a5-0e1469efd352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e403e5-aa7e-40c3-9445-44e0e99213d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151a99cd-3c7b-4758-976b-2b8e2b7b5908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f405fd0-3969-420f-b373-409e3fdef0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d8933-9408-4401-aecf-ad5ba175dc63",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b934bcc6-1cfb-47ce-9a29-9418f5217445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54214b4-3e04-4760-931b-a12ce1939c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e533d9d0-dd87-43d1-9d79-5670fcf06f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e0d65d-7329-46cb-a4d2-43b4ffdec62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee5600e-7bae-4a78-a9b5-7668f61b35f1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd98a28-244f-48b1-9161-2291fba0d217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9150ec6c-c350-426b-bfa4-540d7895a315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd35263-66c5-4300-9e7d-b7b294ec183e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02003d86-ecee-4bca-9e78-062a0884d0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6593ef-d986-46c0-a533-ae586cf35c6b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6106c3c8-b1a0-4d80-aba3-0d00d2ad50c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fcaa57-5850-42f0-9d63-e42663bf6307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e365b1-b2e0-4ec6-ba04-a6f83aa8be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a4299c-4314-4edb-9607-e5bca1f095fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702be3d3-aa00-496c-b80a-de31299ffa9b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c7e68-d188-4375-913d-76c75f271650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a39f763-fe0d-431d-adae-b630d22741d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21310178-ab62-4ae3-927c-046cdd38859a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec83593-b82c-433d-a8f2-38bc2b73be78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677795ef-e4db-4182-a017-c81d706004bf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf65163-266f-473d-89f4-a0cf0e1315c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8d1026-a056-4efd-a29d-355561929490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9692e-8ab9-45c6-a515-4602e65ae4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9961a2a9-b416-4c2d-9b88-ee2a98d2c253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394426d-4920-43e3-9d45-e278afa5ed75",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e7754b-c872-43f0-bcc9-7ee26cc715ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d53e3b-de30-4bfb-9db3-5f401d359768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767f4829-9016-4c4f-9b56-2e02f7c512f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefaf856-0aa3-407a-996f-6e63098309a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffd9f07-1445-44ba-8bc2-f369a48a6775",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc2f81e-3384-4c20-b3ce-449f0df7fbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e15211c-f004-4b44-bb9a-88e7c1f96e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d495e31f-0747-41e7-b904-4ed321f3013e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa6ccb6-379f-4895-a216-b3aab12ee82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e907ce-56fe-40c1-a0e5-cb3672933346",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70011b2-e640-4cd3-ba08-6e7121d14d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229e81a-ff54-4cd0-bbad-fcaeb0582ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c598110a-a06a-41a1-b088-c0e3c36b6540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d14973-ab7d-487b-b769-940a3a1de13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a7a62e-b05b-4d4f-8ad5-06cafc1eb676",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a88ebd-d645-439c-916c-3ad334f250e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bbfb7e-8b91-4f19-b275-9a168adf6493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c1ca5-31ed-4ae3-996c-198d1c1fb3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d681da4-47a3-4378-b0b4-fa1b631df069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5604d492-b5a3-4818-8824-f90f441fa96f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87252ca0-2f4e-46bb-8b26-41fae02a7e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f9d107-d81b-4abd-b11e-66f7202f87e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514db932-5554-4603-b2db-8d9857f121db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0da4882-5ccf-4f8d-aff2-065e40be9e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fdcc44-332f-4b21-b9a7-9b0a66c40667",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1c3e7e-74bd-499b-b50b-bf604d790240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4964c35-b494-4c1a-a3de-e26530e86dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24dc513-a3b1-49e6-a12c-1d14d92987cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249532f0-f8d0-4d35-b6e1-2375bbf67be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0a481a-bdfe-46ca-92e2-90d7e476bdbb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eeedea-fb02-458b-9f66-c52e747dec51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a7e8d8-234b-440b-846e-0de1bae8b26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab13733-d416-4709-8242-5d748f800c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0c815b-71ce-4ea8-8df0-8574f77d2a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47425eb-790f-4aad-8096-9e06c7806e94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba763d-e492-405f-8cb0-e5260f874f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695d366c-4c79-4b58-ba8d-bcf9f59aaa55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b86544-2c5c-49d2-b1a3-d4d5015e9556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5658d617-2ff4-4aac-ba9e-b66905f4f183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9737735-1e8e-4057-ab72-ead381a0690a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a57259-1cfd-470c-844c-ef6a0a3f5db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90252515-718b-4679-9089-e079dedc0380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4dc9ba-4e6c-4a9e-bedb-815faca50370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47db8517-f2ce-4edb-ae8d-2081186c8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ea9812-4998-4d80-bdb2-fd3d271a7ff6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9acd66-e36b-4fa0-9140-76fb62616fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f433aa-bae4-4edf-a8d7-1402e03b6ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fecc60-6115-4c75-a76a-12d15175a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63158194-3595-4860-827b-f74b84d26678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57e2167-4a69-4d55-876d-de2588f07522",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9f27db-f21b-4d5b-8b5a-8d9b259fbcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f29e1f-51c4-41e1-bddb-a1c53213bc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce2fe33-b3b0-404c-8dc9-46152a77c84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ff0528-6f58-49b0-8435-22d2aa8d8fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5452cb49-2624-4ae0-889f-c9017f16bfe0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b98317-5809-49bf-8917-f42f6bb72fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c94607-1bf3-4ea9-ad97-8abccade6ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e07f8-9ed1-44c1-b0a0-c24b266378b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55931c0-1400-4e63-87f2-104efbeff25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d402b9-82db-4745-b188-b6d44521582b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f48cf-acd1-40ae-8958-d4f92e1cb2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2f1a4d-239d-4808-8a7c-807a740c3aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51dda38-63e6-4b8e-9311-7a785024e72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66dc0b6-2aea-48d7-9c77-1ef0e8a1e0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a2cbe-5164-4026-8a8f-e5f5d506fd85",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fea127-b636-43ab-b3ba-ad20e6dd00b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445d207a-2c40-49be-b01b-9de7c9edc4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecd641f-409b-417b-8134-29151aa22134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931185f3-77e1-46b8-b184-22c50f7204b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51ffa6f-0aba-4e2f-9afc-99f96abbb8ae",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8493781-682c-4d50-968d-c4bad6b4a64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f92d30-4b0d-4e82-bba5-6a65cd5eee06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d566f-e0ab-4daf-a501-a3656876bdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5152cb-e981-400b-b79e-0b9d0330a05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb6424a-cfbd-4d27-8025-764aa049d415",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b6c0b-1ba7-4cf7-b8ba-ffc67535cc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8f4380-9abb-4e84-85c1-d0ddfa9afe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006489ee-11e5-4e4f-b9ed-dad5c7e57af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81df2570-61de-48a8-8675-bcd65240974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab9025-eb24-4a18-806f-1583b0afc6b7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42101c1-9eac-4b99-837d-03785aa57d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7f4e09-2ac7-41dd-8edc-2172d600d77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83639c6e-b89a-4c5b-bf96-8ccf8d627bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b40405-702d-447f-a3f9-c9d73f17c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4fc7b1-c745-4d29-b1c3-ee3277327726",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e226735b-105b-4f9d-aabc-89ae286a4727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f440264-652b-437a-ac74-656cfd341596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6817351-cd63-4238-b2c3-1ec1672b5d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06715edd-6487-4fd2-8682-8d73648b0e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416ea899-76a5-4580-8d2d-f7e19d62cd45",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65a14a3-90aa-48ce-a3d5-7c26ba9f33da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934d0ec5-872f-4a4a-a836-7d9868bcd0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb94236-2e17-466f-a66c-ff86643cb005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15366330-28a1-4e14-a818-e4548ef30416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45c464c-1116-4203-8fe0-b5b5d66c7f21",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e39a1b-3228-4bd5-b5e7-ff01a27989d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272cdbc5-a0cc-4ee2-9ed9-9bac2af7f572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f5c5e3-9399-4da9-b64a-eab211e9025a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e329d0c7-2011-4272-a6e2-e484e6a4be32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77465448-72e0-4575-bac8-10212c389f44",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54f598a-b451-4eff-a0d6-da6f6317c763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5076cc75-740a-467a-ad28-92f91f5db492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a46c960-6bcd-4dfb-b019-a7bddb1ea04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e25de75-2544-4333-bc75-3be59aebdcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e67906b-d162-42ae-a8d7-6f5771f50aa3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c398fbd-4322-4c58-a589-9926dec010ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7ceb85-6f64-4cdb-91b9-8755205571f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ad3f65-da16-4d96-bba6-df4fddf8c930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe1197f-e100-41c1-857c-3a4c026bb51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac624a33-c9d5-4c31-a8d6-b326f487142f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0663db1b-119f-4d68-8594-37a36ebc01dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9370feb-b34d-4f11-946e-d542f55bedaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b2ce44-251a-4d5a-8697-9433e346565b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca2af05-4cb2-4208-b3c6-cb9f1fb64266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ebcd60-8ee3-4548-abc8-2179e3f179ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b5f9ac-9c2f-48bb-91c3-ce80ab89a683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef0d00e-f45f-4ba1-9717-28e8c9073e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0822e460-1cfa-4eff-8323-4b5b480e3439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ee36db-f0be-4e83-87dc-06fc97c6cbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d84b721-2e93-4e7b-9a5a-49f9eab511c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e429e67-b8f3-42d9-964c-cba6cabf9012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de80c3b-7cc3-4f2d-baa6-ef0465548573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a345fe1-e426-491a-8c5b-4f4f16e9cc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1eb022-070a-4f7f-afbf-1e8493d9b1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38376821-7de3-4e18-a5e0-47315b6f814f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff1b71c-3356-4084-bd8c-cfeedec3b1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e7635f-adc2-4460-ac14-030d8dc76f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c5a84-7867-4295-af80-6dd160593c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0867a41-3fa3-49d8-bc2f-631d34dec46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96efdc7c-dd6c-4a65-b875-1d59038940a2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9841443-d1bc-4ecd-ade9-1e9d5cb2e7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf707c7-72f6-4fa0-9b45-70637db5a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8275a7a-2813-4e5b-bdea-50d45e77e232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06609497-3124-4fb4-b52d-3f2d43ab70e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706b1b9d-90b0-41a3-b5d4-1117fcb69f84",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29be853-d0f8-4087-a17f-01324e72fd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c88066a-7a1a-44de-becb-e749b8a94176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de64200-24f8-493b-b93d-b86b5646393d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa131de-78b9-472d-9676-00b186b1f903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a543e371-4aba-4a21-90ab-31ec4f114777",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1f7d4-06b8-47a5-8838-7accb1db59ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ee3960-171f-45f4-8b20-40598d028705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8977a00-124f-4902-99ae-2a99ad189402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc588f8c-f9ff-4e9d-a284-7dc244560546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b9cd46-b702-4f33-919d-095700cbdc0e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e82c45e-b0c6-47e8-9d0d-b96e80f1b0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2523ee-9d47-4091-80dd-c0269d85fc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e741c9-5160-41da-94d6-b534a6e19dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ded3cdc-3479-4138-b25e-1d949930613e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d854e55-76e7-4472-8f1f-5e7f4f07ac61",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe02daeb-306f-4767-b3c4-c6d6c62260ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf9aea9-047c-45ee-95cc-368015d2937f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa14bde-4597-4d8c-813c-ceab26cb91f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f75e69-ae3e-43c6-8643-64c491ec5f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1dce4e-1fdb-4369-a404-c7fbd889022e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f1d6ad-fb1e-4502-b7d2-8c80a98d2bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5730807-9b2a-4dff-adb3-542fbf8dc7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fac9fa-7641-4ae1-a55e-f47f5d76f059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d472fc-f828-4500-b8da-a98fb994bb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769fb431-6cc1-4079-96ea-05e9e0201a25",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50ef09b-fe58-4cad-b3e6-1a4fe01fc936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3518c451-8f19-43f7-93f6-9d870f813f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3473f6a0-3812-47b1-ad56-661db68f3714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a3a3e6-a8b3-4dbf-ba61-f14d9373aa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdca185f-a0f7-4224-a6a0-7e3eb8efc4a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a933c174-1067-4897-a5ee-e8d0e9516da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7215e3b-569c-482c-9e8f-9ab336780503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e4035c-f3b4-429f-a78c-3ce2013653d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bc0068-1410-497f-a2e9-f6340d848ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33952fd7-d23d-4d56-954e-b2aaa3e5a408",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e410ead-5fd8-4a61-a7a2-68da977041ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82d9ce5-28cb-4004-8e10-494b8febb6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f83c344-ff36-41cc-85f1-f07410023b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a7c4ee-b511-4cbb-bb29-535829a30e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f8486-88fb-48f1-a608-9ae3b7688c04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286fa2f3-7644-4482-9419-4f4d87936d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299a57e2-16b9-44d1-a8f6-836809c376e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b536966-6691-4679-a315-3d78343b14ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788d5e42-52fa-426d-8bb9-a0d17a474a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec57562-c968-43b3-a438-cb5a01cf4809",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd4196-ddd0-4f5b-a893-94214f129434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5910f64f-7c36-450f-8af1-b35350d4d1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65950615-b66a-4f09-8df5-f043c2f0fe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d66d8ef-7074-46d0-95cf-65c80f4db84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac486db-7441-4709-967c-9051adec1496",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db08c7b-3414-4783-bddd-50bcacc9e739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1994af67-eb77-47d1-ae4b-f4b200d4967c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb4fcc9-7b7e-4d46-8746-6399b0156e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d89b6eb-115a-4143-bdf2-3b010be57df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef4339-38f0-4042-bec3-5e26d208023c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815fd008-dd62-4cdd-8a2f-fe1fd24e5bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b38b88-aeab-4c79-a516-9088097fd6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c08e8c-e1e3-433f-80e6-7f77ce557f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41efb68f-645f-4c97-ab93-c99bb40acbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2835c54c-bc9f-4f9a-aa66-408251e19c38",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2938276-18a4-4df1-aa0f-e018e47cb4bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facf9b96-0fe0-4669-99a8-36b4b0591804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3426da-7495-4a9e-a480-9a807ae22b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eed11d6-e098-4661-ad06-91acefe2a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d16c6cf-caae-480b-9ecd-4640937d5290",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa5489f-95e6-4535-ba8b-b32ab38e823c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea5953a-11bb-4855-8fba-7a72eef9c3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c357e129-7e49-4d01-aa77-89a89945d4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa9c5fc-a6be-47a1-859d-90faebc99f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519fe9c8-93f0-4ba2-b013-de26699f5db4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa7d706-6027-4e77-ba3a-116185cb2483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883d8db1-21cb-41a1-87bd-99d0d9a56757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3780766d-cf9a-4668-abe6-fd98788d1db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cf5a7f-39e2-4555-8ca7-e99fe783257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae4d19c-730c-4901-95fe-5201f3c79817",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27733e8a-1895-4447-abeb-e3e5d5fbbb55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058d0749-8334-4158-87e3-ef5c789f7b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e95a97-3495-4f5e-a264-38fb99471339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6c43b7-734a-4beb-b399-ccb1c9f30ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f73c842-cbfe-4e56-ba63-77e0f1d4317b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d9d4b-89d0-411d-88ec-0fe6d4528882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24095da6-e782-4d55-9cbe-507a83ae6ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c4637-6f17-4c3c-bafc-ebd3ae5fd46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d57c31c-dc63-4fae-91ba-e9ea6ce9005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40762883-a4ec-4a0f-b484-e02e47969c43",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c37d8d-b466-4702-8aea-b8949cd66bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f45596d-06b6-4d24-b12b-15e0cfb55515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a9b99c-b5f2-4dd9-8c47-d918ae64c77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0245c67-ed51-4813-b9b7-e951d72a50f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d37715-5be2-4520-9abe-0606ddad4ccd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10d4031-3448-4e3d-b68a-b754c5a0fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e9a056-06c7-4db4-9314-c3c8fd846542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc16c319-5bf6-4819-b243-19b1b897f272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c6697c-8f1e-41ef-ab89-6568d9a4939e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5c9f5e-a2f0-4383-b92f-3be5e469d353",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c97074-ff19-402d-b417-a3d77088adf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84368c45-8626-41a7-94e3-fdb102181357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536560a-e461-4044-907c-1faf0f337366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494db840-3399-4743-8ae7-f9232ac558cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2663e494-7e69-4a92-828b-da34eaa8d532",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828fb7ea-9bba-4a80-a02d-f379d270928d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3368c0b7-d425-4ef5-9e94-be1a972dc0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45710e5f-35a3-4d6c-9526-99ba7872d1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7adf53-a8bb-49fa-a9c9-a1c8befa7213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573562b6-98bf-4873-8455-27837f8f22a3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0916cf5d-974e-4ddb-a7be-a70d2fbbc1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973ecf52-ae28-4352-9250-0e12759d3f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f36558-5742-4ab1-9f62-27d98b724c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbf65b5-a88b-49dc-9b35-d7b5c25fbad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75942ef2-2605-4a38-b7c8-794ac7327d3d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9d6b1c-57d2-42a5-8aa0-f1992489a4aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a111a0-b129-4c1e-ac83-8b1a78a801c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eee66f-0ba5-4edf-9dd3-5b33a1a55d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1778263-b501-4bea-b120-d310a1b28968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91081193-b4ec-4264-9a50-0de34c440603",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2d6477-202b-445a-83dc-92845ccf51c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff1f3e3-e6fa-4214-98fe-15f8c933a158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c94d98-e66b-4f78-b284-db4ffb395643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26379120-f039-4175-a47f-7d90075647e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d68f4c-61cd-47a6-9118-13c8f62bcfac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d6bcb-934a-4977-b230-c138418530d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e417d697-0273-466c-b2d5-a58e34d31f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b262d0c-9109-41be-a5f3-d4a7fd51c55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f1de55-e5ad-4a10-ac38-a66d387e15b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a496a571-2fe4-45ff-8b53-bcf2fb8beb8a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f482bbc-230e-4aa0-8858-5a876aa82e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15769616-55d3-4758-b107-794654ac7e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1f6551-dbb8-4aec-aff9-9312f7d5d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd7bc80-817e-42e7-ac33-91d41b2d70fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d186270-b510-4f6c-b778-3b4f63d3cc78",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aa90b1-364a-4cee-bb02-28bf9a532e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abdac51-4969-431c-914a-722f1692154e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b73b14-162c-49a5-97e0-c3e85c835e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75440382-da53-41b0-8dee-14f9c8f1b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a22601c-e5b8-40ab-8ace-1c19a6d40882",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40621cf8-87cd-4c19-956c-ef4ffad5f705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85a2d99-d27f-4e7f-a641-dc7bad65f950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732d1d1a-865b-4d46-a6d1-a914ecad3e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4ff4f3-2bfd-4ae4-81f2-e3e3169421fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217a9e8-2e11-4263-94d8-7a66dba1ee3f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3964f1-42a2-49d2-a5d6-7ef4425dad8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1417a7-2659-47ec-ab8d-43f266cc94e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc9a01a-be63-4d12-b445-3b055f519052",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ded175-6111-4f5a-bbcb-59868f8e237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec8acdd-c7b2-49b7-b13a-a53eaf4a1384",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4973deed-5ee1-44ba-b796-1401ca12d7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fca8007-b9bc-4827-b86d-3c88026262d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0af3d-84de-45a4-89c0-57904fcaf6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5267f66c-fa3d-4b8f-abb3-9a52e427045e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a5d1b4-c32c-41b8-b3a3-b126c688620a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af712b33-cf89-4fd7-b3b1-f821a7652591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8c98d3-9b08-4f8a-ba2b-ba64ab8341f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d27e2be-6933-4cd4-8f38-7353aa94ebb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dd7197-2c10-4115-9bd5-3cbd624185f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f38eacd-8175-4b0c-b485-159c812f1e19",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f20ba4-0e17-4ea8-8ed6-a1c99935c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fd22ce-a51f-4053-bb31-f399a6d967e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e6573-1343-44d3-8abf-ed7f80028463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f8375b-a699-4f9c-8915-f86f1a8fe6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7910950-e1a1-41de-a1a5-a9e3fb60305c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab23a66-b96c-4ed0-9d7b-bfd7ade87750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3186064-478a-48d9-bbf9-4f9e6f708962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9a7eec-1dea-4265-90cd-b6945dcd84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d41bf0-449f-483d-9d9a-017129cf776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f2596-458f-4277-ab97-f7cb7c580e92",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ea07e-ae5b-4e43-83bc-3a8976c36f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1ce51c-3402-40af-b548-41a9bd262ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a028b-97a4-44d4-a125-85a4b535e344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006fd3a7-7e98-4eff-aeb6-ec0f9d637489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01fe00f-0309-4be8-8e0c-43a15f8add1f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d0356-b270-4c7b-bed5-3e24ebc575e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4a0f7e-5a3b-44e9-8cba-fdcd02b2bf0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c374d4cb-c0a4-411f-995c-8fc0bbce6326",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def90b55-6106-47e9-bde5-3228b0626311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22facdd8-be09-4d02-8e55-34fc04c674d8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a91129-6ca0-41ed-bc3e-9efc6cf64815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b96b67a-1068-4aa6-82de-fb0f5d308d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b7c69-78f8-4927-a63d-8eb9602ba275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1434460-3b60-4b86-a225-6a7643c051a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f50ae50e-193f-4306-ae07-bf187bac4609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5068abc-adf2-4a92-a262-daab34665b3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee97ce79-8e11-4f21-8ff1-a1716b3e14a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11a08b69-32d6-4f05-96b3-df449ad686f4"
                    }
                  }
                ]
              },
              {
                "id": "cd5e3678-e80f-4c8c-bfa7-b6237c102707",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2eaef70d-d597-4531-bfdd-70068d5ca49d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c4c75c-9470-452f-b2f1-29a2cdc9399c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b207bfd8-f818-4680-ae73-a882924459c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb3e6cf-5dfd-4b57-a318-af18161ecb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90757d81-3471-48fa-b630-5edae92914dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "398604bf-f927-4450-8bc6-2cab83778d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19cbf44d-4e3d-4b4c-a169-bff0b2756a45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "663a0b60-4e52-40c4-a7be-9ca3b2f9ba76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23c274af-2890-4701-9696-f1200e72131f"
                    }
                  }
                ]
              },
              {
                "id": "6dd045e5-495b-4e63-8b47-c352f97c4a31",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ab3d9bd-84c4-42f8-89e1-2b91f5157e55",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80943f5c-4bae-49c4-96b0-04f68b6f141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c2bf9d2-e8a8-4a0a-8301-7a566aa9dda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da65f8c4-2983-488d-adb4-b80f175bf276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd246155-8ffd-4383-8931-a8a3e3bd3595"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d5e4df3-54ee-474d-b124-26406048d5d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59ac6432-cea4-4abb-ad84-21ae24415174",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "230132ea-9e4d-46ac-9acf-b634cd61daa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e64cf217-ea1e-41f7-93f6-95919b4d26e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c52c33f3-f504-47f3-83fd-3478fd16c2ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13505568-7b40-4480-9bd9-16f422938d9e"
                    }
                  }
                ]
              },
              {
                "id": "451b2eb3-db50-4d6b-9691-792a1668d455",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b277ed99-af79-48c3-b2d4-1c05b6903a24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5fdc244-d89c-4bc6-bcc7-3f007e514304"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69731d96-16a1-44c7-953f-e3bc2efb4e2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd8737a4-0f4b-476e-a133-8a9d9b71c769"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3be0749-20f2-4721-a475-b740c126bd86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "06118769-7a9f-4c55-9639-ead0e804f77e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e95c0e62-a78b-43fb-9b3c-03b41968f507",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee328324-7ba2-4811-880f-4047e958b30c"
            }
          }
        ]
      },
      {
        "id": "ed5c4e9c-26ec-4edf-a716-38d4c507b8ab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ca303140-c0c6-4710-9814-7e9173584c1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b53f350f-e7be-45a2-ab80-fcc5a2815a2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77daea85-0e34-4701-86cc-910a40b355f7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e2f79b-e6c8-484e-a582-f97f9abb6ea0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8581231a-8143-49ab-84b4-b79df4185bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a80fb74-d816-4f16-a48e-db6e5396bd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f8e2db2-c78f-4b82-bffe-d316ffa33b3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb523d2-db2f-43ea-8c4a-6b6a03a8b2a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a8b725f-88e2-41fe-83be-ce3d738367a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a39bf2f-068e-4963-9fd3-373fab095368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "441f111d-da88-45c4-b005-ea82170ffe95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd9e751-18c7-4a95-9aa3-51335146ff17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e671cf2d-0b05-434f-9118-42fa0840862b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a826c060-3aaf-41ec-bc0c-4f606b8393b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74cf422a-ddd6-47bb-9140-11dd00477524"
            }
          }
        ]
      },
      {
        "id": "025d5c22-68a0-42fb-94db-e5d39c28c05c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "017076e2-fcfd-478a-a6c6-6244f9467eb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15bbbd00-da92-4e70-aa22-178c336d7150",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0c3e788-4712-430f-95c0-a59bb4c4b7d2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70087ca7-f5b9-4248-94e8-421d1c5f4e13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f4ba08-27d3-4493-8787-a46872b9b530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41078c5-bff6-44cf-9384-cf7a3345890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "696061a0-9a03-407b-bbed-d871bf8451b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ad1b483-4557-4993-b13b-369edf1d370c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4289037-9bb8-4258-acca-04b643e24101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd43a6ab-982c-439b-a7d5-b90d91f43d26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5579980b-ac62-495a-a1a4-692e4c34bbe9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c3c7dc6-ecb5-43bd-9686-fd310d7e388f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7e6475e-84b8-4483-8ff1-26dfe06e7caa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca940bd7-3262-4046-ab79-29f189c5f26d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c17aec07-4e56-4def-92f2-ecc3aae44ce1"
            }
          }
        ]
      },
      {
        "id": "2ade9f57-9fae-49e8-8865-be1bca26a9ec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2d62b1cd-1ac2-4581-b581-ff6530650aad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b25fb30-c23b-4d9d-839a-c298fad05083",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e81f6c0-4618-4f38-9969-5d9af29c20d9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9fe7f6-15be-4334-bc8b-624dbfd55d40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311902ae-7df0-49a0-8e21-db2d9094b7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a79232-84d7-4d55-b011-208b5ff7fdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1211447a-0427-42f4-a29d-9e3b5905dfaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faf5913d-dd8b-498b-b4e9-70352873c8dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e5d98d8-5886-4cde-a796-3486e0c8d361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a784483-96b2-46df-b0fc-22ec1ef546d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86945cb3-9c94-4870-b82c-1aee7548261b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dff95f71-064c-46ac-97b8-363d6f0211ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32c74fd8-c8b6-4333-b6d4-2729844d5db5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7e19fa9-fb97-4508-9e17-2c8d387358b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c31c1926-9bba-4e38-aa4b-7dae9471fe3f"
            }
          }
        ]
      },
      {
        "id": "be4c45e2-54b0-4b67-9d78-fc420a2b92e0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf5206cc-1416-4d38-bc53-408266cde4f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1700b48e-53a4-400f-b234-9066e69310c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e973355-03d9-451b-859d-c930d4baf157",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcbbb406-ee88-4558-8cd9-45f5ee57e186",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e3c143b-acec-4c2d-9f18-b70ce4878d54",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 355.8380281690141,
      "responseMin": 8,
      "responseMax": 7568,
      "responseSd": 901.5121345243805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695083619007,
      "completed": 1695083734404
    },
    "executions": [
      {
        "id": "a65577b7-150d-45cf-aa5e-c55f20c9254c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c0c5c699-9a5d-452c-b353-1628d4ee2ecb",
          "httpRequestId": "813c13a4-ee2c-4db5-82fe-d45c9552ab46"
        },
        "item": {
          "id": "a65577b7-150d-45cf-aa5e-c55f20c9254c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c33f1fb6-2761-4099-ae9f-4ae013fd7d4b",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "96423655-036d-44cb-8478-1262acbe3705",
        "cursor": {
          "ref": "53484d04-31dd-4288-a0df-ee9af4011362",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9767c0f-9a79-47cc-929e-9a0b29c51bce"
        },
        "item": {
          "id": "96423655-036d-44cb-8478-1262acbe3705",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fa616250-7437-4bfe-b7dd-575c14f1c88f",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "f60f9890-546e-4162-a81a-93e6eebad718",
        "cursor": {
          "ref": "f55e5e6d-039b-4d0d-b355-a29675d950c5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f685eef-d104-445a-afe0-5294513520c7"
        },
        "item": {
          "id": "f60f9890-546e-4162-a81a-93e6eebad718",
          "name": "did_json"
        },
        "response": {
          "id": "77549f24-b65d-4569-a183-a5331380e9bf",
          "status": "OK",
          "code": 200,
          "responseTime": 1689,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24217001-c1fd-4d23-916b-4dda97e2a7e8",
        "cursor": {
          "ref": "2ee721e8-b2d8-4394-b36f-4a01e7134f56",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac6969ac-dd72-4c71-a06c-096a33dd1e04"
        },
        "item": {
          "id": "24217001-c1fd-4d23-916b-4dda97e2a7e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd2b8016-98ba-4935-b3cf-5bd2b064328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24217001-c1fd-4d23-916b-4dda97e2a7e8",
        "cursor": {
          "ref": "2ee721e8-b2d8-4394-b36f-4a01e7134f56",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac6969ac-dd72-4c71-a06c-096a33dd1e04"
        },
        "item": {
          "id": "24217001-c1fd-4d23-916b-4dda97e2a7e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd2b8016-98ba-4935-b3cf-5bd2b064328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cf7791-7cad-437b-b630-f80d8881b716",
        "cursor": {
          "ref": "c5f1aa9c-7aca-4345-bb6f-bc5db2d0e8a0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b26091d4-b6ae-4933-9c51-50287e4e6cc7"
        },
        "item": {
          "id": "c6cf7791-7cad-437b-b630-f80d8881b716",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "678a095d-ee29-4b9c-973d-91f4df130227",
          "status": "Not Found",
          "code": 404,
          "responseTime": 443,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33270e73-dc4a-41af-892f-82f38e23f09f",
        "cursor": {
          "ref": "745947c7-63dd-4d03-9cb0-d2976c327e74",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4462237-13c7-49a5-b325-7bf1039fab5f"
        },
        "item": {
          "id": "33270e73-dc4a-41af-892f-82f38e23f09f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d3f1154a-2f7a-437e-ac73-9f8d89f22728",
          "status": "Not Found",
          "code": 404,
          "responseTime": 293,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd365f2e-e1d3-4a51-881c-0dbc5d2dfbb3",
        "cursor": {
          "ref": "e24cafd6-db8b-476c-9c05-2be003e815e8",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0ba2268f-19a5-47cf-b6a5-0fd8d3841c85"
        },
        "item": {
          "id": "cd365f2e-e1d3-4a51-881c-0dbc5d2dfbb3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "166cc212-7281-4a78-bee9-5bd5fdf4ce1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0cdca4-f374-4fbc-bed3-bbdd3bf87659",
        "cursor": {
          "ref": "ad63697a-cacf-425a-b020-637aff904221",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b6ed2a0e-38ba-4562-b805-30f69d28e0a5"
        },
        "item": {
          "id": "eb0cdca4-f374-4fbc-bed3-bbdd3bf87659",
          "name": "identifiers"
        },
        "response": {
          "id": "ce79fef1-3e81-47c2-99cd-ce211df96a95",
          "status": "OK",
          "code": 200,
          "responseTime": 1420,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfcb47f-f609-43cb-b03f-5c29ae28990b",
        "cursor": {
          "ref": "d22a68ea-e194-43bd-892e-613432ab7595",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a0a50e01-64b5-4380-93c2-c7a6e0194da8"
        },
        "item": {
          "id": "5dfcb47f-f609-43cb-b03f-5c29ae28990b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f73ae82a-d16d-47a1-9985-9068c282ab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4e57c7-14b4-4d2f-af0e-ec2fec2b48e2",
        "cursor": {
          "ref": "251abf1e-4bf3-4881-aee3-4bff8427dc16",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d33caf32-0d89-41ca-b511-fdee2cb2cfcf"
        },
        "item": {
          "id": "4b4e57c7-14b4-4d2f-af0e-ec2fec2b48e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "338d30ca-b45d-4f08-ba7d-a06c1e45304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5ac3a6-d056-4213-bb42-40f7316684f1",
        "cursor": {
          "ref": "e5a67abd-295f-4fe4-9708-2e0a54528e36",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fc89e75b-09e1-4bdc-9b4a-49466677483a"
        },
        "item": {
          "id": "dd5ac3a6-d056-4213-bb42-40f7316684f1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1c347fa6-5f10-4533-a802-2aa26c929970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d3317-5718-47e3-9fd1-2a1a36676197",
        "cursor": {
          "ref": "f1e0a106-c689-433c-907a-d492f90ec57d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d4dfbcd-aeee-4106-b2c2-99ea119ed2b1"
        },
        "item": {
          "id": "b57d3317-5718-47e3-9fd1-2a1a36676197",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "215a48ae-0039-4761-98b0-70911abbb2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ec6dd-517b-4eac-b35f-606cff25feaa",
        "cursor": {
          "ref": "28a1200e-3770-4b30-8afb-4048db7ebdd0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "01b9eed1-9c91-4ea3-98c6-2511cef4982f"
        },
        "item": {
          "id": "c13ec6dd-517b-4eac-b35f-606cff25feaa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f039046-8889-48d7-92f6-be8487ca762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433ce8e1-bc81-4e63-984e-b899a5376a09",
        "cursor": {
          "ref": "c2339c23-2c11-4f37-8f36-f2d711d3c00c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "92accf9c-db3a-4702-b05e-1d1706d35af0"
        },
        "item": {
          "id": "433ce8e1-bc81-4e63-984e-b899a5376a09",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8d11b45e-37a9-4274-8418-02df82a75b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8da353-bdb4-4411-ad1c-4d346d06002d",
        "cursor": {
          "ref": "2c991977-b44b-45a7-b610-a082df208b59",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12a15bd6-6fb6-4a19-b7c0-d3afe90041f0"
        },
        "item": {
          "id": "cc8da353-bdb4-4411-ad1c-4d346d06002d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "61cb2a43-2c5e-4b6d-bfdd-da20df6449dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af017f9b-2a9c-49e5-862a-f706bd84659e",
        "cursor": {
          "ref": "ee9ff146-9fe7-4719-8195-c912c781178f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "79a51b73-6d28-4aa7-b828-7998a34f164d"
        },
        "item": {
          "id": "af017f9b-2a9c-49e5-862a-f706bd84659e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d4fcc4e4-456d-4298-b1e4-0f7729fff3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc954db2-8b7b-4343-8c9c-080a916a88f5",
        "cursor": {
          "ref": "086a1497-8d63-4870-b93b-f63af1b742fe",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86936570-f13a-4405-b1d3-6a91ebe86df5"
        },
        "item": {
          "id": "dc954db2-8b7b-4343-8c9c-080a916a88f5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f0deebd5-c8d0-42bf-80d4-ea1f7bdb9ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75516058-6924-4c05-8632-73b81d6207d9",
        "cursor": {
          "ref": "8c603827-5aff-4e96-bdab-9a5855054c28",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "264ad855-8cf6-4ea9-92fb-435f0eb757fb"
        },
        "item": {
          "id": "75516058-6924-4c05-8632-73b81d6207d9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c96a46a1-e3d8-467c-9d88-6f36ddca3dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b42b65-8e58-4f05-90f0-8295e89ccaae",
        "cursor": {
          "ref": "ccece300-a7a6-4fb6-89d9-32ca493aba44",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7e10697-fb32-4e87-ac0c-48209af7da3c"
        },
        "item": {
          "id": "32b42b65-8e58-4f05-90f0-8295e89ccaae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e7d24f18-a51c-413c-95a3-370fbc095d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d20b01-ddf7-4d2d-9963-15263f2baaca",
        "cursor": {
          "ref": "8397d65d-64c7-42df-a279-1f074a1bfe4e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "30c3ac71-2f2d-4dc7-ac1a-031a482eaae1"
        },
        "item": {
          "id": "41d20b01-ddf7-4d2d-9963-15263f2baaca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1a3a2196-2891-47dd-9281-681433f0f6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc5e192-8cc2-4a53-89ae-d4d452869a08",
        "cursor": {
          "ref": "7f7b108d-abfc-4875-8a49-e061a102ec2e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f7e9d049-da43-4b66-9000-03a146794d43"
        },
        "item": {
          "id": "dfc5e192-8cc2-4a53-89ae-d4d452869a08",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b3fba3dc-f4eb-484b-8494-28c15eb284d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd2dda-4f62-4ab4-b208-abae572dbf80",
        "cursor": {
          "ref": "049ae611-cd21-4bb7-94c8-7fd6567edf5f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "401a20e3-51c9-4f52-bb9d-55305dec74f7"
        },
        "item": {
          "id": "e4dd2dda-4f62-4ab4-b208-abae572dbf80",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26e558be-16b9-4be2-82ce-f3bd3fe94311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dccf4a2-38f8-44c0-b4c1-d0689f8b8c19",
        "cursor": {
          "ref": "5fc3cd2c-e61a-4fc0-9c2b-cebfe6fbfe5c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c6b044f0-a6ef-4703-8a4e-65913478eccc"
        },
        "item": {
          "id": "3dccf4a2-38f8-44c0-b4c1-d0689f8b8c19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "afcc453d-9307-4e10-a768-f44c094de27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e4303d-eb21-4e31-beda-69aa509397e6",
        "cursor": {
          "ref": "582bc518-e4a5-47df-9c92-79486671a1b7",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2cdcdb30-1a23-49a3-9a6c-5e7120e805e1"
        },
        "item": {
          "id": "92e4303d-eb21-4e31-beda-69aa509397e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "587142de-3b8a-4f56-9aab-ebc4499e6f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784d1258-616c-40b7-98de-f1f232b980c4",
        "cursor": {
          "ref": "dc5ec972-f6d9-4687-8fe0-e02907afc20e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6e001f01-194a-4cfe-87f7-3f30b8915406"
        },
        "item": {
          "id": "784d1258-616c-40b7-98de-f1f232b980c4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c825b03a-b498-46ba-9661-1885d47cb3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642d6cbc-3c18-4100-8f6c-1948f46435bc",
        "cursor": {
          "ref": "664e4cc8-3c95-4330-942f-ef6c9af36053",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b13e0dcb-d1ef-4822-aeda-2d9c119fbf67"
        },
        "item": {
          "id": "642d6cbc-3c18-4100-8f6c-1948f46435bc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6326ee96-36ae-41ac-b1b1-15affc742c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a098b1c7-af44-48c7-9914-91a1c2b9ab53",
        "cursor": {
          "ref": "415647d6-e279-4a93-b17f-53238e1ac36f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a571403-2ed6-49da-b61b-90d04876f69f"
        },
        "item": {
          "id": "a098b1c7-af44-48c7-9914-91a1c2b9ab53",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e5fc0e5d-c886-4ee4-8016-5291df34afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cfa9a0-7d43-4921-a7d3-85922926ff57",
        "cursor": {
          "ref": "f224bd91-69ac-44e5-a2e9-177f95077728",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "585ff1c6-717c-49fe-aba8-5112d5fd0b8f"
        },
        "item": {
          "id": "31cfa9a0-7d43-4921-a7d3-85922926ff57",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9b0bbf72-73fa-483f-98a8-6d27ab682229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4584932d-1652-4baa-812e-987d2ee07814",
        "cursor": {
          "ref": "0648251b-3774-47a3-86a7-192d1608dafe",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5a461b4c-ed53-46b9-aecd-7f1daec9d306"
        },
        "item": {
          "id": "4584932d-1652-4baa-812e-987d2ee07814",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7641ce57-ceb7-4c6d-99cd-4472029f8419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac56a3fe-4042-49a5-b56b-d507bcc21eec",
        "cursor": {
          "ref": "cdfe8eec-25f8-4efd-ab21-61f4e4d89326",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3ce53e7d-9ce5-40a5-aff4-f7ea328e4531"
        },
        "item": {
          "id": "ac56a3fe-4042-49a5-b56b-d507bcc21eec",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ceebf33e-9306-451f-8af9-a3f20efa476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ceaa8-30ed-40f8-bd8f-6834e8dd164a",
        "cursor": {
          "ref": "0001ba95-ebd4-4364-966d-f4c347c11376",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b92031e2-76b9-4477-a755-ae6e8f6c826c"
        },
        "item": {
          "id": "2b4ceaa8-30ed-40f8-bd8f-6834e8dd164a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "420ad49a-1edb-4f41-96a0-1ef7c71e7260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0442e-d586-4c7b-953a-440b1df0998a",
        "cursor": {
          "ref": "40044e23-8b96-44d1-b38f-6aef4ca08fd5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "11463ad3-9051-481a-a49c-703abaa4be3b"
        },
        "item": {
          "id": "0cd0442e-d586-4c7b-953a-440b1df0998a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f6081fc-c519-4172-ab33-7d56f26cb2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972183ea-df69-49ff-ba6f-d5f675b995f7",
        "cursor": {
          "ref": "7e90a424-82a6-4ead-b473-aa7269d84437",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a8a05f69-cef2-439f-b75e-5b0e2cf23c15"
        },
        "item": {
          "id": "972183ea-df69-49ff-ba6f-d5f675b995f7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ad0bc985-19ff-4eac-973f-dbb1a5814d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5dde11-3960-4565-8375-4e8b81dfe6bf",
        "cursor": {
          "ref": "4572eaa6-54bc-4588-8ba4-7717c6130ce8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f170f37c-a5af-4aea-b926-9f728e193abd"
        },
        "item": {
          "id": "aa5dde11-3960-4565-8375-4e8b81dfe6bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c1d5d032-a143-4e31-b339-5c1b59690882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0218e5f-f11b-4c01-b3e1-1d9d4108d31f",
        "cursor": {
          "ref": "4191112f-d538-43b6-bbf7-b9653447a36e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "782c1b6f-acb2-4c74-a7e3-24c5af011dcc"
        },
        "item": {
          "id": "d0218e5f-f11b-4c01-b3e1-1d9d4108d31f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "abb6674e-6db1-4c35-a365-66eb94167e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800caf83-8c44-4d26-896d-b66390b042e2",
        "cursor": {
          "ref": "4feb710b-43e3-4dda-9d25-8f3ff239a1ee",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5e8c8448-f3fc-40e8-b261-d79d4efd3099"
        },
        "item": {
          "id": "800caf83-8c44-4d26-896d-b66390b042e2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4f1e08bd-dfec-49cd-94b8-d0504866cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f94711-0a19-421a-85a8-4370d686d8e6",
        "cursor": {
          "ref": "600f7a0e-0c8f-471c-bbbd-2d4062c59d02",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6ea723bf-19f7-4835-a3f4-da7df524b8f1"
        },
        "item": {
          "id": "a1f94711-0a19-421a-85a8-4370d686d8e6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bd16c67c-47a5-49eb-9650-71f3425bb6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9edfb73-c4e6-44a2-98e7-bdb4e14c6fd1",
        "cursor": {
          "ref": "f9b0b9e5-53e0-4776-8172-ce27f766c998",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b216c203-dede-44b3-82a3-26928a5dd132"
        },
        "item": {
          "id": "e9edfb73-c4e6-44a2-98e7-bdb4e14c6fd1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "50e118b6-94d1-4790-82f8-296716fc5803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eb143c-db5e-4cb2-b7d2-1c8198fbabc7",
        "cursor": {
          "ref": "cb78444d-c4f6-4a39-a041-a22420c4657d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "34fa608d-c6b3-45f1-8132-4dc05d332834"
        },
        "item": {
          "id": "f2eb143c-db5e-4cb2-b7d2-1c8198fbabc7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e93b4448-cb08-4528-96cc-c4eb6db09507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a963fd7-8f65-429d-bc09-05974f975a54",
        "cursor": {
          "ref": "08e7fc6c-8252-4dc5-850c-bd6322f52419",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a314b887-af34-4d70-b0d0-6729df77e1aa"
        },
        "item": {
          "id": "0a963fd7-8f65-429d-bc09-05974f975a54",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31ea018c-bf29-4417-a971-9e70677fe580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77afe0b4-e505-49ce-a688-f829ac7cbbe8",
        "cursor": {
          "ref": "53e71cce-3aa6-4aac-9776-4572f4bfe895",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e2b1b38f-8de2-45b1-a3ea-84cf3c8c1178"
        },
        "item": {
          "id": "77afe0b4-e505-49ce-a688-f829ac7cbbe8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2ca186d0-1ef3-4195-adf4-ff3d61f07d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bee541-63ec-45ea-8a29-f7f996ed72cc",
        "cursor": {
          "ref": "5e8159ff-d567-4b4a-87e6-027b09f3ca7d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d0261c05-8361-464b-95c6-b0b64f1a393f"
        },
        "item": {
          "id": "b8bee541-63ec-45ea-8a29-f7f996ed72cc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c1571c15-9402-4a51-a277-4aa59b6d5ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505d4148-3786-4f76-865a-24ae97ee7f2f",
        "cursor": {
          "ref": "d1986753-0241-4119-a081-fdeb46236182",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b751b7b1-908d-47e5-9c81-61a5997b8564"
        },
        "item": {
          "id": "505d4148-3786-4f76-865a-24ae97ee7f2f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "463a4e0e-ecda-4ca8-a0b2-55357114e9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f56c3-589e-4792-b69d-c2ee1e0bbcfe",
        "cursor": {
          "ref": "75ee67d4-9387-43e1-9ac7-8cb0d97ce329",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1e936e99-5834-4dca-accb-14caf6dd3d23"
        },
        "item": {
          "id": "1d6f56c3-589e-4792-b69d-c2ee1e0bbcfe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab5aacbe-dfbc-45aa-a917-613b789d10e9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 667,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edcc002-7e64-40e6-ab4a-9765b700dd81",
        "cursor": {
          "ref": "39bcfa54-9147-496b-aa94-261ca85c5b0d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9642515c-25b4-4c25-bcb0-cd6f8474dbaa"
        },
        "item": {
          "id": "7edcc002-7e64-40e6-ab4a-9765b700dd81",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f31fe68a-7722-4658-b68c-dd01adbc17ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4a5768-b6b3-4d3b-abb3-c94592203c7a",
        "cursor": {
          "ref": "c12d62f2-c680-4d6d-bd4a-3ebeffdc01ac",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9e1b5206-11fd-4bf6-a841-7ce4d55853fe"
        },
        "item": {
          "id": "8f4a5768-b6b3-4d3b-abb3-c94592203c7a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c7546722-7c10-4bf7-86a3-368d3fcd27ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d983cbf-ebdb-4152-8ef8-58eee87251d4",
        "cursor": {
          "ref": "9138f69d-d904-4d2e-9d6a-13e74c93b6d6",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f810ac84-4c85-4405-8a13-aceac53c2e5e"
        },
        "item": {
          "id": "6d983cbf-ebdb-4152-8ef8-58eee87251d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9c02a69-6c77-4a1f-a2fd-b9be34a7ddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c0c03b-26b0-4aa0-b364-dfc5f4c74898",
        "cursor": {
          "ref": "b7dd8c40-81d6-4233-b855-77daf7ccd77f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e1cf49f6-0674-4f0c-952d-7f4bac346aec"
        },
        "item": {
          "id": "f5c0c03b-26b0-4aa0-b364-dfc5f4c74898",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7b67d71f-8b1d-4f06-9182-11aa8fd21291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f563f29d-427f-42af-ae17-74ade9d9a04c",
        "cursor": {
          "ref": "6c9a862a-b6c0-4894-8ec4-0cd43684fbb6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fbc70432-384d-43c0-bca5-c4d1b1ddc219"
        },
        "item": {
          "id": "f563f29d-427f-42af-ae17-74ade9d9a04c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "57ef1755-4f06-4a25-a9cd-f7bc72844ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f8ad98-562b-441a-985b-342a60ad70c2",
        "cursor": {
          "ref": "cde40884-fad6-49b4-b268-92681b07742b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cbaafdd1-fed6-4e52-941c-0b0b26486480"
        },
        "item": {
          "id": "61f8ad98-562b-441a-985b-342a60ad70c2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b6b08b8d-64fe-44f1-8866-b9e38fcf6165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861caab5-bf5b-4056-a06c-40c35414cb6b",
        "cursor": {
          "ref": "74eca68f-f1ce-4870-b022-aa173576bd4e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d9b30461-5f70-4655-bd32-ffd24fc24c39"
        },
        "item": {
          "id": "861caab5-bf5b-4056-a06c-40c35414cb6b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3a0fb06-c212-44e2-8464-683c9f25e7a9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 628,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618e9f7b-fd80-44fa-9fe2-6d0d7fa39d40",
        "cursor": {
          "ref": "39861e81-47fb-4c43-9f74-293df6017dc7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "230fce6a-dcea-4e41-8e80-8e8e85dcf558"
        },
        "item": {
          "id": "618e9f7b-fd80-44fa-9fe2-6d0d7fa39d40",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7d18f4f8-8820-493b-886f-8b8679056e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a97f5-8e1a-4684-bae4-d89013e7944f",
        "cursor": {
          "ref": "4c3986ff-eabc-4820-ad85-3c74ac4854e8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6fad0ade-8be6-4f38-a84b-8d417a05d6a5"
        },
        "item": {
          "id": "e56a97f5-8e1a-4684-bae4-d89013e7944f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4dff337a-268d-48da-8488-b77e914f28e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70486940-fcb5-47c3-8ec6-62a9229513c3",
        "cursor": {
          "ref": "9d05d433-f22c-4681-8d95-372ccee7238e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "77510407-013e-461a-8419-2eb48799723f"
        },
        "item": {
          "id": "70486940-fcb5-47c3-8ec6-62a9229513c3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b971d1e4-9432-43d4-aa89-9dfb1b9eed2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90574ba-d1a1-43ba-919a-83e8ad173061",
        "cursor": {
          "ref": "29866f1f-9efb-4c8f-aea9-b7994ec8e61c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eeadf0e7-dae1-4ae8-bda6-202d7aa93ba3"
        },
        "item": {
          "id": "f90574ba-d1a1-43ba-919a-83e8ad173061",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "434c182d-eb98-48b1-a654-c44ecd254b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4488d0-5703-46bd-8b37-aab1e8107371",
        "cursor": {
          "ref": "2312df8c-d0ef-496d-8883-ac04effc680c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eb39a19a-736f-4b07-8f6e-e4879ce13b64"
        },
        "item": {
          "id": "4f4488d0-5703-46bd-8b37-aab1e8107371",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ce03fc3e-868d-4ba2-8e22-ed558dc20969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27840d52-0cc7-4d57-b718-d403c9ae61b8",
        "cursor": {
          "ref": "5bbaf7c6-e670-44f4-960d-2edceb015e80",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2368c894-5341-40e3-a2ce-27b3f29ba316"
        },
        "item": {
          "id": "27840d52-0cc7-4d57-b718-d403c9ae61b8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "75442fd5-3df3-4a2e-99d7-61d973c046c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34da4ac7-c216-4d45-934b-f84207244c1c",
        "cursor": {
          "ref": "a172de0f-928b-425b-af79-ff9e7dc0f22f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c451bf7a-6f0b-49a5-8bcd-e86cc2ca99dc"
        },
        "item": {
          "id": "34da4ac7-c216-4d45-934b-f84207244c1c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6ad82bc6-7141-4624-a99c-c2369a6ec715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3b6d2-731a-4e09-95f5-21cb086ce7e5",
        "cursor": {
          "ref": "ec132e6c-2462-4233-a164-554920375014",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "220132a4-de70-4b1d-8b37-eb5f332f985f"
        },
        "item": {
          "id": "63d3b6d2-731a-4e09-95f5-21cb086ce7e5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f8c5137f-915f-40a4-bb95-8e14197b460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bcfb7d-e5e2-4f0e-a667-0ce66f5059bf",
        "cursor": {
          "ref": "e7dd8d16-2ba4-4573-828b-78b7da399b22",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dc5075cd-519a-499e-a082-437602749e02"
        },
        "item": {
          "id": "a6bcfb7d-e5e2-4f0e-a667-0ce66f5059bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d87ac34-d5a3-4576-a30f-7c949c55674a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636fad9a-74bb-4390-86b8-1d5c3fc7ef47",
        "cursor": {
          "ref": "4c4a544c-a96e-4d3e-8e47-ecf9e97ed34e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "09bbf874-c861-442f-9393-af13733815ec"
        },
        "item": {
          "id": "636fad9a-74bb-4390-86b8-1d5c3fc7ef47",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d5b3aee3-ca51-4a99-ba8e-e87f044b32dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4de3c2-6314-47e3-b252-255876402edd",
        "cursor": {
          "ref": "cf11b84a-e85c-4a16-8479-03b3f23b7bd0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e1b3bd5a-32be-4645-b298-fc347f2ce4a4"
        },
        "item": {
          "id": "aa4de3c2-6314-47e3-b252-255876402edd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b13c37eb-e409-4528-9d55-0844f478b38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eec02a-4a7b-49e7-8c05-26bdcb003668",
        "cursor": {
          "ref": "20fd7f58-e732-4d7f-88e0-42a9f89ad547",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "016452ef-582f-4354-acf7-41834a82ebb5"
        },
        "item": {
          "id": "c9eec02a-4a7b-49e7-8c05-26bdcb003668",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da8acc57-47a3-4676-84b7-209e040bf7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e982de6-3f99-4876-ab30-e89ef1fa3bda",
        "cursor": {
          "ref": "1c49d38d-3882-4edb-9f8f-f0a99616001e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "223c2ebc-7239-438a-a6b9-0db7b795ed82"
        },
        "item": {
          "id": "7e982de6-3f99-4876-ab30-e89ef1fa3bda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cefaf123-0e37-4844-bfac-45f180136e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93476f07-630b-4f10-b74d-8ae5e0ffed08",
        "cursor": {
          "ref": "8a256228-64c3-49bd-8a6d-7245c46bb44d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b2a6290-800c-4324-b9d4-d26f4605ee7c"
        },
        "item": {
          "id": "93476f07-630b-4f10-b74d-8ae5e0ffed08",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dd7ccc04-b18d-4d73-8cf7-80f8c647cb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f66c506-95ef-4e37-b55a-28beeb19d813",
        "cursor": {
          "ref": "b5b1bd70-3137-40a5-8e16-6a8c4988fab1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "515be406-dcd4-4849-883d-5ed718612f97"
        },
        "item": {
          "id": "3f66c506-95ef-4e37-b55a-28beeb19d813",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "87832681-52cd-4a87-8664-62215ed8f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2580eca2-0a08-467a-8753-760e02042a3f",
        "cursor": {
          "ref": "55666f17-996a-42d2-bf8b-9bf41949f40c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1273369f-c637-4495-bcfc-526b6b501741"
        },
        "item": {
          "id": "2580eca2-0a08-467a-8753-760e02042a3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1fa12159-8660-4c6a-9e3e-4edc4a651a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37ac408-0dcb-4852-9fce-2d3b88c467ea",
        "cursor": {
          "ref": "5885dd62-cc15-4067-a002-3ccb54879b93",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bdd104c3-b8b2-4559-a87c-10b6e727f7e5"
        },
        "item": {
          "id": "c37ac408-0dcb-4852-9fce-2d3b88c467ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da39d8be-3b86-4997-9b70-ec307345e4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bba0cae-dc53-4e83-9a41-5d2858404340",
        "cursor": {
          "ref": "8cff3046-5a1e-4250-8857-3171fc98a07c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f13ecc11-7f90-427e-b99d-31231f163f18"
        },
        "item": {
          "id": "6bba0cae-dc53-4e83-9a41-5d2858404340",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "707e1216-6019-4dbe-9727-fbc3f4ed07d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861958c4-56d3-4216-859d-bfb891da0dd2",
        "cursor": {
          "ref": "702b06a1-5e93-443e-89a5-132315225897",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d203d9fe-b332-4d85-ab6b-b4b355bb0443"
        },
        "item": {
          "id": "861958c4-56d3-4216-859d-bfb891da0dd2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "144e7186-02e1-4070-bda6-9158ed765800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1767194-05d9-4a57-b67c-d05c1d7f66dd",
        "cursor": {
          "ref": "153723c4-6465-486c-846e-3e9c5d00e373",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d188f023-7517-47db-a59b-09583a411fc7"
        },
        "item": {
          "id": "e1767194-05d9-4a57-b67c-d05c1d7f66dd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "202341b2-7915-4b77-9eab-c510de329dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef96311-e669-43ca-b0ad-cb3d92cf9957",
        "cursor": {
          "ref": "3da24033-8111-484a-9bf4-7a317bdb9795",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "04eaaced-f84c-4c83-8242-236c125ce617"
        },
        "item": {
          "id": "5ef96311-e669-43ca-b0ad-cb3d92cf9957",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3f08afb7-6b15-482a-a7a5-dd842b42acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d25802-ff35-4921-ae15-392a0e5be51d",
        "cursor": {
          "ref": "991b5cb6-9ee1-4ca7-806b-f57b02ae1d3a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6ed895b7-65f5-4359-9f64-a71634031b77"
        },
        "item": {
          "id": "59d25802-ff35-4921-ae15-392a0e5be51d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42b8679b-2937-4e76-a532-a6617ac6e0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1080d8e5-914e-48f6-bed3-f06c39abbb71",
        "cursor": {
          "ref": "9b27aff0-c0d0-475d-912f-f1486207b7aa",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9bbd8aa1-baa8-4562-bb6b-7e600151b738"
        },
        "item": {
          "id": "1080d8e5-914e-48f6-bed3-f06c39abbb71",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9a5e26a2-1f37-46a4-b9cb-2aabeac2617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a614f1-ac61-4e17-a8e3-de14f8db295e",
        "cursor": {
          "ref": "a57affe7-e657-4d1a-b7ff-ee8532f90a25",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6774c10-7b33-4098-bd94-29e8b4602cdc"
        },
        "item": {
          "id": "65a614f1-ac61-4e17-a8e3-de14f8db295e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a2740d30-01fc-46be-83cd-7bf6e699bbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe1c3d6-c999-4636-8349-08b8dfcde956",
        "cursor": {
          "ref": "f8e5ed20-9115-4305-a3b4-36dc183c995c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e85fc55f-62ec-4fcb-a3a7-28f66e6ed401"
        },
        "item": {
          "id": "bbe1c3d6-c999-4636-8349-08b8dfcde956",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "079e1cf5-c40c-45fe-9bfb-ebf63b2d799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69faf3c7-afb2-481d-8699-75aa871b0767",
        "cursor": {
          "ref": "ba28e867-8258-44f5-b358-736537a4dac7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "49b5fa7d-0510-4842-8951-3e9541aa6b1e"
        },
        "item": {
          "id": "69faf3c7-afb2-481d-8699-75aa871b0767",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "592c2bd1-31da-4457-a936-4c5cc13c0cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf0732-6cf2-4099-babd-04c387b5afdd",
        "cursor": {
          "ref": "89df34e0-d213-4d66-935e-c3cade09ff2a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8f582d9d-45f3-4484-bf7f-f5fd41420217"
        },
        "item": {
          "id": "65bf0732-6cf2-4099-babd-04c387b5afdd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a620d650-f7fb-437e-a561-d5c6de242787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be552c01-653b-4121-94ce-d28fef85da2e",
        "cursor": {
          "ref": "db711339-ac8f-4e32-84c0-af26e3a7e47c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b9a8b49f-ea47-4c66-b084-e8fd6b01bf75"
        },
        "item": {
          "id": "be552c01-653b-4121-94ce-d28fef85da2e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "38368dee-1e2e-43e3-b996-d9f1107bd6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5f6e9f-db79-4571-b8a6-1ddebbc1ba71",
        "cursor": {
          "ref": "399be696-b3c0-4847-86f9-a4ce3349ed90",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5ca1df27-9de2-4d18-9687-3cf9f12cc06e"
        },
        "item": {
          "id": "fd5f6e9f-db79-4571-b8a6-1ddebbc1ba71",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "100bb463-ba59-4b59-8883-11e29c318927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a406c1f-4c16-4f6b-bf90-fe4f49e3229e",
        "cursor": {
          "ref": "f55f0d1b-7189-4b5a-9396-46d9c520025e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a61755e4-79fe-4602-9380-84fbe0c32a79"
        },
        "item": {
          "id": "1a406c1f-4c16-4f6b-bf90-fe4f49e3229e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3cb9dc95-06ab-4ca4-9b09-2c65262ecd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264f4afa-c466-4cb4-bb5e-85f993e6373a",
        "cursor": {
          "ref": "7f250429-c57f-44b1-82b7-a8ea73d8d966",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0f90c5a5-3a7a-4bdc-8273-4864a2db4469"
        },
        "item": {
          "id": "264f4afa-c466-4cb4-bb5e-85f993e6373a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91c1a979-7d73-4c80-b86b-0e6a38453f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff4a3ac-fd78-4344-8dfa-0275921dba0a",
        "cursor": {
          "ref": "8d5b83a5-d72b-4358-be19-f463480e0eca",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "addafb77-b150-4d3b-bd11-b1ee2db6b353"
        },
        "item": {
          "id": "9ff4a3ac-fd78-4344-8dfa-0275921dba0a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5fbc8db3-955b-42d2-8383-92d804c00ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574a58f-aa30-478c-bbc5-13e619c1bfe1",
        "cursor": {
          "ref": "46892d6d-31f3-45e7-a863-62e97e56725c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "59d5567d-dc79-43d6-8c4d-0d2025336b90"
        },
        "item": {
          "id": "e574a58f-aa30-478c-bbc5-13e619c1bfe1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1f4b8310-79ef-4d5b-8784-e0f067dd7573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729488e-028c-4d45-a387-b9f94ab21da9",
        "cursor": {
          "ref": "b5210b1a-a184-475c-ba85-45fadaf1c716",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fda81c65-e133-4445-9479-3f24bb76b1d7"
        },
        "item": {
          "id": "9729488e-028c-4d45-a387-b9f94ab21da9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "497de2a6-e7fd-4cb0-a141-ec7d1dea88a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3a4be5-c63d-453a-aee7-c1494eb3b500",
        "cursor": {
          "ref": "58ea0920-807f-4478-8478-9c3948bb8b2c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a265c7d2-46d3-4212-9e7c-b3c2804a9cbc"
        },
        "item": {
          "id": "0b3a4be5-c63d-453a-aee7-c1494eb3b500",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de77cad9-5326-458d-be02-4cdd0ac1e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cb47bb-3195-4eb9-b6c4-5beaf498821c",
        "cursor": {
          "ref": "28f660fe-b302-4e44-a02c-1f0b341c0a92",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f5d674bf-613c-420a-b19c-8a08a3fc8b19"
        },
        "item": {
          "id": "04cb47bb-3195-4eb9-b6c4-5beaf498821c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "960d2e43-0f6c-49c6-a22a-35e613d713a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6cfcd6-7314-4fa6-b83e-9642124f7ca7",
        "cursor": {
          "ref": "e423db34-ebe2-45a8-a347-c7a3239ec6cf",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bc0d1411-8794-4dd7-b7d8-618abeca19db"
        },
        "item": {
          "id": "7c6cfcd6-7314-4fa6-b83e-9642124f7ca7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce67dd5a-003d-4703-8db7-08bd7b61c271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33ce14-1162-43f5-a980-416e87050956",
        "cursor": {
          "ref": "faaf6b92-6b3b-4e4b-8d56-5b55df61b644",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2fd7a234-a49f-4a35-be1f-a112c0196a23"
        },
        "item": {
          "id": "7e33ce14-1162-43f5-a980-416e87050956",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d90b8361-2896-417b-9407-a2370f8a28af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a5e20b-927b-4ab0-addc-ad970a18d1cd",
        "cursor": {
          "ref": "a3728eaa-c497-4c95-857f-f82845d5b04c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6a873a4-fd0e-4a7c-ad73-1fcb06ae0a93"
        },
        "item": {
          "id": "d0a5e20b-927b-4ab0-addc-ad970a18d1cd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3024f27b-eb84-4346-a443-43279a7734ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c9d27-4813-4ed3-abe3-4b2efbbb6ed7",
        "cursor": {
          "ref": "e92b8c24-2b56-4f51-9c6d-b696f2395212",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "04e1d3d2-48cc-4de3-8069-40fc713f057c"
        },
        "item": {
          "id": "f19c9d27-4813-4ed3-abe3-4b2efbbb6ed7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c956b975-df86-4f1d-9a10-14bfe696e60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42909f1-c6ec-4c3e-8cd8-7e5b0f2ef6d9",
        "cursor": {
          "ref": "6a567ff0-193b-4a5c-9bc5-1358c7735205",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "402d4b39-7820-4785-ad42-44432f1ebbcd"
        },
        "item": {
          "id": "d42909f1-c6ec-4c3e-8cd8-7e5b0f2ef6d9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "07d29eef-f98b-4396-8cf5-c4cd379fd3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab4c44e-9bf8-4cee-895d-54d442e82f8b",
        "cursor": {
          "ref": "fd247d29-3eca-4190-b1e1-71594562c458",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2fb6b776-238c-4436-83cb-96241e589893"
        },
        "item": {
          "id": "7ab4c44e-9bf8-4cee-895d-54d442e82f8b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "536b8235-6ba5-48f0-97dc-95e7580798af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19447ca5-f1b7-4c6d-87d2-9a80417e22d9",
        "cursor": {
          "ref": "153f6083-d697-471e-aba2-784dc44ff5db",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df7dc97d-0cf5-40a2-87b9-f315d4e87d8a"
        },
        "item": {
          "id": "19447ca5-f1b7-4c6d-87d2-9a80417e22d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d04148d-27bb-47ea-9818-c2153471dd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee83c1c-df8d-4918-a52d-55397f8881cb",
        "cursor": {
          "ref": "6c253487-a0c3-4509-a48c-3e8e8ff82750",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0cbc7234-6692-4e7c-a269-70bb6ee229ca"
        },
        "item": {
          "id": "eee83c1c-df8d-4918-a52d-55397f8881cb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "164907c9-b699-4b84-9a4d-e135dc6c7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e5c8e1-830a-4140-bfcc-d63cc9a7d462",
        "cursor": {
          "ref": "d1c975e5-f915-4194-9205-30712b03804a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ffe8435d-1c37-4d18-b1ba-932534d9462c"
        },
        "item": {
          "id": "74e5c8e1-830a-4140-bfcc-d63cc9a7d462",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dcb30a26-3a4a-451b-92c3-0eee2ec486fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb2453e-f5f8-4b19-b384-2c5e5f876334",
        "cursor": {
          "ref": "ec2288d6-2bbb-47e4-b4b7-819d60c3c2f8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a4976cfa-4d27-4bed-bcab-64ae294aaa2c"
        },
        "item": {
          "id": "7eb2453e-f5f8-4b19-b384-2c5e5f876334",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "35afe27f-630c-4a09-b000-7fa98d9eb6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc17d47-d8c9-40c5-b4e5-e5482ec38075",
        "cursor": {
          "ref": "2d8dcbc5-d60a-4ecd-92a6-3c1f75dc5a7f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e1e6fd8-fe2c-4fd8-a11e-c0b275e70f50"
        },
        "item": {
          "id": "adc17d47-d8c9-40c5-b4e5-e5482ec38075",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "096a3df5-470f-402d-9adb-9d00039246d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1878b51f-6df3-481a-a135-030e70a104db",
        "cursor": {
          "ref": "c4a97f0c-c859-4e54-bff0-f94bbfbc0483",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6ea2e3d0-ebf8-41ca-9eee-ef5a790f5927"
        },
        "item": {
          "id": "1878b51f-6df3-481a-a135-030e70a104db",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "83a3dbad-cccd-40c4-9e6a-e5854f30dd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e231c9-a492-4ebc-89df-b09b2fd15c70",
        "cursor": {
          "ref": "8d7c3c23-d3ab-4ac8-a83d-06d79ce8a572",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "faf5d54e-75c6-479a-b707-a21bc0ed1670"
        },
        "item": {
          "id": "64e231c9-a492-4ebc-89df-b09b2fd15c70",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4ba285e9-97b2-4045-9a9a-4c1459409356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aa166e-1d8d-415e-b1b4-03054a3a0482",
        "cursor": {
          "ref": "62755fa4-f9cd-46cd-8221-9e2cde5fd3fa",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "00a3de24-ad03-406f-a55a-b16a0d690178"
        },
        "item": {
          "id": "f8aa166e-1d8d-415e-b1b4-03054a3a0482",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e35271c0-674c-46b8-86d5-88ef3a6cf154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e58a2f-db86-4fe9-ad12-379c491c6175",
        "cursor": {
          "ref": "1e63a826-94e2-49a0-aadf-8620f45867e3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "56a613a1-2d90-49a8-86e3-e2b0470a6dcd"
        },
        "item": {
          "id": "49e58a2f-db86-4fe9-ad12-379c491c6175",
          "name": "credentials_issue"
        },
        "response": {
          "id": "126738de-0bb9-485d-af33-109756f55ba1",
          "status": "Created",
          "code": 201,
          "responseTime": 7274,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83689ef-54cd-42b6-888a-2f51e7ada983",
        "cursor": {
          "ref": "bb0c0d66-10da-42a1-bce1-0052a03c587b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62536fb4-cadb-42c3-974d-871eea0618ed"
        },
        "item": {
          "id": "d83689ef-54cd-42b6-888a-2f51e7ada983",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e00c328a-2f17-4f80-9ee0-7a8ab82ca524",
          "status": "Created",
          "code": 201,
          "responseTime": 7568,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cd5391-69af-41c3-a2bd-54bd97aad8ff",
        "cursor": {
          "ref": "0ae3ad94-fc10-42f4-8af1-46d0503f1e8f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "104c731b-0f15-4ab6-aa13-9f331faf4637"
        },
        "item": {
          "id": "75cd5391-69af-41c3-a2bd-54bd97aad8ff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8f7ebc75-99cb-440c-8ed7-2ad8ebbac458",
          "status": "Created",
          "code": 201,
          "responseTime": 6545,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ebe9e1-b709-46ce-867f-8fa4f2659363",
        "cursor": {
          "ref": "fe504b38-6c8c-467c-a7db-ac23e7fc1aaf",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b80e9fdf-4fb7-417d-b720-aed913df910f"
        },
        "item": {
          "id": "02ebe9e1-b709-46ce-867f-8fa4f2659363",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "77007361-7d49-49c6-b714-b10e25e51a74",
          "status": "Created",
          "code": 201,
          "responseTime": 6597,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09c3a9e-8f9e-45bc-a39b-12ae343dc612",
        "cursor": {
          "ref": "1a735ffa-db58-43e0-b2a7-5caa4203ffc6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b7e1eb0-e755-40a2-a2f1-ae5346533b7a"
        },
        "item": {
          "id": "d09c3a9e-8f9e-45bc-a39b-12ae343dc612",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1da29daa-c91d-45ea-85cc-ff47858932b3",
          "status": "Created",
          "code": 201,
          "responseTime": 6512,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabe39a8-b347-490a-97ba-ca160a60e0a1",
        "cursor": {
          "ref": "31b326cb-b410-4635-8c42-355c4aca23bf",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9ee6cda1-73ed-4079-9dd6-c91bd1521a4b"
        },
        "item": {
          "id": "dabe39a8-b347-490a-97ba-ca160a60e0a1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6e801af5-2ab4-42ab-8171-f5187a9d33d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6d57360e-e906-4029-a641-850a638e64b6",
        "cursor": {
          "ref": "37b3ae98-b0b6-4def-9e15-869e8c0f6239",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "81f08468-02d0-46d5-970d-4c0185526a16"
        },
        "item": {
          "id": "6d57360e-e906-4029-a641-850a638e64b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93505b94-2244-417b-891f-67ccd16101b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160c4a2d-961f-4997-bb0c-6ac15ae7edd3",
        "cursor": {
          "ref": "0454d275-67dd-40bd-a653-f4d8809beff0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "242508a4-f4dc-41f5-b0f2-4c10928ea7c4"
        },
        "item": {
          "id": "160c4a2d-961f-4997-bb0c-6ac15ae7edd3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f791feeb-c940-4fb1-9b2a-5693d9d738fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0350ad89-6c8f-48fa-adfc-6f7d2eb86fa4",
        "cursor": {
          "ref": "ae051bea-357b-4949-9198-d2160725f29e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1e95af4e-60d2-4f24-85bc-ba261733e229"
        },
        "item": {
          "id": "0350ad89-6c8f-48fa-adfc-6f7d2eb86fa4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06efe061-e5cb-40ff-8e55-57a3623476c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36125b6-e65b-4df6-a251-f10138004d74",
        "cursor": {
          "ref": "89051cc8-0873-4c24-9b9b-4c0176cf8fc1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "613de112-cdd5-435b-9b0c-e611aa8ff95d"
        },
        "item": {
          "id": "f36125b6-e65b-4df6-a251-f10138004d74",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "287d33ef-0abd-471a-a784-4d5ac776e538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3a7718-1c1e-4685-bcff-16ac901798e3",
        "cursor": {
          "ref": "e8e868f9-c6c0-4e85-b55b-40545851d71d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cea585bd-a742-4e43-bed1-a61380b1b1bf"
        },
        "item": {
          "id": "df3a7718-1c1e-4685-bcff-16ac901798e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd86ce5e-7694-4ceb-bc20-8a1a09f51870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44280b10-d063-4560-92fb-fe48045ac75b",
        "cursor": {
          "ref": "a05a992d-925c-4341-b48d-b6ded982c6b7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d967ccfc-9adc-4c1a-a245-82dc2183043d"
        },
        "item": {
          "id": "44280b10-d063-4560-92fb-fe48045ac75b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3a7cac0e-1119-4a9c-ae56-44fbb9922a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82548081-adaa-4ddf-a3fb-851b3db7fa20",
        "cursor": {
          "ref": "cb549983-98c9-4238-95a5-5a20e1079ffd",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e231ecf-e00a-493e-886c-a057bbddfedc"
        },
        "item": {
          "id": "82548081-adaa-4ddf-a3fb-851b3db7fa20",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fa1ae78a-c726-4fb3-9cec-b3333db132bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe3011c-cd1a-4e05-9765-a0e720d10a11",
        "cursor": {
          "ref": "8bed3351-27e9-49cd-80a5-47fd2fae5ab1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f6ebdc6e-5b33-427a-9011-31ad7cc9c2ce"
        },
        "item": {
          "id": "9fe3011c-cd1a-4e05-9765-a0e720d10a11",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "44930987-6788-4759-ad83-b8b1f3b1dfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4d5730-6a4a-4f0d-bdba-61b9f12c42ce",
        "cursor": {
          "ref": "9e360ba0-a18c-4dac-8f23-c54832a8d69b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1ec9e484-3830-452d-9ee5-4bc780ce4530"
        },
        "item": {
          "id": "1d4d5730-6a4a-4f0d-bdba-61b9f12c42ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b23fe2f0-c982-4422-ad4b-158d17a6cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee68f84c-5e6c-4f5e-8967-910094f1a33c",
        "cursor": {
          "ref": "d3862522-b3de-473e-be12-41148b200ab5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c0fa6300-cfdf-4ffe-96e0-bf5a2b2d77a4"
        },
        "item": {
          "id": "ee68f84c-5e6c-4f5e-8967-910094f1a33c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01577bbb-8dc2-4f23-b522-f876940cc10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8406b36-7d9a-49e4-9ff8-f53e56bd8493",
        "cursor": {
          "ref": "103c0c06-e36e-410c-961c-8bd8f714bd78",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db9aff28-80d3-4681-acd4-8765c621cdd9"
        },
        "item": {
          "id": "b8406b36-7d9a-49e4-9ff8-f53e56bd8493",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce127ade-e442-4b6e-8500-1a7730fdcca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb23284-d338-411d-9dc5-6f2c45ffb2f5",
        "cursor": {
          "ref": "fd51e440-dae9-49d3-8fe6-f8b90ef92783",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5fa6332e-c732-49f0-ab2e-81491a8fe0ad"
        },
        "item": {
          "id": "6fb23284-d338-411d-9dc5-6f2c45ffb2f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56a9106e-aff3-42ac-abde-e2eee3b1e67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864b8250-2473-476e-af1c-851c65b9c202",
        "cursor": {
          "ref": "e4a84ca5-6da7-47a1-b5c9-0372aa5ce5e9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d8a0f5ec-6a67-439c-9aae-f8ea5ca1be9e"
        },
        "item": {
          "id": "864b8250-2473-476e-af1c-851c65b9c202",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e2cc5bea-673d-4dd0-8a4a-58695bab3abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df70f2-9a1c-40d5-8e9a-abb4862f6103",
        "cursor": {
          "ref": "92d18e69-df4a-47ff-a4fb-c5487712f93a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "28130e13-bc54-45ae-bf46-764268adab10"
        },
        "item": {
          "id": "98df70f2-9a1c-40d5-8e9a-abb4862f6103",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df009699-b656-4c37-808f-f43a9eeb37de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc08258-19af-4069-8515-f4a82e47d2c6",
        "cursor": {
          "ref": "512785c5-d284-4db8-8926-db86edc35f93",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3a63ebe8-a0ae-43a0-a309-ad8a3baf098f"
        },
        "item": {
          "id": "6fc08258-19af-4069-8515-f4a82e47d2c6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e16a2b9-9e05-4f65-9c96-c97906b3259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a164a5f4-6ae1-4f8f-a81e-c1edbbeab0b4",
        "cursor": {
          "ref": "c7d06b96-c78e-4f40-b42b-fbc13f8f6383",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41fb63e1-036c-4324-8b99-f5312b067623"
        },
        "item": {
          "id": "a164a5f4-6ae1-4f8f-a81e-c1edbbeab0b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85ffc871-57e9-48ea-afb1-7972852c8cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58beafaf-d058-4811-b591-cee21bdd35d3",
        "cursor": {
          "ref": "fa7ae676-3a31-428d-ab45-d30038e1956d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "875ca68e-36df-4eb5-be1f-1c83acd52e64"
        },
        "item": {
          "id": "58beafaf-d058-4811-b591-cee21bdd35d3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dd04e990-5341-40eb-9e9a-7a180ae7e355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57756c2-6105-4405-b792-7a6943b79613",
        "cursor": {
          "ref": "a62c326d-0f17-4d02-822b-3f581aa93173",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bf51cb02-333e-4611-a147-1f6d3634a658"
        },
        "item": {
          "id": "f57756c2-6105-4405-b792-7a6943b79613",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "874d9004-6a02-4b7d-8eac-6a4487c3d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb17239-c388-4605-a1fa-6bceeaeb8a77",
        "cursor": {
          "ref": "6bd4720c-3871-4d04-9f19-ffa898f7a18c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bbb47dec-c7c6-4615-808f-5e15200418e5"
        },
        "item": {
          "id": "3eb17239-c388-4605-a1fa-6bceeaeb8a77",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b2ac3938-cbe9-4e39-96f8-ba8c0dea42c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46cd6d4-001f-4839-bcad-be745a104a39",
        "cursor": {
          "ref": "a30cf757-0a7c-44d2-8309-6dd3ebfd079c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b52321c6-86d5-488a-ac25-80dcac85d555"
        },
        "item": {
          "id": "e46cd6d4-001f-4839-bcad-be745a104a39",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "641d58d8-b90b-4520-bdde-7ae9b1ebc9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026402cc-0d25-48ce-8b97-4163414f4cae",
        "cursor": {
          "ref": "d251d74d-7ac1-42dd-aa19-99500e104a4a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3c388cc-9a0f-4b2e-9854-f159417147f4"
        },
        "item": {
          "id": "026402cc-0d25-48ce-8b97-4163414f4cae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f249177a-0cc9-47d0-9b90-66d8d72aaafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b0e1fc-c083-4c1d-b6d9-c8aed499648c",
        "cursor": {
          "ref": "34498f69-d1df-4220-91cb-82a8230432fd",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cefe35ba-3aae-486e-896d-6731fd64dda4"
        },
        "item": {
          "id": "e4b0e1fc-c083-4c1d-b6d9-c8aed499648c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "13e86d22-2ffc-4163-90c0-31516b63486c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff10e2-7bdd-431f-84cf-6dc296454cbd",
        "cursor": {
          "ref": "c413980b-7581-4205-96b5-2e006a4a3660",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2fecbc66-910d-4b02-b82e-514579b24279"
        },
        "item": {
          "id": "2bff10e2-7bdd-431f-84cf-6dc296454cbd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e68c6b36-7e4e-42c6-a9c6-318f76a0b243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbcea75-226c-4514-9cf1-ad8fcf0b1dbe",
        "cursor": {
          "ref": "9e5cf2a0-65d9-4ada-80de-fa8e676fe416",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1a958061-6c76-40f6-a06e-48178f5ddd02"
        },
        "item": {
          "id": "7cbcea75-226c-4514-9cf1-ad8fcf0b1dbe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c2c4885-2276-41d4-9821-3ceb08aba78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3138e329-658c-430b-9820-86152c8817f6",
        "cursor": {
          "ref": "258263ec-fb8b-484b-bc83-bb25075d0344",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d1e91eb-aa95-46da-a68d-97f0af34665f"
        },
        "item": {
          "id": "3138e329-658c-430b-9820-86152c8817f6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1941b8aa-70cb-4a68-95e0-809e58cd4c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd2c9ee-9d58-4c7b-bf90-7a3294d33ec3",
        "cursor": {
          "ref": "1e4da045-54a1-46da-84bd-bcfee966cc4f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a8ccd5b-a841-492a-90fc-da38f20a7a9e"
        },
        "item": {
          "id": "2fd2c9ee-9d58-4c7b-bf90-7a3294d33ec3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9c0c3093-e62f-4afb-ba71-28ac4a9c2ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7ee99e-9d4d-4649-b3c4-8fb4e2bc5916",
        "cursor": {
          "ref": "aa4e5142-57aa-4ad6-ba96-a2d42b7632e9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a1c33892-f5f5-48c4-b48e-c5a1a0b3d98e"
        },
        "item": {
          "id": "0d7ee99e-9d4d-4649-b3c4-8fb4e2bc5916",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1bbc09b5-ac70-40fc-b7d8-e8ee75d15179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20f6d8-679b-40f9-8cbc-6cf4d4e21b17",
        "cursor": {
          "ref": "346824a7-29d9-4f27-aec1-91fdca849392",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "10a6e094-f1cc-4e85-a0c5-93930f7e1cdd"
        },
        "item": {
          "id": "1f20f6d8-679b-40f9-8cbc-6cf4d4e21b17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "45b30aa8-ea0c-445a-8e74-b3bf54068d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dfc612-27e0-4068-88b6-539d20891be1",
        "cursor": {
          "ref": "f4620337-7fbf-412a-ab32-081c227ce25d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af4275d4-7121-4d7f-8860-ef25c908e1a5"
        },
        "item": {
          "id": "97dfc612-27e0-4068-88b6-539d20891be1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cd6a1f46-4794-4b66-ac9a-699c880ec23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1965b8-0277-4bf4-8b7e-e6a7ebf08301",
        "cursor": {
          "ref": "c3ee2d75-d38d-4272-a953-001f85a55170",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b0751965-02f4-4867-8ed0-8ee0b6d3fb06"
        },
        "item": {
          "id": "8d1965b8-0277-4bf4-8b7e-e6a7ebf08301",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8081cef-911d-4d31-9257-e495e4516a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a352cc-0b4b-43a8-be77-debd2f94886b",
        "cursor": {
          "ref": "af0ee7c2-805c-4a19-8e90-99e84a24a013",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b9a7f969-fe99-4360-ab81-ecd24b6849e0"
        },
        "item": {
          "id": "55a352cc-0b4b-43a8-be77-debd2f94886b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac279e4c-db90-4e4e-9b7a-729cd25c69ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa21aa73-6a6d-4ced-b64c-e1aa9ce1aaac",
        "cursor": {
          "ref": "d5efac69-c3e7-46be-b2b7-d812dff21ee3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "11a50f51-fa39-49b8-b3b3-744abb827ac4"
        },
        "item": {
          "id": "aa21aa73-6a6d-4ced-b64c-e1aa9ce1aaac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "64e4a44d-5814-4ada-82a0-ae5382bb9305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46bc02b-3847-4c6a-8c02-e70932eb16f5",
        "cursor": {
          "ref": "c369ecf2-7aa6-461e-b9c9-572f07a7d33c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "02f686e5-860d-4cfa-8dd1-0dc5b56ca4e5"
        },
        "item": {
          "id": "b46bc02b-3847-4c6a-8c02-e70932eb16f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f3644a2c-6da3-4b96-9c73-8bbcc4728f52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb64a7f-e578-4f6a-ba2c-b6ec44580e9f",
        "cursor": {
          "ref": "2459fe64-0913-47ed-bd0a-54b2956f3a3e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7716a1fa-894e-463b-aafb-0a264a32c71b"
        },
        "item": {
          "id": "0cb64a7f-e578-4f6a-ba2c-b6ec44580e9f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c70f9cbd-6c3e-4335-afd8-76d1d31406ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c48f4b-92ed-4fe5-8ec8-96f24dc097cd",
        "cursor": {
          "ref": "0d4cf2c7-4561-4294-aacd-af7314745fc5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a96195cd-f90a-4fb2-97c7-07a7f7a7ba12"
        },
        "item": {
          "id": "f6c48f4b-92ed-4fe5-8ec8-96f24dc097cd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "57d3f90a-cee7-4564-9e76-d6a818cd3f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2134a95-f5d5-41c9-b21b-44b106caef41",
        "cursor": {
          "ref": "c849591c-05fe-4b9a-84ee-a75baa54621c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d2631c15-73c6-463d-ae18-583152d247e7"
        },
        "item": {
          "id": "b2134a95-f5d5-41c9-b21b-44b106caef41",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "495025ce-ee25-4b1f-be82-125c93adf795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116961ab-e05b-49da-8d98-b33368f5e2ea",
        "cursor": {
          "ref": "b68560bf-2311-4705-a375-9111276d29f2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ec23c971-e721-4183-9c0d-ab6b8f832a1b"
        },
        "item": {
          "id": "116961ab-e05b-49da-8d98-b33368f5e2ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15a52327-07de-4d65-839c-d381899e25fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd2811a-3f4d-46c2-a4a5-8c18e4d1ca2c",
        "cursor": {
          "ref": "f4a20739-2895-4ae6-a8c9-9bd80529efe7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "97bcd3d7-bee4-4cb8-b5de-5030130e2412"
        },
        "item": {
          "id": "3dd2811a-3f4d-46c2-a4a5-8c18e4d1ca2c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60d54fe0-1b45-42ae-8f1e-90913a18eb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9bb0bc-699e-4bc0-95e8-b8dd518b6c76",
        "cursor": {
          "ref": "557fd5d0-542b-4edd-8634-6b2c1b25a3ad",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0003526d-6aa4-42db-ad24-7796ab2d8304"
        },
        "item": {
          "id": "cd9bb0bc-699e-4bc0-95e8-b8dd518b6c76",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8a7945ec-642e-4c46-b4c0-e75bfba84d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0a2f82-7c65-4bd0-9a23-f08f03d91ff0",
        "cursor": {
          "ref": "b3d99aa5-bde5-447e-acab-ed5af164e386",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5b2ef058-ab84-4125-8213-044a3cb7ce75"
        },
        "item": {
          "id": "1d0a2f82-7c65-4bd0-9a23-f08f03d91ff0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "529b666a-4f7f-47b4-a0a8-d4199a32c45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68ae4c7-6401-4cf9-8bb3-354b991bc21b",
        "cursor": {
          "ref": "14336c46-9b93-4b71-a1ff-efa5a574844d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fd402f1e-e3f3-4b08-9115-833cf83da11a"
        },
        "item": {
          "id": "c68ae4c7-6401-4cf9-8bb3-354b991bc21b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e065ce2e-5203-49d8-bd25-83c935b8129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a0776a-f280-4355-9781-567f8d58e6c6",
        "cursor": {
          "ref": "047a951a-a079-48b8-a632-ab21d41d5cc6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "913f1846-b0f0-44a2-a27d-a9246374ba88"
        },
        "item": {
          "id": "06a0776a-f280-4355-9781-567f8d58e6c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "43988e0b-ca6d-49e3-bbc8-8577f68b03ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2251f7ef-f4ad-496a-81a4-ecc56d46409f",
        "cursor": {
          "ref": "1d98dc0b-4c64-4fb4-9477-c04e18091509",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef46ecaf-98fb-4d2d-81be-ccbbd885dcf0"
        },
        "item": {
          "id": "2251f7ef-f4ad-496a-81a4-ecc56d46409f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a4498e26-060a-4c99-9812-1b98f88def8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e369f0-75f2-4ff1-bc93-65771feb85ac",
        "cursor": {
          "ref": "08789b85-26b8-4fa1-b25b-f211fd5b59a0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c9a273ed-b398-49c3-80f2-1745bc88c1fd"
        },
        "item": {
          "id": "a0e369f0-75f2-4ff1-bc93-65771feb85ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a162bf7-947e-443c-8223-9cc963333667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5002c0-5e23-4aed-8179-79acf7b4647c",
        "cursor": {
          "ref": "3a33436e-8684-4982-8f87-dd7c9736640c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9506e2a4-81c9-42d8-8138-d19c99757bd5"
        },
        "item": {
          "id": "8a5002c0-5e23-4aed-8179-79acf7b4647c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7cf4775c-3707-466a-88bd-9282e9572fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259dce9-9110-4408-a903-dba2e502613f",
        "cursor": {
          "ref": "25c3881e-d2e0-4516-b84a-fbf20f6f1af2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7f83b256-b998-426a-b04a-6e197438a1ea"
        },
        "item": {
          "id": "e259dce9-9110-4408-a903-dba2e502613f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f834a181-b2f5-479c-8a5b-b875ca4b669b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abc200c-9528-414b-9f3f-f781b326297a",
        "cursor": {
          "ref": "0d08d9b2-6c95-491d-be9f-282b97319316",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "150dd6d0-3c26-4be4-8c2e-8e207916585a"
        },
        "item": {
          "id": "8abc200c-9528-414b-9f3f-f781b326297a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77edda56-a418-4e9b-800c-73437c826d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2b631f-822e-497a-b3ae-17e23196e038",
        "cursor": {
          "ref": "a4b1948c-5f59-4793-bdbe-90270c9d12c6",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5b9f52c-1e54-45ac-ab27-506f3a84426f"
        },
        "item": {
          "id": "de2b631f-822e-497a-b3ae-17e23196e038",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc4221f8-61ce-454a-bdf1-07fd61f45278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369d75ba-182c-40ce-96f5-6a7dae823095",
        "cursor": {
          "ref": "c5f31077-495d-47e0-a53a-5e086736a9b5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "35187609-faa8-4be1-9cb7-c79852e0a53a"
        },
        "item": {
          "id": "369d75ba-182c-40ce-96f5-6a7dae823095",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ed26ecb5-cb41-488d-bee8-c6410731b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30ef97-30cd-4d39-a752-789591bda806",
        "cursor": {
          "ref": "f49d56e0-daa5-44e1-8638-81469cf0cadc",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb1747e3-0f20-4d05-a3ed-a5d968bd7863"
        },
        "item": {
          "id": "0c30ef97-30cd-4d39-a752-789591bda806",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e76cd0e-fa7c-4310-a71f-aee09d87c3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b3e757-ce8c-48d4-a60b-2f5e4bd2a8b1",
        "cursor": {
          "ref": "8ea0ba7f-ceb5-4a02-92aa-5dd43ea7238d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9169488e-8d18-481d-bd89-3cfac58510fe"
        },
        "item": {
          "id": "75b3e757-ce8c-48d4-a60b-2f5e4bd2a8b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0c9367f9-6ed3-430d-8839-857fbdc5e163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4236516a-e261-4102-b5d8-3734ab7c5906",
        "cursor": {
          "ref": "47dca8c4-039f-4dff-907c-87f85bc1f4b4",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0b05326f-d531-4a36-81b5-8aea081c8e78"
        },
        "item": {
          "id": "4236516a-e261-4102-b5d8-3734ab7c5906",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a135abc-6bc0-4a13-befd-c52c418b2439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368979c3-225a-4b09-825e-80f683d0bf8d",
        "cursor": {
          "ref": "99d894d7-3ea7-4a86-9713-10bf6f803c32",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d1d4d909-8c7f-45b5-a87e-92a7adecb697"
        },
        "item": {
          "id": "368979c3-225a-4b09-825e-80f683d0bf8d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a37dfd5d-d298-4019-9ff6-a85e50cb3a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924849e9-42dd-44b1-b3ed-bcd9c9251740",
        "cursor": {
          "ref": "ce9682bd-a9b2-41d2-8fa8-733680c8dc09",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c2b26fd0-7dab-4448-b7fb-a3a08e318b9f"
        },
        "item": {
          "id": "924849e9-42dd-44b1-b3ed-bcd9c9251740",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f4ad4940-75ce-4223-be16-cb606d034ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa5ba22-870b-4453-a613-168381d0b654",
        "cursor": {
          "ref": "57034499-81f5-42cc-bc10-5e27575375a6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9bb5f5cc-e8bc-4298-ad8d-5aefee649036"
        },
        "item": {
          "id": "9aa5ba22-870b-4453-a613-168381d0b654",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e580d27c-95b6-4ccc-b71c-3dfc3c7e0fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65010a8-5a8f-4c84-9c99-cf25ec663b0f",
        "cursor": {
          "ref": "70690490-b46c-4087-9771-913f4ff27678",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b5c5ac3-9570-4671-a522-09f8d882b978"
        },
        "item": {
          "id": "e65010a8-5a8f-4c84-9c99-cf25ec663b0f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ce4d2113-58cc-4f71-b89b-4981b7e17552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6042c85-8d74-47a7-bbfd-0dd1397fee18",
        "cursor": {
          "ref": "bd1fefd2-b7c1-45b9-88da-a3516705589f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81641792-8404-48ac-90e6-95ddb3518bc5"
        },
        "item": {
          "id": "b6042c85-8d74-47a7-bbfd-0dd1397fee18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e5cd893-9cc5-490a-9f0d-b26dd274a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e75587d-d1f1-48ae-880f-01449ccb1208",
        "cursor": {
          "ref": "cf6c9ffe-6e96-44d8-be49-3f58545d89ab",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6b226f23-e6a7-44eb-b0b4-724adb6904df"
        },
        "item": {
          "id": "8e75587d-d1f1-48ae-880f-01449ccb1208",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "139cf6f1-f13b-487e-83fd-dcf95f7d2650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6d5d8c-8d52-47f9-9429-6f83702907c2",
        "cursor": {
          "ref": "67d8defc-db5f-49f7-8d02-17eebae8a21e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da12d3a3-dfdd-42e4-80e7-d5be6ef9bcfc"
        },
        "item": {
          "id": "be6d5d8c-8d52-47f9-9429-6f83702907c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "577d368a-e1d5-483a-b728-603a3e3185ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0233aa9-5005-4d05-8bf0-31ee641bfd1d",
        "cursor": {
          "ref": "531c82d1-c193-4e7e-af8d-8d38ce8f9046",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3fede3c3-c921-4b11-8e74-814357bed6d5"
        },
        "item": {
          "id": "f0233aa9-5005-4d05-8bf0-31ee641bfd1d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "acce5ae5-d3b2-44e9-80bd-227da63226bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992be497-f8e5-4753-907b-3e306f56ecc3",
        "cursor": {
          "ref": "a8bfab95-eeca-4a92-8388-dcc986a6946f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c3b7fba2-3b3d-4faa-9818-825b8b1ebc79"
        },
        "item": {
          "id": "992be497-f8e5-4753-907b-3e306f56ecc3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d364337d-7556-4a24-ba30-6e6f27f7f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e182a486-652f-404b-85ee-aabdd4499544",
        "cursor": {
          "ref": "00e6d71c-53f0-47da-a8ef-e94438331368",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f88b9fec-f601-4e7d-9af3-aa31307ab0f0"
        },
        "item": {
          "id": "e182a486-652f-404b-85ee-aabdd4499544",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a445634a-c7c9-4d45-87b2-29ce6a0a114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acd0283-6080-4550-ab56-cae2175f3a43",
        "cursor": {
          "ref": "cf258da1-d0de-4870-bb48-0f328f4286d5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "09673983-3683-4704-a0a9-56cdcc6cbbcb"
        },
        "item": {
          "id": "8acd0283-6080-4550-ab56-cae2175f3a43",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26e2c9f4-9ea4-48c7-a69e-3928616cbabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e87634-62a9-4711-9609-d3c00dc64872",
        "cursor": {
          "ref": "52020a13-205a-4de5-b19f-4dd3c3691765",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "12b4271d-15a4-437b-8c2e-9594d63dfe4a"
        },
        "item": {
          "id": "44e87634-62a9-4711-9609-d3c00dc64872",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd38ad8e-a3c6-44b4-9d7c-fdf683afc2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3576b5ca-aa9b-4a76-814e-f4d46119a01d",
        "cursor": {
          "ref": "61bbad2a-9267-46e6-8daf-f13b0d15c947",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ef90717f-0717-43dd-b474-cc18c960c800"
        },
        "item": {
          "id": "3576b5ca-aa9b-4a76-814e-f4d46119a01d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cd0756f4-dd19-41e2-9f0e-9373ffc4f41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab83f467-550d-4e6f-91ef-4852e710e2dd",
        "cursor": {
          "ref": "aef32d3f-2139-4ed1-9133-febf3c0ea1b0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b1df9015-5e7c-4034-8108-2e493b91aff8"
        },
        "item": {
          "id": "ab83f467-550d-4e6f-91ef-4852e710e2dd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "24a5b0f8-0188-4a72-963d-6872329d50f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9275678a-95d6-4a2e-a33b-0b4238046408",
        "cursor": {
          "ref": "4963b13d-91a5-4de6-ae9c-d38a8ae5d004",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ca5e87bb-9d35-44b0-bf25-3ede6690026c"
        },
        "item": {
          "id": "9275678a-95d6-4a2e-a33b-0b4238046408",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6f6ed120-234e-4d63-9e69-54bc34f7d349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6b26d-173b-472f-bea5-7a5be05235de",
        "cursor": {
          "ref": "477bbe43-d1c2-4921-93a9-7717efbfb423",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bc543319-e291-492d-adef-dfab74eab4f4"
        },
        "item": {
          "id": "63a6b26d-173b-472f-bea5-7a5be05235de",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e53feae5-6700-42e1-844e-753c39ec6545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68cfc27-d5ce-4c47-a224-0679568929bf",
        "cursor": {
          "ref": "141b89a1-81d1-44c1-ade8-a6241edaee93",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b5e767a5-e5d4-4748-83ff-bd369120541d"
        },
        "item": {
          "id": "c68cfc27-d5ce-4c47-a224-0679568929bf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1904e36b-85bc-4e4e-8c36-0c647eb118ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91d09b4-c8f7-4964-a1f4-d8303be053f4",
        "cursor": {
          "ref": "288cff60-aed2-416a-bfff-3ead3ebeec8e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a65bd326-d839-4b7c-a2b2-cbdc43a6dafa"
        },
        "item": {
          "id": "e91d09b4-c8f7-4964-a1f4-d8303be053f4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f4198a9-8709-45bb-9734-16e77ea43d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d1ad1f-0bf2-455d-b2e6-f3fa55f24f2b",
        "cursor": {
          "ref": "c32aae26-568b-4151-8445-4c5749e9a922",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "57f35ee1-b27e-4202-becf-0e232a872d0b"
        },
        "item": {
          "id": "b3d1ad1f-0bf2-455d-b2e6-f3fa55f24f2b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e1b2f55-e888-4445-ad01-1ea28ebbecd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1107e4c2-9ff6-4e63-a19c-d2f701ccecd9",
        "cursor": {
          "ref": "4c3b9436-c82e-4d54-8909-5a56fb138acc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "07b664a6-4252-4b8b-89d6-cb3b59472c88"
        },
        "item": {
          "id": "1107e4c2-9ff6-4e63-a19c-d2f701ccecd9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "581f12df-23a1-4543-88e5-b82957e82e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a723cbe-3b6f-4b07-bcf0-0f59e3ab9425",
        "cursor": {
          "ref": "afd19f28-dfb6-4ac3-9c96-b74e9a79f1d1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "de03d48d-b401-4613-be76-9499ed9f77d8"
        },
        "item": {
          "id": "5a723cbe-3b6f-4b07-bcf0-0f59e3ab9425",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bf5a7745-d105-49fb-ade2-150aa23d9d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab9722a-0bd0-4671-a314-a3359a667ba2",
        "cursor": {
          "ref": "7c1bef02-a00a-49c4-9cb6-255f424825c2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2ec9e1a6-684b-47d0-ab9d-e39d90797719"
        },
        "item": {
          "id": "6ab9722a-0bd0-4671-a314-a3359a667ba2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9b7e53bd-1620-4b89-ba7c-69841d40c3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c63e76c-d72a-4b3e-be13-fdeafcfe9093",
        "cursor": {
          "ref": "5b06c093-295c-40cc-bb3c-43bcd5f7b72a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96d827b3-98d4-46f5-9e07-125865f8f7cb"
        },
        "item": {
          "id": "0c63e76c-d72a-4b3e-be13-fdeafcfe9093",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "11c0dd2d-cf31-4683-819a-82153b4670b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8095dd-0270-4700-a8a9-3051b122c22c",
        "cursor": {
          "ref": "e2b82a39-1656-4601-8a3d-906fe41934fd",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f6714679-a2eb-4c63-aee3-76db40bed17e"
        },
        "item": {
          "id": "af8095dd-0270-4700-a8a9-3051b122c22c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bd06150a-23a4-442e-8765-fa2956dcc055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692b5c8-c861-490d-b89c-51da8541f8c2",
        "cursor": {
          "ref": "3a25f26b-0ff9-420e-aa2f-cfcb5168d275",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3512ad8a-b108-48e3-b44e-7501910b86d2"
        },
        "item": {
          "id": "9692b5c8-c861-490d-b89c-51da8541f8c2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "53989da6-bc63-4699-921d-9562136de535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d000edb5-0599-487a-b9ee-b3fcdbc913c9",
        "cursor": {
          "ref": "77b8c2eb-f6d4-4ee0-b530-ec31416db321",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4cc61add-400e-4ecb-8a2f-1cd975ce356c"
        },
        "item": {
          "id": "d000edb5-0599-487a-b9ee-b3fcdbc913c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7101dd87-188e-4b22-abf3-04ff7c6d1e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa24664-4540-4bc5-b582-9ce746e0d4a2",
        "cursor": {
          "ref": "2a9f1fd8-779c-4070-9fa8-4c64b1e2ef11",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d87b8b65-58af-41d2-b22c-44b4173ac972"
        },
        "item": {
          "id": "6fa24664-4540-4bc5-b582-9ce746e0d4a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6aff9a22-04ea-4ba4-b07e-6c43f07a199d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dde760-f6e8-46ff-bab9-7c1718aafb8c",
        "cursor": {
          "ref": "912a2306-8c47-46f3-b610-42c6c9d6e278",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f4fb1606-7b0a-4a6c-8ff2-4176025ea9d1"
        },
        "item": {
          "id": "00dde760-f6e8-46ff-bab9-7c1718aafb8c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d1f7ea1d-ecbc-4990-b5fc-5471c375ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a1e285-28e9-4bdd-b3bb-114d0c9519b0",
        "cursor": {
          "ref": "9260ed5a-7510-4601-9a8b-f74f32f26c0d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a536cdd-4fd8-4815-9b17-cfb3bcabb4bf"
        },
        "item": {
          "id": "b6a1e285-28e9-4bdd-b3bb-114d0c9519b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0ef7ec0d-e0a0-45c9-ae81-397dd08304cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00d7f3a-453d-49d5-9591-bead26bdbf99",
        "cursor": {
          "ref": "cef4c9f2-7c76-40f6-a021-ff3dd8284ed0",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd4cf484-4c1d-481e-92d3-a3e87668e921"
        },
        "item": {
          "id": "c00d7f3a-453d-49d5-9591-bead26bdbf99",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ed8d0db-fd8c-4f20-ab86-33bbcacbf282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450fcd3e-bb1e-460e-9408-1314ad13ad5d",
        "cursor": {
          "ref": "8aa8c93e-93a1-4697-9a5d-ffcce616fdfe",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "12b100af-4c7d-4715-bca6-7657a1c004c9"
        },
        "item": {
          "id": "450fcd3e-bb1e-460e-9408-1314ad13ad5d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3baedde2-eee4-4112-ad31-1da4ecbbe03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a164a54a-4e3c-48ba-a91a-3984ffebf823",
        "cursor": {
          "ref": "d912731d-6818-45a5-a1f6-6c571f36bada",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7559b8ee-357a-497e-8ade-c4fa782a5a7b"
        },
        "item": {
          "id": "a164a54a-4e3c-48ba-a91a-3984ffebf823",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a208524-cc6e-4f23-81ce-c6d9e8356346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd674464-de29-409d-abb6-91206f4bd9ee",
        "cursor": {
          "ref": "6726037e-0efb-4308-ad7f-6ff74bad5f71",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "596738fe-819f-4b06-aaa2-1cb5052cc8ea"
        },
        "item": {
          "id": "dd674464-de29-409d-abb6-91206f4bd9ee",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0ab8c59d-0b62-4a99-ac92-9fec6708d509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7da59a-20af-4cd2-8795-b1a9a8685ad7",
        "cursor": {
          "ref": "60151b6e-b35f-4ced-bc42-137785969936",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b4e5adbf-f5bb-4c82-8426-74f87f0b2208"
        },
        "item": {
          "id": "cb7da59a-20af-4cd2-8795-b1a9a8685ad7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d12b3069-2c4a-4bb3-9d7b-eb1a6f1f4114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5dbbc7-11d4-4134-96b8-ee9e49a5305c",
        "cursor": {
          "ref": "d12a8ea9-d1e2-4a1f-94c8-3cbc12568cbe",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "865474fd-916d-4730-bc8e-32b593270ec6"
        },
        "item": {
          "id": "3c5dbbc7-11d4-4134-96b8-ee9e49a5305c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e9bb2211-a97c-4809-b813-eda4c43aa661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce551012-0eb1-47a6-becd-d9113514f021",
        "cursor": {
          "ref": "cba5926d-b826-47c8-a22e-ce9d91ef10e9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7bd2ce5-5b18-4bfb-a0dc-0e6e7f9ba35b"
        },
        "item": {
          "id": "ce551012-0eb1-47a6-becd-d9113514f021",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9827ffd7-b447-4abd-a6b5-2b24ca6579c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c655b99-0874-4685-b1a0-9c599fef2ed4",
        "cursor": {
          "ref": "e29d4445-9032-4799-b427-2f2173d9e947",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e4683e1f-fab3-4ef3-a90f-fa4943e5d1d5"
        },
        "item": {
          "id": "9c655b99-0874-4685-b1a0-9c599fef2ed4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8945471f-4a97-47c4-a56e-0c2e89b738a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a76ff53-782b-4d1f-a373-5e8709b3b880",
        "cursor": {
          "ref": "a368fbb0-4f16-4169-9f92-36f0c02dda94",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88f21efc-8d56-4950-9aa2-80f8e09d6b54"
        },
        "item": {
          "id": "4a76ff53-782b-4d1f-a373-5e8709b3b880",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "831de7b8-15cb-401d-9d09-afdf49dbc286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e4aab-d89f-47f8-810b-82d78ec823c3",
        "cursor": {
          "ref": "a2e35a11-1b64-4d9d-b5ad-e293b6d0aadd",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "230747bc-e3d1-4238-a32b-28289e685c85"
        },
        "item": {
          "id": "dd2e4aab-d89f-47f8-810b-82d78ec823c3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c4b5df15-b654-4e66-a8f0-df453d43399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0d7148-b772-495c-ac6d-35e9d425658b",
        "cursor": {
          "ref": "62d5afbe-8c42-4e72-beac-6c199fe68b88",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c5b4b02-2407-4f77-8f0e-c1f370978b42"
        },
        "item": {
          "id": "9d0d7148-b772-495c-ac6d-35e9d425658b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "038169ea-b992-48de-8da8-e0ce22a85c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f51cb6c-60c1-4a96-bc35-0e70b64e8410",
        "cursor": {
          "ref": "0776037f-fb70-4ad8-ad21-4585179af255",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1c8430cf-006b-4f13-a7f4-b3321ccbe058"
        },
        "item": {
          "id": "3f51cb6c-60c1-4a96-bc35-0e70b64e8410",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3f105e84-b670-4712-95ac-202d61071cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14573f3f-ff46-4597-b5c4-ebdd686d0100",
        "cursor": {
          "ref": "37943af9-548f-4afa-b499-cc40949ae6ac",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "de7a4e7e-0136-4c10-a3f1-76a9e49999c4"
        },
        "item": {
          "id": "14573f3f-ff46-4597-b5c4-ebdd686d0100",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6f662e0f-7a78-41d8-9762-6153452ce049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc27fc-e464-479f-b36a-2b5758ad0540",
        "cursor": {
          "ref": "d92a057e-7bfa-4af0-9980-15aaaa986865",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f44aeb5d-6ec9-4a2b-b6c3-17524f63920c"
        },
        "item": {
          "id": "73bc27fc-e464-479f-b36a-2b5758ad0540",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b54c045f-1c6e-4303-9d37-e18e22402bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b470b53c-0c42-48b1-ad8d-d47f83984e5b",
        "cursor": {
          "ref": "69150e66-b010-4c9a-b218-d72f397f8316",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5dd86074-bd31-4433-b20f-f9692923255b"
        },
        "item": {
          "id": "b470b53c-0c42-48b1-ad8d-d47f83984e5b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "86177a54-afaf-4e56-ad2c-e33bd332c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf6e276-7805-4ecb-a0a8-d3b950a3454a",
        "cursor": {
          "ref": "df66ba4a-0ed1-4fe3-a6d9-6cb1a47c5ad0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6497929c-b30d-43be-9779-2826107d4f62"
        },
        "item": {
          "id": "caf6e276-7805-4ecb-a0a8-d3b950a3454a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "176683f8-e47b-4ce5-9f1e-1e98fd33240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19209dad-3261-44d7-bd5d-97eaed61af6f",
        "cursor": {
          "ref": "f96e48ce-c61b-4146-bba0-b40611f5a07f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "58e15050-b651-4622-ae7e-a9fb00a4f49c"
        },
        "item": {
          "id": "19209dad-3261-44d7-bd5d-97eaed61af6f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9244535e-997a-41e4-be23-2806978a7699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a3a5c7-3aea-4cf4-82c2-ad9759969017",
        "cursor": {
          "ref": "8e2f771a-5473-4a1b-9e60-f8fc074911ae",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a51e29d4-7fbe-45f5-865b-4ffdcec7f1de"
        },
        "item": {
          "id": "93a3a5c7-3aea-4cf4-82c2-ad9759969017",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8bc590d2-c1f1-457e-85e0-5b3a2c806932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9cb8ee-4af8-4cbf-8c33-f476d687fb40",
        "cursor": {
          "ref": "5f4172dc-d891-4a9e-9705-4e7fac617fec",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a22e91d9-ac79-4a0e-8239-30b65307872f"
        },
        "item": {
          "id": "af9cb8ee-4af8-4cbf-8c33-f476d687fb40",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "10599452-f321-47b9-aea9-143f7ff8c7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d8933-9408-4401-aecf-ad5ba175dc63",
        "cursor": {
          "ref": "90cfff1c-eade-4958-9a3c-f061e0de9440",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "91d7792a-d1c1-4504-ba9d-8e29a67fbe30"
        },
        "item": {
          "id": "f93d8933-9408-4401-aecf-ad5ba175dc63",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "466631f5-fc04-4cc0-b787-0a685488a13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee5600e-7bae-4a78-a9b5-7668f61b35f1",
        "cursor": {
          "ref": "696994b5-d93a-4954-bbe1-3e6e0fe1fce7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f76b1537-efb7-42bd-a024-a70c730fb42d"
        },
        "item": {
          "id": "dee5600e-7bae-4a78-a9b5-7668f61b35f1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "caf80b41-57b2-4f48-827c-757b6096bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6593ef-d986-46c0-a533-ae586cf35c6b",
        "cursor": {
          "ref": "fb4c5fcd-7dc6-44e2-8720-bb4972a88948",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5d7a1941-a70f-4a2e-ba8b-a2727b5194d4"
        },
        "item": {
          "id": "ee6593ef-d986-46c0-a533-ae586cf35c6b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6b232598-2c08-46c0-b94f-18b3a823875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702be3d3-aa00-496c-b80a-de31299ffa9b",
        "cursor": {
          "ref": "1824c060-3221-4b0a-b89b-d0920981bfb9",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3e91e8d7-fe67-4721-8289-6886fd276600"
        },
        "item": {
          "id": "702be3d3-aa00-496c-b80a-de31299ffa9b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f1e5df07-cfaf-4ff9-bf0f-3d6132834c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677795ef-e4db-4182-a017-c81d706004bf",
        "cursor": {
          "ref": "1ee82597-4de2-428e-a96b-cd94dc471922",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d9e17446-c084-45ce-aa2c-756231f01351"
        },
        "item": {
          "id": "677795ef-e4db-4182-a017-c81d706004bf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6ac770c0-1ce8-4e67-87cc-44b858fc1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394426d-4920-43e3-9d45-e278afa5ed75",
        "cursor": {
          "ref": "fac74aa4-578a-4c0f-aa9f-010e19ce81f1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "938b1810-b5ea-4d69-a2ea-f11aa8720eb5"
        },
        "item": {
          "id": "0394426d-4920-43e3-9d45-e278afa5ed75",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc2b7f68-4957-4d5c-ad55-5a87249bc8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffd9f07-1445-44ba-8bc2-f369a48a6775",
        "cursor": {
          "ref": "88df739b-1515-4405-928e-730e392a76bc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "820df483-27b3-4b59-bc29-e5b702362eab"
        },
        "item": {
          "id": "8ffd9f07-1445-44ba-8bc2-f369a48a6775",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "57d45bad-1cbe-44b7-8013-b57c394913b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e907ce-56fe-40c1-a0e5-cb3672933346",
        "cursor": {
          "ref": "26690b4e-db51-4400-bcb2-f8961ed3c0d4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f2c3451b-96b5-4bd7-aad2-5d273bc2d5ea"
        },
        "item": {
          "id": "d2e907ce-56fe-40c1-a0e5-cb3672933346",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4c8ebbe3-dc8d-4337-bca5-8866261931a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a7a62e-b05b-4d4f-8ad5-06cafc1eb676",
        "cursor": {
          "ref": "2f696a36-d03d-4384-9bb2-557d2d434bfb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3d19934-1060-44bb-9150-0c9e89036143"
        },
        "item": {
          "id": "d1a7a62e-b05b-4d4f-8ad5-06cafc1eb676",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c92c0770-831c-425b-b73e-81a75bacf203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5604d492-b5a3-4818-8824-f90f441fa96f",
        "cursor": {
          "ref": "5ff1bea5-02c4-453a-919c-dfe42e8a9780",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e319fda9-74df-418d-96de-4a40511db669"
        },
        "item": {
          "id": "5604d492-b5a3-4818-8824-f90f441fa96f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e37a1356-0e12-4c5b-ad5c-bbb5b7f28112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fdcc44-332f-4b21-b9a7-9b0a66c40667",
        "cursor": {
          "ref": "73011a05-1f04-4dea-b124-457121ea92b1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "71b84c2a-bfac-4757-b7be-124b4ce2cb2c"
        },
        "item": {
          "id": "87fdcc44-332f-4b21-b9a7-9b0a66c40667",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e73e4c3-e3b9-4b9f-a1ee-99e284afa4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0a481a-bdfe-46ca-92e2-90d7e476bdbb",
        "cursor": {
          "ref": "30936998-aae5-45c7-b190-a651c305d455",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0d2081a2-28bd-4597-8138-b24f3f693df4"
        },
        "item": {
          "id": "0b0a481a-bdfe-46ca-92e2-90d7e476bdbb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e23fba22-d8b0-4f27-93f2-b94c99f1c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47425eb-790f-4aad-8096-9e06c7806e94",
        "cursor": {
          "ref": "9bd7dd15-115f-4102-8be2-f17696fd3e77",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "476f883a-4620-49db-844f-314d40b9c767"
        },
        "item": {
          "id": "d47425eb-790f-4aad-8096-9e06c7806e94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad665e1a-8f18-4634-92c4-7d7c337e7248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9737735-1e8e-4057-ab72-ead381a0690a",
        "cursor": {
          "ref": "2568e8a8-9c73-472b-9f68-a2c6e5353438",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c7ccf649-b64c-4e06-9b14-1c6c81563949"
        },
        "item": {
          "id": "c9737735-1e8e-4057-ab72-ead381a0690a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "71282579-783e-451c-bc6e-332cd928ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea9812-4998-4d80-bdb2-fd3d271a7ff6",
        "cursor": {
          "ref": "e60e5250-85ad-4ea2-91f4-da4bce02bf8a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "48e0ec5d-06c9-46b0-8a60-b9aef62295f0"
        },
        "item": {
          "id": "37ea9812-4998-4d80-bdb2-fd3d271a7ff6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3c73fcc5-8f4f-46da-8a68-89eca887a884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57e2167-4a69-4d55-876d-de2588f07522",
        "cursor": {
          "ref": "f770d73f-1465-4840-b069-3e954c25d57e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9675ba3b-fba9-4ffc-8fa9-555f8078517b"
        },
        "item": {
          "id": "d57e2167-4a69-4d55-876d-de2588f07522",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d03abef9-f00b-49f4-be99-17370655ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5452cb49-2624-4ae0-889f-c9017f16bfe0",
        "cursor": {
          "ref": "35141c50-84e2-4ad1-9b85-42c023d93a36",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fd619f15-6bb2-44bb-a5b5-2ec474248563"
        },
        "item": {
          "id": "5452cb49-2624-4ae0-889f-c9017f16bfe0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "559a98bb-df20-4f25-ad7d-f8359ad0392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d402b9-82db-4745-b188-b6d44521582b",
        "cursor": {
          "ref": "fee2d50d-c0f1-46f0-b818-b2aea665bd70",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0140b51-2b25-45da-9b41-3e2e1edd6830"
        },
        "item": {
          "id": "82d402b9-82db-4745-b188-b6d44521582b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ebb61245-cfdd-4d9a-aa25-b26946be1d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a2cbe-5164-4026-8a8f-e5f5d506fd85",
        "cursor": {
          "ref": "6b9b6d68-287f-401d-b5dc-69b714e3a3e0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e9f1e3b9-be65-4025-89b5-8911ae0f23ca"
        },
        "item": {
          "id": "955a2cbe-5164-4026-8a8f-e5f5d506fd85",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "607eea0b-b2be-4506-8c66-ddfe2161581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51ffa6f-0aba-4e2f-9afc-99f96abbb8ae",
        "cursor": {
          "ref": "1b76b09f-4e48-4616-8fbc-b0c3606c8746",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f61888d5-aec4-4aa8-acf4-f20444c31df6"
        },
        "item": {
          "id": "d51ffa6f-0aba-4e2f-9afc-99f96abbb8ae",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a59b5364-dcd0-4665-8164-d9e4d2578778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb6424a-cfbd-4d27-8025-764aa049d415",
        "cursor": {
          "ref": "d66fb92a-34c2-4fd4-9971-02ba353af0cb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e613efc-4eae-4363-b0ef-3e0d7aace5f7"
        },
        "item": {
          "id": "4fb6424a-cfbd-4d27-8025-764aa049d415",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "23c041e7-c012-486a-a302-1f41ac70dce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab9025-eb24-4a18-806f-1583b0afc6b7",
        "cursor": {
          "ref": "2834aa36-20d5-48d9-bc54-134bde360e74",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a868edb6-8a0b-428d-b11b-94192d5cfc13"
        },
        "item": {
          "id": "68ab9025-eb24-4a18-806f-1583b0afc6b7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0dcbb90c-ff1e-4ef8-819e-4d77aaeefef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4fc7b1-c745-4d29-b1c3-ee3277327726",
        "cursor": {
          "ref": "33f403b9-df65-43ea-b779-e0816ac9a33b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "edf67ca9-d2f8-4dc0-99e3-9a827c3c7ccb"
        },
        "item": {
          "id": "0e4fc7b1-c745-4d29-b1c3-ee3277327726",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4ee5424f-b0cb-4816-b851-b4b931fc8f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416ea899-76a5-4580-8d2d-f7e19d62cd45",
        "cursor": {
          "ref": "a9f09555-3c50-4117-9344-ebc344906e17",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "498ccee9-4e44-4b73-b792-7e3a647f37fa"
        },
        "item": {
          "id": "416ea899-76a5-4580-8d2d-f7e19d62cd45",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3ab3e40b-6d0a-4ee4-8513-cab601f9278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45c464c-1116-4203-8fe0-b5b5d66c7f21",
        "cursor": {
          "ref": "7dabfb44-e4e1-4d84-b65c-061ddca27df6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16ec3ff1-feea-4dbe-accc-00c0d11be07a"
        },
        "item": {
          "id": "f45c464c-1116-4203-8fe0-b5b5d66c7f21",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a141ecb8-786e-4a2c-a10f-65f82fd38c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77465448-72e0-4575-bac8-10212c389f44",
        "cursor": {
          "ref": "7101c38f-9248-40ed-9325-00019e134c2a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ba8c2f9d-bff2-4756-9afa-55ad5fbcfa65"
        },
        "item": {
          "id": "77465448-72e0-4575-bac8-10212c389f44",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "456b2236-4fa5-4d29-9507-e84d95ec1b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e67906b-d162-42ae-a8d7-6f5771f50aa3",
        "cursor": {
          "ref": "c9e48082-cbd4-47e4-a917-19afc0d74d49",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5cc00525-a7ec-4a25-ba86-30b4a5e02014"
        },
        "item": {
          "id": "9e67906b-d162-42ae-a8d7-6f5771f50aa3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2d85c9af-3ac5-42fb-8dd4-91703ddb0c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac624a33-c9d5-4c31-a8d6-b326f487142f",
        "cursor": {
          "ref": "d5aabf19-28b7-46d6-8617-0831a5ac1a55",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a5934e36-2f0f-4536-bff4-ed8abc5aeb4c"
        },
        "item": {
          "id": "ac624a33-c9d5-4c31-a8d6-b326f487142f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7bbd4f03-6e56-4f54-90d0-3dea601a4c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ebcd60-8ee3-4548-abc8-2179e3f179ec",
        "cursor": {
          "ref": "50f4dadc-9f14-43b5-ad9a-12baf88541e1",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "529ac1f9-d8b7-43f6-915b-06b6d724eaa0"
        },
        "item": {
          "id": "82ebcd60-8ee3-4548-abc8-2179e3f179ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a23b6f76-6974-4007-a032-75adf11b7c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d84b721-2e93-4e7b-9a5a-49f9eab511c6",
        "cursor": {
          "ref": "84c18d33-1f59-42bf-802a-1ae0823bed6e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "58dd9760-9e6b-469c-acf5-df8061eae5b8"
        },
        "item": {
          "id": "7d84b721-2e93-4e7b-9a5a-49f9eab511c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ff32ab8-7d34-4aac-bcde-8c15fa936bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38376821-7de3-4e18-a5e0-47315b6f814f",
        "cursor": {
          "ref": "e16c064f-d1f9-4767-a4e6-81ce5b6d68e7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c468abe-28cf-4b9d-875d-9d255d75e55b"
        },
        "item": {
          "id": "38376821-7de3-4e18-a5e0-47315b6f814f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e1fc8074-3397-4da0-8810-50c103ce28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96efdc7c-dd6c-4a65-b875-1d59038940a2",
        "cursor": {
          "ref": "e639938c-1cf8-497e-93fa-89538005e563",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "03a3db8b-6d3d-4226-9d81-33a616b2ab4c"
        },
        "item": {
          "id": "96efdc7c-dd6c-4a65-b875-1d59038940a2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bb5a01f4-1d92-4000-9b9b-95967c23b661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706b1b9d-90b0-41a3-b5d4-1117fcb69f84",
        "cursor": {
          "ref": "f3baee1a-1abc-4971-b091-5089d6e3ae80",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f6915f0-fc35-4853-ac19-d4861a61dbad"
        },
        "item": {
          "id": "706b1b9d-90b0-41a3-b5d4-1117fcb69f84",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "10920bb1-5c7b-4aae-a0af-0ac76d5237cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a543e371-4aba-4a21-90ab-31ec4f114777",
        "cursor": {
          "ref": "b6591fc6-a882-4f29-afd9-deeeb8b6d37b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e3f384c9-e81b-4bcd-8e67-b20bcf759db4"
        },
        "item": {
          "id": "a543e371-4aba-4a21-90ab-31ec4f114777",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "06ed56aa-8ddc-48b8-b515-ee675410bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b9cd46-b702-4f33-919d-095700cbdc0e",
        "cursor": {
          "ref": "419dc383-7283-4db8-b764-c172e609240f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "acb0e1bb-ff8d-473e-886d-275d6ac9148f"
        },
        "item": {
          "id": "a1b9cd46-b702-4f33-919d-095700cbdc0e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6ff5276-d49f-463b-b567-3357baf3f682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d854e55-76e7-4472-8f1f-5e7f4f07ac61",
        "cursor": {
          "ref": "e651e301-82e2-4b03-9f61-15709ddcec4b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bfbf3dee-75ab-4be8-bdb9-b76ad5ffed23"
        },
        "item": {
          "id": "4d854e55-76e7-4472-8f1f-5e7f4f07ac61",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6128f412-4fc3-45d4-acc9-477d10a2c5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1dce4e-1fdb-4369-a404-c7fbd889022e",
        "cursor": {
          "ref": "50fafece-14bd-471a-a33c-0458e5d74bfc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1698f83-429b-4ff9-a336-c31ee25008f8"
        },
        "item": {
          "id": "3c1dce4e-1fdb-4369-a404-c7fbd889022e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "219b216b-a641-4486-b778-45056f88f334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769fb431-6cc1-4079-96ea-05e9e0201a25",
        "cursor": {
          "ref": "e72f64a0-714d-4fa9-99f7-8c42b299cd36",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb8ef1af-38a0-413b-b4ce-7025b7919333"
        },
        "item": {
          "id": "769fb431-6cc1-4079-96ea-05e9e0201a25",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5f501261-ab51-4546-811a-a8b54f56c9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdca185f-a0f7-4224-a6a0-7e3eb8efc4a6",
        "cursor": {
          "ref": "ee617e6b-d872-4f56-ba6f-e99ed3d288ef",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0d51fc00-cd3e-4492-8de5-a91499da1025"
        },
        "item": {
          "id": "bdca185f-a0f7-4224-a6a0-7e3eb8efc4a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ffb41ea4-4017-4f4b-a0c1-5ff7b20ccd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33952fd7-d23d-4d56-954e-b2aaa3e5a408",
        "cursor": {
          "ref": "ca2154c5-70be-400d-bb4a-9261c28fc59c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5414d894-577e-4fa4-aeba-bc10b11f370f"
        },
        "item": {
          "id": "33952fd7-d23d-4d56-954e-b2aaa3e5a408",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5be74452-376f-436a-be8e-385613fe7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f8486-88fb-48f1-a608-9ae3b7688c04",
        "cursor": {
          "ref": "dd61a56b-b567-4e91-a119-f6cf7d6f7e91",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7a46df2-fe2d-4781-9de7-9130a34ae226"
        },
        "item": {
          "id": "e78f8486-88fb-48f1-a608-9ae3b7688c04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f1cbc000-99e2-4653-88f0-1dbe0ffe2fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec57562-c968-43b3-a438-cb5a01cf4809",
        "cursor": {
          "ref": "2782b347-07d4-4d67-8f8e-a31645744db7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "de4feba9-fb61-416c-b55e-dd7f31943f6e"
        },
        "item": {
          "id": "6ec57562-c968-43b3-a438-cb5a01cf4809",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "97fbee67-453f-4eb2-b941-f277ca07d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac486db-7441-4709-967c-9051adec1496",
        "cursor": {
          "ref": "f8da7edf-2ea5-4419-9bc8-0ecda67fc432",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fbe2954-dd1d-4f81-9c71-e92467d97658"
        },
        "item": {
          "id": "7ac486db-7441-4709-967c-9051adec1496",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4175a251-88f5-429e-888e-f643aae3bea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef4339-38f0-4042-bec3-5e26d208023c",
        "cursor": {
          "ref": "b9336797-a111-490c-9a19-839d023f00be",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d45b2f8c-60d1-496b-bdce-f430eff98e46"
        },
        "item": {
          "id": "62ef4339-38f0-4042-bec3-5e26d208023c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d7ad2f06-5244-473c-8374-c165ee453d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2835c54c-bc9f-4f9a-aa66-408251e19c38",
        "cursor": {
          "ref": "5a00fc25-147f-476a-a44a-a7b86cfe4f89",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "43c54475-a71d-4843-8075-528a1242bf82"
        },
        "item": {
          "id": "2835c54c-bc9f-4f9a-aa66-408251e19c38",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cfa90515-72ef-4bfd-b2c8-fd61bd006b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d16c6cf-caae-480b-9ecd-4640937d5290",
        "cursor": {
          "ref": "1d2ae9c2-b91a-41e8-a563-956d701750af",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a0d56672-453f-4dd6-ba74-c9cbe9acc353"
        },
        "item": {
          "id": "2d16c6cf-caae-480b-9ecd-4640937d5290",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b49c5dad-8fef-4f68-8d95-4eb572dc04a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519fe9c8-93f0-4ba2-b013-de26699f5db4",
        "cursor": {
          "ref": "c504edf8-3eae-4cb1-b58e-002ef31c4ea4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e8a64d24-8ebb-4c12-9b5a-aeb72a13d784"
        },
        "item": {
          "id": "519fe9c8-93f0-4ba2-b013-de26699f5db4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "198aad18-dd07-4231-a952-14a8d5b18ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae4d19c-730c-4901-95fe-5201f3c79817",
        "cursor": {
          "ref": "36d9c2fe-1bd7-407c-90ee-49ec28ca0d03",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ba440f33-fcd3-499d-b32d-1a304a6d4a42"
        },
        "item": {
          "id": "aae4d19c-730c-4901-95fe-5201f3c79817",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e96cd60c-a636-47eb-8b97-9f2aa4fb4374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f73c842-cbfe-4e56-ba63-77e0f1d4317b",
        "cursor": {
          "ref": "692bfc67-fcf5-4a01-a016-fcd417bf3a5b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8caf9940-f4db-4c5e-b454-b3a871cf7049"
        },
        "item": {
          "id": "9f73c842-cbfe-4e56-ba63-77e0f1d4317b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4866a01d-40bf-4def-b5ff-cb20222005bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40762883-a4ec-4a0f-b484-e02e47969c43",
        "cursor": {
          "ref": "324adedf-878a-4260-980b-e2e661b60949",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e364d736-adc1-4f7a-b5a0-b75a1728672e"
        },
        "item": {
          "id": "40762883-a4ec-4a0f-b484-e02e47969c43",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44325631-ea8f-47b2-b172-c1e99e160bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d37715-5be2-4520-9abe-0606ddad4ccd",
        "cursor": {
          "ref": "293dd1ab-17e0-468b-98f0-9d1373d31352",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b758586f-bf4d-46bc-95d6-687d90c265c7"
        },
        "item": {
          "id": "a0d37715-5be2-4520-9abe-0606ddad4ccd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1969af8a-58d2-49be-9a45-188f5a6ff0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5c9f5e-a2f0-4383-b92f-3be5e469d353",
        "cursor": {
          "ref": "32d68de4-e611-4129-bc7b-33d5636bada6",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c3b6f865-3a1b-44cc-974a-5dcdcad4fb80"
        },
        "item": {
          "id": "ec5c9f5e-a2f0-4383-b92f-3be5e469d353",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a3418db7-2070-4ab9-85f7-5e866f2754e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2663e494-7e69-4a92-828b-da34eaa8d532",
        "cursor": {
          "ref": "dfdd44e3-944b-4625-8315-3b1aa9287fdc",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "94e8a9e7-952c-4033-9df4-f964013919f7"
        },
        "item": {
          "id": "2663e494-7e69-4a92-828b-da34eaa8d532",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "883ff8c5-c85f-42e9-b77c-3ac975c89684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573562b6-98bf-4873-8455-27837f8f22a3",
        "cursor": {
          "ref": "74fa765d-a705-4dc9-bbd1-4ae4f0d590a2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dea02e66-77f7-4ac9-ba4e-a1cc32e009ea"
        },
        "item": {
          "id": "573562b6-98bf-4873-8455-27837f8f22a3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e03368b5-0c7e-4c8c-84ee-632daa46fb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75942ef2-2605-4a38-b7c8-794ac7327d3d",
        "cursor": {
          "ref": "f10a1f1d-7d35-45bd-a337-29f20111c103",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bf5a4ff7-5097-4cd2-8b27-0ec264167b21"
        },
        "item": {
          "id": "75942ef2-2605-4a38-b7c8-794ac7327d3d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7cad542-278d-461c-98b2-a6f9e85b1931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91081193-b4ec-4264-9a50-0de34c440603",
        "cursor": {
          "ref": "ff9f8857-a69c-482a-8a3a-c0278e848af7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9b6db20b-3a6e-4469-bc52-3fcb3bb28e8c"
        },
        "item": {
          "id": "91081193-b4ec-4264-9a50-0de34c440603",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7bd31857-a42b-41ff-a91f-ca5b9e25a2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d68f4c-61cd-47a6-9118-13c8f62bcfac",
        "cursor": {
          "ref": "948916bb-6015-4552-a478-304b8862c048",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1e45169b-5e49-4547-a3a6-c51a36e3426b"
        },
        "item": {
          "id": "83d68f4c-61cd-47a6-9118-13c8f62bcfac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0256a69f-42eb-471a-9091-0251c7b6ef59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a496a571-2fe4-45ff-8b53-bcf2fb8beb8a",
        "cursor": {
          "ref": "4415d053-9956-471d-8bec-72429e5b7fb2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4fb110ee-0f69-4de7-8625-a6c0a0c2391f"
        },
        "item": {
          "id": "a496a571-2fe4-45ff-8b53-bcf2fb8beb8a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "72809d05-b80a-4360-9db4-e25de1396aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d186270-b510-4f6c-b778-3b4f63d3cc78",
        "cursor": {
          "ref": "97a8fd1c-924a-49c2-9609-ae1ed8a470ef",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3913eddb-1300-401f-bec0-72d6774e354a"
        },
        "item": {
          "id": "0d186270-b510-4f6c-b778-3b4f63d3cc78",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "05d2774e-0546-43fb-b212-10a516bfafa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a22601c-e5b8-40ab-8ace-1c19a6d40882",
        "cursor": {
          "ref": "f896b14b-863d-46cc-9316-056fc84fd2ef",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0aa93b15-d815-4e0b-8f34-515144d775d7"
        },
        "item": {
          "id": "1a22601c-e5b8-40ab-8ace-1c19a6d40882",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "151c4783-6070-42a4-85f7-6b72c0a12317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217a9e8-2e11-4263-94d8-7a66dba1ee3f",
        "cursor": {
          "ref": "a7cefc20-92d4-4b9a-82b1-652a2db938cd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0189c6ac-2979-4b48-8b8d-52b9f6e95212"
        },
        "item": {
          "id": "e217a9e8-2e11-4263-94d8-7a66dba1ee3f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "39999d5a-6ff6-4892-abf8-2db2fd4814a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec8acdd-c7b2-49b7-b13a-a53eaf4a1384",
        "cursor": {
          "ref": "7fd3c37f-693e-46d0-b1d2-87d42b6e21a5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d49dfb2f-fe5c-4c66-84c2-d41645ed25d9"
        },
        "item": {
          "id": "2ec8acdd-c7b2-49b7-b13a-a53eaf4a1384",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a37ff824-078c-4015-896f-6051183dc7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a5d1b4-c32c-41b8-b3a3-b126c688620a",
        "cursor": {
          "ref": "6f962182-2594-45ba-b20b-30e0a46cfc1b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "924cc4f8-034f-4a31-8ed1-3eeeecefc143"
        },
        "item": {
          "id": "16a5d1b4-c32c-41b8-b3a3-b126c688620a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b18951dd-6834-4821-869a-d9fe51c0e79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f38eacd-8175-4b0c-b485-159c812f1e19",
        "cursor": {
          "ref": "b18c36e9-08e6-475a-9b17-d3a1e4284f52",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0b27db0c-bff6-40d0-b134-3e579fa833c5"
        },
        "item": {
          "id": "7f38eacd-8175-4b0c-b485-159c812f1e19",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "90e94709-cd1b-40a6-a4f0-3ba87d3da671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7910950-e1a1-41de-a1a5-a9e3fb60305c",
        "cursor": {
          "ref": "3480dedc-3a66-4353-a8f4-1086a5bb5cb5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0ff467c6-8d50-4684-8d4c-8ee06a45936f"
        },
        "item": {
          "id": "f7910950-e1a1-41de-a1a5-a9e3fb60305c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72613d9c-33f6-43ce-b771-558b63088ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f2596-458f-4277-ab97-f7cb7c580e92",
        "cursor": {
          "ref": "8c69bcad-2ef8-405c-bba6-f8886d17cbbe",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ed70dd07-a7d8-4c7f-9fce-55658548606a"
        },
        "item": {
          "id": "125f2596-458f-4277-ab97-f7cb7c580e92",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "712b0453-40b1-4f81-b198-c9c7e6f73bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01fe00f-0309-4be8-8e0c-43a15f8add1f",
        "cursor": {
          "ref": "7cb1754b-9655-46c8-a5a9-04103a74045b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "86d33192-8d75-4516-b234-15b04fcc7de4"
        },
        "item": {
          "id": "e01fe00f-0309-4be8-8e0c-43a15f8add1f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d9ee7507-7726-4a94-b307-65b6aec53798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22facdd8-be09-4d02-8e55-34fc04c674d8",
        "cursor": {
          "ref": "a82e702c-fefd-4881-a0d9-ddaf364fccf9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0ba69c57-0064-4ba9-ae11-14293b069bec"
        },
        "item": {
          "id": "22facdd8-be09-4d02-8e55-34fc04c674d8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f2eb3d9-7e8e-47fd-abda-f1b40becfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaef70d-d597-4531-bfdd-70068d5ca49d",
        "cursor": {
          "ref": "014ea209-7a67-4802-83ce-f29f8d24bc68",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a2605c80-57be-42f8-b19e-5c322af6d3f6"
        },
        "item": {
          "id": "2eaef70d-d597-4531-bfdd-70068d5ca49d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dcadf591-b168-43e1-8adb-0d6743e71912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab3d9bd-84c4-42f8-89e1-2b91f5157e55",
        "cursor": {
          "ref": "75acf278-c9b6-4f58-8993-965e23b08b26",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0ebc254e-581e-4844-8cfb-33aff3848fcf"
        },
        "item": {
          "id": "4ab3d9bd-84c4-42f8-89e1-2b91f5157e55",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "345cf859-91d8-4b48-ba65-2bb010260614",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac6432-cea4-4abb-ad84-21ae24415174",
        "cursor": {
          "ref": "d0fedec3-8c96-43ce-b478-00fc061e55fc",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9d034b9d-f327-4acb-8c4e-08a1512b6ae3"
        },
        "item": {
          "id": "59ac6432-cea4-4abb-ad84-21ae24415174",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33a7b551-8a20-419e-ba8d-9e33be5bb5c9",
          "status": "OK",
          "code": 200,
          "responseTime": 1654,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "451b2eb3-db50-4d6b-9691-792a1668d455",
        "cursor": {
          "ref": "c429e157-9b42-462f-9d67-65126e45e732",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e03116e-9cd2-493a-b1c7-82891c50e5a9"
        },
        "item": {
          "id": "451b2eb3-db50-4d6b-9691-792a1668d455",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2bf051e-a1ec-488a-9480-f6f6eac5cf0d",
          "status": "OK",
          "code": 200,
          "responseTime": 1617,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77daea85-0e34-4701-86cc-910a40b355f7",
        "cursor": {
          "ref": "1b19aa1c-83d8-4e87-a248-790141429866",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9e1d2290-f233-4f75-a43b-c011cb26e958"
        },
        "item": {
          "id": "77daea85-0e34-4701-86cc-910a40b355f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0fe41a49-bdfb-4262-8f41-d18ab72f81fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77daea85-0e34-4701-86cc-910a40b355f7",
        "cursor": {
          "ref": "1b19aa1c-83d8-4e87-a248-790141429866",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9e1d2290-f233-4f75-a43b-c011cb26e958"
        },
        "item": {
          "id": "77daea85-0e34-4701-86cc-910a40b355f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0fe41a49-bdfb-4262-8f41-d18ab72f81fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c3e788-4712-430f-95c0-a59bb4c4b7d2",
        "cursor": {
          "ref": "1e8bc5cf-7e39-4ba7-b6a3-d3933aa328ee",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7f09fe0-26f7-4cea-8ac6-ea45d71fce7f"
        },
        "item": {
          "id": "d0c3e788-4712-430f-95c0-a59bb4c4b7d2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a7aa081b-c302-4408-bf21-b0406beef426",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e81f6c0-4618-4f38-9969-5d9af29c20d9",
        "cursor": {
          "ref": "29717452-a4a5-4c05-a546-bcbe6ab43e21",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f9b42fa1-395a-4e20-80e3-1747ceaf1de8"
        },
        "item": {
          "id": "6e81f6c0-4618-4f38-9969-5d9af29c20d9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c5ac0b9d-3b1e-4dec-8ccb-d96220c25488",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}