{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a9281cdb-3a2e-4c07-accd-06b13d97a0ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "24b6aab8-b8b5-4de5-8503-dd185b4ad061",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22c578c0-eb2d-4dba-9051-02c3d2ec84be",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "33e2651c-ca1d-4442-9d48-c84c3a5fb9f3"
                }
              }
            ]
          },
          {
            "id": "affa5fc1-0840-419a-9e92-7a487c136e39",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73b56f76-d454-45e3-b65a-73aba2522eed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bc41587-9c58-4e20-8934-311c88a39b56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2355bbf3-07f3-426b-8e7d-eea28b63a09b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9b62520c-64a6-4ff6-8807-8c1f2370d7e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfe09f72-d552-4775-a9b4-900c090cddab",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cd357ae-96bb-409f-806b-14526756c0b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1d14717-e1ab-464a-bef1-78bb57105088"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f21126d4-6a03-46da-aa07-ddb83e3b5b18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77980efb-ae8a-494f-bc94-e99de2153198"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3355e32-9ea2-408f-85cb-29405f44b48d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9b83b05-7ca5-4a1c-b505-a5ec96df7a93"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e37f9df-36af-4bef-a570-f6e7c193d684",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c5e44268-e06b-4f6a-bbdd-27db9af96e3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1c32975-8b1d-4d87-83fc-b4bf83bcd09b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb681194-1af5-4f4a-820d-528be56c586a"
            }
          }
        ]
      },
      {
        "id": "9b5e2aaa-ef0a-4178-a173-191ec0981f51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b1d790a0-5f70-4295-94b6-b1458f54278e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f2ecdab-94c2-429c-b190-18b229e11bcd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3fe201b-c78a-4b56-b771-62f5a0609ebb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56e539-9a90-4786-b0e6-9499044da5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf41d35d-31f3-401c-8eac-857ff6000f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e8620-1a09-4cd1-ab4f-a911705c0560",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11d8854-f77e-4d57-a786-b1a113862bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89fac50f-48c4-4397-86dd-62989549f395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e721e6b-dbf5-4364-b48c-f5c51bdd8bbf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598543ab-e863-4972-801e-645742c7d96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "185334e4-6054-436f-958f-f60eed283e97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1883f795-8677-486c-9b5e-eb5de53e05e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2434be70-c47b-4dbc-97b9-734ef75ba420",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a5ed84-d9f7-4d85-8a03-0771f1fecce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb9ce28-c0a7-46d9-b3eb-cedf29a9fea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae2623-0d5f-4d26-b603-93e4fbe52c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4794341-f75e-4f97-92fb-2ff57f292a66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9cc11e74-e20e-4c89-9f7a-090fd7d95d0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8082fd56-cd09-4f7a-9ab5-41a22396ba1d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "995b4684-fbea-4863-9871-b428aaf05556",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a1819c04-03c7-4329-9b0a-f20d85c5b93f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a284dbe-1b56-4307-a622-1489ce31af19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f0ce2869-a852-4ee4-ae43-dc28937e237f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e62a6d01-6c3c-4e40-84c9-65b07173e27a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7368cd4-28d2-409b-95d7-57e42aa959df"
            }
          }
        ]
      },
      {
        "id": "4683be82-17a5-4b51-8735-ead84ea99d1d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ebfe27dd-5488-421b-ad9f-da2bc1c2e288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b197b69-3d9e-4142-9aa8-e52ffafc5354",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1f32b2c6-a49e-46a6-b77e-4036b347b76d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b80d20a-0d1f-4854-8aff-6beee61be6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260bce80-57c1-4a64-bd29-5cd4ff2442da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695913e9-5427-413e-be71-c17c7110c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "705bf96f-39f6-494f-ad30-893ed3f36c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38222590-be59-4840-a294-320935f5bba2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd18cd3-49db-4497-8c41-2e1e2bc97790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a852d133-feef-42aa-a62e-d513d7caac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16afbfb-a4af-46f3-a34e-1990056c3ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773e6cf0-e2ac-4a2d-9424-0966d100d9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc831333-e0fc-4079-8011-337d0d1ff0e6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7e70d5-80bf-4dad-8766-7404a6ac01e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b9fa41-3854-49fd-80b7-b12f8581a981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13687fd2-7e71-42f1-bed2-3dd6f6eaf759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c839b52a-1062-46a9-95d8-1ac794e9082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72f26e8-0808-4392-ac9c-39475b7aed31",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0849d5-dfa5-48ab-9585-13b59cc54484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b9549a-7219-42bf-8b5e-554114544c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c846cba2-ddba-4bea-9932-6a004741fc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc89d3ff-e38b-45db-95cf-ea52b90b102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16baffa-1222-4466-a50c-097cddcfd622",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e09067-0fcb-492a-b0cf-d2fac0435cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5d80a9-26c5-43c0-8dfa-7fa2b2f2ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dae5f10-080b-49ed-af7b-2496037c0d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba62785-d96c-486c-a9f3-faf19af71aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04a45da-6acb-4727-8a26-5580f530ec8b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab92b93a-5290-461e-ad22-215736f2ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13387a7f-cb11-489b-896d-9f513a2119c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aca9e3-8379-432e-8182-cfc8231a6aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca35e131-8d11-435c-bdfa-fe077aea4d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010ade0b-018d-448c-8a1c-c56e86b16a60",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c688b4-c548-4292-bf8b-856b9a9bbdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e71804-5425-461d-8df5-e8792cde97b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0b4071-f154-4a2e-96eb-0b8ff357b83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba11e634-354d-457f-bf41-b6d62fb23dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b610e95-2978-487d-8ee0-3cb5257e09cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd4bc08-1fa8-41c5-89e5-fff33c5006b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e3cecc-f559-4e3f-bd43-365088a41928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85c2ca4-dcd5-4cd4-ae36-3b2c6ebebc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f042e5f-ef7d-4dfc-9b45-e8d72b7133b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e0dc99-05b9-42be-b1ea-7b2aba9c06d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0267140b-f542-4f88-b649-400ed349bfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f03964d-d4f1-4f9d-b907-fa967a2d65e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6163db4e-b5cc-4ba7-92c5-0354ca964873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdae1cae-c508-471a-af24-0ddc581b474c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fd5bc2-5071-47f5-8f14-e87c27287967",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c929a8-6792-488e-8da8-5f4916eea199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a93236-3b93-4b4e-b575-d5d2a99971c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5b9d19-2432-4a27-9c9b-4732e2db9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38de7149-e603-4bcf-8ece-df43bcf4221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60e6c83-722a-4c8c-90dc-85e7f980f05d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102f2b0-0c51-4a42-9b79-d7f373e4531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72899617-3bf8-4a01-8a7a-65f219192417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c15a91-e0dc-4122-ad50-e8fe15124cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4ce428-e78c-429d-83c5-bb8f4b8380e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06147a15-2290-4ca6-8020-9077ea574987",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ced56da-26cc-4cb5-8795-8a5610c042c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9a0d1c-c723-4fd2-aff8-8a33c776362b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c3c2ab-15eb-42cb-ab1b-7bfa8c8dc71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1db274cc-e13f-41ae-bf9d-c717561f2cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba19742a-0ff0-49d6-a970-a10d77e20e8f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e6293e-693e-4e58-a155-76e2b62538e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06eb15a2-cd7e-491d-80a4-30871f87897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb2c3cd-2666-4522-ad5a-d7738d7df1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e093278-4528-4dbb-9a9e-7d0653ffbaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27205b34-af70-456f-a3f9-c15ffee01b14",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075f01a4-ba02-45a0-84b7-32721dadb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64354b1a-4470-4583-8915-401b59cb3859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607472f0-a786-493e-b72a-e68d5758f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "197e90f0-f38c-4851-a0a8-e4db26e4c7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff12e67-5bcf-48ab-9994-29a7dec3b1dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e8ed89-0d3b-475c-9ab3-9751f39cde55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad282ac6-be32-476f-a9ad-43131cd6f70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165f1b8e-906b-4d33-9f0c-c44acb08f945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "460465b0-8773-48cc-bfe9-93cd962f4c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a375403-fdba-40d3-bbed-62c19d67df0d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6b60f8-316f-44fc-a89c-777353b7196e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc63e2d-d0e2-4b62-9747-5016aaeff41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4745f4-b436-470b-8dfd-7888e7642ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33c785c2-73f3-4556-84e0-d300f1364a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a311cb0a-d36e-471a-8c6b-4218f2b1f49e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ead09a0-3baf-4f87-b37b-a4cd1f63b709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4c619b-cd7e-4e47-8496-69481abf28da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb123f36-c405-4424-bd5c-4a5a1219f7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1228f848-2053-4d3a-81e7-429cf62fd971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dcc870-8221-4f0a-b93a-ed4738e2a579",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc964060-ba46-4f52-97ba-aa7b63af2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc05bc48-e295-41ae-99db-f9da3b3e2f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb3c4bd-aaa0-4eda-b1a1-cacc2b211466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1c6d7a-527e-4bf4-89d4-eb2f501eeba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ef274-46e8-4c0b-8bd3-5ab2725334f9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38565c23-895d-44ee-b514-05add6645684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6158163-0726-4306-a8e0-0dc5683dfc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a4a82-8a47-4f73-9e16-3148a624e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe4db85-2472-4a39-b307-43399e538aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91471b0-642c-484e-b557-7ff0974045a8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4630ab4-b730-4e73-9c88-1a43e3b30869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c86e7b4-621f-4650-95bd-61cb585fd170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c904b66d-7a83-4ed5-a522-6090e0327d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b3d32b-3865-4e04-93b4-af278e170a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cad61d-d2d7-4690-b309-e8d117c9ee76",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c700d2b8-ab6b-4309-b01b-72cd8289b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0b7a6c-b6e7-41d3-a277-e35f05f9edba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e5cab-839f-417a-a206-6ae864f765ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf55236-59eb-4347-9753-f15a6a4a9ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fa4bef-0d9d-417a-8ab2-52214ad88eb8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60d07c4-fd02-4154-92da-fb312fd29249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38c217a-57d9-4b59-a595-8b7162e2c096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e60890c-5b14-4bba-a168-96c4413e30fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc0ca84-be5d-43f4-aecf-6a08f02bc34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea5d48f-bdfe-4b33-8dd1-f598bc7111f3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bb57ab-7490-4932-a71e-55e73f39f733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b082b9-499a-4630-923e-b5250ddc252b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d51c4da-1a31-407a-bda4-9a5d44fafa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56897c3a-b0b4-4bad-baa0-8af1797897bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72efd46d-e829-4152-b013-af32e448704c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b91adfa-b5d3-4e8c-9d5d-6b8b2dcb5ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225cba7c-4be4-44d2-b868-419d74e72d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0a988f-e478-4ef2-bba2-b72e2d1c8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1a1d53-64c8-4ee7-a3df-3848e171ec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7456c14d-732c-4406-b1d1-130885de034c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f47ed8c-86a0-4283-aed5-45faac61e714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5fdb2a-3bea-4e15-bf63-6a0a280a5cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56352fa-dfc2-41fb-9281-47216fa06485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1e40fa-46ff-4d81-ae18-b3a540f6faf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b452512-2cba-46c7-853a-c87bc87e4cf0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b15e0-103f-483c-bdb7-3262288f2f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acee723-142b-4265-beb6-2e09ebe0fd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b8d624-8959-4f7d-9b91-ce538996a2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbacc49-0385-4a48-ae59-020cf0700b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95626627-8e7d-4404-9922-8e12fdb40e7b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493a8631-a2be-4b22-ae24-977c5c6498a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5d28dd-1201-440e-90ec-bb4bb381e6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ec86f-70ff-4024-8044-2c3e70b2dd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6df02ba-4f53-48d1-b838-c380fea2aa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb6a91-8de6-40ba-b4cb-1b3b8bf8bcf2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e0e165-4f62-4cec-87f9-d865eaeb1d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697bb663-9072-4f82-99f7-4858efbbe1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0904f5b-3eb0-4f27-9961-9986ab9025f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "093ad255-70a5-4073-b5fd-0b2643112a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312e514-d6d4-4d53-b4c5-724449adf158",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5488fc-28b1-4a81-a27a-f1a4afc501fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895423da-4aad-4da3-bc4d-6e7037b33b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e943a-e120-421e-9763-717063dd6752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b03e032d-5a95-4aa7-9e07-f4e783e44413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c866e5-245f-432a-91da-e9abcbf64631",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2f390a-caea-4437-ab42-85c88013caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09ae5f7-543f-466e-8cce-9446917aa9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62d200b-ac26-4f47-bc38-91a9f6a46c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "677496d9-d8de-4503-be3d-cafa5800d8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c5af7f-a545-4f14-bfb2-24c0a0218ec4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123c4955-066b-4698-b94b-86d6d8d0ed24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93733ebf-ce5f-4046-aa77-7b2440192ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c40139-1502-427f-a121-3e43b574f254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9740ece6-740f-424b-9f79-05cdb2c92caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb511d2-37a6-4eea-b0f1-0d168780c5cd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81acfdba-8f94-456e-b372-8616fb667b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2812ef4-1be8-4f7f-8c57-aaf58bd0eb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efba2e7f-1323-4e01-9dde-20e6721e8a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "564c59f5-38eb-4b70-a2c8-9a84d0a7e302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a705192d-8931-49ee-8447-96905a7e26bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822147cd-e4d4-47d0-a5d7-74b8acd93eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdca6e7-0f3e-4dd5-85da-b8ed81cc0fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62316c-0f1d-40d7-9477-c6407602bede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece5e3c2-9fb4-4340-8ac9-c6eaf3efd99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c447e5-8d4e-453e-8e2e-a6e08d6a6461",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc002cc-d650-4560-b6fe-9cf73fd16c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c83e3b-95b0-4a9a-a41a-5f96e8cd9671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a400b6b-1b86-4f05-95d6-5a3221bff496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6fc99d-cdeb-4dea-8d19-d0360b535c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e6819a-f203-4305-b19c-6241224a75f3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb27ef3-4ab9-49a6-9ea2-725f836df321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bf0359-2d4e-4bf5-92d1-d236d3cebfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b35eb5-ebc8-4666-9eaf-3c518fd95f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b3069981-b9db-4569-af9a-974a3daae51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b181b0-90e5-4924-bd94-6bb5ddc75fca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0938e76-915c-4bdc-81c0-26ef4d184e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b2fda11-6540-4a7c-929f-fcd624784ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00b3b0-c92a-43e2-9b63-df4617d068c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5514f8-a438-4c35-8770-1ecadba9a3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d0678d-4996-4b41-90dc-ec9ae040e252",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ba82af-eec4-4a56-bc41-3502d8920eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f81f44-0b1b-4a0d-83a4-b3014425378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9af284-a00d-4129-ad1b-67c5d5005db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "152cd3ec-2220-4f4d-a570-6e1c390dfb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891c295a-aac2-416b-bc3b-2d7f69880b9d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4096486e-7764-4566-a927-0c2029e40bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438fd4f0-4d66-469c-a6b8-c1b821c01a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c895c0-ef0d-4273-91b0-d755c5670707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee159d1b-d296-4134-9d4c-c19532dfafd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49a144e-0042-4645-8e31-31619bffb572",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857cb6d4-8327-4910-910a-ca3c9640e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28887c79-6556-4d10-ad22-ba9db78aae09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3d256-e3e8-4c2f-badc-e9488317d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ba75ad-7707-494f-9a69-8d9553ffdcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a94d3-426f-43fc-90ca-0a122c259d74",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf08197-eb68-48b7-903f-5165dd73cddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da35a0-4ca5-44e7-8e97-4c8be4e06b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e8bd07-5100-4164-b6ac-17ee96704a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d851d2-e250-4ef5-a881-2007a1e1e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c596eb5-436f-4c2b-bfd7-878bafa8a6e3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d3a195-2f95-47fd-b1fc-b60d601c57d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eedd6a-6998-40b8-a48e-bae70b989075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbb46b7-6e93-49d2-8e8e-0f23e2ced000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6698a4f9-b352-4211-b890-282ec47fa10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084af9df-d9b9-40b1-bd7e-9f35468df9dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba5c15-f476-4fe8-b000-9f4152fa5458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32965bdc-8fc1-4959-aa9f-8b5ea40900c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa963619-6c65-4432-bfc7-832bc20c510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b5798024-5051-4e27-86db-4326a22af0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f7838-11bc-4143-acc5-ca0c0de66ad2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3a2945-0e65-481d-8692-73d9a5c83f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132318cc-a0a7-488c-b2b8-e7749d15f559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2902729-4cfe-490c-b218-0ab1003ba460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3283df45-13c9-4c96-8861-4e77487bfccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afae2fb-8149-4739-84c8-ded395884938",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e20531-07a1-42cd-9576-58fee0a8d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c885b53e-a47d-4669-abe3-8d829b8e080d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1ac4fa-32cb-44e0-9ee0-ec2890474a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dcd3a9-a301-4a81-a99d-f27445585064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89c52e8-1d32-446b-913b-c03b14d94854",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6109641a-0985-4f60-a7ba-63520a20cc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d9a866-5521-4a5d-ac07-e76a495ca824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ba9cef-7ac5-4541-9d87-216ab91fab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c34fb97-c7ba-44e1-95d9-039285a80202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9357a7f2-de90-4fa5-8d67-42f2dc70a314",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b697c-8ea0-4e73-8621-959824bb0f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa83962-b25a-4062-9b34-f6b9abe24283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a635367-6d80-4a66-9a26-3268b48b5789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3778a9-2cda-47ab-a10a-47e44b2081d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056eef50-7da5-4861-98fc-a6435bbcf50f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c147d307-c111-41d4-8685-0988d94b3b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66772ecb-1611-455d-9a82-5df506e10537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0333e01-93b5-4023-9929-d34678dac397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0492ba37-ffc3-47fd-86b8-92c1dbeedaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440d8734-a076-4e5e-8c39-529acb7fbcd2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60701df-d0a1-4774-9cc9-0788ad9ec08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015988f-d965-4a60-b73b-91295d6cdaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159373c5-5542-40a1-897a-bc01a1a7f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50815c24-f6c7-4bef-bd3c-a9bbb3f6569b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baa97ec-f2c2-447b-a39b-acad81af53e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e5291-0af3-49bf-9a85-56beeb6f2856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde028ca-f232-4d5d-ad08-15bdeef4116d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc2d581-859f-4f39-9171-43fc2a3106d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e78279-1d3c-4e02-8633-bf1b16d43748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75487405-c9b9-4cb1-afdb-77a75f7a72b4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5df6467-3de5-4ccb-bc9c-4419eeea0fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42351d0-6455-4237-8f49-86c7389f4a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055a26fe-b677-4b20-a781-c9abcfb429d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53f6ccb4-dccf-4f89-bf56-f1be0b0df466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb00ed8e-f041-49bf-9d8a-0d8a86169174",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d041766b-4aaa-4ca5-8e76-afc57bbd8403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb53f59f-706c-4f7f-b20f-c489029dca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64791b34-7b1e-4c5f-ade2-d051e72bfe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ac2264-b08a-4554-86c9-d930ae06ca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ac3e97-50c5-4b04-9536-353b3367eb2b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c752e1-3de6-40fa-946b-f2a1f4bbf7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026a2ad7-9779-4edc-8b5e-bd91481e99b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487602e8-01d8-4380-9017-fcdb8de6858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ec31ba-07cb-4d8d-aaa3-e21533df59fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f5ab0f-d09a-4890-ae00-7ca468dc9d0c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60da7c12-fd75-4174-82d8-2e7c71b1df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df13ebf6-1489-4278-bdf2-1cb8bcbaf88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeeea39-3a51-4f60-8b81-35078f00a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c668413c-f6a3-405d-ac6b-129b21b04202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95d077-8688-4d0c-bae2-0d44cf573bc9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290882f3-2901-49cc-87aa-50d9c2dd6f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb18841f-b06e-4353-b1a1-6cf934f379ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb8b099-7e6a-4b28-8b74-91dc13aa9097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7841385a-0920-40c6-bfa7-e01cb570f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c659e6ee-4a84-47b4-9781-c7cfcfc34340",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a04ce3d-73bb-4679-9e74-8809611b0776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d663cb5e-a71b-43c0-9d96-b6c45f0985f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b245ded-5ab7-441c-bed7-a32da43b28fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ea66dd-c634-483e-8ddb-f5c478e21a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb00f5d-5194-4219-803a-7bc2d7b7f898",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdafc715-87f1-46bd-bb26-e29c0ab98775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71b200b-97f9-4dc1-ae3f-1d95b8ab223b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562244b7-daad-4b25-a06b-fbfe85e0f8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "610e3ebc-ee6f-4f4e-aa75-f40830fcfa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192eee7f-f8de-4cec-9129-0ce691099f79",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b03c2-0a7c-47cb-b7ab-41f82588afa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55c4573-bc4d-40fc-8816-2907b8ffc79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d81b4f-4ff7-49f3-b1ee-9970bf62736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6e912c-05e0-4823-9275-d5ceb7610515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e42538-6192-4311-89fc-78a1bed01de5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfc0a77-d132-4b73-ae82-3e47da360b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813a02bb-9169-4ad6-8f8e-5da57b15f138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf5954-586d-4b0e-9599-c11ab73e8797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8499b16-a39b-4abb-91c1-47c510440da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd84b28-e2db-4d5b-8944-179341d33537",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d02f37f-4f2e-47d1-877d-abaa9e04ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770943ab-30bd-41d1-bd9c-b67c1af41b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2301afc2-21bc-450a-8af6-ce74f325dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "681b8256-4d3b-41b8-ab47-9eca80d37285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6358ba43-5a15-4ae3-b18d-7bf76024c9cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860cac2-1545-4522-a9c2-24fe065b13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e700902e-1bcf-4655-a8a8-d3c19411a661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7615c6-ce9c-4efb-a272-1141002548f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb701cdd-2b8a-4da1-a7f4-f14201223122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f133484d-512f-4eb8-93e0-a04b72ca129c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a05288-6971-483b-8fc5-5a68b62d1cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22435b35-7d7f-4518-b549-1ca822210730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bc2a05-2696-441a-9cec-6f46b6e812d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5be4e2e3-547e-4e6f-8374-1a68378b4778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb28bc-12e7-4884-ab6c-65683756b54a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9a7fa3-c45d-40b8-abb2-c2c382a27b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86afe509-f0bc-431f-aa36-d2ab9d7de214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889020c4-6928-4a80-92b0-e4aff062cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a98b3a-5fd5-4b8b-94c3-4ba22db9260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284e6b5c-3e2f-4af8-be9d-b88f0e8cfd7b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61651b85-3f62-4c45-a8b8-ab18f76c84f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d177cb9-c11c-49f0-a164-cc616f1dde7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9128f18-e3d7-499e-89f9-6da19cc36f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2cd6b6-7987-4887-a454-36e919af30c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c62be6-553d-40cc-9840-796a38f9824f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14668b2d-ac18-4069-9a68-6e090c27464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf2c624-12bf-4b77-b251-ca10d9270927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55856ad3-7389-45b3-a883-23cdc8d5838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2feac8b-cbee-46e4-99ab-47f004476552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6a451e-48b4-4591-bccb-1affb2620a6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05257625-8019-4d94-96f0-8bcf45e6f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d780c09c-d393-45fd-b340-6bf4fb38a0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb61dd5c-f243-473f-959e-9b6a6ab49304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847ee990-b492-4908-a8c6-722b4b7cab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac841e4-6774-43d9-b206-aa3016f95334",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf6b3b4-6491-4618-a748-b06d88842e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42476e97-2437-42ed-a1ce-9393189d637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14303bf1-16d1-43a0-a340-0bf8ee28cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de2be90-516a-44da-8e7f-73c2c095193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf0af19-4767-4017-8f75-31b3e745cdda",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0b7327-9475-4799-b93b-0c2db56d0066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a635d6-a8a4-4876-a08c-c4288cc5014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3e331b-a207-4bb9-87d9-eb593fb47f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b87e3fd0-0273-42f6-a310-1510ba04131b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa777dd-36e8-4cc9-b677-60e4f0122079",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b52ce3a-273c-4501-9dd2-86ef1f0f0a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00a2e01-8e6e-4707-93cf-3abd146c3622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b42c86-fb03-4dc0-bab5-022985ea4040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64fd74d-4f88-4040-9c53-40271cbce98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf96130-5224-433b-bf6e-7dc73410034a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207bd8d-fcb0-4300-8443-473d05868ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0b2cee-8743-488f-8573-38a3ad9231da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7b24e-a228-452e-b068-530bc0e572dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d12f2e-8743-4658-ba2a-c43f272722a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27ef600-c889-4300-96dc-0823637c36a6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ec0d26-5cdb-4a2f-b335-a590c82dd51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a94a7d4-9c87-4a9e-b11b-117b54361405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856b1fa6-4112-4ba6-a122-5af304d4fddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "391d6c8e-17cc-41b2-966d-2fe3b558fc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781ea161-b0f5-449a-9c8d-005227263f0b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecac74e-25eb-432e-b4b8-44826a11c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4db5a78-3dcb-4b22-8132-1488ebb00e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d008636-f7c5-4b45-8d1d-b61e6fe40081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef1a9ab-a977-4e5b-bc0f-892f14a3cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252ceec-fed5-404a-a40c-131225e33251",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55656a9-80e4-41cc-ac69-3fe14bfb2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d57b0b-55d5-4d5b-ac86-ec8470cbb111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb5e3aa-fc52-4bb0-bc80-24c1f32b2375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db47886-689c-40cd-94b2-8d514287762b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db5390-81c5-44a8-9e06-7f98d42190eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d705a5f-e36b-499a-af24-351b342c1432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb86f45a-ee4b-4018-a814-a47fe6d383f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedaba47-a317-47f6-86f1-95a680d6b367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f3ecc2-15c5-4951-9f28-225a6a26b2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13439060-6816-40fc-91e7-c754d2a0c2aa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658c10e-f178-4f07-962c-bc604ddde862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3ec6a9-67ad-40b3-ab01-d5114f769322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d63b33-c743-4628-9be2-42b4cbee4bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10af02b4-67ee-4236-9d5e-a7dcd297c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80847e4-5a2a-4394-b52a-25118c873760",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d549d96d-1560-428e-a710-809ea07f71db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa79e29-aed9-4850-b60f-8cf34a578fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ac059-e371-46d7-b35a-fd006856f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9675d8f-2855-4ef1-89a9-c0c5b100e88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5391d45e-807d-44b8-9751-057ba972a2f1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9c257d-3d55-4639-aeb3-a4dc31ab5404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a352f7e-088f-4c5d-90e8-744ac0fc75ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dab4de9-7951-44f7-bfa8-89b56fda0d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "108f3c6c-d84a-4344-842b-01232ed86f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90713e3e-b4a3-4c6b-83a5-7c0e323ec915",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a84243d-9c6b-4a12-ac23-86254a1c58eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a81da0-4eab-49e3-ad0f-7eea0a1a56df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c90d3c-47ef-47d5-b947-1d7731f3c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "774ea5cf-ff3e-41ff-b073-0ece05d4540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8382211c-b17d-4945-9b95-5f6c93f4504c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3639061-22e8-47a5-954b-8de4ee5b1a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f28687-3fd0-4468-a9d1-068e46e6690e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484c48bc-8e62-467d-b9a5-40d8639229fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c509d9-e2cb-4a0f-a954-efe5af08e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a77778-9f4b-4976-b5b4-24360e62904e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31043791-d0ae-44d0-99d9-7c5f3a62136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d5e385-66a1-4499-949c-7c83b5b09e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58605a53-bb8a-4074-b041-691cc5e05acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58c0fd3b-cd73-4f28-85fd-a9f4856916e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7952cd0d-c6b1-42db-b384-7c8e0695e60f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575beb87-b6fb-42f5-ab11-b6379dc84c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c03f92a-c57e-49c1-bec4-7dd2eb63a806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3b4b8-84ea-4f21-9e50-a9b80053af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5ae70d-34ff-4f1e-a03e-6cfec901f329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71487457-7dad-4907-b257-ab22eec24e2c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e899247-eff3-4b4f-b8fb-04bc816eac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe58462-1d13-4a40-9b15-dbfca1ec50c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2193ca26-3a92-4a44-a0fa-6bd88b1a4552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7f2120-3a00-499a-8f2d-c85464cae403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfe2681-0e42-456e-a347-b4cf4ee5323a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae7f12-e6ba-40d9-92c6-335a0212b399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce2edfc-6e64-4801-830a-3858d7899af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d4f9a1-4192-428a-a16a-9f0318e41090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ca46b8-dbc4-4c25-a039-df920ddc3a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992177e4-ada4-473c-ae24-d5cb9b7d2301",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303767ef-af73-4993-84aa-85e77c03e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14d11e5-7de0-42ae-82a2-e91b539f773e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657b39a2-4306-4df6-85e5-72b9b2e90aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc253c9-f8b7-46dc-8312-f27603e5febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b58f5b0-2014-4cb2-8937-86b4be1c93e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f8697-a893-4e43-97ff-a1c6923ea6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61df4318-c2c1-4098-b73f-4b88bed940e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf108675-99a5-40e9-8840-8db9ab25fc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4daa31c-88bb-45b8-b49b-d2362f6ef4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fce88b-7c7d-4208-a6c5-f0d758c16a94",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139cf95c-e010-4229-8aeb-af1d6d579e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83a8af5-e8e1-4d57-914f-56ce4e76cd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1606778-af40-473a-8083-14a54777394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d387baea-a1b2-4920-bd72-34f954d78875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3efcf96-a8e0-49d3-9cd3-b23aaf5a1282",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353e9d83-d7da-4269-8298-6919ca70a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d57728-54c1-4424-840d-b02ab7aa26a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fc80ad-408e-44b3-be96-58f229684bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ab9e28-17ff-4322-ab24-7b4eb757acca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa02f3b-15b9-43a8-bdc5-46d142ce3171",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f666258-41bc-40c6-a80c-e886e15248b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341f62e0-a24b-4af9-aac3-f0c0a3c151e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16328057-ff6c-4407-89de-95d2b8471bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a7f91b-c845-4189-bdea-820c1d3b2f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677674fd-568f-4a5d-b0d9-2bc6fa02c5e9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62b363e-bc8f-4be6-a670-70ab3b72f904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1614cb6-952e-4c73-9b00-d15fbb9a0c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36870fef-bcc3-48f9-b703-e49972258ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92358806-fb78-4e36-b7c5-e4fab63171a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9ebb4f-6b26-4202-8c6d-c9dcfec1be89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dfbf35-ba1e-45ea-93a1-3ab8c7f568bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03119458-095a-4930-9ab2-d03ba717c4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e00347f-ea73-4c29-b85c-3799f493ccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b758f586-8e85-4432-b087-4aeb3389f4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f091691-246e-4d29-b38a-12f895dfd2d7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a62976-25c9-4b91-87b9-834b38ffc99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e61b5e-9314-4835-adb7-0f706de8ac81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df3ee24-72f5-4a6a-9f77-a6e9c59f94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d731895-4e22-4602-9e21-e2b26a6aee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee783d87-74d3-4e61-a754-bafe01fd8c5c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3eb68e-64f0-4c13-8a76-ccdb0e851ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18c84e7-af21-4938-a890-6b25682cccd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e1de37-75a0-471a-8218-26bf52bae92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aade81ba-fd11-4ce1-8bcb-bc468364fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de00040-c8a5-4293-9085-a3b3ee85ee94",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ca8ccf-85d3-497f-b4a6-00c1789cdf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "de60a4d7-0f20-4094-b160-a643a31d41cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70f690-0cf7-426f-bda4-68885575513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3653f34-d4ae-4d29-9dbe-5cce156e4430"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e733b39f-f2db-48b0-8836-e457b7308881",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37d4e16f-3d3e-48b5-9a84-2dbeb8c8ce09",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dcd0f7-af80-45cd-b6a3-593ba6736022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a8b7a89-cfc0-4cc3-9f82-6504585a3983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16efec78-957d-42bf-99cf-a5db7c60a915",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ab310f-b4de-4f11-bd28-6ece6835397f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf2e516c-8fdc-4b76-91a6-1f51de85f1a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7107d2c-9ea3-4bd6-a22f-7817e1ed819a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c92281-f848-4b5b-b921-1f53270d8af6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63c3466-401f-4bd9-bc9e-c6b475ab37c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b409f926-c802-433d-a3c9-41f2dbb5b19a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6107728b-9272-46b3-b102-3e4b91bc6359"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb183c99-b0f4-47b1-aa0f-6142e2c70b46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84f7e048-c18f-4788-afb6-275635394060"
                }
              }
            ]
          },
          {
            "id": "eaab91b5-ed88-4154-b04a-8ab634e9d159",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14d1c7cb-b9ec-46d1-b857-55541fc29f7f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "efee4b96-a2d6-42b7-a929-b87d1859dcc0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9b78b-7c25-4c86-8a68-8fbf1bfffa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "913f895f-474d-48e1-9e2f-57899931375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737da3a6-ab0e-4e92-b4ca-5fc010d791e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0426a72c-7e25-482f-aefd-a12bc4382a4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af56f745-9b6d-4949-9ce3-9a7b59ef6c7e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5ac134-b261-4e36-991d-53b77b01bbea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8880b7ba-c329-4ce3-b216-52d4d67641ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e1cd68-8b65-4b67-9926-0fe5d6f5c602",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9d14e08-b6ee-40b9-abcb-ffaad671f25f"
                    }
                  }
                ]
              },
              {
                "id": "17a9fa5f-f8f8-4908-82a4-5ee652d938f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79360532-5433-4284-97ad-d67627932350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c0ae126-2d9f-45c7-a606-666641f93643"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e548b670-a3a2-4f0c-bf81-923aa419bf7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "298d3675-3bdb-4514-824d-c1dc40368baa"
                    }
                  }
                ]
              },
              {
                "id": "561e5e53-1c89-4ac3-9676-b1c271ab7c6d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab76d667-fe21-4255-b10d-c8891108d6c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb80a272-822c-47f6-8349-4e7fad50f1f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24fe07c0-34aa-4d25-8ff5-6b0aeb9f2a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa293923-e0b1-48c2-84f3-725bc8d3a354"
                    }
                  }
                ]
              },
              {
                "id": "bd088750-8a79-44a6-b793-469c59381bfc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33892b00-c0e0-4703-932b-a705d4a5ea5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "636d1096-cd01-47e5-9a2c-f04911c70a2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4668bdef-1c2c-4096-ad59-65be1d6e6c80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f2d512b-8d5b-4af0-b7c4-436a3305449f"
                    }
                  }
                ]
              },
              {
                "id": "85058040-b28f-44c3-ac23-e10827451faf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7014447e-5619-42be-a5d1-d3ceff9c81fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fa9d9b7-0283-4401-9abe-fd865735e05e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb36455-2ed0-4ed7-a8f7-0b2da971b931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1991a90e-a361-4381-8474-04709037fcb3"
                    }
                  }
                ]
              },
              {
                "id": "520ca3ee-bad9-461e-aaf3-966a5b37eea2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47045f51-ef11-41fe-9c76-2a0bee8fc03d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9379c55f-7d93-462d-8ebd-d7a5ce784aac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90f97e2f-f977-42f6-b396-553cd3786446",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15c5be1b-eba6-498a-9107-34b28616c7b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "515de7d9-b125-4f43-b176-6a745a0e7632",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c62de8c-a5cd-4b65-8af1-7d6b356db4f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef74682b-b638-44b2-a552-0fb57707b34d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7da6abc5-7f64-4d4c-b4d0-3b66ab3bdc77"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b51fa777-aaee-49b8-ac99-aca83e1c260a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f7fbee91-0266-4dfb-ae20-ba85805d82a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79690dd4-981e-4486-97fd-5f9c3777e829",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b29c14e-6948-405e-8307-e50650d26a7f"
            }
          }
        ]
      },
      {
        "id": "a36863bc-1d00-4988-be51-adf003c1672f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a48308fd-389d-4c54-a4fa-e8c22ffceb5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19cde132-3810-45a9-be03-a86f59e838c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d8993dd-c77d-4977-b2d4-6afbd5f8814f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01414ef-7aee-4011-9f9f-5814fce05737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d167af21-c52a-406c-bcef-d65a1f4f5a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8212ad-0f5e-49fa-97d1-bd97696948a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4e3f8a-cbc2-40f6-8a94-3e278d86da9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023f0072-421c-4380-9ec3-f0f9917a0063",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f417a70b-5793-420a-a04f-56678c26bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36721c30-c6d7-4710-82c3-2a186ba4f3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba6bee3-9fb0-4049-ac20-666538a85d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3368e2d3-4ad4-4c23-bb0b-820a79c2ca3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0457d-0cf4-42bd-a00d-1a687271ab32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9c539a-eb96-4404-9ef0-59576879d19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8b9538-cc31-4298-bd83-d80a19790f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fc0542-42b7-4d29-8f1e-530db70a34fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1c4fca-5be6-41ba-9cf4-0668121f4e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a41353-27d7-4647-b197-863c996502a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf7aeb3-e3d0-4218-b25a-2b9e77f92168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a8eb70-9eda-4294-824a-05872d881a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0534f0d4-b5c3-4bc0-a7ab-e5757263ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe8dd20-3ea2-4085-972a-2e4984493e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8c9cb-71f6-4747-85ba-18ef307c0e1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc73621-cbaf-4ade-a39d-004230051c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e175902-c793-4632-bef3-983cbd5f682d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830b3217-df7a-4aa6-b492-93ec7a91b00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c378f447-f8f1-44ec-a621-486c2b6cd4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e40e9af-d983-4fd1-8883-10d5c6a6d2cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b220a-aaae-4a2c-951a-7c2d94da4f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf9d8d2-6ddf-4ded-a50d-48ca7621a20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815e8b1b-c123-4e25-84ac-0c368e2b7de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04a62f15-5683-4ca7-b2a5-03ca6c8532dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16053fa-1574-428f-b8be-929e3b6ae5e7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88ec816-f117-4a2f-bd00-26370e58fbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4534abe5-08b9-4a05-a75d-f19b3859a377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484de460-9d0b-4eeb-b58b-93bdd5e576c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86d3f22-8708-4d57-b64f-deb61304c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bbff52-2ef8-4f36-91da-bf9be7838da3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d4c423-4d8c-4876-bdd2-602193212a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69919642-0ed2-494a-b036-98d4517790b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b8959a-7593-4f0b-bbe4-2a27547863d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bd2c00-1254-44fa-99ef-8788b2348ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd8d4a4-e8ce-4799-bd60-ebd8abb20725",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33235a76-afd3-4ffe-bcdb-1f4aacc74435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426b6547-76c2-43b1-8b6f-03ca364b256c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e53d9c-54ba-4683-9f3a-cc1824aca396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e4f32e-2111-44fe-8294-52b75cc92023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d23efd-5090-4f2f-a0a5-27272cae24f2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe6966b-cd7c-4046-818e-6606d198da44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10877a7b-cfdc-4f27-a581-07e47b8ba626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb31fcf-ee72-44e2-af9d-7fb1e71d199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a968a3-e11a-4b38-964b-7c8b9e9be8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed77e35-53cb-48b3-89a3-4f4f62ef6fbc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080cdb1e-5236-48eb-bde0-520a82f69ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add37105-2231-4477-98ba-f1f99a59a8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4937da-f467-4b2e-a1c7-ebb177533fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce54fde-3050-4650-939e-9b614d66f1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e7c348-a7a4-4fd7-8b7c-95e39ff6f886",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cc3c21-b038-4cb8-82ff-670e200d0ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9b9524-6e2e-4511-9dd0-bdda276c95f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccebcc6-da50-4f1b-bed2-603d4636722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a628817-cb7e-4754-b83d-84e980b3dc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248f8142-57e5-43ce-b9d8-ca4b8dd33bf6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f5b6ab-29a7-4674-b7c5-abcb89aff61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b41298-3708-41e5-b2f4-1bae3aacdc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40293aa2-1521-46cd-9158-d5e0119ac323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85257fc7-0997-4ccb-8cf6-f5ec578e5cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6193e70d-9ba1-41d1-985d-d6bff9a1023f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe46336-72cf-4eaf-ac93-9bcc6de3613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46732455-9788-477e-96d0-2b9f2e51c06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f7c05-dd84-4e1e-8deb-fd0dd5f0f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8f09de-6fca-46d3-bd4e-9ba3278e7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae3e33d-acd3-4838-80fe-81d40dd37db7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0a4361-7266-4724-9bc4-560e625e0940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc09bfa-1766-4c48-940e-262e1c7bcb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bfe52c-97ff-4c3d-a009-542d4dcc2789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0f3742-2306-4051-946e-de47439db379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b772b-bb41-4d79-94e8-0443a62158af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f94d28-8805-4756-8c4c-8dcb30a39833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c6e3d5-ba0b-4616-a492-e978ddf5ca8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96087b41-a080-46cf-a4b3-bb99346f20b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "144c2544-046d-43d2-9392-b0c618173330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8957688-d9a5-45de-95a7-1fa0ff3438f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e91978-e42d-4f23-9730-a6fe3e66d37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8c1948-b817-403a-9c76-385a612237ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1e7df0-3952-4232-bddc-a89b0ac6221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1f848c-2eb5-484a-8d6a-ba8ac8a003e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaab1c20-5061-415c-b113-ea0cb12c110a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85357ad8-498e-4bae-ac76-eab5779ef0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860c91df-0cb4-47c2-b244-879e5e4e9240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2482f-1fc4-402c-81ad-fd11e0859ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a022b443-dbb3-45aa-b7cb-2794fe3ee8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5465c0b4-95fc-41cb-ac8d-c609995fb093",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b805cbe-09d6-4c9f-b778-ff3fa2394c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881ef2c0-3d7a-413e-b404-5fd85ac7578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e61b5-caf9-4437-9a53-61407d44a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad42813-7c94-4799-9a96-1332e01a8580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f29727-242e-4a97-ae41-02ff63ff8835",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8133c3d-5960-4258-9c55-1a601a843f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b902541-a1e4-40c0-a8a0-f434abcc0364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d23fd29-5b23-492a-b8a0-418c73dbf470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7946ce-cb98-4cd5-8aca-bfed37d7442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847d9353-42bb-4cfd-a5b5-34569b024b72",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2bfacf-910d-4204-8014-f112bb1a1186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3c8d44-c07c-4645-ba94-43accb9abf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb213a2-2416-4b2a-9297-f48e7647470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac467d4-874c-4057-8c00-0d42e5e17fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc30441b-e0fb-4ac5-be7a-1803f65f7b56",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17483308-59c6-4e34-b156-7b44b4a513e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da31e3f-a3ae-40cf-b5d4-8f72fc4e6575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bc83fa-dd4e-4936-8171-67512d79ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d4cc1b-adf8-4ecf-a524-0ba5d820edd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b729e-80e6-4280-af0f-79fb0ce23f85",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b531ee4a-8de1-4938-a6f9-b8a205480446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94710338-e9ac-45a9-853c-05cd2260b5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3448e345-3e88-4c33-b73b-2f9c63586323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92355bb7-b285-4273-bb23-23a6aad48bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a3f975-ba4f-43b3-bae4-77d462192bdc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4631b55d-27ac-428d-b0f8-4c4848243513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65259773-0681-466d-bcd4-5b82aa0072c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85219ea-9d42-4d6a-93be-5cdabe48da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a8a55b-bbd9-42b2-9bba-f529786beffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b866029a-698c-447f-a654-6cacdadff1d8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa03047-9ac1-4624-bebb-f9b69640f055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f8faad-35b7-4b6b-91cf-dee1b7eb708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f7dcbc-590f-49dd-a7b1-f20d8237e281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f9517f-7d08-4a76-89c4-6c68a4ca928c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7315cbfc-7796-45f0-baa0-9eb8953eba52",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcaea84-b7f8-471e-ae7e-743b72a20d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9beba98-4e84-4ff4-a203-57b1592dde56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365f497-0ce1-44f8-a58b-00f19ce7274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfbaa1a-586f-4d22-a9b8-017d07dc6625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39a9ce6-fd10-44c5-aeaa-e56976c69843",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b3e7f-8f1d-4c1f-91d9-e3bbeb53d3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eb70ea-0005-4144-bc18-4870cca65a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a1b252-7a0a-447a-a86b-2d72e09079d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39986de9-1d5b-4aa4-9fa2-74f9c34dc9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75b84ac-d521-43b0-8342-1ec7245106ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160541f6-8cdf-46bc-9f34-676e087ce60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498ac85d-e1fd-480b-bd08-00cbf0566a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673d7087-5199-4188-ba9b-4e371f47be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed3c7dd-bbb7-4b2a-ba3a-2039e9cea3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee5ec9a-f314-449c-b6db-52c3b76e1dae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a439db-3ef3-4ad8-8bdd-f90f118d248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37558665-397e-4328-a9f4-e8eae4ba8fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2724fe77-afb5-454e-9930-844242bad6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87bb1d5-d2d6-4e43-a2cd-43dfb1391a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a2a3d9-2e43-45f4-98e0-d45c4cf4552a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9557eb08-a94e-4e01-b823-0b5def82fd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b1eb3b-e5a4-4ee9-b552-b7251afeeb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dafb3e-7de0-418b-a3e0-6300b9ab81ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946b5d5e-e908-406c-b64c-e07cf0ce3f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34359d-8452-48ca-a5e8-aa6df9e7a810",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a52ac54-5439-457e-a805-78a6eb316432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c1c0de-77cc-4cb7-a7b5-8e1c16eda295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac57be5c-6c02-4102-9d51-3ca194d88afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2554b57-ce82-4b88-b63d-65df706c9bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9664e8-bb24-475d-8e4e-ddc0f5191d8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e484a30e-7570-4432-8922-317f77384a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132a939b-dfbd-4379-963a-c352e0f2afc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a03f9d-d669-4c1a-8d3f-69bf110ece13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb2482a-5f79-40e4-8430-5c43ae19ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a75ebf3-088e-4a38-88a3-059ee042ce4b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b51925d-6e2a-4e75-b68e-e511b094f2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffd8877-77bb-4e35-8f31-4fc66c15cb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15469f8-4c9a-49d8-aa2b-ab7b94f42cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8039f7-0634-4dea-bcd4-0db6c9b235a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ea951-177e-47c3-8914-314f355ea10c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df69951e-ca93-438f-a74b-b00f3472b1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d945de-717a-4079-86d5-3aa172ea11ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675a5efe-f320-4280-bed5-ccd59f126f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02fefd23-c3b1-464e-b117-4850baa3d2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceaf2ce-ce67-4966-a90a-e8832e98471d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bc4b05-fd15-4459-aeaf-aa8c1fee848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c156c96d-0a29-454f-95de-618f7dfa9768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77769ee-1e48-4014-8014-00e6c723a27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f770968d-6f1d-4f64-9fa7-38cc84290812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779d802-9393-44ca-9b6c-f51c86c4832f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb90ff9-69df-4896-b150-32ec944f34a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2106367-28c0-48b9-b7b4-1c4a5c631702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8519ff-6444-4d69-bc0d-302e3e82c7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d85b98-513c-4433-a968-9b77085c4a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd6cfd0-5331-46d9-9c1c-c708e36bfea9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dfa292-4b78-40a3-a167-0721c74a70c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6712ad98-827e-4d8a-8066-aabb8fc04933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba960a5f-690d-4203-8823-739cd707379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c8ee6a-45e4-461c-a4fb-764623ed23fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b90a893-bf5b-49c5-b491-2b5b15347541",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "288d7e61-8e7f-4315-9e0a-63665c87b3a7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bd82fc-551e-4a86-9c06-6a85aa3b0c07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "500bd443-a317-4961-a654-0d00eb110bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f6c44b-08ee-4a8b-b1cf-0f39da3029d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24adc606-db6d-4d22-b187-dc2489b2ae15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049a8b5b-dd61-4c45-b5ce-e5a05fc693ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bcd3b0b-c34b-4d87-9528-1fee71736054"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cf7910e-2ff9-4727-9d6d-7ab2f22a406c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dc912fa-e5bf-432b-a8ca-cc9d230c435c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bc653a1-d10a-4439-87e5-70f736835602",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4490608e-cd1f-43f8-9fda-4d568722e8cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80c1b710-ce91-4508-aa76-f4626361aefe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2947261e-d610-430c-bd01-6070bcd84cc7"
            }
          }
        ]
      },
      {
        "id": "7b47bc0f-aaed-4d1a-aa59-50006661650f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1dde8327-bea6-415f-a79b-7615ebbb6ae9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8c20395-4a52-4581-af33-d26a46f1a3a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be7edfea-06be-462a-97b5-f314a2ff3724",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44160663-d966-45d0-bfbb-97d8fbf47014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38060080-4fde-497a-a407-7331771848f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab6e4d3-7cc4-4872-9e99-193a1742c23a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f1359-3835-40b6-a700-a84e11dd5d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae1bdf7-f5b0-40a5-816e-1c9af0305b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dfe844-44e1-44ac-882e-a1ad2e73384d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9289fd01-9b09-4122-9fc3-5179b2c4c0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8af9967-b8a0-44b4-99b0-fd5a4a279e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749a1d72-7b06-4a1b-a001-65a4d699f748",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451a65a-4d7a-45bb-8213-62e243a512fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e823109f-ca9f-4180-beb1-38de5a1afabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900087d5-c1ba-4378-b60c-3af548cfd319",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a45dc88-93ff-495a-b8a8-71e933742ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471b4116-e1d2-4d56-ae90-0e1127ef42ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6c7093-6657-4375-a39b-110ed90f877c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09323c4b-15e0-465b-ae8a-f13a06b9d120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670dcd63-c389-4034-8f94-48600acded34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43eeb50-c1bd-406f-8f77-f8ceb8e42c79",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d4ab85-12db-45c5-a316-cfdadcbabc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843a1900-06b6-4556-bf0f-7941032d59f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0712eb7e-0d0f-4be0-96f6-e5b98f9a50fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faeee53c-94cb-433d-bfc6-43f6218eaae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b50badb-ffc4-47c2-82f2-e9ff0dc3efd1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bcc0e2-4a42-407f-88fd-6edd8d3c4e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6a38b7-0aaf-4ac5-b12c-601112e65e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5787a0be-412e-4157-9e83-1643fb6fd404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629682b1-4d32-4435-82a4-82adf4a7c25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700c25a6-b3e6-4657-bd29-6d2a357cb4b5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7ccdc7-81a9-4a2e-af2c-abc13b85e235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f04a773-501f-4792-964e-33fb461396ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed00ebea-93dc-499f-9309-81f105034151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046c2d16-77f7-48fa-8708-3d211b72ba49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cd7d31-e97b-4802-bffe-74b656e021a3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a533aaa9-6862-4c58-8929-f0d3129f6e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03d8958-0a7f-49c0-b747-55c50be19ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849710f2-daff-4b07-b7dc-3fd241e53983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e5fe0e-ce43-485b-b22b-e456555b553f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8546cdde-1e31-4ea9-a345-9c2074e6549a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ded885d-4dcd-4182-a352-b59f2c22472f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1d0138-eadb-4c8f-9f76-64c5523e1ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0e587b-fa3f-443b-931d-c1b6b627107a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e8c0bd-8998-406d-8939-c367eac7082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f3cf4-70fd-4b2f-ac9b-ee41160d66cb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f54a873-5b69-4211-8d82-56108de4f26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0529ab-673d-41d8-b04c-b09c2ec03178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc4792-2560-4c10-b517-a826b6389384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414491fa-2e43-48de-a644-9754b3e1cc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12404428-1c42-4c4e-be2d-0bfc9683863a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b8216b-ccd2-4c06-a602-698ba5da3c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa60d405-4db1-419e-a875-5cc9e5606b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c388016-a0ac-499c-a8ff-e5a9fa135294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92aee4bd-5e87-40b3-b36b-8c4b1aaca3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ee35c-64c9-4e3d-a4fd-9b3c2e52de4a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fea1cc-9caf-4dea-9804-8e8f0fd6a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd6db8f-a086-4949-8063-9f8e2dc73fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec399e0-ec4f-47ef-9819-a98040a8fe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97afb3b3-e392-4df9-a1ea-73ffaafeae89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ebf34-4354-46ad-a652-cfecc7415778",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e120a9d-d3c8-4006-9326-4a409710f726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c63d417-7ac8-419e-9f68-83be592caecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d5d44-a186-41a9-8738-4b1ef761809c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d8390a-7c54-4676-8081-90864d63971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb566c6f-f9c6-4778-9419-317b6c1df017",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca0a65c-61d8-4822-bcb0-b87edcf87276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0df399d-0a8f-40a2-8466-61f8f108f14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5c37de-e7db-448c-ba5e-938426ddda74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fe7e75-5cba-4700-9f16-918f32a3b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fd8405-d9f6-4978-aa77-512b9c904318",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da80391-1d50-4d0b-8dc9-763bbd307634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe44d1b-cbc8-4d10-8afb-5a80bfb7ae16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb80d4dc-4ddf-4bbb-87f4-8ca7bdd5bef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd224ba7-9eee-41a5-85b6-40f503bb4e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c53fb6c-19cf-4c0e-8ca6-9c2a63f3a100",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab33e26-64c1-46db-9972-8b07cbd04e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97c9f62-1da2-498b-bd87-4913eb2bb36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc1ba80-e9f0-4895-bf64-d0d267efca45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729a5bed-3a8c-4c3e-b89a-9248f5ef6503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f76dc3-2de8-4b6b-8286-1531fb306952",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce59ef-3cf7-4f30-974b-0f9747492adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d773f5-0cb7-4e81-806d-3a5774f0ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c550b71c-6cb7-4bda-b9bb-62357c708626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc71e7f-a5f1-45e6-b419-edb24e49ee34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9837eec1-fc10-469f-b73e-ea475e77f4fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a8f925-7fbf-498b-b9aa-1ad5179cc5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d80305a-a8cb-4190-a7c8-46ef2609549a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436536e3-83e3-43d9-b522-3bf3be8a73b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06315a76-bdc3-4d57-b9e2-b6f5a28782e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c276a27a-b35f-4751-944e-3e48479e4422",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f90fa-f651-4697-bdff-84e5e58e7c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c61632-1ae2-407c-9eb4-eceeeabafe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca383f58-db55-4421-ab5d-05b5585a4b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d634b0f-d612-4728-a5b1-7dcbd191ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4486c3a8-7936-4211-91f3-8a55e3ee3e00",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaa3cd2-1f1d-488b-b325-8641cb03fe4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adf5de9-bc86-46a7-a439-70ac3ac50f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe23497-31e8-4127-b5e9-02b86808045b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9457ae6b-65bf-4a0d-85fb-4f4457193ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5bf782-ec18-4e76-8a70-cb49973bd245",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e9ea2e-676c-466e-a88c-37c7893fc6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03898f34-4ed4-4522-b097-bcc59cab6309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714b2cf0-132d-41ce-bb36-0927a722803b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a99f37-50a5-4617-86f9-2774f47a9dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fdb1ce-2007-410f-a773-4d0fbf00c638",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb80f780-77f8-4739-8b87-7f9b27b817fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c536150f-e91e-40d3-9276-f81c26a1edec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb91a0d9-9138-4b73-84ae-b3b3e4a7b46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aba2365-a761-4c31-8c55-0be8a2d564d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884066d-1f68-462f-9df2-50768bb16cbf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b92b95-708c-4d67-9233-dca0bb06ce7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357b0b8b-482d-4b99-94f6-6b7e580b8774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1886e7f5-e788-4836-b84e-66186f62e738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea92ab3d-388b-45b1-bf62-348adb8a8938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5825f19a-f698-4a96-bab2-a110570cbb00",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792770c6-3278-433b-9cdf-3250839c1c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19111a6-6b5d-4df9-8e43-978b93deff19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be34010-2e85-41e1-8de2-d4195aa2c38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2e2a84-46b5-4945-a842-a39671b48327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af499df0-da4a-408b-a88b-8957a0023508",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77c536-495d-497e-8f59-c31a1ec7a61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa3e37a-91a8-48a6-a663-012ddc554be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e7e802-a8a0-431c-8cf1-ac0a8902e9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a7b9cc-c6d9-40ab-9b5e-f84a6c06f176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e40867a-425d-458a-8c2e-19def500a1fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5474287-a55c-4b27-9b94-3e0eed658385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66403d1e-c773-495b-bb92-641dd64ea0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455ff842-d915-4cea-93d9-03bc8944324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df390f4-e390-4a38-8bf6-6dabd3fec6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37199f3-b0bf-4593-82c5-4117e7fb5007",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8832dd09-e1be-4703-8369-1d601819e736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e274e89-f73b-4721-aa53-fd0c53af3b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c70fe18-7377-465e-9135-86e0fbdc6e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612557a6-69a2-4b99-9818-9ac526c7ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d295d37-bc82-4a00-85ff-0127d742b3a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8df4b2-addb-4e3a-bfe6-11029bce68a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9198c47-60a6-477e-aa38-2216fd6a42d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aac328-d59a-4ee6-b5ed-ed31b73255ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe968b4e-934d-48a7-83a0-f15e64499a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d036f1c-50b5-48a4-813b-9fb255b60c8c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cf90b2-8306-457b-9155-b4641f63fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e38876-a53d-4d3a-ac54-e5179f073d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa0748e-5350-4ef5-a09c-c10c3ccb24ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb04cf1b-9f7b-4393-8258-3727ffd78e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2d8538-7504-43cd-8870-c77320e41b8c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1adc62-641d-42e5-8f23-ab9268c6b78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b813512-9384-4a88-aac9-f6e2f8c31537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0ea157-a114-4c3b-8c57-e48819aba51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb799b7-08bf-434e-8d2b-afd87cd09c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebb7a7a-a4d7-48c0-bb94-60bc95ba7151",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0198ab7e-7f5b-42f6-918f-f9c52b27faac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e612b4-9de1-46e5-85d3-66c1e325a14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99771514-2c64-4e44-b7bb-27604c6b4798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2732345-6a7e-4921-8689-f2ead8c5ede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e11394a-edd5-4887-ad69-40b356d328ea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee01fba0-25f4-4036-9471-7f0bd7e336d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f86933c-e1d9-43be-9978-186e4846980a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f6634c-88fc-4941-91aa-2ad44bdef4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37562c3c-e627-4616-bfac-07115c1557ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f467935f-f6c5-49a4-aa22-eded1a575291",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992ee0ec-d90a-4ed5-bd32-901a1120abdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705dc97b-ba75-4757-a74a-5c5b942f46e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81442b78-f8ae-4430-a413-d20b42d5fa47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302e3be1-478a-44eb-be13-2f6efe2d8945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af6a013-d04c-4ce0-b0f8-76bffa76ee34",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40470249-714e-4f36-985f-1b87562403d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f1b2f5-d218-4739-a777-dfcd46bb8758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ca016-6792-4e02-a6c9-4420aa9676b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555b6644-b121-4548-974d-61c268fdb7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d6e636-57a7-4f3c-bba5-d77ad685ad4a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb844c0-5baa-4977-8f99-aa834d892197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45db1b09-5ae5-4bc8-96db-60f4ab17a9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da53baad-0cfd-412a-acf7-becadf2f32cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43501b9-213a-4993-bde0-aa5b7af91622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8412c0c8-7b9c-4570-8dee-0ee3f14a6d83",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd84108f-58b0-431c-a17d-f97a04850a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32d830c-142c-496c-82df-5e9609a340e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1eb794-4776-48b9-97c9-f67f92e6735d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b38792-27fb-4820-92da-df45e14b1ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca3cac-9d40-4ec4-bdc7-a6c81ddd7bda",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0a9b33-323f-4bab-9fd0-76fa26e2bdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b00ec1-979e-46ae-8810-497d2638272f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6e62a1-af89-4f6a-8838-70367a303d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57755821-e158-4ab2-a2db-e6f98716b61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac094fc-4087-4b34-b599-271c762f24e5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7521f4-f530-4e3b-92eb-726dc9104728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4508bb-df26-49e3-a177-670c16b5e419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f499ac-c434-480a-b80b-617c97b9a55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1871774-ac63-44ad-8c5d-d8dfc50f6c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2e1de-aa06-4fd0-b320-9216590f56e6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95aa9bc-6a16-47ef-b0c2-8782ed12ea78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e1c99f-6e59-4ea5-b004-abfca4adb10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decdc964-fb59-4db6-b6fc-a458b9b94446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205e154c-d777-4791-9f5d-4ec2ab8ac910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c6c6f-6565-4a9a-acdb-91de1d240c00",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7e166f-1d99-40d2-9b9f-13128c943258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab22afb-9add-4cc7-96c3-9e7554ec01cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f9a7f0-ddcd-4265-b103-3c2231c665c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c702cff1-5d97-4136-860b-4b14ac908858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf303c-8789-483f-aed7-4e155e2c24e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd58d1e-0919-462b-bc00-179d6a59ab8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ec6b64-33b5-49ee-b3f0-d96848bef156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82060e86-f3c4-4ca5-abe8-5be176722822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19481a4-c589-49ac-8ebd-7653c66d8f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bb2334-df13-4d49-83ec-38ad16d04591",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3aece1-37ff-4dde-90ec-236ea3d08547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dc7461-3ce7-49fe-b293-497d4db949ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50ff352-96e4-420e-8297-cf978310d816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c43548-7663-495f-ae57-3bd56f15723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf34251f-951b-4ed9-80dd-9b1f802f6220",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec879759-642a-4c99-a93f-7168227acece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884048ea-1662-4b28-8735-5b2152c860f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0161fb-8a47-4194-a7fe-bdcf2d082f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725b9bd8-0f0e-4864-97f1-c905d5d3022b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe38e528-5368-4957-8a3c-dc60bd7d776d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240d7bfc-c0c7-430e-834e-43f982472a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be4813b-c6d9-4362-be26-4309a24299d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bbd683-76bc-4a1c-972a-00df2b996575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bca3b1d-95e1-4858-9f4d-e774f42c8bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2caffb9-7a40-4211-b77e-8d3c34aaf4a1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c9d98-dbeb-4474-9b2c-16878e01fa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc102c3-ea28-4b6d-bd85-c943cfc46920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfae2be-e3fe-4b6f-9cea-d7a030a6db4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050a37bc-a985-4d2e-88e2-568098cb9640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1b717c-c7fa-4754-9d66-e8c9735635f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b638e-85fe-4c07-b9c3-ab1fd26b2995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00a4a8d-4c58-458c-9967-4f463c020e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b04994-ef6b-4ca2-afd7-e727e0e4d93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1008c96-d394-4549-8a52-1a8b60d0a204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e65702-ed9b-4f65-b29b-d5a798a53e56",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16ecbb-b0af-40d8-b1eb-8f18d2e6b190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acf6b00-45e2-48e2-86a7-3cd92e7d0e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3691e83f-d105-4fec-9bc4-cd67b154c283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f452768-5269-4b2b-96a9-615cf4ff348c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21856972-b4b8-4451-bd6c-71a8eb10c5ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21847c34-ca49-408f-9e4d-5fedf5b2a394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f31c15-c1ee-4b9b-838f-f97209d5b3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38b71e2-02a1-4118-9a9f-c204332635bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6cc8a2-2ddc-491c-ae05-dbd52f7c14b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa69baf-6a7c-4b80-b555-0d30307dfa2e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa930cf-ec5d-4b8f-b2c6-8b1bbb33bb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b050a3-c5ff-4a0b-91a8-6f4da12ac3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d919df-9902-4321-acd6-6a759e1d1079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2b0afb-1d65-4456-8ecb-ea66b0ff1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3c3191-a786-4dea-88da-48a74b88495e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8f37d1-91c1-4bfd-94ac-69bf54360292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faf9bc8-5a86-4cc2-a85b-370a4858ecea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef31d52e-cb60-40a1-aa73-075ff3238e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1878604e-3fe7-4ee4-8321-736e39590a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6548ca-f0fc-4f8b-a085-afc4eb6aabf9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058cb155-91f3-42fe-80f4-c7c4fb7cb514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1111a8a-9b4f-4c73-b522-b3214e03183f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da703ae2-4109-4bc6-a1a6-a919e13b0c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2929903-5615-4682-9ec6-d5ca4e1bd6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54eae20-14a7-41a7-b4fb-a814ebcc2446",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09645d87-698b-4e29-87ff-ce6fc3b0ee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f84b7ad-fba5-4136-83f4-b1e4b830f5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336e8aca-5913-4a45-a2f5-92077857a341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5edf23-9652-407a-9ee0-638de35b0d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d336e-c3e0-4891-a6c0-71fa795ea271",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15cf398-8e7d-48f2-bd25-4eb95b695214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42eda829-bcbd-41b8-8c58-ce7f599e20ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c642d5-3a59-4a40-926e-72abed2269fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f4a69d-be50-47c2-b402-616a24b23bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddc8ba1-a3e6-45f4-86b2-54a42a5a5984",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8445590b-0ab3-4bc9-b7b0-9ddc4e5bc36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a988afe-5e7e-4876-9e80-d1b328690f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e482a8-0380-449b-a867-695d1c82d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872d90af-5171-4cb8-9426-6043aef624c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba23145-a618-487f-be39-f7864a556a0e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a2673d-4d01-46ce-9580-f6bbea01ac45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f34915-346c-477f-a74d-8fddc9a01520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cb71d8-0a0a-4eeb-8aed-981562a2622d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2644b1f2-8de0-46b8-9c55-160f048cc55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d29abfd-df17-4714-a567-a3fdd6f86744",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ed75b-3bab-44f0-bdd3-f133a2ab9a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a303066d-7ebe-4f71-895b-e787f2415ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c5b0b6-0505-49e5-a732-73b7f761cffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcee5688-da5c-4fdc-a2d1-3d992912c221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359dd04-cf89-4ff8-bd3a-eabdc697c80f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1d6241-a0e3-4e03-991f-d82396da5e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77e38cd-9e39-4bdf-a5b1-87028f543575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038676c8-332b-4e14-a9cd-9eff27b3135c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc4b45-110a-4e51-90f1-88f57e915fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd91b564-e0aa-4725-89b3-fc41b6eaa5f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda087e-07be-484f-9269-3a7804f49efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aede6f4-2914-463a-ba4a-a22c8805a269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f287bbe8-e650-432d-a6ba-91a24e3a0482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8fa4e3-4910-473a-92bf-4bfa24032ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8497a67-e5a5-4363-a86d-01804108c574",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51daec-7b9d-4a83-a2dd-03adeca756f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa00b0b-14ea-450d-944f-edc24386043f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5426b913-e555-4902-923a-85a674421bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ea3f96-df3e-4d50-b2f4-35aef5d64e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6341fd70-ae28-44d9-88e7-f12c2ed6ce2f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f8384-6bff-4ddb-b7dd-4b6b17a1c913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab7c563-0eba-4b8f-9684-94b200d6c774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a12dc6c-a145-43d2-a791-e21c222b3f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc79e7a6-b4e4-4a91-9c4c-e5e18018aaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3df2f8-6a6f-4452-a99d-fc62ca59f6fc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04466f49-af42-41c6-a0c3-063bd4473f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3080cb39-aa33-4c03-869e-e7637adf639f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f8d84-3470-4ae2-abf9-d12c3dfec24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619eafd4-bb83-4531-ad87-9ea3ff0ba43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30fe1df-4859-4441-bec2-50d9d667e47a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e56cf9e-8351-4b1c-af6a-08ca76afb30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f564b6-88d8-4956-96c3-1855df3a8c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65a7bb-eb70-4249-9ed6-559e30fb0eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bed8fe7-5a0c-4278-9cfd-fe9cbe97140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb53c8-14f3-467f-aea6-74fde4cb10fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736cb64f-6ddc-4830-b858-df9342472c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e7c4d0-0d3f-4b5e-97a9-53be8b322289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae269a6-de22-457d-ab30-cb29877602e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b9af4c-8acf-4976-92c4-0bce76036915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a80ec89-e2a1-4df0-b5d9-09c6341438ad",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d421809f-8641-47cc-94d4-3b98c4f38b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b58c569-e3d2-4a02-9b5d-d4fc0d80872d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd2346a-a8e5-437a-9bec-da1d3031aa94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ac826d-6dac-40b4-96bd-3cdb6c3445a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b81363-5d2b-486b-b1ed-890d5682da81",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d300317-f0e5-4347-8490-10087da16ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c883f74b-af90-412b-a53c-a8d5229e80c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99efc7b-2844-4f26-95a1-e169ee439437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42d1715-ee0c-4342-bc10-eb0ec6086edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4ce759-30de-4026-a7e0-644d3aa822a9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c733b736-553b-4673-8f1e-8d7a160cfd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3cb258-cf9b-44e6-bd2e-eec548f6b08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044eab70-434b-4dde-b0ce-95cd2901ab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9091106f-9700-4897-a3a3-73aca2efcd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18154c10-e761-46ea-83a9-953f0eb5c4b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89289cf-7497-499e-a705-a6acebe95507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0f6907-0ac4-4809-91d5-aba1a4422f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc9f6cc-ecf6-47f2-a8ff-383da7b5ff22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f53d662-4c99-4b3e-9c61-1c2a6c015077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e9ab56-ee3c-4882-bb78-c31927dbe0b1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11444d8-5a08-4f73-b64f-f5238034e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99323e72-35c5-4d02-932a-a24db3e57363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc976aa-9dbb-4326-b5e5-670ac5428084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f7ff66-d075-4794-89ae-8b69dabb3661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c797091c-20b6-4d79-abc5-dea10636fd8d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e9fbe1-5774-4da4-998b-74f0ba02161c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1215083-e843-4f4a-93e2-d24b6ce06fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a103ff9a-dbdd-4528-9632-78413cd1aee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca0fe8b-3159-4790-a212-80e6ad1e8289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a8a860-1cb5-4a13-98fe-ba332e4dbad1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b4478-8ee7-4e25-b6a6-94f89a738160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "decb2e8c-ae87-4886-ac3f-c1404584a2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eae24c0-f7fc-4703-9970-ac675d99ffbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54840338-2546-448b-95b0-de44d0eb89c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7bc25b-3bc1-42da-ae0a-2c929ad87863",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6298ff40-c24c-4aed-b3aa-a17e2f4f406c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26063766-8dad-4bd4-bcfd-3cf23310b7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724b2038-964e-4f20-9b60-27b51634509e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc95ebe-9638-4b62-91fc-c63a3a486630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f10b9b-d438-42c3-bdc0-d83470d93885",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cab08e-5b5f-41ff-8d0f-79b60a991796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4592f42e-0bcd-4541-94f7-2d6186ada6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75fac0e-afb0-43ed-864b-e7f7ef0975a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17785aa-9c4c-4838-ac5a-deb5e6d5e019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be07835-9d7f-4819-ad48-cbe67625ada1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c072f50f-8ed7-43a8-b4d8-e04becdf2717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2602c9a0-0c5f-407b-b928-d15b6c42fa52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b371d7a-a34c-4449-a5a2-55f8766015e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588f9061-f41d-40b1-b8b1-292d257905f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63664cb5-57de-470a-9800-8240bac45618",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50de4f-2501-45f0-9b2a-8d31141d810e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822bf526-29cf-45c3-9a56-0f6bd702b4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8cf4ac-4fdd-4f0d-90ff-c35db31962e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dac1f1-75aa-4413-991b-904fa68d5de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c1dcf1-d246-4309-b87f-3c8d57d745eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68853eb3-1823-46cd-b48b-34deee5552b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42f46a2-0b03-47c7-8f83-b0c62437f956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6645f45a-0ce6-4ad7-a2fb-a2d3e9966bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc068815-b6c8-4a6f-ad8d-efb5b5277842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbab3e0-b336-433f-b513-5acca3fe509d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acd814f-42e7-498c-8736-e8afcf54bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d5f05b-33f5-4713-8438-090a32837394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c86673a-8cae-4537-8286-14d35c1ad982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede15adf-2701-493a-908b-44052124fccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c14375-1069-4e43-8ada-3bc4ce7607c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8df6ad-149e-4beb-bc67-29842af87e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756bc849-0a02-447d-a576-a779bf0d801d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493a8f96-4af1-41fb-a4df-bc900ebae2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3c06b1-4c56-4f00-a41e-7da689e57095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6256434d-c920-45c5-a36e-207148fabec9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24326cc-d2fa-4c01-9314-630b1d76def0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef58d8c-d381-4a3c-acec-585d16cbe655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b9b3dc-05db-4564-82f8-02a697e0c063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd312e-d477-4766-b790-edc47a83f491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01cb349-7560-4f76-9a43-b7b0e0f42fda",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470c6536-ee93-49ef-9466-25bf31382044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b329a2a9-c589-40ae-b373-064d800246c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ebc3b-88b5-4beb-bbda-b71c46983b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00fe2ab-62ac-44f1-a7af-b18d361765b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7712a2-454e-4038-9eee-8f45db9e03ce",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c914a6-bcd5-4f3d-bfbd-aa4914226a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa16827-a6ab-48fe-8194-6a9728064d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b119c-f7fa-468b-ade8-9bdc2badcd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d02ccc1-ceda-4f09-8a89-f8d06c384b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b201584c-a7a5-4800-b0a4-1f0c8bbae746",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9188983-aa45-4950-ac36-04dd47f7c469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716c6cfc-fb0c-4309-b721-f8701a1bf6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d97c8-61c6-403c-9ade-f8656d5a6926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4d1907-6aad-4cfb-9e68-d5a4f2e0ce4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850c399d-4fb9-4759-96c5-bff6be20ed20",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bed55d-7b7d-43da-8b61-0526f9cc16fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9fa953-3cf0-4771-8c57-7e9d6b43b2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6236bfe-5459-4021-9f89-b83fe3cfcf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3256402a-f4e8-4acd-940f-d0d14ff4570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83263ce6-b749-44e5-b7ca-4312b9f826c1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53774027-1427-42ad-9fa0-38f3d676c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1098ab-45b9-49ca-9ab5-817ca7f12b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1d65dc-d1dd-4c00-a9ea-f861fd91c323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d388f2c-6683-4761-83e5-28f3e12f5a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c396d8ce-7edc-4803-81ce-a639872093b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954f0128-d067-4d2c-a15a-a7d49148aadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa857da3-efbf-4775-9bf2-f689916fc5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa78b9af-b565-483e-a78c-cccfe92ef8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431578fd-642c-48f9-a935-3f00bbd536a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0b792f-4272-460a-a5c0-8f9fd7527f70",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c338c388-009e-409f-b7b8-9f40f23f6e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b68daf4-c37a-4910-a843-8fe0a1f3ea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c594857-ce08-4164-8998-a0f1afe8c3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81dcf95-1054-4921-9ef6-0e02dbc55eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001a86db-8794-4319-9ad9-50fb99791e45",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda1b9a6-470b-4345-8155-eefad3a1b31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9688199b-4531-4f5e-9f78-1a0122355e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba2e8d1-dd21-45d4-9579-22c5c1d9b0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76619f2-ba59-4aa2-a5b1-25bb447b0494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43e2a1e-d4a8-4692-aeb2-f8d166d8f8e1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f12196-f4f7-426c-937c-e1cbb62d473b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773d4412-eef0-41de-8b1c-64e3f0ef5f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c495ff-d95a-4dda-ada5-c34f0991b49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b3acdf-047c-4cdc-9242-745896881e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2023f0-f877-4f09-8339-af421922102a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61780cab-c117-40b3-8720-a66508b85ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fa720f-3664-4fdf-8720-f8af389dfdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02d6be-fff7-4d1c-a5b0-5cbc581f291a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f0033e-e5b3-477b-a269-2c3c3f38ec14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d4f40b-952b-47fe-b546-571900807b51",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5f458b-550d-410f-a304-061c167c27a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16c2edd-c14d-4171-99c1-69d708d347b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af46bee6-6ec2-49b0-ab7e-2aa7520e2501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17553674-56b0-4f90-a75d-d9b885cb54ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4542de5c-da7e-4538-bd6a-1236d26018ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed9287b-1eb9-49d2-ab94-70d6956c50fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cded5ee7-d254-484e-87c4-9c1b1bf8d05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671f578-3289-468c-a8d3-40f807506646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16e28ba-8dc2-4ca8-9e7f-7171a2fc2335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d044f61-d3cc-4dc4-9e7a-468f329b5af6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727c2847-bb97-4681-9b6c-45af156d0b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1114e6f-19d0-4e5a-931f-d2bec5a2f6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a9efa-e10a-4aca-a0d1-6f2dc51f9424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0e88db-244d-4449-8cb1-b80542c8fab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7338be33-ff34-49be-b001-2650b54de1d1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102eb621-c5a3-4e75-bd92-7b9a1dfba111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746bbe31-d3b8-40bd-a615-13e8f041be78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835bbcff-47ca-41fc-9777-157794df26cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4ffee2-a5b4-4411-95e8-87aec9082838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0cede8-7556-425c-b4c2-b3f131e562ce",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4827dcf3-b0e3-42d9-898b-d1632fb4e30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd8a4f1-b137-4048-8eb9-fed20a04032c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d0c247-b41d-41d9-8277-8d0bda8ae229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b7a5b7-7e67-4170-bd59-8250d2199f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18890ab7-8d88-4fd0-b19f-62118c4dd4ed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00632ac-92cc-4248-b985-bf3cc39322b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929f7385-9263-4190-95be-cfc97a193fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a983a82b-54d5-410a-8898-bd627f58e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0c46ad-cb58-4a7e-91ae-e9149f1cf104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde3b80d-8fb6-4039-824b-513e34be8d75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0810cf46-c1d2-40ba-8016-53f0d58d878b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08aa1915-7fe5-43cf-9c90-4ab0141eb4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1ffa12-1002-4de6-b395-f0089e4b7c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de1fdea-16dc-4130-b16b-a82f43166c88"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8ae0a33-9511-46b8-831c-e00406f82659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eee0014f-70b3-4787-bea9-9777ebf78775"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4a141d7-2cf5-4a00-be78-2954565e4f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e485f4ff-6a23-4016-9d0a-8c72e3e827ff"
                    }
                  }
                ]
              },
              {
                "id": "b68dcfcf-2ecf-4071-9a30-f46951976099",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ff92a08-6bea-433b-83c6-c2cbd096214a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dcdcf2-1eca-421a-be31-a2a8eacbd875",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b65f9390-be6a-49da-8d11-81c4ad91424d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73da22e8-255a-4bb0-89d6-20fe6c623c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e21d8edd-413f-49fb-b3a5-b3146c8a780b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443ade38-7fdb-4d84-9af0-b639b7eccbc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2da3b9cb-5b8e-47d1-8cd2-955316a973b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a869e80e-2a72-4575-94f1-9caafede3f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebfaf39f-5e71-4799-920a-d6b45df17df4"
                    }
                  }
                ]
              },
              {
                "id": "e4b51638-d3f4-4bd9-90ef-f31e537870fc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4204ff0d-a579-4744-82f9-ed63e98e7070",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eeda74-6dad-42f8-b828-e8bbe9463d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e9413da6-f91e-46cc-bb83-6e98c3178aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a548d-7575-4500-8dc4-6d8f0d6f12bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565071d9-7637-400c-9464-3129112f4244"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec54f517-aa49-484d-a854-b9bc46ee56d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daf8a1dd-5c6a-4805-a266-f444acda3d6b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49dda381-e16f-4568-9c1c-14ad7439cd60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4ec6840-6f51-4f7b-a8ee-0d5fe572f5d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31920f3b-536a-49fc-b7d3-a8a139e94361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb1870f-a232-48fa-8ea4-f3fcad3c6409"
                    }
                  }
                ]
              },
              {
                "id": "e6c25747-297b-4ef5-98be-d67d4c7e496a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fddecaff-7531-4099-abf5-ffa16d170cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c38c62ab-dc28-4568-a13a-f2f4282c894c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "488099e4-0693-4cd0-b693-067c2e9964c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bd15ff5-bbf6-454f-9764-50bf5c3ee992"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ae48354-3434-42b0-a153-507dac12a17f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "236ec685-fbb7-4b33-b97f-2f46f3513859"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e3a45ff-f496-41d0-9d33-c093abf51ce0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6679985-3ff5-4bd8-9cbc-c78c3c9030b2"
            }
          }
        ]
      },
      {
        "id": "390b7012-b114-4205-b5e7-9bbb1250f409",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60880c7b-2d6a-4e74-b91b-7e0386fe9669",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b3c733e-cadc-4716-bd14-317061595fad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "443f8893-4007-4a55-af81-baad7c6540b5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1983dd3-fe40-4074-973f-ddba4f3d3879",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ce2a244-fab5-47fc-9420-ef1769d5b11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc0b19e-a97a-4eb3-a151-071fc32c7abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b886752-ec77-4695-9f8a-6384af4a4c88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ecade0c-62e5-40c9-a3a5-06e42727210d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed48dc79-704f-4136-9338-4aa5aae6ef79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18ed9de1-c8e3-4da1-bf2b-38aef9040a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94cbca22-253e-4673-8827-e00ba438713a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc95a4c1-2d34-476f-bf94-cb325b2f1540",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e785081b-6461-4fe4-93ca-89d3f666cf2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "596e10fa-1e4c-4a53-85c9-14b6aab4b3a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04a10fd6-5803-42e4-8392-684e65b3584e"
            }
          }
        ]
      },
      {
        "id": "decef765-e77e-4aa7-bd62-88fe1a5c4457",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "29124206-1dc0-46bb-a531-1f02d9a34d2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57421f76-507b-46b7-8b95-d0e7bd10182b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01a528bb-8da3-4ef7-b424-b21bf788efb8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b66f15-10e2-4a51-84e5-46ea0f8f8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99ac4839-37fb-48e5-ae54-b1e33f832b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959db6d9-ca15-48e5-a606-7b420e75390e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f7a435-dbf3-435b-a0b9-fffcb40a388a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ba8d511-4b07-436a-af0d-2e2753ea63fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6215e747-4465-477c-8201-3b3d2aea0a56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0f94b5d-9b37-44d6-8852-f32fc5214993",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8b68259-0b30-473b-b694-472701949d0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c73ef89-8e96-4c27-8083-b5afc2b51837",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "630a86de-9530-48ae-8572-c75fc2676c6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52c3cacf-8285-4f98-9c23-c75f66b3b1b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0ed3d61-e6a0-4c66-8883-35e88fee2c0b"
            }
          }
        ]
      },
      {
        "id": "aec4e049-e3df-4c3f-9cb9-ba312acf0f53",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "efc561be-9553-4598-a797-73efd11cad1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2118b64f-93f8-49db-afe0-77be339e76cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e749a75b-862b-4e0a-9d66-67db55fa7143",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d054a5e-2ed1-48f9-9883-ac8a32f0320d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eae54fe-27fc-40cd-8c38-e30fcd469426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebc3a46-5444-4665-b27f-5ace232366cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dbc4694-2f51-4121-b582-d0852f5d8915"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5397a16-3535-41f5-b1fc-c33d2dd969df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37ade86a-bd4c-44a6-8885-710a5bc60f93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b741e2b-9148-4e45-8e58-0041cc750719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "762434e9-9a54-4cfc-93e8-3cad4e4e6025"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "021e7145-eb32-499a-9bf4-6bd46a3435a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3873011e-47c1-427b-87d2-fc58097e28d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f04eb200-622e-4bb4-b526-d83bab66b6ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dc2b8ae-990a-4ee6-bf02-4c932f2fcf16"
            }
          }
        ]
      },
      {
        "id": "c02fad7f-3629-41f4-809f-dcc39982c8b6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "147a02b6-016e-41ae-a97c-3cfdf9369619",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4803ce96-689f-4961-9ce9-2319c2c90c11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c1954786-d7a0-40a3-bbef-78cf01e7b659",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b13505eb-52b8-4cb5-b7a1-73044bec7a0e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0f11cda-dae3-4b11-b435-061911833fd2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.138888888889,
      "responseMin": 10,
      "responseMax": 13393,
      "responseSd": 910.3413936167576,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723682340092,
      "completed": 1723682383805
    },
    "executions": [
      {
        "id": "24b6aab8-b8b5-4de5-8503-dd185b4ad061",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aea97039-6170-43eb-a477-1806af5f514f",
          "httpRequestId": "12e62d02-940c-4a6d-924e-71d2d368eb07"
        },
        "item": {
          "id": "24b6aab8-b8b5-4de5-8503-dd185b4ad061",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35e8a0ed-616c-4602-b017-ec102fc0ed3f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "affa5fc1-0840-419a-9e92-7a487c136e39",
        "cursor": {
          "ref": "b094e976-a1b0-4cb2-b46c-0d0d8a893ea8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "266c17de-4346-443c-a222-86325ddf7f54"
        },
        "item": {
          "id": "affa5fc1-0840-419a-9e92-7a487c136e39",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3701de7a-bd04-4a0f-b088-0c8b953b6290",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "cfe09f72-d552-4775-a9b4-900c090cddab",
        "cursor": {
          "ref": "5f32744f-4847-40f1-b85b-db38efa36013",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e9b86ce7-6510-441d-aa6c-9b449885ec3a"
        },
        "item": {
          "id": "cfe09f72-d552-4775-a9b4-900c090cddab",
          "name": "did_json"
        },
        "response": {
          "id": "823a3304-8baa-4813-9dea-70400a5714cb",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fe201b-c78a-4b56-b771-62f5a0609ebb",
        "cursor": {
          "ref": "adf0c598-a680-4f55-979f-059cb3bf9735",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5cb4a871-178a-4bed-947e-0925a7c2a7f9"
        },
        "item": {
          "id": "e3fe201b-c78a-4b56-b771-62f5a0609ebb",
          "name": "did:invalid"
        },
        "response": {
          "id": "303fc27a-446c-41bf-a7df-5dcc78610c30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 422,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fe201b-c78a-4b56-b771-62f5a0609ebb",
        "cursor": {
          "ref": "adf0c598-a680-4f55-979f-059cb3bf9735",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5cb4a871-178a-4bed-947e-0925a7c2a7f9"
        },
        "item": {
          "id": "e3fe201b-c78a-4b56-b771-62f5a0609ebb",
          "name": "did:invalid"
        },
        "response": {
          "id": "303fc27a-446c-41bf-a7df-5dcc78610c30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 422,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e8620-1a09-4cd1-ab4f-a911705c0560",
        "cursor": {
          "ref": "a60e2054-5384-4c6d-bb44-4f3c0d4aefaa",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6c0d628-f3b6-447a-965a-ccd2fdf8788a"
        },
        "item": {
          "id": "8c3e8620-1a09-4cd1-ab4f-a911705c0560",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ba1fa56-5f50-4cbd-a3eb-3cfc226b6bac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e721e6b-dbf5-4364-b48c-f5c51bdd8bbf",
        "cursor": {
          "ref": "6b70912d-10f3-4ddd-9d39-c374bc719509",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7978f3e8-6495-4b2f-a3a4-54726865e67c"
        },
        "item": {
          "id": "3e721e6b-dbf5-4364-b48c-f5c51bdd8bbf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b7f46cc6-588b-4f70-a138-5ccc2eb9fda4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2434be70-c47b-4dbc-97b9-734ef75ba420",
        "cursor": {
          "ref": "c2744a91-08f4-4fe2-8dba-9dc5b9a0e06a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7330ec57-a434-41e4-958c-abdd922dfb11"
        },
        "item": {
          "id": "2434be70-c47b-4dbc-97b9-734ef75ba420",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a4e3594-f3b0-427f-8c30-5b827822c97f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8082fd56-cd09-4f7a-9ab5-41a22396ba1d",
        "cursor": {
          "ref": "c4b3f408-14b8-4b74-8d09-128507196415",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "53ed2f99-db69-4094-b5fc-aea22c743414"
        },
        "item": {
          "id": "8082fd56-cd09-4f7a-9ab5-41a22396ba1d",
          "name": "identifiers"
        },
        "response": {
          "id": "bf4b238e-4370-45fd-90ed-5fd557f02b70",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f32b2c6-a49e-46a6-b77e-4036b347b76d",
        "cursor": {
          "ref": "ccf39d01-ff79-4afd-bba0-43a48c1fe1cd",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ffffae48-d6e0-4150-be70-6765013c8ced"
        },
        "item": {
          "id": "1f32b2c6-a49e-46a6-b77e-4036b347b76d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b48ff5c9-3ecc-4e6d-880f-aa13945f3823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38222590-be59-4840-a294-320935f5bba2",
        "cursor": {
          "ref": "7c019770-e98f-4da1-84f5-8128bcb5d886",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "960e9938-5ee8-4f2e-aa3b-832bf21f6433"
        },
        "item": {
          "id": "38222590-be59-4840-a294-320935f5bba2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a05f3f4b-88dc-42c8-8841-d231954cc932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc831333-e0fc-4079-8011-337d0d1ff0e6",
        "cursor": {
          "ref": "350bea84-652a-4c9d-bb6d-dbe5f2cf3edd",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a448f6e-a34d-403e-a46e-bcd7b7ea0f75"
        },
        "item": {
          "id": "cc831333-e0fc-4079-8011-337d0d1ff0e6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e014b0bc-9e1d-4ed2-b7c3-0152c06d77bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72f26e8-0808-4392-ac9c-39475b7aed31",
        "cursor": {
          "ref": "eaf38817-ca8b-40bd-9d41-b563ee01365f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "57fe04a7-b6c5-4038-bb4c-5b7a488a6342"
        },
        "item": {
          "id": "e72f26e8-0808-4392-ac9c-39475b7aed31",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "70095188-1203-427c-8fd6-1c1b24b71bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16baffa-1222-4466-a50c-097cddcfd622",
        "cursor": {
          "ref": "ba9b0c03-83d0-4acd-9ecd-5cbf991cbe94",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "af1416c5-e2e9-46e4-adac-450d58b8a7f7"
        },
        "item": {
          "id": "a16baffa-1222-4466-a50c-097cddcfd622",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a070d30-5185-434a-8207-25271e09fe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04a45da-6acb-4727-8a26-5580f530ec8b",
        "cursor": {
          "ref": "b2ab080b-e48a-416d-8787-666d565313c4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "87471255-2460-4fbc-95fa-176958506cc0"
        },
        "item": {
          "id": "f04a45da-6acb-4727-8a26-5580f530ec8b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "08151afb-9c67-4862-bf41-85eb995bcc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010ade0b-018d-448c-8a1c-c56e86b16a60",
        "cursor": {
          "ref": "8f240170-361f-4cae-964a-200284716d13",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73b4fc36-7b30-495f-9562-bd1cb055b650"
        },
        "item": {
          "id": "010ade0b-018d-448c-8a1c-c56e86b16a60",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8c52d7b2-2a4f-40c1-aa5f-710b8b678593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b610e95-2978-487d-8ee0-3cb5257e09cf",
        "cursor": {
          "ref": "22fec694-2378-4670-8b8a-8873e1c78ed8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e1a425a3-41fa-44a6-9c2e-ac1ba735abbd"
        },
        "item": {
          "id": "5b610e95-2978-487d-8ee0-3cb5257e09cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "90702319-3b25-4207-b649-7219967dc03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e0dc99-05b9-42be-b1ea-7b2aba9c06d5",
        "cursor": {
          "ref": "57fd4976-c51b-4f45-9d77-da2a8c2b3301",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "30fd5451-5204-45fd-884f-8a16b9e55443"
        },
        "item": {
          "id": "f5e0dc99-05b9-42be-b1ea-7b2aba9c06d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b0fbfb1f-5eb0-4da0-9de7-29c262651486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fd5bc2-5071-47f5-8f14-e87c27287967",
        "cursor": {
          "ref": "df37630e-f4ea-4207-9369-41c91e747427",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "30e5ecf1-aa7b-478c-b1bc-7e0f22a45917"
        },
        "item": {
          "id": "33fd5bc2-5071-47f5-8f14-e87c27287967",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3902d84a-57a0-45ae-b269-cc7ee5f2c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60e6c83-722a-4c8c-90dc-85e7f980f05d",
        "cursor": {
          "ref": "8d62b497-6f7a-4a72-bedd-4494ae229f9f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6d0431ad-109f-4ed3-9a3c-1e490ddeaa0a"
        },
        "item": {
          "id": "e60e6c83-722a-4c8c-90dc-85e7f980f05d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4c036247-3270-4c10-b7d1-8f0faedf4209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06147a15-2290-4ca6-8020-9077ea574987",
        "cursor": {
          "ref": "c4121c5e-63f3-4d84-93ff-5d2a82eb9dd1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ab99702-8353-4b1c-af82-a7c1e02e7b73"
        },
        "item": {
          "id": "06147a15-2290-4ca6-8020-9077ea574987",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "81243dc5-7391-4c61-839d-c1645031bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba19742a-0ff0-49d6-a970-a10d77e20e8f",
        "cursor": {
          "ref": "88ff4365-5faf-4126-86c4-6850e67921c8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3129d59c-f3d5-4fa5-bdcf-03993a905200"
        },
        "item": {
          "id": "ba19742a-0ff0-49d6-a970-a10d77e20e8f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ccd10fb4-659b-4b57-8819-3470e7b4e702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27205b34-af70-456f-a3f9-c15ffee01b14",
        "cursor": {
          "ref": "deee0c42-f105-4612-b315-c7a7a2c82f7b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f00fbdf-f1c6-4a76-8528-0d02bd3453bb"
        },
        "item": {
          "id": "27205b34-af70-456f-a3f9-c15ffee01b14",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58d505ac-bc50-4124-ad2f-793446c5bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff12e67-5bcf-48ab-9994-29a7dec3b1dc",
        "cursor": {
          "ref": "9150c992-4747-40f0-b5b5-b16472030306",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27ea44be-8d62-48be-a878-e7ea31634c53"
        },
        "item": {
          "id": "4ff12e67-5bcf-48ab-9994-29a7dec3b1dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4ecbedb4-f470-4f01-87b8-8c93750f0646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a375403-fdba-40d3-bbed-62c19d67df0d",
        "cursor": {
          "ref": "46764808-d2bc-486e-89b6-bf61430135cd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fa0bd651-1ddf-47dd-9944-7a41ac47ad36"
        },
        "item": {
          "id": "4a375403-fdba-40d3-bbed-62c19d67df0d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1d2e2d08-98fe-4eda-8222-2f09587b6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a311cb0a-d36e-471a-8c6b-4218f2b1f49e",
        "cursor": {
          "ref": "4023a03a-a756-4510-9489-7bfcee2c37f3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18d98918-893a-4d86-8dfe-a459483e51f0"
        },
        "item": {
          "id": "a311cb0a-d36e-471a-8c6b-4218f2b1f49e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d0a20f77-680e-4998-8e2d-395dbe60d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dcc870-8221-4f0a-b93a-ed4738e2a579",
        "cursor": {
          "ref": "cb881b39-4c2c-4864-8d73-4e0b03577a54",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fcfe702b-5632-45c3-abd9-96f4e2e24a0c"
        },
        "item": {
          "id": "96dcc870-8221-4f0a-b93a-ed4738e2a579",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9b868f1c-b309-4890-9601-25ad307798e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ef274-46e8-4c0b-8bd3-5ab2725334f9",
        "cursor": {
          "ref": "e7fe9094-e88a-4e78-ae00-f1deb29ce07b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9ae196a2-0e7e-4451-94c2-345d4daa7e58"
        },
        "item": {
          "id": "cd0ef274-46e8-4c0b-8bd3-5ab2725334f9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e761175-d1fe-4c6f-ae74-91e4bb10ec13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91471b0-642c-484e-b557-7ff0974045a8",
        "cursor": {
          "ref": "fe196cc3-f70d-4f15-84e1-f41588d7257c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d34df034-3297-4b8d-8f7b-9af7aa76841c"
        },
        "item": {
          "id": "f91471b0-642c-484e-b557-7ff0974045a8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b944749c-2046-4e61-9d05-8dfdf85191ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cad61d-d2d7-4690-b309-e8d117c9ee76",
        "cursor": {
          "ref": "0a3c5612-478b-469d-affa-eeef751ea640",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8dc241d6-1fc9-49da-8d03-7777fff57c01"
        },
        "item": {
          "id": "16cad61d-d2d7-4690-b309-e8d117c9ee76",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f284ecc9-5737-4af3-84c4-8f0da26581be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fa4bef-0d9d-417a-8ab2-52214ad88eb8",
        "cursor": {
          "ref": "d5052cf0-e5b4-4487-b79c-b63853194e85",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7f0bb473-8ff8-4a88-8231-83c479077b9a"
        },
        "item": {
          "id": "68fa4bef-0d9d-417a-8ab2-52214ad88eb8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6019d340-1fd9-407f-af86-a2439e0bde7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea5d48f-bdfe-4b33-8dd1-f598bc7111f3",
        "cursor": {
          "ref": "fa31f9a0-54cc-431d-a315-58fbf9af27bd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4735ab70-6da7-4a55-8040-93baa050e6eb"
        },
        "item": {
          "id": "4ea5d48f-bdfe-4b33-8dd1-f598bc7111f3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eca4fab5-e3b2-48f8-8581-40cefdfd6884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efd46d-e829-4152-b013-af32e448704c",
        "cursor": {
          "ref": "9e3da6ba-c444-4f3b-a367-3a18bd0260d7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f28fc65-8f2f-4581-a167-65e8e42e4088"
        },
        "item": {
          "id": "72efd46d-e829-4152-b013-af32e448704c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "44be6e4e-dec2-43f3-aeae-e7b3df9fbe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7456c14d-732c-4406-b1d1-130885de034c",
        "cursor": {
          "ref": "11e83847-f2b1-4b37-98b5-2e13cdc9ee89",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5f58045a-35fe-4190-a52e-6821d591ec40"
        },
        "item": {
          "id": "7456c14d-732c-4406-b1d1-130885de034c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fd27a952-bcd7-4941-88c6-4e1af4ba48fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b452512-2cba-46c7-853a-c87bc87e4cf0",
        "cursor": {
          "ref": "52a0c582-3afc-4fee-83f8-fd88b2863134",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "999fa28d-2cfa-4a73-90c9-d31eb145c099"
        },
        "item": {
          "id": "2b452512-2cba-46c7-853a-c87bc87e4cf0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0ec228c2-a9f0-4855-bebe-5327f14e4564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95626627-8e7d-4404-9922-8e12fdb40e7b",
        "cursor": {
          "ref": "09cefced-c66e-44c5-a71f-b8b15fc0b9ac",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "36576872-8dbb-41f9-85eb-9354fb2fd881"
        },
        "item": {
          "id": "95626627-8e7d-4404-9922-8e12fdb40e7b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f9999997-474e-43da-86ea-810f2a17efa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb6a91-8de6-40ba-b4cb-1b3b8bf8bcf2",
        "cursor": {
          "ref": "09969ed6-60cf-414c-ae3b-ffaf972acd7f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9c77b797-cd37-4595-9a7b-145697940db4"
        },
        "item": {
          "id": "abeb6a91-8de6-40ba-b4cb-1b3b8bf8bcf2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d10d85b7-3e01-4e34-912b-1b6b56d2c154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312e514-d6d4-4d53-b4c5-724449adf158",
        "cursor": {
          "ref": "aea2769b-c96b-4ed0-bfe9-3e806b6d027b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4dd2cdfd-0384-4663-bf89-5c04cf4f5146"
        },
        "item": {
          "id": "d312e514-d6d4-4d53-b4c5-724449adf158",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1e861dfd-8b16-4d02-9fed-24144ba87986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c866e5-245f-432a-91da-e9abcbf64631",
        "cursor": {
          "ref": "5026c3d0-dd03-4cfe-bc8f-fd15674571c0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "661f7058-de82-4672-82c6-9b957bcba868"
        },
        "item": {
          "id": "97c866e5-245f-432a-91da-e9abcbf64631",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f8328553-a52a-4e7c-a0f5-025de05045cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c5af7f-a545-4f14-bfb2-24c0a0218ec4",
        "cursor": {
          "ref": "8eee1956-d28b-4e4b-8f4d-ecfcbc636efd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2cbfe1de-2fcc-456d-9476-f22356f6058c"
        },
        "item": {
          "id": "d1c5af7f-a545-4f14-bfb2-24c0a0218ec4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e5b3ca8-3e46-4cad-bdce-08070730efa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb511d2-37a6-4eea-b0f1-0d168780c5cd",
        "cursor": {
          "ref": "a1723c78-0f1e-4711-8966-b973952f66a0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bdca0b9f-3a79-4cbc-bfdc-c04bae768120"
        },
        "item": {
          "id": "5eb511d2-37a6-4eea-b0f1-0d168780c5cd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a2c8e65f-2582-432d-85db-fef40968dad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a705192d-8931-49ee-8447-96905a7e26bd",
        "cursor": {
          "ref": "b643e56c-af73-4f00-a61b-d5f827e360cd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a550493-8805-4434-a41a-c24a2678efb5"
        },
        "item": {
          "id": "a705192d-8931-49ee-8447-96905a7e26bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2ac15b7-97af-4867-a389-884dba04a89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c447e5-8d4e-453e-8e2e-a6e08d6a6461",
        "cursor": {
          "ref": "b0b49666-4257-494a-93da-70c53625db41",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e5e1a0bc-e97b-4d19-a9a4-dca6cc8c461e"
        },
        "item": {
          "id": "c4c447e5-8d4e-453e-8e2e-a6e08d6a6461",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "011a2a32-6eee-4822-b006-00b93b03847c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e6819a-f203-4305-b19c-6241224a75f3",
        "cursor": {
          "ref": "216358c9-6cad-45f0-86b4-6905f12c4935",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1259bb52-ab4b-471b-9cc0-5ee5ebca9951"
        },
        "item": {
          "id": "b1e6819a-f203-4305-b19c-6241224a75f3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "51db5623-6220-4cb2-9d60-c0e4a2f7ac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b181b0-90e5-4924-bd94-6bb5ddc75fca",
        "cursor": {
          "ref": "b4d2767d-ac04-4269-bffd-93de2da7cf02",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "78f6264d-89a1-4821-b2ee-6da2858cefc9"
        },
        "item": {
          "id": "86b181b0-90e5-4924-bd94-6bb5ddc75fca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7eb492c7-d71a-47d9-9ce2-dcc4ed21fe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d0678d-4996-4b41-90dc-ec9ae040e252",
        "cursor": {
          "ref": "5b87c2f1-370e-4896-b758-ca884e611cd7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "abf6278f-6abc-4d8e-a518-e3091a1f42d2"
        },
        "item": {
          "id": "89d0678d-4996-4b41-90dc-ec9ae040e252",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6a68eae2-acd8-4c63-be1e-aa8bec2ed06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891c295a-aac2-416b-bc3b-2d7f69880b9d",
        "cursor": {
          "ref": "cc6360e1-57e4-4461-9e21-2d3bef5b878d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fe2397f5-80db-468d-a9e6-2b27583acced"
        },
        "item": {
          "id": "891c295a-aac2-416b-bc3b-2d7f69880b9d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0ba2adb0-f885-4809-9652-c7ed0a78271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49a144e-0042-4645-8e31-31619bffb572",
        "cursor": {
          "ref": "217cd298-81e8-44ab-89dc-7f80bd145350",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "93499674-b9df-4cf5-8257-7b8de86fa5d2"
        },
        "item": {
          "id": "c49a144e-0042-4645-8e31-31619bffb572",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f7924c9-7164-457f-81b9-11d1151ae9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a94d3-426f-43fc-90ca-0a122c259d74",
        "cursor": {
          "ref": "9ed62162-2e39-4453-83a8-51dc5ab465e0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9587442c-19c2-42e5-8f1a-6ccced13bc98"
        },
        "item": {
          "id": "cc6a94d3-426f-43fc-90ca-0a122c259d74",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "474c2ec6-08e5-421d-b9de-7c862c8e70a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c596eb5-436f-4c2b-bfd7-878bafa8a6e3",
        "cursor": {
          "ref": "b83e6ff8-2a49-4167-8d30-81f585c65bc9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27a8f7ef-cda0-44a1-8a12-539e3e959fc9"
        },
        "item": {
          "id": "7c596eb5-436f-4c2b-bfd7-878bafa8a6e3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18157413-a356-4468-8e44-8ce8407f767e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084af9df-d9b9-40b1-bd7e-9f35468df9dd",
        "cursor": {
          "ref": "869baf0e-026d-4ec1-be53-043ea1e52ecb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ac2684c-01ff-4bf4-a05a-01b50bb9cbaa"
        },
        "item": {
          "id": "084af9df-d9b9-40b1-bd7e-9f35468df9dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "470c7881-7c4c-47ff-a2e5-98f0c991c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f7838-11bc-4143-acc5-ca0c0de66ad2",
        "cursor": {
          "ref": "5ebd14f6-f862-4a92-bae4-fe6a8d3bac0c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1001ae6e-6aa7-40d9-bb36-ceaf64efe3de"
        },
        "item": {
          "id": "112f7838-11bc-4143-acc5-ca0c0de66ad2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8bb4a228-6a43-4e2a-bdc5-9e32a7fa47b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afae2fb-8149-4739-84c8-ded395884938",
        "cursor": {
          "ref": "840723c7-5ec0-4a41-bea2-7b481f961952",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "46daabd6-bc14-4cdd-819f-47e85fe2915f"
        },
        "item": {
          "id": "3afae2fb-8149-4739-84c8-ded395884938",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6bd6ce06-3af2-4dbc-b9f0-0eec7f805be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89c52e8-1d32-446b-913b-c03b14d94854",
        "cursor": {
          "ref": "3908473b-601d-4abe-83ef-5a93c98189ec",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec07717e-2636-4445-94bb-87b44d8c5387"
        },
        "item": {
          "id": "d89c52e8-1d32-446b-913b-c03b14d94854",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2daf5219-2a3b-4a68-b3b6-51f72f28d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9357a7f2-de90-4fa5-8d67-42f2dc70a314",
        "cursor": {
          "ref": "ad7986f4-a916-48a4-bbc2-18a5ae65ee78",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2bef84a9-acf3-4191-b6c6-d084d5903bd7"
        },
        "item": {
          "id": "9357a7f2-de90-4fa5-8d67-42f2dc70a314",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f1d96c0-4014-4810-a103-a4dd6ab48cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056eef50-7da5-4861-98fc-a6435bbcf50f",
        "cursor": {
          "ref": "1ea37048-45f5-4f1a-b024-dee4330bf017",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d796d7a6-e2b1-4548-b04e-3c4bef8aff6c"
        },
        "item": {
          "id": "056eef50-7da5-4861-98fc-a6435bbcf50f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dd35fee4-5a0b-4ca9-9f28-580002e13a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440d8734-a076-4e5e-8c39-529acb7fbcd2",
        "cursor": {
          "ref": "c2084cab-f6b3-47c4-ba51-109c1dbf4845",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "841b2666-4397-40ed-84bf-122c1311e02f"
        },
        "item": {
          "id": "440d8734-a076-4e5e-8c39-529acb7fbcd2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fab7d24-2652-49e9-8c64-95c516024b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baa97ec-f2c2-447b-a39b-acad81af53e0",
        "cursor": {
          "ref": "90c9a132-9a6f-4619-8da6-713c7b041333",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "65a377c7-ef2d-4c6b-af19-a0f291a3120b"
        },
        "item": {
          "id": "4baa97ec-f2c2-447b-a39b-acad81af53e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7078ed35-9a60-4816-b798-d1e32d2fd821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75487405-c9b9-4cb1-afdb-77a75f7a72b4",
        "cursor": {
          "ref": "3ca6c5ac-aa9b-403f-a290-2d66d78b375c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "73d07a32-e6a5-4a64-9385-7c2afccaa282"
        },
        "item": {
          "id": "75487405-c9b9-4cb1-afdb-77a75f7a72b4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ca1cb3ac-4f6d-4291-8562-8083d6c23bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb00ed8e-f041-49bf-9d8a-0d8a86169174",
        "cursor": {
          "ref": "6a8b73d5-cff8-4789-83db-f7754e56292f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "94d64b18-e80e-4fa6-8b45-a3bc578b98d6"
        },
        "item": {
          "id": "cb00ed8e-f041-49bf-9d8a-0d8a86169174",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c3a66a24-23d7-4a58-9ba4-873f5a92acd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ac3e97-50c5-4b04-9536-353b3367eb2b",
        "cursor": {
          "ref": "398a69a5-cfd0-49cd-986c-beb38f0347df",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "12cfc2f5-e3a2-40ff-a392-1adbb4cd2941"
        },
        "item": {
          "id": "d5ac3e97-50c5-4b04-9536-353b3367eb2b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "44a1199e-e04d-4b85-85e6-cb1b361e1fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f5ab0f-d09a-4890-ae00-7ca468dc9d0c",
        "cursor": {
          "ref": "cec16e70-9993-4006-8f8c-db2b2b52e6e2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c7fc1b3-f738-407c-b4c2-e26edd71927e"
        },
        "item": {
          "id": "89f5ab0f-d09a-4890-ae00-7ca468dc9d0c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cc72e558-7147-4f19-852d-973c2445723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95d077-8688-4d0c-bae2-0d44cf573bc9",
        "cursor": {
          "ref": "c5e02b6a-104d-4c9a-8171-78c470a43ba3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1e19e1df-8580-4891-a7ba-e885804d226d"
        },
        "item": {
          "id": "1a95d077-8688-4d0c-bae2-0d44cf573bc9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1efd617-ed5b-4606-acac-44fb9d1c761d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c659e6ee-4a84-47b4-9781-c7cfcfc34340",
        "cursor": {
          "ref": "bc8a0c24-d0c5-4991-b3e5-07520feb52e6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f8505cfa-a1d4-4714-add2-1d51ff22dd29"
        },
        "item": {
          "id": "c659e6ee-4a84-47b4-9781-c7cfcfc34340",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac598b90-fc58-4a6a-acbd-c181bf164c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb00f5d-5194-4219-803a-7bc2d7b7f898",
        "cursor": {
          "ref": "e5c85d5f-8c38-49c1-884b-0adff6725163",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19b875b1-ce29-4dcc-9d71-415860b8c1ea"
        },
        "item": {
          "id": "beb00f5d-5194-4219-803a-7bc2d7b7f898",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ffce899d-b3ed-46cd-b253-f9422495c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192eee7f-f8de-4cec-9129-0ce691099f79",
        "cursor": {
          "ref": "22771264-8ea7-428c-8892-c78cfed79cef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f8f7280d-eea4-478c-8285-6d79650e406c"
        },
        "item": {
          "id": "192eee7f-f8de-4cec-9129-0ce691099f79",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2afda547-fc2a-4b21-8d4e-5ce08f87e687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e42538-6192-4311-89fc-78a1bed01de5",
        "cursor": {
          "ref": "78572c1f-6b4b-4825-bda8-7b494902c43a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7df03b34-aec3-4d59-a253-9c66e1546864"
        },
        "item": {
          "id": "19e42538-6192-4311-89fc-78a1bed01de5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3047ae9b-91dc-4b74-9bd3-6a379bb32c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd84b28-e2db-4d5b-8944-179341d33537",
        "cursor": {
          "ref": "41c5930c-ea23-4591-b708-b6c6a6e21016",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "797321e3-c2c6-4a8b-ac45-deaf5d488eab"
        },
        "item": {
          "id": "ffd84b28-e2db-4d5b-8944-179341d33537",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79438e7f-e459-4e61-bf91-46c504288cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6358ba43-5a15-4ae3-b18d-7bf76024c9cb",
        "cursor": {
          "ref": "6af58603-a302-4b54-a3e8-91066347b7f4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4816a9aa-087f-4462-8be6-9428c288f22a"
        },
        "item": {
          "id": "6358ba43-5a15-4ae3-b18d-7bf76024c9cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "08c92fff-6a5d-4efc-aabd-cf9b1802f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f133484d-512f-4eb8-93e0-a04b72ca129c",
        "cursor": {
          "ref": "c41bce44-b4bb-4eae-a1c9-7c355b221cb1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "daf13f63-34cd-42f0-a43e-eaa101be1a98"
        },
        "item": {
          "id": "f133484d-512f-4eb8-93e0-a04b72ca129c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7842ffe2-3eb6-4749-a2af-cad59ee733de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb28bc-12e7-4884-ab6c-65683756b54a",
        "cursor": {
          "ref": "1908ab05-f9fd-4d70-867c-024664392536",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6a800059-81e0-49a3-8dbb-4db82bbfb208"
        },
        "item": {
          "id": "b0bb28bc-12e7-4884-ab6c-65683756b54a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "25efd45f-0429-49eb-b526-953770b6386e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284e6b5c-3e2f-4af8-be9d-b88f0e8cfd7b",
        "cursor": {
          "ref": "0a0d52b6-b51f-4a50-99f5-fd0002cd7efa",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "089032f5-8ecb-4ce5-b379-14170b7c20c0"
        },
        "item": {
          "id": "284e6b5c-3e2f-4af8-be9d-b88f0e8cfd7b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "720f7b3d-cc66-4947-a414-9cf9af3dbcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c62be6-553d-40cc-9840-796a38f9824f",
        "cursor": {
          "ref": "4bb7d312-f047-4274-a7b4-975cc04eb32b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "70c7a917-a56a-4c36-a61d-ea26914e7f1f"
        },
        "item": {
          "id": "48c62be6-553d-40cc-9840-796a38f9824f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "17403e43-1088-4a53-b6be-8ba5fefac68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6a451e-48b4-4591-bccb-1affb2620a6a",
        "cursor": {
          "ref": "e1c65aff-e575-4f4d-8135-77484c78a18f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5963e14b-449d-4c1d-8f57-888425045370"
        },
        "item": {
          "id": "ab6a451e-48b4-4591-bccb-1affb2620a6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0ed97cb9-6e6a-4943-9c21-864b59d3e9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac841e4-6774-43d9-b206-aa3016f95334",
        "cursor": {
          "ref": "c6cd11e9-9639-4bec-b409-a4e85109ddb9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "abb83bcf-da72-4379-aded-910d5cf6ddd6"
        },
        "item": {
          "id": "2ac841e4-6774-43d9-b206-aa3016f95334",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "607837d2-df1a-49af-a182-8dc384cafa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf0af19-4767-4017-8f75-31b3e745cdda",
        "cursor": {
          "ref": "0bff0ba2-c18b-4994-8c2f-a2f6fd55aafb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f20eb9bf-fb5c-4f33-b39d-e55815b1bda0"
        },
        "item": {
          "id": "adf0af19-4767-4017-8f75-31b3e745cdda",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58cb60e8-2ece-4e4c-9d49-d0ae53c63bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa777dd-36e8-4cc9-b677-60e4f0122079",
        "cursor": {
          "ref": "64817ead-06bb-47f5-a2aa-01456e9d1094",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5d2500f9-d5b6-4d3e-8207-508cded622e5"
        },
        "item": {
          "id": "dfa777dd-36e8-4cc9-b677-60e4f0122079",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "561bec17-99f9-4fa4-83b1-27aa9697d52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf96130-5224-433b-bf6e-7dc73410034a",
        "cursor": {
          "ref": "52892535-ac84-469e-9469-428ef1f54506",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "73f553c5-7814-47ba-aead-02eef1f28f32"
        },
        "item": {
          "id": "fbf96130-5224-433b-bf6e-7dc73410034a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d02b83d-37c4-47cb-af5e-5aa5ce818f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27ef600-c889-4300-96dc-0823637c36a6",
        "cursor": {
          "ref": "eda2905a-3533-41c6-8094-1c60f1845f92",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8907c44e-1e11-48a8-b542-62d000535f0a"
        },
        "item": {
          "id": "d27ef600-c889-4300-96dc-0823637c36a6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1f5b3638-4a40-491c-baf8-1bc16cf0e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781ea161-b0f5-449a-9c8d-005227263f0b",
        "cursor": {
          "ref": "d9220677-8a87-421e-9cbb-c33fd7b294c2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b969b2d1-76e5-4730-b6ee-12f9d518f90f"
        },
        "item": {
          "id": "781ea161-b0f5-449a-9c8d-005227263f0b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a6224790-3efa-4aa8-8e79-34b2c5ec0c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252ceec-fed5-404a-a40c-131225e33251",
        "cursor": {
          "ref": "4c21fce3-c093-4ee5-b254-3cb3b6340d59",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51f28ece-76d7-438b-8287-8ad923fcf7cc"
        },
        "item": {
          "id": "d252ceec-fed5-404a-a40c-131225e33251",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "af6cc55d-db7c-47d2-86b3-0bde3632977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6db5390-81c5-44a8-9e06-7f98d42190eb",
        "cursor": {
          "ref": "98ec11b0-11e2-4e0d-a8ad-8b47a5a2911b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca7e1508-1107-43e4-a141-9cbeff3f1964"
        },
        "item": {
          "id": "f6db5390-81c5-44a8-9e06-7f98d42190eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a6d34d78-0e19-428a-939c-74340685841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13439060-6816-40fc-91e7-c754d2a0c2aa",
        "cursor": {
          "ref": "a8d95ef1-23c4-4c79-8790-8053c816b964",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a43ac4f6-5427-457f-bc5a-35990374fea7"
        },
        "item": {
          "id": "13439060-6816-40fc-91e7-c754d2a0c2aa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e6e8182-afe8-4cb4-bd89-7af844ba6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80847e4-5a2a-4394-b52a-25118c873760",
        "cursor": {
          "ref": "21991b1e-7cbe-474d-a2d4-cebb7e9c8d8b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8bab53c0-455f-4a12-a59c-f5e7205fc6d8"
        },
        "item": {
          "id": "d80847e4-5a2a-4394-b52a-25118c873760",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ff0b6d2-f3ed-4f76-a93b-c23c3c54797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5391d45e-807d-44b8-9751-057ba972a2f1",
        "cursor": {
          "ref": "c81104c3-feee-4f46-80b1-7ce7a9f19b44",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1b0630e6-7d14-4297-8d7d-fa0d6e240ea3"
        },
        "item": {
          "id": "5391d45e-807d-44b8-9751-057ba972a2f1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "75ad1004-bef0-4211-a100-1e69c1e370b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90713e3e-b4a3-4c6b-83a5-7c0e323ec915",
        "cursor": {
          "ref": "7df66bff-322f-4678-995f-9cd30b1b984f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6c36b4c1-3573-43af-9050-daf3ba06ef10"
        },
        "item": {
          "id": "90713e3e-b4a3-4c6b-83a5-7c0e323ec915",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "31b95f9c-e2c9-4469-be0d-fc8978016c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8382211c-b17d-4945-9b95-5f6c93f4504c",
        "cursor": {
          "ref": "b249f8de-2708-4bbe-b326-ea9c1db8c2d7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "de533a1e-1a35-470b-9b1b-0d2c58bf3371"
        },
        "item": {
          "id": "8382211c-b17d-4945-9b95-5f6c93f4504c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "be5e1aa9-8297-417c-9807-07a48b46c5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a77778-9f4b-4976-b5b4-24360e62904e",
        "cursor": {
          "ref": "e39e9fc8-c649-49e5-809b-104fce0c848e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "563fae11-ed3c-4ec6-9efb-4a8335f6ec6b"
        },
        "item": {
          "id": "31a77778-9f4b-4976-b5b4-24360e62904e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f78ae18f-87b7-4cfb-8c36-cd05ff0ef56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7952cd0d-c6b1-42db-b384-7c8e0695e60f",
        "cursor": {
          "ref": "d552e598-e938-47da-b40d-414a7a545fa6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "11c9637d-766b-482e-9658-eacbbc317d4d"
        },
        "item": {
          "id": "7952cd0d-c6b1-42db-b384-7c8e0695e60f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4dc3741e-e8f9-481f-9459-b0e98ae539f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71487457-7dad-4907-b257-ab22eec24e2c",
        "cursor": {
          "ref": "db33788d-5a91-484f-bc80-ac00dfdd3f6c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b30ae285-c795-41c2-8e35-3dd67bbddd8d"
        },
        "item": {
          "id": "71487457-7dad-4907-b257-ab22eec24e2c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ae9c54bc-d20b-4308-86c4-46d785897e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfe2681-0e42-456e-a347-b4cf4ee5323a",
        "cursor": {
          "ref": "b72d8270-fc02-4e61-9443-15a50fcbb50f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8eea8f9e-e32a-47ca-906e-bca14f5044c7"
        },
        "item": {
          "id": "1dfe2681-0e42-456e-a347-b4cf4ee5323a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "269490c4-3e2b-495a-a7dd-41d4d76b3ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992177e4-ada4-473c-ae24-d5cb9b7d2301",
        "cursor": {
          "ref": "21db5c63-dfc0-4e58-95a4-155f6e3cc813",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c42587bf-6b14-41e5-af97-d63afa27d266"
        },
        "item": {
          "id": "992177e4-ada4-473c-ae24-d5cb9b7d2301",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d0ab120f-8eb1-4fd6-bcde-09d00877c790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b58f5b0-2014-4cb2-8937-86b4be1c93e0",
        "cursor": {
          "ref": "deebe2fd-76d0-4cba-9b6d-ab01fc311bb4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0dc17db1-0979-4a04-beb5-cf3ef924d115"
        },
        "item": {
          "id": "6b58f5b0-2014-4cb2-8937-86b4be1c93e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c2a6b656-7f80-4333-af3a-f44c15c2086d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fce88b-7c7d-4208-a6c5-f0d758c16a94",
        "cursor": {
          "ref": "4fbf9f43-0f36-4ae8-b87f-46c553c96055",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2b241fe7-0151-4c49-9da3-ff88f37c0a48"
        },
        "item": {
          "id": "a9fce88b-7c7d-4208-a6c5-f0d758c16a94",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "29355dae-55cf-4d5c-b741-44f7d9164ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3efcf96-a8e0-49d3-9cd3-b23aaf5a1282",
        "cursor": {
          "ref": "6dbf1b64-9f0a-441f-8077-7e97f3c321c3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4fb771a4-719f-44d5-aa6f-d32284f8c3f2"
        },
        "item": {
          "id": "c3efcf96-a8e0-49d3-9cd3-b23aaf5a1282",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d9beb1d9-585b-46b9-a764-89a90fcd67a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa02f3b-15b9-43a8-bdc5-46d142ce3171",
        "cursor": {
          "ref": "376e57fe-86c5-4f4c-af74-3b6cca011ef9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "055e4172-8dab-4b0f-ae32-278b452a382b"
        },
        "item": {
          "id": "ffa02f3b-15b9-43a8-bdc5-46d142ce3171",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9be8feb3-7763-44ed-bdf2-4dc43efd619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677674fd-568f-4a5d-b0d9-2bc6fa02c5e9",
        "cursor": {
          "ref": "fd8a67d8-549a-4341-8c84-fb949839f249",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6cdcf4c0-9b65-4e4f-b27c-dc0851f44239"
        },
        "item": {
          "id": "677674fd-568f-4a5d-b0d9-2bc6fa02c5e9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f271d326-82ee-4f97-b3e5-ef82e16fa50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9ebb4f-6b26-4202-8c6d-c9dcfec1be89",
        "cursor": {
          "ref": "7b877fd2-1863-4226-a7e2-7dd29f16a5cd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a76fb093-cc14-4569-a5a4-6a224b74b458"
        },
        "item": {
          "id": "9e9ebb4f-6b26-4202-8c6d-c9dcfec1be89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "acd91133-7f85-4506-8123-4e72d7ee9720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f091691-246e-4d29-b38a-12f895dfd2d7",
        "cursor": {
          "ref": "27c27912-feca-4469-89e9-a981ac3758a1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3ac90b03-ed8c-442f-be38-90af7607c22d"
        },
        "item": {
          "id": "5f091691-246e-4d29-b38a-12f895dfd2d7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5e51852c-3198-4ff0-b4eb-bc998281e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee783d87-74d3-4e61-a754-bafe01fd8c5c",
        "cursor": {
          "ref": "d290013a-833b-4c4a-8777-a1c39a598013",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6625afea-f475-4e5d-a8a6-ecaedad22fd3"
        },
        "item": {
          "id": "ee783d87-74d3-4e61-a754-bafe01fd8c5c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "642d5934-68b2-48c3-a15b-3facf8c3455d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de00040-c8a5-4293-9085-a3b3ee85ee94",
        "cursor": {
          "ref": "7c21761e-e273-49b7-8c27-85aa69075d5e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c47d1f4e-ad96-450e-8cef-b76c954c18f2"
        },
        "item": {
          "id": "6de00040-c8a5-4293-9085-a3b3ee85ee94",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "488e6487-0c15-47f0-ac7a-278048f24bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4e16f-3d3e-48b5-9a84-2dbeb8c8ce09",
        "cursor": {
          "ref": "271623c9-bde6-4ab0-8c07-11c431083c59",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "afd4de7b-3097-4d97-b4e2-b04e32092a71"
        },
        "item": {
          "id": "37d4e16f-3d3e-48b5-9a84-2dbeb8c8ce09",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "710e6bdf-5de3-4f2d-931a-86cc0ea70eb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efee4b96-a2d6-42b7-a929-b87d1859dcc0",
        "cursor": {
          "ref": "915ecc2f-898b-4435-8c0e-8d786d4e6089",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6631b0c1-e618-4fd7-9451-65d19fd759b5"
        },
        "item": {
          "id": "efee4b96-a2d6-42b7-a929-b87d1859dcc0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f3b3ea3d-d058-4238-8467-c74aabb06458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "af56f745-9b6d-4949-9ce3-9a7b59ef6c7e",
        "cursor": {
          "ref": "2dd93d57-431e-469a-ba55-80c5d6b853bb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "182bf4b0-5d2f-45fb-99ca-f88ac93b6bda"
        },
        "item": {
          "id": "af56f745-9b6d-4949-9ce3-9a7b59ef6c7e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "62a5dc11-c828-4084-bcaa-f36e2fb3db88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "17a9fa5f-f8f8-4908-82a4-5ee652d938f0",
        "cursor": {
          "ref": "0fe66f7b-60bb-444a-a5de-63e5920ecaae",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39b918a4-abad-4602-8d9d-1c8c2d9ab9f1"
        },
        "item": {
          "id": "17a9fa5f-f8f8-4908-82a4-5ee652d938f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "675f7304-de53-4750-a532-a8e0b909c8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "561e5e53-1c89-4ac3-9676-b1c271ab7c6d",
        "cursor": {
          "ref": "5e4c17dd-abbb-4d75-b354-35462a5392ef",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "34949876-7353-440b-aeb4-c3585d4e5cd1"
        },
        "item": {
          "id": "561e5e53-1c89-4ac3-9676-b1c271ab7c6d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "96c00472-cc28-46f0-90c7-a9b07cdaee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bd088750-8a79-44a6-b793-469c59381bfc",
        "cursor": {
          "ref": "eb71c4fa-12c7-4162-8d9c-a328ad211a16",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e303d35b-625c-4a39-9a91-8f5490f75bea"
        },
        "item": {
          "id": "bd088750-8a79-44a6-b793-469c59381bfc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c4fbc9c7-68e6-41f6-b7f9-dd03defc1553",
          "status": "Created",
          "code": 201,
          "responseTime": 13393,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85058040-b28f-44c3-ac23-e10827451faf",
        "cursor": {
          "ref": "415c36d7-d67b-4007-9fb4-4fb9f7eeadce",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c8dca93d-7e4e-48e2-8769-f1a9b705087c"
        },
        "item": {
          "id": "85058040-b28f-44c3-ac23-e10827451faf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "40c98edc-5a64-4fe2-8c5e-7bd9e0c4fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "520ca3ee-bad9-461e-aaf3-966a5b37eea2",
        "cursor": {
          "ref": "88ac5ebc-2105-4582-998e-70c9897813d1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "85453b1c-35a9-49a2-8737-72a6b60aabfb"
        },
        "item": {
          "id": "520ca3ee-bad9-461e-aaf3-966a5b37eea2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "10e24f15-950a-413b-aacd-a851967fab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1d8993dd-c77d-4977-b2d4-6afbd5f8814f",
        "cursor": {
          "ref": "2467ebce-e118-4d92-a4cd-10e20e7269a3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aaaea947-5028-449d-b565-18edf00b6fa6"
        },
        "item": {
          "id": "1d8993dd-c77d-4977-b2d4-6afbd5f8814f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b641bef6-5a85-43a9-aa51-2b9e89fbb79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023f0072-421c-4380-9ec3-f0f9917a0063",
        "cursor": {
          "ref": "0f8b5bfa-15d3-44fc-8f25-b5b83c467fbc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e822afd2-9a3d-4c6e-a564-49053b67110c"
        },
        "item": {
          "id": "023f0072-421c-4380-9ec3-f0f9917a0063",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84be1cbe-a616-4621-a5db-589e5d72de3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0457d-0cf4-42bd-a00d-1a687271ab32",
        "cursor": {
          "ref": "301fe6f6-c6a2-414b-8866-eb712ce9366d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d5cfee4-05f1-433e-a96c-459d24e3e5d4"
        },
        "item": {
          "id": "2bf0457d-0cf4-42bd-a00d-1a687271ab32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ef488d2-adaa-4223-8499-442338a1c737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a41353-27d7-4647-b197-863c996502a4",
        "cursor": {
          "ref": "39e8ecac-9b3d-4e0b-ad9a-24e9ef01e514",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "68cdf2c4-0a61-450c-97a3-1018ec6d073a"
        },
        "item": {
          "id": "16a41353-27d7-4647-b197-863c996502a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "19ee8bcc-f43b-42bd-82d3-e9f8de8134cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8c9cb-71f6-4747-85ba-18ef307c0e1e",
        "cursor": {
          "ref": "b336f8fb-4777-4a35-9b38-4532551f344b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "208e71a3-334c-49d8-88f5-8985a06d2226"
        },
        "item": {
          "id": "66d8c9cb-71f6-4747-85ba-18ef307c0e1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "472394ab-3aac-45c5-9929-559d16e22fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e40e9af-d983-4fd1-8883-10d5c6a6d2cf",
        "cursor": {
          "ref": "1d465cfd-b758-4939-8910-b48582de8e99",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "da672e78-3ff6-4dc9-984a-10e873588ccd"
        },
        "item": {
          "id": "1e40e9af-d983-4fd1-8883-10d5c6a6d2cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4db77b9f-d427-46e5-8992-b279cb6814f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16053fa-1574-428f-b8be-929e3b6ae5e7",
        "cursor": {
          "ref": "10eb392a-9041-40f8-b729-6e25565ed15b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b1c17e2-8828-4f85-a30f-69fa307944a1"
        },
        "item": {
          "id": "a16053fa-1574-428f-b8be-929e3b6ae5e7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0fa38b5f-0fa2-4ad0-b6c3-f0ea8a68f0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bbff52-2ef8-4f36-91da-bf9be7838da3",
        "cursor": {
          "ref": "d74c2b0b-706c-4eee-a222-324055911e8b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac5add94-f6cf-4a7f-b7a3-ee489fb33b2b"
        },
        "item": {
          "id": "65bbff52-2ef8-4f36-91da-bf9be7838da3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "508c0d19-c313-4f83-b6ac-60865d2f3fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd8d4a4-e8ce-4799-bd60-ebd8abb20725",
        "cursor": {
          "ref": "82c3565f-9416-435a-9038-fe0b7a1ed3e4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c763936-253c-4381-8f6a-fd382042e61c"
        },
        "item": {
          "id": "dbd8d4a4-e8ce-4799-bd60-ebd8abb20725",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c9559e81-7d90-4679-bd28-5d7bdb2321b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d23efd-5090-4f2f-a0a5-27272cae24f2",
        "cursor": {
          "ref": "9b4db969-8786-482b-8f1c-205657a9f5a4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "44cec18d-176e-4579-843e-48cf6b4e4ed7"
        },
        "item": {
          "id": "72d23efd-5090-4f2f-a0a5-27272cae24f2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d6e911ce-6de5-4a90-a768-762229437944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed77e35-53cb-48b3-89a3-4f4f62ef6fbc",
        "cursor": {
          "ref": "6e4cd79c-d0df-43e6-a8e6-519e583f9770",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f6a123df-dd24-40d8-9a59-20d4f56ed294"
        },
        "item": {
          "id": "fed77e35-53cb-48b3-89a3-4f4f62ef6fbc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72a07f10-f880-4509-beb9-d28dbc41e379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e7c348-a7a4-4fd7-8b7c-95e39ff6f886",
        "cursor": {
          "ref": "3008fa06-d07a-48f4-bc8e-22a6f667490c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "38ea5b0e-bcc7-4936-a926-f3c87eac03ed"
        },
        "item": {
          "id": "49e7c348-a7a4-4fd7-8b7c-95e39ff6f886",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8b2840e6-3eb4-4aa4-9699-1d5f34c472d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248f8142-57e5-43ce-b9d8-ca4b8dd33bf6",
        "cursor": {
          "ref": "29b0b7d5-9214-4474-87fa-ec848e26dc5d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0389f7f3-4ff0-4d47-9674-bc94619b2473"
        },
        "item": {
          "id": "248f8142-57e5-43ce-b9d8-ca4b8dd33bf6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2a0c833-323d-4fb1-acaf-e3942ce2d3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6193e70d-9ba1-41d1-985d-d6bff9a1023f",
        "cursor": {
          "ref": "4197af52-eef2-4b7e-bde4-00cba02ba44f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "adacc733-8207-46a2-ae7b-da5a9994e74f"
        },
        "item": {
          "id": "6193e70d-9ba1-41d1-985d-d6bff9a1023f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e69e776f-9cd9-4dc4-a426-5c6fdee3f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae3e33d-acd3-4838-80fe-81d40dd37db7",
        "cursor": {
          "ref": "f2c24fa9-a69e-4f0b-b3c8-971db92c3309",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "db267a3f-cd42-419f-ae35-0ac719c21549"
        },
        "item": {
          "id": "cae3e33d-acd3-4838-80fe-81d40dd37db7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ea89114e-b2b6-4e81-be2d-afcf56c1b0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b772b-bb41-4d79-94e8-0443a62158af",
        "cursor": {
          "ref": "2d0b91b4-3472-458e-ae55-8c2f7a431118",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8fdce600-acae-470c-8096-4ed0c13d8dd1"
        },
        "item": {
          "id": "f28b772b-bb41-4d79-94e8-0443a62158af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f915861-065c-47d2-a7e0-9fb798034004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8957688-d9a5-45de-95a7-1fa0ff3438f2",
        "cursor": {
          "ref": "c3e0046d-2fc3-422b-bf30-eab075760c24",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6b8b8b8c-b58e-443b-92a6-6079023fce86"
        },
        "item": {
          "id": "c8957688-d9a5-45de-95a7-1fa0ff3438f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "88173a4a-974c-45c3-9068-0cf91706e167",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "aaab1c20-5061-415c-b113-ea0cb12c110a",
        "cursor": {
          "ref": "d562bed7-cc62-49db-b738-d94f00989b39",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ba340fc2-6d9d-4594-bcf6-9d8894546894"
        },
        "item": {
          "id": "aaab1c20-5061-415c-b113-ea0cb12c110a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c888e26-df63-4d45-9d4a-dbe8758b18f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5465c0b4-95fc-41cb-ac8d-c609995fb093",
        "cursor": {
          "ref": "28e9fe2f-5f9a-4917-8032-ca22f131a599",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "68dec863-431f-4ea4-9002-8dffa83e4d02"
        },
        "item": {
          "id": "5465c0b4-95fc-41cb-ac8d-c609995fb093",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cdefbd80-a8b8-4320-b7ae-203cc9526d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f29727-242e-4a97-ae41-02ff63ff8835",
        "cursor": {
          "ref": "4080ce39-180f-45f0-8a3a-558349b600ea",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e882cd4c-6bf6-4b03-bebb-a326ae151bc9"
        },
        "item": {
          "id": "00f29727-242e-4a97-ae41-02ff63ff8835",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "560668ca-3d07-4044-8728-a80c05b994de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847d9353-42bb-4cfd-a5b5-34569b024b72",
        "cursor": {
          "ref": "53407464-8c86-4b7c-8817-a7a39413ab86",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d95dd6a3-bcee-4903-9128-bd05b1cf5b88"
        },
        "item": {
          "id": "847d9353-42bb-4cfd-a5b5-34569b024b72",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec1b034b-7848-4558-a2f7-91e33f6f7b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc30441b-e0fb-4ac5-be7a-1803f65f7b56",
        "cursor": {
          "ref": "1d3e58b8-d125-4b3e-9f56-3ea509844843",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "750200b9-1e0d-44a8-871f-11a718a5f0b4"
        },
        "item": {
          "id": "cc30441b-e0fb-4ac5-be7a-1803f65f7b56",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a66e1a3d-ea03-48ff-ac2e-427fa4d6d494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b729e-80e6-4280-af0f-79fb0ce23f85",
        "cursor": {
          "ref": "6bea4a48-3b00-46d7-a6ce-ceb55d5c9c9c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac16d278-e94a-4590-85f7-3e00087bced5"
        },
        "item": {
          "id": "f15b729e-80e6-4280-af0f-79fb0ce23f85",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "68374a1a-b14e-4c33-990e-7b41c06a7735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a3f975-ba4f-43b3-bae4-77d462192bdc",
        "cursor": {
          "ref": "274900e9-18e2-429f-b4bc-ee5da89b12f6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1b79289d-a2a1-4f00-9b6e-3fde4450a9a9"
        },
        "item": {
          "id": "62a3f975-ba4f-43b3-bae4-77d462192bdc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d8f0c4a1-016f-4237-9078-a62c11810309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b866029a-698c-447f-a654-6cacdadff1d8",
        "cursor": {
          "ref": "3cd53ac7-07a4-45b1-bf2a-81c9a9bee586",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b3528662-9a5f-4d35-9ea7-4c4c882da249"
        },
        "item": {
          "id": "b866029a-698c-447f-a654-6cacdadff1d8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cbd8b49a-d952-4204-98e3-7c06ee3f5801",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7315cbfc-7796-45f0-baa0-9eb8953eba52",
        "cursor": {
          "ref": "15ae00c4-709e-4b53-8760-bd738fefaeac",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "61603b16-b38b-450c-8b02-f7cbd6772999"
        },
        "item": {
          "id": "7315cbfc-7796-45f0-baa0-9eb8953eba52",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3d12206-261f-47d5-9670-0c8deefe6ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39a9ce6-fd10-44c5-aeaa-e56976c69843",
        "cursor": {
          "ref": "c35f3221-d881-490b-a8ea-70fe1359a64a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c56c90e-4763-4d6c-86dc-eee6bb1aced3"
        },
        "item": {
          "id": "b39a9ce6-fd10-44c5-aeaa-e56976c69843",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "966fbf34-9007-4f26-a828-2faeedfba4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75b84ac-d521-43b0-8342-1ec7245106ed",
        "cursor": {
          "ref": "27767edf-954a-4e9e-aaf5-21fb61eb957a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "637f6938-d8eb-4e98-8061-6eb30430e44e"
        },
        "item": {
          "id": "e75b84ac-d521-43b0-8342-1ec7245106ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0bca380e-195a-4f07-a060-958a9bc865df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee5ec9a-f314-449c-b6db-52c3b76e1dae",
        "cursor": {
          "ref": "5be915d8-01b2-45d6-b421-4004f169a465",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "86bde5ea-953e-4610-9832-3884c414abe0"
        },
        "item": {
          "id": "fee5ec9a-f314-449c-b6db-52c3b76e1dae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1354a06c-1887-4b79-be44-3485a6035f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a2a3d9-2e43-45f4-98e0-d45c4cf4552a",
        "cursor": {
          "ref": "f010e69c-1442-41a4-9e04-66a5863b75c4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ce48fb22-0463-44c5-9973-ab0c0292a111"
        },
        "item": {
          "id": "c1a2a3d9-2e43-45f4-98e0-d45c4cf4552a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d0a0502-6adf-40f6-a426-1b49dabf18bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34359d-8452-48ca-a5e8-aa6df9e7a810",
        "cursor": {
          "ref": "311d73c4-8ff9-44f8-8625-e66df575a1e4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6de692d5-9bfb-4e6e-b635-bef9c84e57a9"
        },
        "item": {
          "id": "bc34359d-8452-48ca-a5e8-aa6df9e7a810",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1421b008-6253-4e57-a159-bca40dcd25e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9664e8-bb24-475d-8e4e-ddc0f5191d8f",
        "cursor": {
          "ref": "6ba15d0b-0f23-4d22-beb6-b2443b207eb6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8608826f-2a0b-4a6d-a927-1f5bd35aaadb"
        },
        "item": {
          "id": "4c9664e8-bb24-475d-8e4e-ddc0f5191d8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6814fdd7-9304-4821-bad8-fa8beb4b1b41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9a75ebf3-088e-4a38-88a3-059ee042ce4b",
        "cursor": {
          "ref": "8e59496d-2b98-4072-81ea-aec1af68947e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a4b22881-c689-47a3-978c-a31967b2f679"
        },
        "item": {
          "id": "9a75ebf3-088e-4a38-88a3-059ee042ce4b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a33a6ca1-6da5-4c48-ab79-97a3b1536893",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b48ea951-177e-47c3-8914-314f355ea10c",
        "cursor": {
          "ref": "042ebce9-d647-4164-8b71-6356fa2bc847",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90b84884-a925-43ba-9ed6-3292d27c72fe"
        },
        "item": {
          "id": "b48ea951-177e-47c3-8914-314f355ea10c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7951fad7-23d4-4b42-b603-639807d1ff98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8ceaf2ce-ce67-4966-a90a-e8832e98471d",
        "cursor": {
          "ref": "4655a54c-c25f-4b05-9104-4b4a5eeef478",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ab69354b-2c3c-4a3d-bda4-29a50ecc4182"
        },
        "item": {
          "id": "8ceaf2ce-ce67-4966-a90a-e8832e98471d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9439329a-90b6-4c6d-9862-df9e594fae34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "d779d802-9393-44ca-9b6c-f51c86c4832f",
        "cursor": {
          "ref": "c173b168-6e14-4cca-9d3e-912058712011",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e7700918-7553-4672-abce-efd5ed24e1bc"
        },
        "item": {
          "id": "d779d802-9393-44ca-9b6c-f51c86c4832f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "73630e89-4776-4702-9dfa-a8ba999f5adf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "0dd6cfd0-5331-46d9-9c1c-c708e36bfea9",
        "cursor": {
          "ref": "281ba3c7-77ae-49ad-baa6-4748ed316bdb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3e0290ca-ef80-4738-8b73-eb05d6bf9ccd"
        },
        "item": {
          "id": "0dd6cfd0-5331-46d9-9c1c-c708e36bfea9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "adc5b890-ce61-4fdf-ba60-6170d4ef4061",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "288d7e61-8e7f-4315-9e0a-63665c87b3a7",
        "cursor": {
          "ref": "873badcf-0a43-40f8-96a9-3c2247c99803",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a8511ad-c867-42dd-881f-ba8706ac9442"
        },
        "item": {
          "id": "288d7e61-8e7f-4315-9e0a-63665c87b3a7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9af8d52d-1b83-4387-aebc-388bffa48b2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7edfea-06be-462a-97b5-f314a2ff3724",
        "cursor": {
          "ref": "1b92aeb3-7f87-424d-adea-23f45d1e5144",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "60ecb540-25df-462c-8c66-49a50af83048"
        },
        "item": {
          "id": "be7edfea-06be-462a-97b5-f314a2ff3724",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "792e0609-39ee-409a-93f3-674a8e48b995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab6e4d3-7cc4-4872-9e99-193a1742c23a",
        "cursor": {
          "ref": "c67e1e10-5e0b-402f-9a7c-611ff56324bf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0b93832b-3d0d-4cda-8a9a-f07c4a5367ab"
        },
        "item": {
          "id": "1ab6e4d3-7cc4-4872-9e99-193a1742c23a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88c9fde2-812e-4a62-9d73-66e84fcb7bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dfe844-44e1-44ac-882e-a1ad2e73384d",
        "cursor": {
          "ref": "a4c534d8-6e8b-480c-bb28-9fd0f1a9922d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ca74eb78-570c-4677-b0a2-82d87b2bfa68"
        },
        "item": {
          "id": "87dfe844-44e1-44ac-882e-a1ad2e73384d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f09a8b82-01f3-4d0e-9057-dfb267d9cf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749a1d72-7b06-4a1b-a001-65a4d699f748",
        "cursor": {
          "ref": "24f171be-7ccd-4bff-8cc2-57ef63c20a36",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "569883c4-53dd-4bbb-9a06-cb068d43204b"
        },
        "item": {
          "id": "749a1d72-7b06-4a1b-a001-65a4d699f748",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6034b719-3385-4371-9af6-b675ad215f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900087d5-c1ba-4378-b60c-3af548cfd319",
        "cursor": {
          "ref": "6f4a1982-95be-4aa5-ba39-713c87a09985",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "577792b3-5aed-4389-b4bf-2cf12b3f364b"
        },
        "item": {
          "id": "900087d5-c1ba-4378-b60c-3af548cfd319",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0693a438-6a04-45a2-8a79-be9ea963f7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6c7093-6657-4375-a39b-110ed90f877c",
        "cursor": {
          "ref": "5500c3ab-e4dd-4382-842e-aafbce648faa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e05835d-5843-4bfb-baf6-9f2bdce8cd55"
        },
        "item": {
          "id": "ea6c7093-6657-4375-a39b-110ed90f877c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "35c58f7b-b391-41e4-af91-b4550c61cdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43eeb50-c1bd-406f-8f77-f8ceb8e42c79",
        "cursor": {
          "ref": "16fdeb34-5bec-444d-b306-46f8556b7b5a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "db968b5c-c55d-464a-8d2c-bb4960518bd5"
        },
        "item": {
          "id": "b43eeb50-c1bd-406f-8f77-f8ceb8e42c79",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ef43172d-d54d-4b05-b422-e33a401680a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b50badb-ffc4-47c2-82f2-e9ff0dc3efd1",
        "cursor": {
          "ref": "f545ad54-2d3a-46fd-95e6-927251aead6c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b93975b-4c31-43a3-bded-061134ff1c9d"
        },
        "item": {
          "id": "8b50badb-ffc4-47c2-82f2-e9ff0dc3efd1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "46c1ec93-f492-4d1f-bd0b-e9dc15d2ce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700c25a6-b3e6-4657-bd29-6d2a357cb4b5",
        "cursor": {
          "ref": "a42d5cfe-40e9-4683-8516-be74e2031eee",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "20fe88ca-ee44-49d7-a751-1802eb710eb0"
        },
        "item": {
          "id": "700c25a6-b3e6-4657-bd29-6d2a357cb4b5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9d2c734e-603a-4545-8fe4-ab2a27909e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cd7d31-e97b-4802-bffe-74b656e021a3",
        "cursor": {
          "ref": "e61fa157-de7b-49f2-8611-11753ff66205",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e5602dc4-7be0-45e3-852c-368e858bee18"
        },
        "item": {
          "id": "87cd7d31-e97b-4802-bffe-74b656e021a3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5c308ed6-9852-4d8b-b7d9-8bb7e93982fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8546cdde-1e31-4ea9-a345-9c2074e6549a",
        "cursor": {
          "ref": "0a170a18-1f77-484e-b7e6-814b8516f695",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fa466d8b-7029-4236-b44f-4e158a43448d"
        },
        "item": {
          "id": "8546cdde-1e31-4ea9-a345-9c2074e6549a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "47d85e81-069e-4b36-84b0-02e1d3031da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f3cf4-70fd-4b2f-ac9b-ee41160d66cb",
        "cursor": {
          "ref": "94c4a3a5-a8d0-4d7d-8e2f-e989bb19730b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a5db59e2-cb93-48ac-a3bf-b75aba512617"
        },
        "item": {
          "id": "b27f3cf4-70fd-4b2f-ac9b-ee41160d66cb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d6a13a1e-32e4-42f2-805b-3d41ecec8b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12404428-1c42-4c4e-be2d-0bfc9683863a",
        "cursor": {
          "ref": "4ae7f729-d53b-47a8-b296-02dcc5686e13",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2907e34f-6e69-4941-9852-a97b3a1e5bee"
        },
        "item": {
          "id": "12404428-1c42-4c4e-be2d-0bfc9683863a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1ffeb3c4-0cfa-40a9-8d1e-009e4e538632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ee35c-64c9-4e3d-a4fd-9b3c2e52de4a",
        "cursor": {
          "ref": "4f858d94-d2ff-4047-84f4-c40aeabba42f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "958ace3a-6142-4bda-841c-50fdd884447e"
        },
        "item": {
          "id": "1b8ee35c-64c9-4e3d-a4fd-9b3c2e52de4a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a47d0997-8a3a-4426-8c21-4a7e454eb4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ebf34-4354-46ad-a652-cfecc7415778",
        "cursor": {
          "ref": "c825e3a0-a007-4b60-8df7-0003a3ef3811",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f95172e1-b377-4e67-ae99-8afaac223eb0"
        },
        "item": {
          "id": "585ebf34-4354-46ad-a652-cfecc7415778",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "889ab979-537d-4015-b751-2ef0b3c177a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb566c6f-f9c6-4778-9419-317b6c1df017",
        "cursor": {
          "ref": "ae86a673-3339-4e0f-8d26-0490388c973c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ef657c1f-28e4-49cf-8e75-c371fce91bda"
        },
        "item": {
          "id": "fb566c6f-f9c6-4778-9419-317b6c1df017",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c1ac672-a3f4-4f3c-a0e8-fdb423be69b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fd8405-d9f6-4978-aa77-512b9c904318",
        "cursor": {
          "ref": "14246683-77b1-4048-b0bb-17761c0ba381",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "83bebae2-c4a0-4ac6-82b0-aef008ff0f94"
        },
        "item": {
          "id": "97fd8405-d9f6-4978-aa77-512b9c904318",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a2990d14-59f7-4f39-8e3a-748ff8218c20",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "5c53fb6c-19cf-4c0e-8ca6-9c2a63f3a100",
        "cursor": {
          "ref": "c42144de-d910-4d5d-b999-2876ce71e4b6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0200a398-bc0f-473d-9c4d-e79c3b20ea3e"
        },
        "item": {
          "id": "5c53fb6c-19cf-4c0e-8ca6-9c2a63f3a100",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "656d2e10-4e2f-4dbe-a550-752beb81594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f76dc3-2de8-4b6b-8286-1531fb306952",
        "cursor": {
          "ref": "43946fc8-3596-48d6-b3ce-bdf9ec7f6348",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ce5325e9-599e-410a-bcc5-22d4bf17dfa5"
        },
        "item": {
          "id": "b6f76dc3-2de8-4b6b-8286-1531fb306952",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0c296c8d-4e6a-4b26-90c3-b490b775a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9837eec1-fc10-469f-b73e-ea475e77f4fc",
        "cursor": {
          "ref": "686e7afa-cf16-4091-81ec-fb839e65fe3e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9033f93e-dd90-4622-8778-e4a2f7d93527"
        },
        "item": {
          "id": "9837eec1-fc10-469f-b73e-ea475e77f4fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9290c7c2-6917-41c8-9987-c8c13c452440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c276a27a-b35f-4751-944e-3e48479e4422",
        "cursor": {
          "ref": "84694a46-b314-4c6b-a268-1d9f0625b6ca",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8ac8233-b527-49c6-8ae0-3e90eb6af985"
        },
        "item": {
          "id": "c276a27a-b35f-4751-944e-3e48479e4422",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79a44250-0b18-430d-ac3a-1ea2fd1fae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4486c3a8-7936-4211-91f3-8a55e3ee3e00",
        "cursor": {
          "ref": "5d20e79b-7bf3-4fa9-82e4-dda916d23ba3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a5107757-2c3e-4544-b3b9-77c2414dd0dc"
        },
        "item": {
          "id": "4486c3a8-7936-4211-91f3-8a55e3ee3e00",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "42c40067-20fa-42b9-9de2-6d1d3e7023b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5bf782-ec18-4e76-8a70-cb49973bd245",
        "cursor": {
          "ref": "4ed95ef0-db3c-449f-a1c2-13e6fb334659",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "67d6830b-c43b-4c87-ae00-635c8306297e"
        },
        "item": {
          "id": "5a5bf782-ec18-4e76-8a70-cb49973bd245",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2d86e352-ca03-408b-a919-41da0c4572fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fdb1ce-2007-410f-a773-4d0fbf00c638",
        "cursor": {
          "ref": "c7392db6-adf4-4c79-91bf-45d5d423f004",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3cb307ba-71d8-42f4-bd8f-4db353489ed7"
        },
        "item": {
          "id": "08fdb1ce-2007-410f-a773-4d0fbf00c638",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1a19e3b-63de-431a-8e64-baab928bc9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884066d-1f68-462f-9df2-50768bb16cbf",
        "cursor": {
          "ref": "97ce0fd8-d828-4a75-8eec-7bf1cc4e7548",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f19abf87-0157-460e-8777-a29d4697eca1"
        },
        "item": {
          "id": "7884066d-1f68-462f-9df2-50768bb16cbf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ea57a4d4-4e94-489d-882b-424f6ebe19a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5825f19a-f698-4a96-bab2-a110570cbb00",
        "cursor": {
          "ref": "5dc1cd7c-d5d3-41f8-8df3-363538d126c0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6a212e39-6ebb-4e01-b866-10fba57e8175"
        },
        "item": {
          "id": "5825f19a-f698-4a96-bab2-a110570cbb00",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "54de163f-fc6d-4235-9a0a-bc1025818afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af499df0-da4a-408b-a88b-8957a0023508",
        "cursor": {
          "ref": "b34512cc-9869-4d3e-8912-9e56c7d01439",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a205a89-2a4b-465b-b0c6-00d3c2367dd2"
        },
        "item": {
          "id": "af499df0-da4a-408b-a88b-8957a0023508",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "203a876d-bb42-49fa-a203-e555a6851a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e40867a-425d-458a-8c2e-19def500a1fe",
        "cursor": {
          "ref": "e3887714-7ba2-49a3-910e-0f03434cac95",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7884c87d-6249-48e7-b9bb-671edd45a368"
        },
        "item": {
          "id": "7e40867a-425d-458a-8c2e-19def500a1fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0fbb0fbc-87e4-4db2-b40f-c109a8931584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37199f3-b0bf-4593-82c5-4117e7fb5007",
        "cursor": {
          "ref": "6c3e897b-3b0a-44de-bc14-8ac09b4c5660",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ec2a7a8b-cd99-45e4-95a8-7b8c8d797668"
        },
        "item": {
          "id": "f37199f3-b0bf-4593-82c5-4117e7fb5007",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "de8f2051-81f5-4f42-a188-4bbfd0485f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d295d37-bc82-4a00-85ff-0127d742b3a6",
        "cursor": {
          "ref": "89f4f73e-9f78-44be-a186-73e5eb95259f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59319dde-30c4-4b46-9c5a-1bdb76c42736"
        },
        "item": {
          "id": "2d295d37-bc82-4a00-85ff-0127d742b3a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69696c44-8ae3-486a-a38e-930135d7b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d036f1c-50b5-48a4-813b-9fb255b60c8c",
        "cursor": {
          "ref": "8bda7388-4a3f-480d-9a17-eddc63ecc31b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6f4f1a5d-578c-4875-98c4-f1ab3357e389"
        },
        "item": {
          "id": "7d036f1c-50b5-48a4-813b-9fb255b60c8c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1b5f25a8-b17b-4ed8-8ad8-0df732c0f6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2d8538-7504-43cd-8870-c77320e41b8c",
        "cursor": {
          "ref": "02c8c534-c9b2-459f-817b-b9b03b94c5ab",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c594352f-9aa7-435e-acbf-ee6fb2b34c73"
        },
        "item": {
          "id": "cd2d8538-7504-43cd-8870-c77320e41b8c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "807e1814-d08e-4509-a962-28a994370ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebb7a7a-a4d7-48c0-bb94-60bc95ba7151",
        "cursor": {
          "ref": "95a6aeea-ae80-48f4-a4ac-e0773ea603ce",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "705a21bf-5428-4e23-aa22-c016a8e302da"
        },
        "item": {
          "id": "3ebb7a7a-a4d7-48c0-bb94-60bc95ba7151",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b7d49e99-d3f5-4efc-ba85-ea313fb158d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e11394a-edd5-4887-ad69-40b356d328ea",
        "cursor": {
          "ref": "c7b6e0a0-d64e-4af2-bef6-0dce1f65354b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "327f33b3-1454-4db9-a819-616cdeedbf73"
        },
        "item": {
          "id": "3e11394a-edd5-4887-ad69-40b356d328ea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "366b5806-4795-430b-8289-6b4179cd5775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f467935f-f6c5-49a4-aa22-eded1a575291",
        "cursor": {
          "ref": "655c5dd7-f5a9-4cfa-90de-6871a42fcc3c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9c00e8a9-98bc-42d4-a38b-091647361e06"
        },
        "item": {
          "id": "f467935f-f6c5-49a4-aa22-eded1a575291",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9b266ab0-21e6-4be3-96a0-53735b0b505a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af6a013-d04c-4ce0-b0f8-76bffa76ee34",
        "cursor": {
          "ref": "fe68a554-d0f6-420c-82f9-5c2e0a34c483",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3efe104a-0aa1-463d-895a-c979039a12a2"
        },
        "item": {
          "id": "5af6a013-d04c-4ce0-b0f8-76bffa76ee34",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aad22066-6c1a-407b-8e8a-784a68560eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d6e636-57a7-4f3c-bba5-d77ad685ad4a",
        "cursor": {
          "ref": "ba1f4606-2c80-4690-8e69-0c77e423d483",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "595f5acf-8564-4563-85b7-65d3a3e79a1b"
        },
        "item": {
          "id": "f2d6e636-57a7-4f3c-bba5-d77ad685ad4a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c31045b8-c8d5-4750-9bf8-2cdf390755ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8412c0c8-7b9c-4570-8dee-0ee3f14a6d83",
        "cursor": {
          "ref": "5ece5e18-03ad-4ec8-86a0-d3de2a6ce6c5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4311924f-fcd5-40f2-a7aa-236583b77727"
        },
        "item": {
          "id": "8412c0c8-7b9c-4570-8dee-0ee3f14a6d83",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e60b2ede-437c-4d5c-862f-22afcc94c701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca3cac-9d40-4ec4-bdc7-a6c81ddd7bda",
        "cursor": {
          "ref": "7415c7db-e72d-4f03-b758-e6bd26b88799",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8cae4eec-066a-4e0d-a4c3-a318b78dbf0d"
        },
        "item": {
          "id": "eaca3cac-9d40-4ec4-bdc7-a6c81ddd7bda",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d7e07e1e-b3af-4462-8fd1-c36a6e26dd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac094fc-4087-4b34-b599-271c762f24e5",
        "cursor": {
          "ref": "053752a8-b0ef-45f0-b55d-c24b23408a4f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1037dc94-3a88-49d6-a12d-0b0736148b15"
        },
        "item": {
          "id": "4ac094fc-4087-4b34-b599-271c762f24e5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d5a51546-e282-431b-acaa-8c54ea36cf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2e1de-aa06-4fd0-b320-9216590f56e6",
        "cursor": {
          "ref": "c56143fb-e089-4a8a-86dd-d0aa9b0731cf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56b265d9-876f-45e8-8f27-93bd8caa248c"
        },
        "item": {
          "id": "68b2e1de-aa06-4fd0-b320-9216590f56e6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "73e8d579-18ae-41f3-8798-c589741a8b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c6c6f-6565-4a9a-acdb-91de1d240c00",
        "cursor": {
          "ref": "4662c2ee-320d-4103-bc18-8e4f8149cc08",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ee05a888-046c-47a5-9269-29f0c6150da3"
        },
        "item": {
          "id": "e09c6c6f-6565-4a9a-acdb-91de1d240c00",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90b42c5d-7811-4628-bf0b-ed0223987280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf303c-8789-483f-aed7-4e155e2c24e3",
        "cursor": {
          "ref": "adb84888-3de3-463a-8204-ba98ef121370",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4e194d90-78c5-498b-88d6-d882a3e5c114"
        },
        "item": {
          "id": "62cf303c-8789-483f-aed7-4e155e2c24e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be72cbef-7342-40c2-8bba-1ed2e04db356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bb2334-df13-4d49-83ec-38ad16d04591",
        "cursor": {
          "ref": "e4254a4f-e9d4-499c-933f-687e5cd1cf66",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "49fae021-c630-4009-95b6-5b3181c0b533"
        },
        "item": {
          "id": "05bb2334-df13-4d49-83ec-38ad16d04591",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7b3dc31f-f867-49bf-a083-7fa534eba12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf34251f-951b-4ed9-80dd-9b1f802f6220",
        "cursor": {
          "ref": "cb5c6f23-3ad8-4e51-a00d-ba986ce838c8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "78b8a9de-1135-40e4-a750-222c9f432bf6"
        },
        "item": {
          "id": "bf34251f-951b-4ed9-80dd-9b1f802f6220",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b2abb75-766b-4be7-97e2-b95dab91a82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe38e528-5368-4957-8a3c-dc60bd7d776d",
        "cursor": {
          "ref": "9af2f94c-c3fa-443a-a4d8-92d97619a1c6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cc4ae668-bb18-4f2e-8833-5637a8a7b53d"
        },
        "item": {
          "id": "fe38e528-5368-4957-8a3c-dc60bd7d776d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7bc21bcd-9dbb-4bb3-9568-624257ddeb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2caffb9-7a40-4211-b77e-8d3c34aaf4a1",
        "cursor": {
          "ref": "06f808e1-6c20-490e-ab89-33d59deebcf2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8a84af5d-986a-4675-98cc-6fb46b8b597a"
        },
        "item": {
          "id": "f2caffb9-7a40-4211-b77e-8d3c34aaf4a1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4aceb710-9c63-4df1-a197-8abcb022622c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1b717c-c7fa-4754-9d66-e8c9735635f1",
        "cursor": {
          "ref": "29533bec-4a30-403d-9449-26a42cba6fc0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "62c108fe-1f05-4dda-a592-e0ca94049a4e"
        },
        "item": {
          "id": "2b1b717c-c7fa-4754-9d66-e8c9735635f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a81c58f2-1838-4bf0-ab76-d4688ed5456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e65702-ed9b-4f65-b29b-d5a798a53e56",
        "cursor": {
          "ref": "66d8f3d5-2371-4cdc-bb19-c1bea10ed5d0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "55e50e9f-55a0-476b-8188-76910b14df86"
        },
        "item": {
          "id": "f9e65702-ed9b-4f65-b29b-d5a798a53e56",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d2f53113-8d72-4b07-b482-b324ad005722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21856972-b4b8-4451-bd6c-71a8eb10c5ca",
        "cursor": {
          "ref": "234fac45-9e2f-410d-8094-2e4f8051a101",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0bb1d54b-5a4a-4871-8bb4-2d2142992011"
        },
        "item": {
          "id": "21856972-b4b8-4451-bd6c-71a8eb10c5ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "20b3708d-6b5e-43d7-9c7b-01de474189e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa69baf-6a7c-4b80-b555-0d30307dfa2e",
        "cursor": {
          "ref": "8ee682f7-bc4c-48ad-aca1-0f6dadac413f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "09c1dc16-3ade-44b7-b4c1-61af31ffbbb7"
        },
        "item": {
          "id": "6aa69baf-6a7c-4b80-b555-0d30307dfa2e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf7355e2-25ec-4174-b352-36917c6d5fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3c3191-a786-4dea-88da-48a74b88495e",
        "cursor": {
          "ref": "b58ebff9-7842-4a9d-9d30-4702f76464ef",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7d9c0e97-655e-4204-801e-c8b6affefbbf"
        },
        "item": {
          "id": "ed3c3191-a786-4dea-88da-48a74b88495e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f9995a02-c5fc-4b54-b4d3-e117695e7240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6548ca-f0fc-4f8b-a085-afc4eb6aabf9",
        "cursor": {
          "ref": "16e35811-3892-4976-9c4f-60f9c0a3e78e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5da6642e-563c-4b68-812e-29c48c9b8bbe"
        },
        "item": {
          "id": "9d6548ca-f0fc-4f8b-a085-afc4eb6aabf9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e7a7d37e-3a97-4755-a309-9814c65097c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54eae20-14a7-41a7-b4fb-a814ebcc2446",
        "cursor": {
          "ref": "c04b4149-b19b-490e-91f2-fbd71c55952d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c29e96b5-3aae-4cae-bd0b-bb71cddb0772"
        },
        "item": {
          "id": "b54eae20-14a7-41a7-b4fb-a814ebcc2446",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "91fae331-785d-4d33-8044-03b5fb57b74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d336e-c3e0-4891-a6c0-71fa795ea271",
        "cursor": {
          "ref": "64680baf-2428-4130-9575-021e8d5aa12c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f8589858-4fd7-4bea-837f-07f0b1697f8a"
        },
        "item": {
          "id": "c52d336e-c3e0-4891-a6c0-71fa795ea271",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cb5d1c0f-9cd2-4495-ab25-46c6c309a04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddc8ba1-a3e6-45f4-86b2-54a42a5a5984",
        "cursor": {
          "ref": "2024f604-1902-4405-9292-398e6df772bb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "321ed5b5-3709-4344-b3e3-ac491bfd532d"
        },
        "item": {
          "id": "0ddc8ba1-a3e6-45f4-86b2-54a42a5a5984",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "43e3b782-394f-4b5a-9ec5-d4f91712fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba23145-a618-487f-be39-f7864a556a0e",
        "cursor": {
          "ref": "77157b1a-caa3-440f-9b49-58e59a58f202",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "44c280a4-c002-4b99-9262-693791b959cc"
        },
        "item": {
          "id": "1ba23145-a618-487f-be39-f7864a556a0e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9dc076c9-dd45-4b6b-a903-1ee38dcd077b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d29abfd-df17-4714-a567-a3fdd6f86744",
        "cursor": {
          "ref": "85ab8c74-28be-4315-90fc-fd656add78b1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0eddcf93-8b56-4381-9b57-6f6987eb97a7"
        },
        "item": {
          "id": "4d29abfd-df17-4714-a567-a3fdd6f86744",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3bb594cd-f9e5-4894-9f29-5530aca2593c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359dd04-cf89-4ff8-bd3a-eabdc697c80f",
        "cursor": {
          "ref": "c4c2470b-35e0-4636-850a-50ca500d82d5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c59a2440-927a-4ebb-ba76-5f876126a842"
        },
        "item": {
          "id": "7359dd04-cf89-4ff8-bd3a-eabdc697c80f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7148c00a-0a78-4337-bb77-219856b1a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd91b564-e0aa-4725-89b3-fc41b6eaa5f7",
        "cursor": {
          "ref": "6d253d2e-1afa-4402-9c47-48b6ea0b9061",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0616bfc7-3af0-4627-a142-249eb3908e07"
        },
        "item": {
          "id": "fd91b564-e0aa-4725-89b3-fc41b6eaa5f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "25ac180e-5a70-461a-839c-bbe52b618a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8497a67-e5a5-4363-a86d-01804108c574",
        "cursor": {
          "ref": "41d2fa55-706d-4a44-b915-b588c7ed86e5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f7b4f1b-d7fc-4d79-b59e-9d884d57a15e"
        },
        "item": {
          "id": "a8497a67-e5a5-4363-a86d-01804108c574",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "80e93405-2903-4ac9-a709-a33f02a3a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6341fd70-ae28-44d9-88e7-f12c2ed6ce2f",
        "cursor": {
          "ref": "06315daa-938c-4b6b-8d3c-3d252332c674",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "11bdef33-b4e5-4714-9716-f18928fb2555"
        },
        "item": {
          "id": "6341fd70-ae28-44d9-88e7-f12c2ed6ce2f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3d03e764-5383-4fb6-9d3c-9bb9c4976951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3df2f8-6a6f-4452-a99d-fc62ca59f6fc",
        "cursor": {
          "ref": "570e1a64-8b90-46d2-a928-9424f877a7b8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72fb6cbd-1833-4385-99a0-84d169397abc"
        },
        "item": {
          "id": "bc3df2f8-6a6f-4452-a99d-fc62ca59f6fc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6a4b1cd-cdd3-4373-9ee5-904153cbd65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30fe1df-4859-4441-bec2-50d9d667e47a",
        "cursor": {
          "ref": "070fa63f-ce85-4728-a570-a3852046e51c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14847a78-e0b1-41d5-a8bc-39b1a0411f44"
        },
        "item": {
          "id": "a30fe1df-4859-4441-bec2-50d9d667e47a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1d261d37-8146-4364-911d-81eb525eee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb53c8-14f3-467f-aea6-74fde4cb10fd",
        "cursor": {
          "ref": "60913fd7-0290-416e-94a1-ff9ed36756ec",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ad813be-28ba-474c-8f7e-0e384d1feb95"
        },
        "item": {
          "id": "b7bb53c8-14f3-467f-aea6-74fde4cb10fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d6376fb3-5308-4ec2-9f72-e0e55a17a134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a80ec89-e2a1-4df0-b5d9-09c6341438ad",
        "cursor": {
          "ref": "d1b4f8f1-ca3a-408a-84af-70c057a1cb0c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6e8a412c-5c03-456f-89a7-0ff21c0e554f"
        },
        "item": {
          "id": "0a80ec89-e2a1-4df0-b5d9-09c6341438ad",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "abc8331a-3cd4-4797-9390-4412c0f9dd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b81363-5d2b-486b-b1ed-890d5682da81",
        "cursor": {
          "ref": "cdc7ccc9-1a42-4d21-aaaf-10cb845e5216",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3dfdc940-e59f-4f0a-b9e8-2e290907fdc0"
        },
        "item": {
          "id": "13b81363-5d2b-486b-b1ed-890d5682da81",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d1570404-12dd-483a-ac8a-17c7148181ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4ce759-30de-4026-a7e0-644d3aa822a9",
        "cursor": {
          "ref": "f7b36810-efbc-483c-848d-b81bb98c8545",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "145b74d9-b426-4cf1-a021-90cf9e4e6f7f"
        },
        "item": {
          "id": "ff4ce759-30de-4026-a7e0-644d3aa822a9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c3c4aac-183b-47f5-b6b1-2bd89edbf88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18154c10-e761-46ea-83a9-953f0eb5c4b2",
        "cursor": {
          "ref": "cdab92bb-089a-450c-86bf-da2e0c20098a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4c9b84d4-e31b-460e-85bb-a0f2e8bb63b8"
        },
        "item": {
          "id": "18154c10-e761-46ea-83a9-953f0eb5c4b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3bb9421-1c30-4a9e-a49d-fca7bb9f88ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e9ab56-ee3c-4882-bb78-c31927dbe0b1",
        "cursor": {
          "ref": "06afba85-3a8e-4561-a11d-2ffa38bac28f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d69939ad-b9f7-4763-8123-1d92f27dd73d"
        },
        "item": {
          "id": "d5e9ab56-ee3c-4882-bb78-c31927dbe0b1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "299cb121-1d13-45c8-a8ca-e2283b42181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c797091c-20b6-4d79-abc5-dea10636fd8d",
        "cursor": {
          "ref": "5829eff0-574e-46f5-846c-a784ab2e9cfe",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9acb181-9610-4c4a-b936-a3d12d567389"
        },
        "item": {
          "id": "c797091c-20b6-4d79-abc5-dea10636fd8d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a32d40a1-c3fe-4ace-9407-49adc309ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a8a860-1cb5-4a13-98fe-ba332e4dbad1",
        "cursor": {
          "ref": "8b497910-bab8-40f1-bc15-4b66d2c07b3c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5c54f470-d5f7-4107-82d1-7f16fd890de4"
        },
        "item": {
          "id": "90a8a860-1cb5-4a13-98fe-ba332e4dbad1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a7d83f85-4aa9-4ce7-8532-330cf1f11ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7bc25b-3bc1-42da-ae0a-2c929ad87863",
        "cursor": {
          "ref": "4f2764ab-6c7f-431b-adfd-2fb0163c3e81",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5b6b9932-0de7-46dc-a544-ffe4252b38d9"
        },
        "item": {
          "id": "6f7bc25b-3bc1-42da-ae0a-2c929ad87863",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0cf7649c-e4c1-471b-b832-69c5c284c8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f10b9b-d438-42c3-bdc0-d83470d93885",
        "cursor": {
          "ref": "06d3b9dd-34c5-4686-bb7f-d1d35f204e88",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4076531b-60e5-4915-8f1d-336ed4966bd8"
        },
        "item": {
          "id": "23f10b9b-d438-42c3-bdc0-d83470d93885",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e7652c87-8a8e-4192-acb1-8bf40b0d04fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be07835-9d7f-4819-ad48-cbe67625ada1",
        "cursor": {
          "ref": "ba3a495a-001a-4f23-8499-90e736ca0758",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "263d38d0-9a58-4af8-b358-435630d3eada"
        },
        "item": {
          "id": "9be07835-9d7f-4819-ad48-cbe67625ada1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37e17863-a5ef-4a64-817e-14eb4931bb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63664cb5-57de-470a-9800-8240bac45618",
        "cursor": {
          "ref": "871f857d-2ad8-4dec-9271-726787a88e8a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "84e73d8f-34a2-4685-bb5f-77f48439091a"
        },
        "item": {
          "id": "63664cb5-57de-470a-9800-8240bac45618",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b2d7ba0-c785-4f97-bf7e-58c3bcb960a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c1dcf1-d246-4309-b87f-3c8d57d745eb",
        "cursor": {
          "ref": "77d497f2-2cae-4357-b020-15821a452baa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "09b0abe5-be24-4d66-9f39-d748552b441b"
        },
        "item": {
          "id": "29c1dcf1-d246-4309-b87f-3c8d57d745eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "010d3f77-ede9-46ee-a99f-8ea12e217da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbab3e0-b336-433f-b513-5acca3fe509d",
        "cursor": {
          "ref": "58a0222d-7a74-4997-a3f3-92846c216223",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d1adc725-7c62-420e-b628-b61ba3c1613d"
        },
        "item": {
          "id": "bbbab3e0-b336-433f-b513-5acca3fe509d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c1a09853-0721-46ea-97bf-52875ced1908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c14375-1069-4e43-8ada-3bc4ce7607c1",
        "cursor": {
          "ref": "7dc84db3-23c8-41ba-877b-60dd60532275",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ecf6358b-ae81-4abd-b219-b0df647f8efa"
        },
        "item": {
          "id": "18c14375-1069-4e43-8ada-3bc4ce7607c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "084d6302-a115-4ddc-aa11-89844447adc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6256434d-c920-45c5-a36e-207148fabec9",
        "cursor": {
          "ref": "5f6f5886-3552-46e8-b089-b4d50d59d00d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "207ecb14-244c-43f0-98bb-c1d035cd35bc"
        },
        "item": {
          "id": "6256434d-c920-45c5-a36e-207148fabec9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4c445919-193a-47a2-9d1a-5ddd02caedcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01cb349-7560-4f76-9a43-b7b0e0f42fda",
        "cursor": {
          "ref": "fe96e1d6-9f1c-40de-947d-fe18ab0cc8fb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4abcae28-ab9a-4060-9798-0ce0f979e196"
        },
        "item": {
          "id": "a01cb349-7560-4f76-9a43-b7b0e0f42fda",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "11671cf3-e157-4026-a1c8-14a65861c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7712a2-454e-4038-9eee-8f45db9e03ce",
        "cursor": {
          "ref": "a8370f50-9a65-45f5-93c1-12baddd965ab",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "73d5cee2-d57b-414c-a21f-e4dc9f0a0c81"
        },
        "item": {
          "id": "5c7712a2-454e-4038-9eee-8f45db9e03ce",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93459bf5-21a3-402d-a662-6a69d03b9e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201584c-a7a5-4800-b0a4-1f0c8bbae746",
        "cursor": {
          "ref": "3bd0edc9-c2a2-4440-b32f-5b9746f7c28b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f4bc02b-f5e6-4631-8843-a12ded6c5abf"
        },
        "item": {
          "id": "b201584c-a7a5-4800-b0a4-1f0c8bbae746",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cae77a4a-3128-4c8b-996c-da396074efbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850c399d-4fb9-4759-96c5-bff6be20ed20",
        "cursor": {
          "ref": "7583ba6d-2fcf-414c-a8fa-09ac293a3f7c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2ec54ca0-3cb8-46a4-aadc-7665db16b463"
        },
        "item": {
          "id": "850c399d-4fb9-4759-96c5-bff6be20ed20",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "add7ec9b-68b2-4536-94c4-f3030fbb1e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83263ce6-b749-44e5-b7ca-4312b9f826c1",
        "cursor": {
          "ref": "b69dad65-64a9-4b75-a591-02fbd1277339",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4dad14fd-f8c3-4d3e-9955-cc8f32336b2b"
        },
        "item": {
          "id": "83263ce6-b749-44e5-b7ca-4312b9f826c1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "41d09781-4b05-4bf6-9bb6-df58ac80f21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396d8ce-7edc-4803-81ce-a639872093b0",
        "cursor": {
          "ref": "95cf8492-0b4f-4bf7-a9af-640b45630967",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e8dd7b8c-27d7-43f3-a8c4-a50dc9324e74"
        },
        "item": {
          "id": "c396d8ce-7edc-4803-81ce-a639872093b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "285bfc87-6230-4ea1-b89c-378f73a0ca61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b792f-4272-460a-a5c0-8f9fd7527f70",
        "cursor": {
          "ref": "e859dfdc-5ced-40d9-86ae-42ad19613687",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "535271b3-ce18-4a46-ae6a-36fb05032070"
        },
        "item": {
          "id": "3b0b792f-4272-460a-a5c0-8f9fd7527f70",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "12a3d382-9247-4b2e-aaa7-581955290e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001a86db-8794-4319-9ad9-50fb99791e45",
        "cursor": {
          "ref": "518dc00e-4a88-4312-97cb-ee9676ea4d9a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6bd3a5c5-adcd-426d-89c6-e2665c738276"
        },
        "item": {
          "id": "001a86db-8794-4319-9ad9-50fb99791e45",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3eb659ed-2cd3-4e0b-b127-9116c847d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43e2a1e-d4a8-4692-aeb2-f8d166d8f8e1",
        "cursor": {
          "ref": "a694a731-8cf2-4fd8-a040-08dd47ed5220",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee6c765b-484f-4e0a-8fff-5835748df792"
        },
        "item": {
          "id": "d43e2a1e-d4a8-4692-aeb2-f8d166d8f8e1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "700e8ddf-df90-4aaf-a9f6-7d7a4e623b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2023f0-f877-4f09-8339-af421922102a",
        "cursor": {
          "ref": "e757fd8e-849f-4d83-b0df-419eb1f83c45",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2492b6f4-3f79-4be7-8c89-6f38b98936aa"
        },
        "item": {
          "id": "8d2023f0-f877-4f09-8339-af421922102a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "984587f3-31de-406b-a109-b800d2398480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d4f40b-952b-47fe-b546-571900807b51",
        "cursor": {
          "ref": "49f0b2f8-357a-4c92-a6e3-b71541003eac",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77ab51f3-8325-418c-8b9a-6f720614e4a9"
        },
        "item": {
          "id": "57d4f40b-952b-47fe-b546-571900807b51",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a3600039-ab0f-448d-90b9-39ba2c1e40b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4542de5c-da7e-4538-bd6a-1236d26018ff",
        "cursor": {
          "ref": "5349843d-db58-47a2-84bd-7c9b78c55079",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "34e614e0-91ee-4494-87fd-324bd3937e1c"
        },
        "item": {
          "id": "4542de5c-da7e-4538-bd6a-1236d26018ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "134f86a4-3a00-4c20-91e4-9a9590fff211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d044f61-d3cc-4dc4-9e7a-468f329b5af6",
        "cursor": {
          "ref": "9e117c66-2f8f-4938-99f1-6abdf128f1b8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8494db67-cb72-4af1-aa52-55af586f1866"
        },
        "item": {
          "id": "5d044f61-d3cc-4dc4-9e7a-468f329b5af6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "783a656a-66dd-4600-a469-3fe567852af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7338be33-ff34-49be-b001-2650b54de1d1",
        "cursor": {
          "ref": "3c027d14-2690-4466-978e-84c8cc42e9de",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ba5806eb-24cc-4dd8-b909-e27ab57f5922"
        },
        "item": {
          "id": "7338be33-ff34-49be-b001-2650b54de1d1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7cf329fd-c0e6-454b-88a2-52c73ebd643d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0cede8-7556-425c-b4c2-b3f131e562ce",
        "cursor": {
          "ref": "c740abe4-9b49-433d-8bb8-bce7b805d696",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3761a4e4-59b3-4a73-86be-86436ef2f06c"
        },
        "item": {
          "id": "ce0cede8-7556-425c-b4c2-b3f131e562ce",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "78d0b104-236d-4c1c-afd1-6395017be913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18890ab7-8d88-4fd0-b19f-62118c4dd4ed",
        "cursor": {
          "ref": "c539a8ae-f509-498a-a78c-6d7a54212382",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "31d2b0bb-d3ff-4e63-b92e-1e544f2d2db2"
        },
        "item": {
          "id": "18890ab7-8d88-4fd0-b19f-62118c4dd4ed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e8be2fad-8d90-4964-9727-8fccd3734d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde3b80d-8fb6-4039-824b-513e34be8d75",
        "cursor": {
          "ref": "79f61d00-863f-4875-ba62-5a968ffa769f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59ab0bf1-8c69-4075-b6cb-79e28b3ebb3a"
        },
        "item": {
          "id": "fde3b80d-8fb6-4039-824b-513e34be8d75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7ffbe8f2-55d9-4895-8eb3-df816ad92c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff92a08-6bea-433b-83c6-c2cbd096214a",
        "cursor": {
          "ref": "11286781-3b09-4881-b6cd-2329b786fd2b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "134a5b50-5433-4f7c-8767-4394f5650021"
        },
        "item": {
          "id": "2ff92a08-6bea-433b-83c6-c2cbd096214a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4be88a4d-4599-4805-a2d8-8a82d304b654",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204ff0d-a579-4744-82f9-ed63e98e7070",
        "cursor": {
          "ref": "9d4a3097-6119-47a2-ad47-dab919852385",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bdcaa346-77a2-4b3e-a33f-4a90139282de"
        },
        "item": {
          "id": "4204ff0d-a579-4744-82f9-ed63e98e7070",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2318f27e-1047-458d-8e61-eca4d15fc74c",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf8a1dd-5c6a-4805-a266-f444acda3d6b",
        "cursor": {
          "ref": "4d39a9d0-0e30-438a-b9bd-79889eaf1dca",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f5629d2-3797-425c-b00e-a69ff24e44ce"
        },
        "item": {
          "id": "daf8a1dd-5c6a-4805-a266-f444acda3d6b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "14d1fb4d-7aa5-4ab3-874d-f6d366b119eb",
          "status": "OK",
          "code": 200,
          "responseTime": 2997,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c25747-297b-4ef5-98be-d67d4c7e496a",
        "cursor": {
          "ref": "5eb9e823-6ba8-47fc-bfbe-413e54d95ea6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "24427d82-9a4d-4723-abf7-c153e0f3fca1"
        },
        "item": {
          "id": "e6c25747-297b-4ef5-98be-d67d4c7e496a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1c17788-e28b-4bc4-9164-d3ff63d56f2f",
          "status": "OK",
          "code": 200,
          "responseTime": 4670,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "443f8893-4007-4a55-af81-baad7c6540b5",
        "cursor": {
          "ref": "64d43745-a332-4ee6-98f4-8cd08b14108d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8886abbf-875c-440a-bc14-bb73a9af463f"
        },
        "item": {
          "id": "443f8893-4007-4a55-af81-baad7c6540b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b5ec6767-af87-448d-b378-7834b2c78bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443f8893-4007-4a55-af81-baad7c6540b5",
        "cursor": {
          "ref": "64d43745-a332-4ee6-98f4-8cd08b14108d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8886abbf-875c-440a-bc14-bb73a9af463f"
        },
        "item": {
          "id": "443f8893-4007-4a55-af81-baad7c6540b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b5ec6767-af87-448d-b378-7834b2c78bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a528bb-8da3-4ef7-b424-b21bf788efb8",
        "cursor": {
          "ref": "507aa7f9-27b1-49bb-9429-c615150a8420",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17335b8a-57ae-49cf-951d-1f576ed4ab0e"
        },
        "item": {
          "id": "01a528bb-8da3-4ef7-b424-b21bf788efb8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1cdd7f66-f1e2-4595-894b-f3c7faf720be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e749a75b-862b-4e0a-9d66-67db55fa7143",
        "cursor": {
          "ref": "85bcba06-a4cd-468f-8b40-e47db00acff7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3ee8bbaa-a08c-460d-9476-477b4024b9de"
        },
        "item": {
          "id": "e749a75b-862b-4e0a-9d66-67db55fa7143",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f4036578-46da-4e34-979d-bb9931b99d40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}