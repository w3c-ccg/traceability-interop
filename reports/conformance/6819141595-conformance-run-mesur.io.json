{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b3a1bbad-3b2b-4e35-80ba-701cfcd172ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "335eea6b-20d1-4fa3-8ba3-3b5b0151832a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf009f2f-9390-4132-911b-27544401f729",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d0f2707-18d1-4c4b-ac64-148541070780"
                }
              }
            ]
          },
          {
            "id": "2c570284-6623-45cf-a305-66c8ed0d80c6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4146da06-09f0-4de1-8dc0-993c7e27f651",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a99704d-4422-47f1-9618-33fb9c5cf7a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "362bcd0b-02d1-44bc-b416-52f86c84dd31",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d9888a92-459b-4ec6-b5a7-3a4656dd31c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42dec9d5-4b71-4908-a5bd-697de8244b2d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d933986b-753d-4efd-a4ed-5102c2c68d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e39cdea-c323-4704-b580-2bb418408861"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fa28909-d363-4074-ba43-63eb667155b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "892edae8-7076-4b8e-ba05-32838f18091c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "355c1757-1bd4-47e4-a847-bff79059fe0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3717dc4-4559-42b9-bf7d-27120bf4fb4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a59484a-faa3-4add-baf8-c4c391cf85f5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37194be4-5811-4718-a73c-b0510edc07f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9973a72a-f75d-48e1-8471-ba16921f3810",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7c7fc07-2a13-4de3-97e2-32b3ea5d659f"
            }
          }
        ]
      },
      {
        "id": "98aa1805-ead5-4edf-a867-225881ad38ae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c084b0fa-1f27-4a0c-af5d-cbb460c1dc4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4c4fd0e-519d-41bb-8cb6-1c3f60d80054",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5bd0d993-afe6-4f43-964e-72621e4c7f2d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d95b412-ea40-47d9-8c14-72c506fed943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcf22d3-7cda-44ca-8d38-00804ce13a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682839f8-47b9-4ab3-b374-b4210cc41156",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e41271-5967-495a-b2ed-b9f6a7acc5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdf492e0-4df3-45de-a5c9-a62683110d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91645ca6-19cd-4082-88b4-291a53b0770e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe920b4-1dc1-4885-b90e-f8b35ed1cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7efb7563-d144-45c9-87ab-59dfa4d2ab99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "438e1c57-f558-4306-b502-9d201053aa26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca74480e-e491-4d6e-b824-2ce7352ef0d6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b8675e-eb6b-4028-9283-aa80a59e6982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d30a08a-38da-4d18-a18a-89ea7f360cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9790f8cf-1adf-4c69-83b9-93e994d7c51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d01d21-8648-4a3f-98e1-8f5e005d682f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f78e770e-ffbe-443d-a0c5-e35fe9880acd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ab8dec1-43ae-43e1-bcfd-07075e3797ae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "196c967a-db17-4cd2-88c7-e7c8abab1418",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5fc4c0a7-3ad0-404b-80c9-c11b1788e843"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6da84794-3649-4235-aeaa-4001a692ec8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ce794e8-d36c-449d-b177-e4e05f8e4e0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39278b4f-aa18-45a6-9061-b11e3fbf8863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc2bb587-a890-41ac-bed0-d86a8acead43"
            }
          }
        ]
      },
      {
        "id": "bc5228ac-7730-4de8-9e92-fdd71ff1c978",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f9e28e62-430b-4a17-963f-38949a35bce9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed98e27b-918a-4ce6-af32-e4593659a985",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "88917a80-dbb8-42ba-b08a-2e93419bd186",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc984ab0-cecf-48e7-9d7d-986088c2fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37e586c-134b-4d09-82a8-0eef7016fb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71769ea3-7d6d-4197-b411-ebe0bf3b32ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7c0c443-6663-4eb0-81e6-71ca9086fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e95767e-61b5-4498-bed1-140987529a1a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957c4edb-8206-4673-a3d0-601baacea236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccab065-360c-4589-9f0a-f350c3ac47af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d39975d-2943-4ea6-9a0a-87d6345e8f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36b3e10-1d36-4eb3-9015-14de29857e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6415b7c3-1af4-4ef2-bef1-cc6028150bd7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70be0b0-e7dc-4002-be2e-3116171248dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78afccdf-25c1-4b89-8fb2-5a0fc2be0b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a95b18-26e8-40e1-b67e-719303b981a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6b66323-7347-4e49-9e3b-a1e9aedae98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc37d2c9-f8eb-454f-b5f2-2eca14ba8a86",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257dee7f-4587-4dff-9222-44a9782daa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2972b5-f659-45a2-ae4b-d4cbe3a1b41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee58dfd-8b2d-4fac-ab70-582d39b1a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d1b390a-0ffb-4d79-9c6a-c6dbb430433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c66e4a-ae17-4974-85e3-7a9b848dba35",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d59540c-deed-4e51-bfd0-556b3eef290d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e7f469-5840-45b0-ae18-76c4c63e9068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3b85a6-82bc-4fb6-bd84-c3c36344ee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b12bc79-902c-4f52-929f-e8fafc2d3c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93a0bf0-d76a-4638-aec4-4eef59f7bfd4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e9b9fb-fcec-4198-9ed9-5845f797d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7de57ce-0f4a-4653-b6dc-cf6df1642412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888df6c9-ad43-44fb-a4d8-88d48b20ae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85666c10-8fb2-4719-b98f-11f829a6126d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6681688d-b892-48d0-9886-bc70a4d2e319",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20245925-62c9-40ef-9960-5391e05747cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2530cef3-2486-4d0e-924b-08b80442f609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc41f7a-d74e-4ce8-85b1-9c2550ffac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e4a941-76fc-434e-bcd0-86656c15d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc21f128-3c80-4721-b1fc-abd31d4140b8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e177ef43-ac21-438a-8c7f-056fbdbd5877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffdebc6-dbbd-436f-8bed-910776cffa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacb7e17-ebe0-476c-80c5-5752aa5d2088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c68509-cd6d-427e-8b1f-2f4c2781e652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73dcab-fdcf-42a6-88fc-a8a9e4f0313b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af605b0-3735-4286-8f86-28a4fdb7870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98aff47-b849-4cc3-b92f-062a0725250e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0dc0b7-f697-4373-a0a8-946f6f044204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af59f4b5-c840-42ec-aa17-6582884095c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6ef568-d817-451e-bec9-efc74ead6ef6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637fb076-f37d-4c2b-a162-5f1fcf1939b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5a1b07-59f2-4420-9f60-69b40b7d1b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1e808-16ad-4640-b5ca-0a706a81a71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37a9ed7f-59d4-49b4-931a-cb6f8efcc574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76b953b-afbe-40ce-b4b2-47e32f26c38d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc72000-d03e-4aac-a0c5-ab97c57269f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ff0f54-5f8c-41cd-8028-5500b6e62c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eced0b-e353-4638-bedc-da46d1f4f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb2534c-ce65-4255-8680-c6c52b6070c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3765fed9-133f-4fe1-9b78-584765d013f5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372c46f9-ff64-40c7-9f2c-8a7b1ac0b9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263a8d89-c9a7-42c8-8e52-78159614dc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b2f1a-d42f-4c7f-94f9-8c14425cc0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21b9da63-ee4f-4442-8e49-a529fb16876e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1fe8d5-19ff-489f-ae0e-0c6a512a148f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189847a2-3bb5-41ef-8808-4f5bf87bf2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a874a6-d54c-4317-a90a-cd8ac3cd98c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a1ec7-bee0-4ebe-9ec9-673fb6fcc43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73bf6c7f-bc03-4230-9d1e-6ad519997b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e88c80-31c8-4865-83f3-b48c16641aa1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcafdd5-36a3-4cac-b3d6-f42c2fb8796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdcef9a-1e29-4b7f-8d59-f3f0abe2d7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4656078-8ef6-4db3-a525-7e158ba06205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "088acaa2-ae37-4dfb-8485-14c0dcbd9ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaab7aa5-89f2-402b-94ef-22a90ac44bff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf20d5-8756-4d58-a21e-5dd1917e0177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef951c9-59c2-4d77-805c-ff8c2f504103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e698c74-29c3-4d34-827c-af795ab9e98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10999a19-6560-4e28-84b6-f67300932b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fab9d35-911c-4fda-874e-339e10034db7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2dfde3-79c5-4849-a5ce-8fd0057bf63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1554ad05-9ceb-444e-a2cc-e7598d618ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029fc9c8-aa30-4bbc-ab89-92c09b90f4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c562c9ef-b169-4502-9691-16a95fcc781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b84c932-6aba-4ed3-b719-80b888bcba14",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ccc946-04f1-4829-9e8c-f2d2bf4b3373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d893ad91-096c-43dc-8869-50e6e266851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa4b445-88bd-4ff5-8046-e4dbe3c0b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf9892a-dacc-40ac-902f-036828456c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc09bc95-6b15-41c0-b80e-68bb368492d4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91de7c14-671f-4572-941b-d0fb1ffdd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f265755-d83e-4b79-86fb-e0f9b04e838f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602c30c7-f0b1-46d7-a06c-964571f4f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eba8e91-39b4-45db-8c92-bb2041c8f2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54be62e4-18f4-4029-8e2d-c30e2daf9255",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff31aa9d-8593-4853-88dd-32c21257c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7155d113-3c36-439c-af04-529ead144353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643ea72-832e-40fe-8d14-a545642be7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a861806d-a005-4178-992f-b77cfad87775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0ee84-7919-4cfa-9085-4a8c94b9c3fc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e93f93-a97c-4f20-96fc-b0a55ffc3ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85d2f86-da93-4bb1-9b65-23c8bd3c278c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50579985-7b79-4ee6-99ea-846d6eedd42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f18df2-3606-4af4-b042-b1cd0dd30f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7007b3a-f9bc-452e-a33f-e0b731d19ebf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab821d7-ec0d-406d-afac-fb85f6f87832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbf7266-2e97-4817-b499-ccfb7dc573e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c9e906-4d8e-4539-ab0f-3e8e50e2e04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba64f428-f3a2-40d5-ad25-c36e9b792da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c05b8f8-bf38-49c6-9336-19d020cf2338",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d3e3a3-a4af-4c72-9ca8-e831851ec4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9238189e-5f85-468d-ad0c-50b4deca30c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f8dba8-21ae-4ddd-b91f-25c8d3888229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3d884-cd68-4da3-b05b-950223f9133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46355aff-37da-4fd5-b48c-d79a203b993d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f2b6eb-6aa0-44ec-8022-79ad3ac0cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651c7b2f-3471-4a29-83a0-97638b7af3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfd5a3d-60b0-45fd-95d7-85c0cbe2c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9acc62-65f9-46fd-8e36-3bee5cf3f35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd00b45b-f03b-46db-8c83-2f2441716cd4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b954e41-ee78-4810-ac1a-aa54f754ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a84c01-da39-4876-89c2-973af8d1ddbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd79c516-56f6-4fb9-8324-fc6aa1fae3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e743770-b569-4e4a-b032-41769f3b21c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9703a93-5147-43c8-968e-b6241ab7627a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3a0084-48e1-4b02-869a-ab7f90fc3b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7072aa4-fdb9-4bbe-bf87-f5695f6ed567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c94c3f-13cb-402d-b1d9-bc5d35f22aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c61da9-8590-49f3-9298-0106ceae9a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ff845b-ed60-424e-b5fd-025b2b131efe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ad980a-e76d-4637-9a97-79ac2828f908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e296726-de7c-4b63-9e9f-0e7fa76f5523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da087000-a49e-4b91-a2d8-6389c01042e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cabe277f-b26b-462a-9ebe-a19f80bdbf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee703d0b-9cc3-4c51-819a-8b76c7556ee3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0c381-8e24-4c29-8b99-f6a61643948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f288fbd-95f8-4dd7-a880-933221a66703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee7eb08-4157-4d46-8e93-8d8c7d29a8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed68899-3e2f-4337-ba20-96a2be63eb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5355b45e-3a00-4eed-b987-585829b3045c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78670bf4-09ed-4220-9d2d-ee9ca10c63ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c194a0-c52e-47f7-9bb8-d83e18b6a0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea904d-26ce-4e0c-bb91-abeadcd41571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50b25a7-1e37-4b3f-81ff-f475fdbde355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b4eec3-9a87-416e-a14c-12a2f0f9af1c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1711af-4b59-451c-bf9d-5c7048e13324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe31ebc8-35f4-425a-ab76-7ede2e41798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b8b435-f9f7-47a7-b58c-b6ca20f2e52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb95275c-5337-47c5-90e1-302538615e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1203c1f8-6513-4c6f-8fa5-2d3757950303",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781c3b49-db77-438b-ae18-c64fcc9aed65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baef3747-ce87-4840-a35d-40912c4b984f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c7ad8b-4c55-489f-ae6e-07b23d544d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb6e47b-4294-4e0b-aa20-ac6c74f28c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a309be9b-face-4a7d-9ad6-5b3ccc7a45d4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c49633c-131d-4f74-a069-25584d91d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5636233-3223-472a-bf1f-e61bc6b0e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11cd486-93ab-49dc-bd82-f16a4b12424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f57c4d7-b771-46ad-89c2-a784291f49e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3066d0-c2aa-4a4d-82df-a17d704f191d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48980d9d-d86c-4cde-b7f5-861104e7212c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205bf30b-6606-485e-b56d-afc0beb7f561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d90b5c-481d-453a-9ff1-29d4012f80a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b709bdc7-7da9-4275-b0de-e67db8cd4576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af4ce2b-0ace-482c-9636-654dfa25bb20",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d22b5a-1c43-4044-b20c-c0ee55d383eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3448cee-b094-48a0-86dc-d4416883e459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2267cc3f-62c4-468c-b438-7d5e44b2cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba48c0ec-0354-4db8-aa35-b6511ff58a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad7c15e-d779-4668-90cd-ea37ac182b39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee952fe-4ff9-490b-9fb8-392e584beaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3faa8b-e02a-41e5-8a3d-c7db8a335282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e24eb40-3e9b-4755-8d49-5af02a09b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3218d35e-cac1-422a-83b1-b60877061be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e378800e-720c-4084-99d6-5f95e916f07d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa678c4d-72e8-4eb7-8cf1-470149dbe9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de143ed-b284-4342-b094-100df061d2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c88476-dad3-4e23-bfb1-932b762810c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3da42310-1c78-4988-8a17-ffd9eb4992aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884aca27-5d51-409a-b037-66894979441e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e661653c-1bee-4054-9249-3a8017fa7821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecc5bf63-241b-4212-9601-34df920039b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98241f04-ba1f-4154-b7c6-d59d8dfa6456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11b2b174-e0b4-4d7f-9c95-9acae6dc6654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350c66c7-a2ac-43d5-8168-66ad861612dc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c8cc5-063c-42b2-80a4-718d8f592207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bc996e-89e0-4111-8772-14b585195969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b037963-5315-4482-b133-4c0193384eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9e606-8b8a-402e-acf6-bc89c2215721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb11988f-be33-4318-b023-9c33516a6738",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eacc10e-17f4-4476-b5c8-812b5b20ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab3283f-6e3e-49c1-a317-66e5b1ba7c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f33e25a-e0e3-4973-be6e-7b2cb525a989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4676131a-67e1-4486-9438-273b4455de04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507da3f9-bb24-44db-9073-0307102e782a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74360e5-fcc7-42ef-b372-1f218a56947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616dfe56-c0f3-4615-9a61-1b1b28b6c8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78f3d7-ca9d-4f5e-9cf4-1cff28b41fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c672e50-d702-4a1a-aa8c-eb78b3cacd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28385b08-e7b2-4dbb-8196-92f296b1e66f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12cf416-b45f-4b92-b1f7-36e82679be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a200293-345c-4855-b3de-ee90dcfa490b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345f5809-f7ac-4c71-a7b7-c68c996f9bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "623da7f0-1488-40f5-a942-08725b4d2af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eb49b9-20d1-4375-81ed-d823aa237f6b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c36eb-facd-401a-8e56-e3e647794687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2466872-b536-439c-a34e-05ee6b778266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0142f74a-d7a2-4402-8afc-36de5e338cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "30ec6a34-fa07-4feb-894a-0628bf650063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b48483-03bc-43e1-a37d-6f94499235cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b706559-cf52-45d6-9e92-98059ef962d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4076f4-e06d-42fa-b1f2-143bf3e14e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8656ff22-2300-45f7-b57d-e31af5fd9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "67a83694-fb5f-452b-af6a-388c46811f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab90b6e-07b6-4116-ad43-5be829e37dcf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c712a8-c297-4cca-bda6-eb0ffc9dce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3113c49f-5390-4123-b361-ea6b45752c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440fbfe-c642-4594-9a6c-238426db5d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a89d70c2-55f1-4639-8fb7-12d1b03a420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a55ad-7291-4979-80c0-0ec688196f85",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284baaec-ac3d-40bd-a202-a1e49cfbd401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6add1b90-6fa4-4329-b48a-2481426f1411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0107933f-972a-40f2-8564-78c774e612aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "510b5a4d-f220-45ee-a316-c4faef849aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b29688-c2f7-4bee-a1e9-61896c720cdc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87934789-6bf4-4dc9-8b3d-26251541339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a42aee-d72e-4478-9fb0-9b056979bc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe491f85-91b8-460f-ac1b-4b771addb7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c30faa-b220-4db5-9266-cd31347f5810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb850319-3f8a-48cc-ad4c-c5b38ae43cf8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30cfe8b-6f9c-4ae7-a6be-53f4842c6815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dac4049-1117-4db0-9590-5af61834cb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3a242c-6ca6-46ae-b22f-4c12a6f28c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f282004b-4903-4c6c-8f52-614bb5a1b578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca373b0a-fa4a-454b-8891-551fb4ad71b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e05bf-76c6-4479-b7b7-d71151a53420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cde9de-b47e-4a51-8c46-fc4efed746fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3e8b75-58dc-476d-b609-a995f759dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440c270c-66df-4a3e-849b-1c5ffba9543a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d718c3-f3fa-4d48-a9d0-afd7922e2e6a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9badc4-be56-4d4b-929f-ee85194e3882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff574125-e9e7-4bb2-b4af-0097f38e715d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17af3ea0-c990-4a39-89b3-efb2e16336ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "966aa7be-268a-4212-a9e3-1d911d0164da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a5d19f-df9f-4574-9663-1ae0a013d451",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32f0ed9-38d7-46f4-b18a-00479df144e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ea6be6-de43-457a-9f21-e46234673f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cefaf07-1817-40fb-af6e-4a27cf94007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92a161d6-9695-438f-ba5c-56d53ad5521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f779ee-e7ff-4662-af8d-4d1dd73029d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f777224-ccb2-46b5-ad20-44285bfc23b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de08408-c76c-472a-a809-0900cbb4e852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8feadd-7ee0-4d3f-bdf6-5f199f9df584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "202034e5-f39f-4b58-82cf-3382350df2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27e4f50-d0f4-40cd-84a9-f119fafdcc4a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379829ee-bbd5-4a56-b51b-2f1aff4e6ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d57cc1-7d93-42e9-a76b-f8c43be03ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d330168-969c-419e-8082-c091abe0a023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "97661548-f74b-45b8-b110-30333cece6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dd86bf-bfd2-4284-b722-2663a61888c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a620af5-0063-44e7-b3ae-b55b3a2379b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe031723-383f-4967-a1fe-5363b7a7267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fdac58-86bd-48a2-9bc4-23f970a44591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c55044b-92c4-4482-993b-3ba9cfc49b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab19a65-0f99-4e92-999a-7d1b32ee564b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63983e6-195e-475a-b79a-5f8d6b16f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0c52da-0811-49f5-9f06-b5db36659f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d71018-dd7d-4d52-afa0-47800f42d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f905e3-2b96-4cf4-98a9-51e8c5f27c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b00fb72-35af-4288-8be5-abc8ad989022",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe03184-e33d-4c24-a494-da68bfe22d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfb1889-38d6-407f-a952-e056190310ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105e9077-914c-4a16-bd9f-5b30422d0906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0d8372-8600-48ae-812e-ad26c1049124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2e8a4b-7f87-4c24-817e-d3dab378f93b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fe98d4-0cea-4753-bd8c-f4b9fe515cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb3c785-3060-4af5-a861-b05a538f5b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0982e3cf-84aa-4f09-b625-7b76f336ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f8c831-aab1-4ffd-b12b-76d38227a476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75421f4-8308-40f1-b502-c6092aa766b7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dee464-afc0-466d-8460-8029abce414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b98ce2-ea13-477c-beb6-3bf5fa9ec038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eb3998-92b4-427f-86e8-ab93ea6092ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c054f624-fff0-40c4-8e84-f4506da3e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc95784-a371-4d31-b56d-7d00c1b16097",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9a0669-93e7-4db6-a924-3a699ebb1da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba77238-87e3-4780-8004-fc1f58317ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e0bb2a-1b39-4397-a1a5-74fc9ecabdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ed090c-857f-4c45-8dce-54d3e52065aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace22db4-cdcb-4b20-a211-cc93d7ff9330",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9886a975-4464-4899-a050-32dce026c8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d90663-b140-4b3b-a16d-72bbdabb3541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d03696-b106-4c7a-bc80-488a4511905b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f341aebf-3848-4362-9e50-5f26c9d28e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d04d1ca-7cc4-49cd-8dad-85de273a2f9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c131390-76bf-4e59-8e38-fed221d4d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd8c793-181a-46be-bb73-169ba782f3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390fbf02-7dad-4859-bb16-faf27d2cf7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "550c33fb-a6ce-43e3-9c69-0c37f3eb064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a25caa0-07a3-47cb-b169-6b89fad88646",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90067e4-a11a-4fe7-a23e-6e1dbd09ac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d962abf6-e188-4160-b5c1-7473d95dc4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279969c9-08bf-4663-a659-c0341589561e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a430522e-f69b-41e6-9d5e-236caa565176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35685ab-21c9-4f05-937e-5b15cd8e1008",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f2be91-0fad-4ce6-a8dc-477fc11b2917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801d79fe-8ed4-49f5-8b10-afb9d310b778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379b9f4d-27ae-4897-9b91-7101b8a92cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b44dbfc-566b-4cf2-8c35-a0c624321407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c12f06d-cfe5-4e35-b446-4b0e17c09639",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003232e3-f14e-4a7b-a78d-dfc7259857dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da7a90d-073d-400a-9abd-c38eee2045d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d09e61b-77ff-4c90-b8f3-9a777b8bbf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae83dfb4-6320-48b6-8d13-39958cff7b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0548fc24-b979-487f-ae1f-4a92ceca7e40",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e19572-89df-41c4-8716-f573fdf1191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b1814-d788-4e0f-b049-168a6796dac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e6e145-6a02-4a04-bcc7-bfbd32793270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda24d11-afaa-465d-ab8c-389ec5a078b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21d8487-9ebb-42fc-ac66-56009b56193e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4931ac14-c993-45e1-a4ba-6aefe820fc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce3f94e-07a7-4ab0-b4a6-2db31743cc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ba410e-eeb5-4b10-b57d-c766affc612d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ba6132-7ee5-4065-a215-839018c4a1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351499fa-ce3b-4046-900a-fe53b0e1a89c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79fbac-5320-4b73-a72f-821742a4a6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528333a3-210a-45f1-a51f-3f1f6b0ad0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a944cb25-576b-4c15-be7d-bd25a0610097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48918f90-6977-4dee-8576-9081c11f7315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f073455e-220c-4d7f-9733-d24a8efde771",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f93323d-6c71-4744-ad24-73058c33f525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242e17b3-d91a-4add-99a5-025ed20798a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74b2f82-95ef-4047-96dc-09be7c3b602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c80abefc-da79-4ddb-beb5-4d781ac66b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2a8724-8dc6-46f6-8917-9c4ad3afc59a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a35c907-432e-482e-87b9-0d457c787f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc71ee1b-941c-45c9-b40f-cd4e3dde2de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766301d0-205c-40da-babd-9ffedd1848b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47279641-2752-4a3d-820e-9a14288dfe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5b5749-a7a3-46c0-ab13-93a21d042d8b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb30758-5e1c-4239-abd7-8d10e107dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c401df55-3f30-46ba-b1e9-da692fdfc507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee30b37b-c409-4651-88a0-97b4b852f363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6509aa2-779c-495f-bfd9-b4c5c1756359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400bbf0e-41ac-41fb-b4dd-1cf4d19eda7c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2508cae1-3656-48c1-b6cb-9b976818b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650d374d-c325-4e09-8137-6b1af2e0f705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa17e62c-e0c2-4fbe-9168-17631ff7e2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01871758-9ab7-4b1f-a7c7-5c535c5d68ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92db5fc-4a33-41ac-a213-e7ae551e59cf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88470bb-1951-417d-aa2e-4df251cdc116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ab2dc5-1aa5-4376-b69e-94a174a3b308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dbd8d1-1ed4-4575-bbdf-d7730b74ce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d6ed71-d4a0-48a1-ad3e-15d3814a4ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ad03ff-14e6-47e3-ba61-c03a4cc2754f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ca526-659a-4eca-8c18-599f289b5526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108ac93b-8cf5-40be-bc27-5fe3864f98e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891620ab-deeb-496a-9074-32a1c32e4976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4877e00-4a07-48ab-9d3e-9defc3c96b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588df71a-4689-46fa-9292-8699e85acc6c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4767bc0-43a5-47a3-9648-e118025ba976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a01d53-b12b-4385-801c-da056254715f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1344ce-4705-4949-9fb3-a629b1946b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21380011-aa75-44b0-84dc-6cd7faa2a98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9cc98a-caff-4664-993b-f948d2ebf693",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02930ae7-1c5e-4f37-b46f-5c906a2b707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47531ed7-e3a4-4a3e-a465-84135f115fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333850fa-e15e-46b6-9c32-55b6b7c46b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3701dd-c835-4a63-9dc6-5a89ac2c9b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219826e9-c4fb-4769-931e-908b382c34d2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aea4b8d-d714-4dba-ad11-e12c011c65e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea25ab79-3271-4d00-b81e-fce66f191e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f3821d-d9c8-4f8f-b4bf-ad9e49b629cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10e7cba5-9f92-41b7-acdc-bec75eeb333c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f7d768-d434-4e22-bbf3-d2a49a74c37a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a04a7e-e2f8-44e9-9e65-d5dba0889706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fd38b7-4273-43d0-bc3c-72789d61b675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeb0e3d-e7cd-4619-b9b8-dc7c69cccc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62197b03-e028-4f62-b80d-08c5640c0029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642ca53e-0eb0-4eb8-9e4e-a7de78fc51d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af8097-0421-47de-870a-e332d0441b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f31ed96-63cc-456f-8363-099351a0fe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effa2f15-4355-4569-b2bf-c3cc04522d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a34119-f65c-4666-bf57-9df49bd9765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2942ac2c-e5d9-4acd-9521-5ffa8be98095",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05032d2f-fd08-45bf-8328-5d9dcb621020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccbc8d9-36ce-449b-a85c-0714854527a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292f3283-a28f-4de8-881b-d42b32cb9337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0381bc5-3b81-47e8-91b8-66bb96318cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c358469e-423f-4f8a-8c0d-5ff11e68d9f2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4912bd40-e9a3-49f8-8a80-ac5521ebc8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b797451a-562e-4300-a2a4-b331722ce61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44c7552-ede8-4d5c-a21c-1eadeca9c9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bf569d-6236-4167-b0f6-57a08e81f559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649f066f-fd09-4613-9025-32cd001a72db",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c406b5-d1eb-415c-80d1-f0a1330cc406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98a7af9-4d5e-4720-aa34-f6eba690a247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9be10d-5fc8-4fe2-a7fe-d1a6d4eb4e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6569c091-ec86-459d-8253-533a3c24494c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6071ccc-1715-402a-8597-64257bb4bbaa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b334e8-da48-4d31-bb66-4ead80ee0d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fb5906-cc4b-4777-a448-217375667ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df9726d-c245-452e-8edc-958d27875c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10897547-1104-43f3-9d09-3160006f8364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9b67a6-fb60-484a-8816-275c192149f3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0043fb81-3b62-4009-919f-5d57c7880459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44043a6-84f3-433a-8a2f-4b86198a98b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc95c1-8572-4041-bec2-0c1cc2891b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "034cd9dd-7c4d-4a80-bfb8-089df54bdecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee98b1e-b188-4c31-9c6b-aa21967d0f07",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e631155b-225c-4fed-a8b0-cfafa867850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ad814b-04e7-4eb9-98d7-8b400b241ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65caf1c0-5e30-4773-ba76-9d3782d06a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34734c33-62ee-4a6b-8062-237b620288b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d94379-fcbd-43f1-8d8f-d795e8ee5bac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5f7baf-8c53-4af3-bd8b-201c8f711bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d66c9a-e412-49be-9686-38c7681fa853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9554a85-fb5c-4713-af09-de317626f7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c0a769-0d82-4fb2-9e51-3d74bd11ec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53df2571-725d-4d96-b6b3-b00cba846bc3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63bbdfd-5f94-420d-96b7-2971d02dacb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0dad06-2d9f-469c-8195-515d1276b7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb2c17c-efb9-4cd2-a8eb-2abb236359bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76fd9a2-30be-4226-bde9-8b10ff2b44d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390023b9-9bd4-416d-af6a-6a83874fc932",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c01195-afc4-4f14-a04d-1e22aa5c701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469fc4cc-c732-41bf-bda4-7db66481f72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7cc0b6-fe7c-41a1-ba92-16bc1aec68d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e8e468-51b6-4ef6-9538-b864d167107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c6eda8-1205-4e1d-acba-e860bfc8d712",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56326248-d9be-44b0-9312-308da18551e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a39b64-0974-4a50-9951-556fd25c99a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3614c9a3-1936-4562-ba1f-03046cec1a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c560fcef-475c-453d-8d05-0316ddce830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6247a4-3255-4819-a7de-f47a92d88bc5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a679fd-5278-4d34-aec0-33c0f893f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7570e5a5-afbe-4efe-bc38-59bb87a50d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc0f96-e8f6-48c2-86b9-035ae7d15f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9c3ff1-29a7-466a-89b0-998012c5738d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87378a32-a565-4dbd-a2f5-951cabc945d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78581fb8-6e6c-47be-a455-f654e4fcb5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889dcfec-fde4-418a-9835-65a4d973cfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259633a2-7d60-4572-ba77-cc11925e7591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f873a94-1b2e-4aab-9938-7a96af61a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e5e791-0e20-46b5-bfda-2a8518bd400e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a2e00-d2de-4c17-9e31-28c48878ace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b31c59-703e-4c5b-963a-be5d0cab63c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e855a-0ff2-421a-9a94-0cfd2b107261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04521cb-8ee5-4ffe-9cfe-ce74468a58b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65418419-cd16-41ee-a7c5-7595b83c1508",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ae430a-5e13-482f-9b01-4e47741b3734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1105e8-047d-459d-ba52-074e50fd7443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae66b62d-fb05-4567-bc67-4dcd3eaf6d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d522f0a0-efdb-47b6-842e-760fb9f03856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa893f9-5bd4-4093-8eb7-241d23e84b27",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd40528-1d1a-4a86-89ed-a7bb5f70c50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37afa3b-54fd-421f-b4e8-85c05207c46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c5d51-c14e-4447-865f-aa8025d25f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "92df6ad4-090b-40ad-99d2-85f559c3ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a897f5e-592e-4cc5-b927-a506194d6d69",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9de35d-f00f-4b19-8631-c83715afbbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2059f0b4-3acf-48b5-a536-d9fa78e9af8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa9a5a6-0986-4fbc-9152-35bb1e298797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5570c78c-3cb0-4c37-85bc-06b2b55e3268"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34aed821-8d3b-45d6-ab32-f7b7430f27b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f2f30a5-4f4b-4bd5-a8af-4a3f8878e61e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd4c8f2-68d5-445a-ab98-283f88e872d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03cb9bbf-948f-43d9-863d-e80c462778f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d9575-467f-4e72-a1d1-8d3d319b5dc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a500406-0b2f-4b81-b6c5-e0e128c8b489"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "839ad342-3cb9-47f7-8fc0-d1290a081513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a411990-e22d-4b15-a155-a0f4173f9811"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ab8610b-fa93-44a3-bdc8-1463c0502215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8486d25a-b4b0-45b2-9ec0-eb4534a76fe0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19b607e7-b621-440e-a91a-e4dc75c511ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e348eac-1e97-4268-ab6e-3987d3af4399"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2df343e-6d51-4766-8a9c-9a3fcc24ecc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae049f95-738d-40f7-94ad-4ac91a978bf6"
                }
              }
            ]
          },
          {
            "id": "aec29576-3e15-454e-880b-ee5b4643bb63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46252c95-696f-4103-a304-0d8d82f91f29",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b47fac2e-309a-4cc2-a6de-bd8e24b964c0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52fcfcf-57ad-4f62-b431-8cc05907ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8e74c18-cfb3-4d3f-957e-1627e3a96fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d15a11a-adb6-426d-9d95-e049dc31bf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c51ab7f-122a-4173-b46a-2cf071d819b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f373b3d-ebc2-4cc9-bbc2-b82027a259cb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d838dd0-8836-4d41-8c9e-aa588046c9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2257efcd-4ee0-40b3-8080-53bab4e48d53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08174b97-6075-4e29-b37e-1e5be5fcc8c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "671e0c6f-6dad-419f-8ece-b1b218119393"
                    }
                  }
                ]
              },
              {
                "id": "ba8d2b13-9122-41f4-9fe7-f3a526812222",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "003a4390-e21e-49c0-8c1b-2877f9836d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9f04f89-edf3-46f5-9b26-8e8dd3c8e919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b65e0edc-1b9e-44b1-9b29-903cc6a23140",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c1080a8-3357-4454-8409-8a4fdf0de0b7"
                    }
                  }
                ]
              },
              {
                "id": "0afed0b1-ed2f-4c9b-8b3f-456bb688fa92",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83d5a9d2-ddc3-4bb4-a2e5-7712798cb817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e92b26a6-ef1e-417a-9f78-e859bc80fbad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6baf34b-7f4c-4195-b262-1eb12e80e2ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "452efddd-0c1f-4916-a09f-baf50b07eeb4"
                    }
                  }
                ]
              },
              {
                "id": "52e40464-7b7d-4d43-a326-7d7fb223c11d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec9e7835-3fed-45af-94c7-1c92beda3fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5cae235-3b30-493a-a457-dbcc49beca27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ece18a6-4526-4c8b-9a6a-f98620f2740e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d72f7ad2-a1cd-4053-9464-284049deb1a8"
                    }
                  }
                ]
              },
              {
                "id": "4187fb91-8508-4c12-b2bb-907e8ea23a08",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "941731e9-a103-491b-900a-a0b77766d3d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b64ece6-0bbb-40cf-b366-5873f588b4a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51375cbe-6e55-4ccd-b090-46aa4f1d08d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "624129fa-12a9-4532-8867-173f1aba11a6"
                    }
                  }
                ]
              },
              {
                "id": "b1622ca7-9f1c-45a0-a05a-a215b31d93cb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3d25f6-47ef-446c-961b-0c0f3668a22e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f133fbe-51b8-4f61-811b-bbee190de7cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1435de28-be28-4a3f-9bdd-25dffa8f14f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b04ef8ed-c01d-48b5-84b4-0a3ef222afc8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d545ddf3-9562-4d25-9a97-d18d1a5f535a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d8bbb8a-f349-4bd3-a9ba-cd775c808254"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e576564c-88b7-4a46-8697-11f292126661",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35364bb7-4e76-4b99-ac7a-a4c563d3fb75"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f370dedb-f3ba-45ac-a329-a507bbcf8040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5de205eb-0d52-4f71-b87d-e3ca1efc0b86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9da03fe-c3f3-4606-97d2-30ec6f0e444b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38721523-2d93-4271-9e68-e11e1a61e2a5"
            }
          }
        ]
      },
      {
        "id": "a1ef69e4-1d02-4bc9-8455-3794538bc692",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "73d9d22c-09d4-498b-874e-736bfe1960cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e013746-0df5-4c07-8530-2039d9fc6a68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a55ff0a-b2b2-4c6e-a162-6b4ad40a738d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130807d7-e170-4332-9bdb-e6c9487ae59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1741469b-d820-4134-8b18-7ab0126d3486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0f8bb-02b4-40d2-895c-1db294195283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab35d2fb-63fc-43c0-ab66-689fa19865f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef53f6c-7fd1-4e9f-b28c-9503e5db16e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bf4820-498c-4c46-96f6-7cbf8d18ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b993cb1-bb49-4733-9bea-55bcb7c4c9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d839c1-4be2-4a4b-b19f-4d7557566f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb43e6a-07c1-47de-be56-1ce78d3c97c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf16325-40a1-424c-a8c4-5b176a962ef3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a3844-169e-41af-b4da-4de26c542c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8716d2dd-0844-41fb-9201-838a66e8c241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a57805-a49e-4543-82ed-aaebae314fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca52cf3d-4593-46cf-95f1-82767c6fa5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecbb3be-e714-4c27-9e95-515ad191237f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2704f-08e3-4baf-955b-3c29809a95df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b599c5b7-776f-46fc-9e14-40be56d1b350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703acce4-0faa-423c-85e7-f11ec0b91959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13fefd36-0054-4388-98e0-e77aedbca8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e220f588-6f58-4a2b-a013-97be1ab44655",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152faf87-8101-489b-bc77-de3f661f7003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb7b3fe-8e74-417d-98be-72497bd6297b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2023e008-ba0c-4dc3-a273-bbb3fef0886f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e177b0-e170-4c3a-9c8e-cb2185485ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95bf451-9aa5-40bc-bc23-22d83d1f1b0f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8502ebcf-97e3-41ae-a057-e40c75bde51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ab13af-eb22-40c7-aa5c-39f604627e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be3758-1e70-43c4-a46a-1844c8f6cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5b2be3-93d1-4ea1-82ac-1e4fc9a217e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4e147-40a1-4785-94cd-122d55b4a953",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6c48e1-db29-40d5-bf6a-fd6f8782a9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922c0f16-d303-4220-977c-556880032813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c94955d-8204-47f8-a6cf-6791ca4c5ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0534fc55-944b-4d31-863a-c1253dc28370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d7ff2a-6fdf-448e-951d-80d80f823c1d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9636d7-5609-45b3-b098-7b48cc6cfeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ed319e-b219-45dc-8f72-a7d0a6d6cd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71175155-c51c-40c6-bae3-0aba810326ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf9215a-ddc1-41a9-acb1-552f826f9d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0358b60-5f62-4a50-994b-59e176f59fa0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9bfbe6-0546-46f0-996b-42660534c6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24c55ec-2480-4e96-9295-7c37c7461255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b91c027-9446-4d61-8552-b8522e634228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae5d8cc-9efd-4e65-b789-7d5f249cf74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d793794d-c2b3-48e8-a62b-26851edc8dab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5876775-1072-48a0-8eed-c589ee5bd975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7a0848-094d-4860-a9da-d2b14d6c5b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36705124-58e2-4f13-b7f8-b73e98d50b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ee7079-ca29-4433-a48a-66539169ef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3517be46-2814-4bf9-b2d6-5eb0d4f4c3be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767f2a18-5274-4584-90a2-025476222971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ce0cf3-d931-45a1-9e54-5882b9c692f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4490af6b-5fe3-4410-a934-c53b4d25f521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5a058d-0574-4bdc-8394-3255ce28c556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d8de28-1dff-4cde-82cd-e4f7ebb5bd2c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d308b700-1d4b-4794-a0d6-aa17bc900289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5114b1-f066-4552-b189-1bd80c7c3d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f0e73b-9f8a-4357-8c40-af35a1ac0b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38311514-5652-4553-a3da-0d2e7a19128b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb9b168-1ae9-4f53-88fc-18240f2d3637",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15215235-2e3d-4fba-ad08-8b82b93fe8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e3a6b1-dc4d-457d-a3e3-5deb83f851c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f46b53-fd5c-414d-8cfb-4adef418d7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55cfa0a8-8491-4237-addd-543a1496f98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40e2d18-52d0-4976-8370-a08829241162",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da345da2-38d7-4548-892c-936bfc61e8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7de53cb-0fd5-4cb6-8610-9cb5bf257290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800bb868-07a0-4296-99ab-9ed9abb33363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e951794-0f6b-41a8-a93f-ce987cbdf637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646bde83-98b3-4802-87c4-7e456a44ad3d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ec0544-5f8e-4a6f-a8ca-ee7e0c8c1f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a3bc49-7bfb-485c-9da5-a2df2a81ffbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b61230-bf42-4a8f-833a-0dad2acec8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e7a886-33d1-4a17-a53e-18af69a031b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ee8b1-47c4-48cc-8aa9-1b5b215d9228",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0498cd83-fe73-4571-be54-dd7c84367ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faba3f82-4466-40c8-8ac1-572d0b35838e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0419b9b1-535b-420e-b9e7-539d3a45fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfecd542-cba9-4297-af9c-a9872b538dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460c2654-3738-4877-880b-da512089fcec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c652fff4-e9b3-4b84-bd45-688be7bf31b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b04d370-edb5-492b-a572-11e69bd1aa1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527cd7ee-6c13-4d4b-8e79-ed47b942b24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "43059502-12e4-4f58-a872-11c91a06a692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b92c5e4-f0d7-47de-ab1c-1bcad7efdeea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0575ffde-a526-4525-b2c3-374649df3840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00183d0-5ba0-4dcd-8047-84615958c3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35974825-e4c5-42d9-a814-4eaf9e6ea532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8133cae-a6f1-4b04-89df-459f55cde457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d80f98e-e9e7-411a-8b84-e556e9492df9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d90f17-93e4-475a-83c0-a95979f69e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ef0c96-ef7b-4c75-93ba-8b9ad322f1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f53355-6c80-45a0-b58a-0eb1ab531ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2d993a-b343-43c6-9e25-eb50ab0fe9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b827671d-a43d-420e-be46-5bfeb33b2f4c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c43802d-e2d4-45e7-9b2f-f4a5f4224272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e821d6-4e75-41f2-8221-524860d2c0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fb5177-8243-4f74-90ae-04587e90284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65bb366a-4f9f-4ce1-af73-884e1efd3d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b409131d-dd78-48b0-ac6f-7ccf0779ee0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d5bd0-68a6-44b9-8e28-af31ea03cc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a55d091-c411-4040-90a0-7f99ce87724c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72422787-de1f-48de-9814-58ad3f821ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fa535d-8c81-473a-84f1-96950e293119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac9df6d-3fca-4cc7-bba3-684e68cb388c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6382da-7fa7-42b4-99b0-1502986edb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54327f71-eee4-416b-a048-06201a018b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf88117a-3535-449f-a883-c7819da67a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319c2ba0-6bfd-472a-a690-175496d6b903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b645b48-8264-45b8-8ad3-3575c2e9f9b6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4e4775-de95-4d4d-aace-860053844704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9212a7-0044-4e84-a8ce-13665c0c5012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa53137-1b8b-416e-ad76-77e6880f71df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288fb269-3d54-4a68-9afa-e2171dc758d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d6bd8c-c50d-4ad2-8efa-ceef1d9538b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b708dd00-8ef7-4a6e-8553-bfc2ff5167aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fabaf7a-2785-4c25-a1fb-b0a69d667cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeafcce-4c34-4881-b24d-2413a21d4c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168040e7-9b2d-4121-b516-24d7bb40f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44374afc-350f-4315-83be-8a14259c4a11",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a699b9-c6bb-45cb-a4c1-4559528d9aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9920f5-f294-4cf8-acd8-1d90d74836e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02774b-b2f4-4a07-9408-8ac7f984e562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d449a7-e6a8-4bf5-a3d7-89f1f003b699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15310644-24bd-4ffa-8c09-b7ae1d4a1f03",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68544fdb-236b-413f-8634-405cd1b6a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba07de0-0056-4e42-bb05-f379d5aec1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9e6f40-4cb5-40ac-a1f2-150952184758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3eda80-4f22-4c81-bab4-0ee2f26df6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bff0707-b345-4a16-b1e0-38c869a438a9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6d3483-287a-40d2-95ca-da61edb99c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9049c1a1-01a8-46ca-9505-4efbcc14d19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86307964-3eb4-4522-b5b7-2c26ae02f392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f761981-e26d-405c-878d-fbe44fc76bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aa9b4e-0310-4081-8c38-06856b312400",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fd8788-b15d-4cf3-b755-dc5d88859e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593b5833-9828-4169-87be-ba14b5293998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37963140-4bb2-421e-a242-35b05c9b6cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "606beb11-2e8b-4647-b01d-d2493ef37e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c92423-9552-4a96-93c7-ed38beea0bf9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25b9c18-9e3a-4934-b297-81c6632884ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f366a004-5d03-44f0-8d04-aaeb2dbb80e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea13af-692a-4909-8c17-6ff63b8f7841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52c513e-1234-4b8c-aaec-142edc410d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d080ca61-839f-48f0-b187-4a1326fc8583",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ebc3d-69c8-437c-b264-2493300de1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3391ea-1aa0-4fd1-9974-91b88bd69c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008018a-23c3-4f55-81ba-4a1163c3d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c5dc44-cd94-4dc5-a3e9-5eef0b575c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a84e6-f465-44e1-a880-fef96d45ae48",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c25501-a65c-4e82-875a-7e4835e28ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef5e52f-4062-4bc4-a63d-b874d18e3cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd84cde-f7ce-4966-a4a7-22d644c80236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "956ffc41-2f35-44b7-93de-4d1b8b8e8357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c9606e-f52b-4b35-ba53-fe9c92f42151",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a184cae9-b2e5-42b1-99eb-5dffc8264409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936c66a-ca98-4c60-84e1-f83369a59b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c8b1a0-f9ff-4289-a691-ceb3213fb02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "493c8f73-c5ce-471b-8a20-6f456770215d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31e4a3fe-65e0-43e7-9b65-cef539bdd43e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd065e1d-2d0b-441c-98d5-4a689048bd8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41479ca8-624a-4be3-95e3-723a7a95ea32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4cb2fb-3e0c-4934-890c-d4b55ef8f95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d49661-dc1e-4e01-a0aa-5249960f8486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2783926-4fbb-4be7-8449-56f68f339918"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dad4b105-72c6-4caa-a5ae-e2993d414b90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b83af85-7d02-4f3c-bd95-90ae77e63cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f067fed2-4a16-494a-926f-48b48f2a80fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b376a5e-1ada-485d-a44a-b2e686cfbc9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66a902fc-b7c6-444d-b8ad-943bf2387b46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a8bd6f8-38f0-4a03-a541-dff5424b7787"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c72edc3f-b378-4baa-9108-662b086ddd10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "036fd239-a972-4c2a-b751-ff360cc0d740"
            }
          }
        ]
      },
      {
        "id": "23587cba-48b2-46b1-ad10-3ff5afca3193",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "90803bef-fa10-4eba-bd64-5b7752fb666d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c57573cc-c357-4fbf-827f-42bd8efcca47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4adb9834-629f-4634-afcc-a0f870f6f69e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2472767d-ff41-40f1-abcc-940179ba1a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d0b7cb-0868-403d-9383-dc6f99f70d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba226af4-374c-4a81-bdc9-754d6793515a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8684bec-5cca-417b-a136-58dfb65894a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a3c0ca-3fc6-44bd-99b1-35c507848ce7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c08dd6-a518-449d-9437-1709e133b413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5881bb-a8fa-4d3a-b18a-2c7af3e045b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43d7cd1-ece7-4172-af52-ca87622a74c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30befe79-979a-4c72-8bce-6868eeb7b2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea8fdb1-4887-4d83-afb4-b639a5e8a914",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa85c7b-34fd-4c1d-8b67-46ab48ceb974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468e932e-f5a0-4934-91a6-857ce3b9928d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7775b9-2795-44fd-b6bf-aaa04bd6f872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd875e9-55ca-4c8d-870b-509866142e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee195a1-7b60-4d09-860c-83a4d1bdce48",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bfbd97-8671-4d70-bdcc-70f827c3f0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940c2e5a-600c-445c-aa2d-fb2b2c3bb178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8e5670-607c-426c-ba1a-4a8ce8fbdeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebab3e6-273f-4724-826b-cb161a65917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5045e9-a9a9-45b1-91a9-000924dc3320",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575bfd11-59cb-4d3c-ac14-2bb36fca5057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c289f939-b99f-4e23-9443-c1b7115d175a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70970399-7b32-4ab4-aede-38035caae0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d009fb18-0bdc-4e0f-9cee-a97485bea32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c7e4bf-fcdc-4235-a897-13318bae218f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8141392-821f-49b5-9775-1f1397ae9f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9c5757-cb5f-4855-aac3-b3b60d3fc6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba749c55-c2fb-42ae-8e76-a9b1c8b4b97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84e3bd68-b47a-4d4a-aa7a-e97c141bbf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8499f3c7-3ed5-4398-a3d5-b0eb34e47171",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a21827-3089-4a01-942d-65579682951e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e78da92-0838-4aa0-b7c2-628bd44bbfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108d6779-d64d-4ec3-89f3-09fea6dbfac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b242c1-852c-40ca-bf53-caa638e119aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79913c95-6a76-44ab-8423-62d75690eef1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f8e34f-44c2-486f-81c2-381855701091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7790b340-a86c-4d3d-889b-567f5fe16b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60074d86-97c5-4713-beb3-8dcbed69940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "361af948-8016-426b-a357-0a9dfa76f247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c18315f-87e9-44ad-a2f8-edc535f31108",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acd53e8-e71d-4b07-aef9-2d817642e694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03258e1b-defd-40a6-9b77-b3340646e197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb82c9c8-3cfa-40ba-8383-fc382a23e9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ab7824-207a-425a-96fc-1e81fbf9d17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6fdac2-2488-477b-81f6-8825d5438788",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eade10b-9852-4e9f-8c12-02f3e252aa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3884703-2b9e-45ae-a4e4-cc1925db3093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f77e95-8a80-4678-95dd-c3418d6785dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8018fe56-b634-4330-b018-d65c0b0097c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6114f857-a4ac-40d9-ab90-f873b024a298",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf01e3c2-a997-4013-bf06-05491939c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4364a01b-e30e-454d-8eb2-53204be7b862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e30de-ffce-41f6-b8db-10a9058f6da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc1ea1c-1600-41e9-bc53-1e5dd40a3a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e14dc08-ffa8-405b-b9ce-10db55a88921",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee451324-bdf0-41f9-8bd3-654989398a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45459bd2-1a5b-4f72-b8d5-fd3c95613a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c78ff8-046e-4470-8375-5c52f5dae93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e542364-3412-4802-b014-d8006abc1bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df705e6-3631-464f-858a-55ba7334e112",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0588b8-4772-4e83-8d16-4585ba844434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e082ab06-5fcc-445a-805c-5f60de99262f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c9dd5d-9483-4bc6-85e6-8109293d118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f0af87-83bb-477e-923c-df5c4ab30948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8018594a-7dd3-427e-aa4b-b50c6914a699",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c9d2f5-d521-4338-82bb-174881c7eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df775f50-7c41-4dc7-8703-9799e26a6c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b8009d-fe5a-43e0-ab4d-f97da6d422cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86917f98-5685-4d81-ad76-0049dedf22ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55449dfb-e6b2-41fd-acba-14a7b92126bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e1950d-90d4-4e9b-b00c-f21d6c06f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7a404a-bc47-4705-852f-795fbea55a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e9f20c-b32e-4962-b968-7aaf45141c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "633d4873-146a-44ee-8c11-e6f3527244e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3903a23-81a5-4912-95f7-2ff6fd333b8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc1bdf1-8609-4641-9529-cec2d031f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d4ee73-70b5-43a5-99a7-e57710897efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ebadb1-d557-4f44-be30-c4916074ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f7c7e7-f559-45d3-9013-110509ffb489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d6935b-0dbc-4b3f-9798-455fd7d7af9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b11db-47af-477c-a9bc-c041a8d46c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fe8666-7d3a-489d-b648-5a33f2771977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2f18e0-77cf-49e4-b4a6-d8add6473d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a9b242-3573-4964-9663-7f6e31c0e9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871f01ea-8f35-4cdd-a462-f8ab7baede08",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cfda04-460e-4a64-9bb4-d726a38a3cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4065585-6c56-4ed6-a6da-19c129c758e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d009269-c755-46b9-95c9-16927373a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4859fed-72d8-49cc-b28c-c247d765bbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fc9c06-d9cc-4900-a4bf-005618e2bf12",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10593df7-bbd2-470b-92bf-0142fae82680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1bed9a-5c5f-46e6-a91a-29bbfbef7411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd0cafd-5807-4020-b598-62bd16103c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93673c7-46ab-4ca3-9907-257cf7813a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f15fc-a070-4302-b005-5f77691e7aad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a33ef-f8a2-4c66-8b5d-17fdce04d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dedef6-1b3e-4be7-8080-3febb7a63374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd42e862-2a6e-4142-8900-c8014655bf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "623ee45b-6503-43fb-af35-ee875ce3e9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a431aaf-f679-465a-8629-52352837ee9f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c99c52d-c1d8-4d6c-bb65-7f8474b821fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b5f2d-e5c0-4593-bb66-df75535eb915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baec37c-ee5f-438b-a0c9-e385a0af209b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79343e11-bf86-4edd-a702-3fbcd0b51620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f823a12-391f-433a-9ed6-fc79f4320aea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8dc320-32e6-478b-bc7a-dcf2a09c4d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8490c1d6-f9ff-4d75-afaf-ff9b46f84472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59a2a97-7205-458d-ad56-9db8d085497f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0efb828-744e-430f-8d7d-3c92a0439dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a15a5e-5c88-4e68-a61c-25cbd1fba6e9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc40c83-3675-457b-b18c-0129b4fafd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84abc1f8-0d2d-414c-9cdc-732168d6e8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9b9909-9c79-4ea2-8e5a-3b9c08b8b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22860196-8ed6-457a-8fa3-d077b3f10c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433ee766-9211-4376-851e-e46a22a6ee41",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4fc4e-8d61-4d9a-85d6-57a1f4f30a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b86463-76f8-4c16-9808-470516920bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e66473e-9354-4885-a906-6b525e11f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74a0b6d-df58-4ae3-bd21-650c3a1aa9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fa8ed6-fcfd-49a5-aadc-0213e7add878",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade011b-d9c8-4b6f-8bf9-b4b9fb54870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4dd405-dab6-4881-97a6-63b6690a3681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58c9b16-4700-4d70-b44c-1bb935dd1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccaa531-79da-4eef-96ce-59eabd654ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f75c833-362e-4b4d-a5d9-fd40db14624b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae672da-6eb2-484f-9614-5c9999f50b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bd5216-6a89-4829-9fd0-c7f5ff3bc6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787f3b9-a069-44c7-b2e7-5da73de7cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1f49b4-fdf2-44fd-abe9-e1a8a2162f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4578d0fa-6f48-49d1-96db-113f0da786d6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3495ad0-91e9-4083-b987-61e7520c0f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9dd40e-349f-40f7-b568-0b5e8091cce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59832c93-0e13-42cc-ac03-14af291f0e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd1cec8-b00f-4342-a6ae-73404e2f6b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc07409-3770-42a1-97d9-7cf9240248aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0caeb0e-0108-4f5d-a61b-234c35ca9301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c7d830-b215-44b0-a47a-174bc2e10cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a28abeb-1b20-4719-a18a-57885deb8b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d26a47-14d4-42b4-8ee2-aea0f545531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c727e0-74d3-4443-9031-51f277bc73e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd80e5b-a0b5-478c-9ff2-4392b3486220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07eab94b-3bed-413b-bc4d-2af4feb45418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d7f287-d10c-4211-900f-1703f85569bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd476bdd-8070-43d5-8f62-458897ec63a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4034a4f8-28f7-494b-9cfc-677c580ac089",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa67c53-be20-4469-bc62-d1dc200c9402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90815a4-feb7-49c2-9e6d-5099e1ff25e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ba033d-d001-4451-b963-d4270f4310e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17fa6c28-f91c-4250-9a5c-38c9a87920c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32646755-85a6-4db5-ae92-b649004d0777",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f9d3f-d0d4-437e-b47c-603c84f120d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3595a1-ecf0-4cf0-9470-ced6234af182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c9b9b1-4c90-497d-826e-eecfcd3719c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadf2d31-d161-4539-afe6-25ec7ef49e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720642dc-bd02-43eb-83a1-f265fd5f704c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59d27d9-4771-4812-b873-519766135517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff1d775-34df-4ac3-bfe5-db530818ca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af306df-4585-45de-85ba-d6ca781b1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "859ebbab-639b-4f48-a2ce-a054c0dfa62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b85b2b-b48c-4f90-9a10-c68b9e7b28c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb48e0-e1ec-4ede-b854-cc56887da910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80804a87-78dd-4509-be03-c1abc17851be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e705f43a-7348-4082-8102-5e17a7f9e02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fd1cd6-7985-4046-ad7f-e8cd90ed2498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f57848b-98d0-4661-9a9b-3ffc40760e1f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdde6d-c743-4f08-b2c2-53376d679651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190de684-5d26-4dfe-b4c2-129f19605fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830bfa97-ed3c-41ab-8ebb-ca8dea05eb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52294a7e-c501-4fef-8bbe-eb5aad54b37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a789d4ab-3e2e-4719-8353-303a6e7fa6e1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18b3b49-6af5-40fd-8be9-b6e5cbc0cd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daebf34-bbc4-467f-a7db-c0287dd4001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe0c4c1-b762-4488-9588-098571a1fa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133ee796-987a-4889-bdd6-1994f3d8ed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0b7208-348f-4e8a-8e70-b129f0127dd9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1aa002-e004-4984-9036-7e3ac96e602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1664c8c2-b5ee-4a4c-82ef-d3a2e233e7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954d61f4-c95a-41df-9857-0b46515896c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5293bf56-0179-41bb-b594-50b61f5dcd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f1fb2a-d00a-426c-a38b-9202ed001ccb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b732f-5c91-4fa7-8204-94b660e7d1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a941956-9914-4fac-859c-3c224d299e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd27638-89aa-457c-a731-2b84c313cee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0d3c26-580a-49b0-a370-ce37b7d230c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6485ac74-ea82-4880-a333-046aa4d351fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "613238da-c452-4079-8371-91e28bb86eb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c240e1-7011-4841-bda8-08596198d543",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a6837a-9484-43b9-8f5e-d60a940f215d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f19e73b-c946-4b34-b6a7-b398db9ace03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8af4be4-03ee-49f4-9a3f-be06cf826f36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3505ff5-f721-4637-91b5-e6c1b5b33dcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca2194a2-a1b7-42cb-8e41-48983f9b792a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92253e17-2d73-47b9-a353-44bdd10c6ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fd65928-4ebd-4b97-96d0-a8108e2a1ea0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baaa422a-e0cc-497f-8576-ce0337ddefb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d95c529-ad94-4ef3-8dd6-d2bda3086596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c770c70-4b02-4724-8f22-1f6f25a112fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "990bad79-fb2b-4feb-bd96-598222d9a87e"
            }
          }
        ]
      },
      {
        "id": "9ee4b242-7b4b-41b7-8860-eb85d1cb9344",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "434895bb-9b68-498d-a52d-47b5d52cfa56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "489464e9-9d41-443b-800a-44a4807a5ed7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f70c6a1c-2304-4289-aed9-f0341e7b07b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9880d76-37cb-41a7-ad68-46bf237b9f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102abfb4-10cb-44c1-8850-223b401de056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b034d7e-4bcc-4525-9532-7d0b1b24fbb1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f545e167-f33c-40c3-9827-0a0797dfb74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b67e4ee-737d-47fd-87ce-2a5a6e7bd45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edd3bbf-3815-4389-a5dd-31a05b78e541",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15029492-49b5-4112-b001-f6cdfa7e5da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3befcb5-1cb9-4d05-b3d1-7547c80ab550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f2c483-7ceb-4737-8701-9d2c868d01b7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b49316-5234-46c5-bd29-c4472979f987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df790d20-09f7-4694-9a01-2e7a57271662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3db03cf-ea66-4cba-9fcd-50b9b8a75ad6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee78aa-33d3-45d1-8272-96dcbe2a8a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91aa8a5f-2bb1-46ca-baf0-62116e5ff6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a1ec87-6a7c-4b6e-978b-0fe74020e14b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ce374d-3032-4074-a6bb-551079a3c347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2193e392-6b88-41a2-bac5-33a9c7406936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c381da8-5a9d-46e7-9586-eeb3be20deae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd0a309-3a81-49c2-9cfa-750b21995640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783115f2-9727-4f3a-8fa6-b00bee053dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6254e7-4941-4998-a843-1a1e67cca5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6c4941-a540-4de8-993b-0cecb475a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd153f7f-10c4-4071-9155-4b6ec11738d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f371f313-ef6e-4a6f-a96c-11b4b883530f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba1af82-d85b-4b18-992c-fe7a6ff542c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b6fb0-6d7a-440d-b82a-8bb7dbd2b7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7d29ca-56f2-4ac0-b4fb-f3a626cdcf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6df55-9f0d-4a12-825c-a3c6ed0ce8a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b118d7b-3019-48e7-aff1-0d975e7d7851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47f544f-e985-4bef-83ed-9d0fc9144efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d17558-cd3f-47d0-a5fb-926a1e945628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19e4fc4-0ca8-41fd-93e2-26ae94565890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306a572c-0c49-441b-adca-8469c7881b20",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1801495-672f-4494-98ee-1e5f7d2985d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7886f1fe-133f-4394-aedc-c91cb0e151f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f47b0-f2b4-46a1-aa1b-76591d157da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e47f7c2-bffb-4c98-9259-e3629bf9886b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e0f030-be6a-4a9a-aed5-b4adf0cf7c74",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df6c08-443a-4b67-8789-17af41f67c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1bda8f-fb36-40fc-9df9-d182f3f44363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8ed07b-bf8d-40ca-b248-c22b50aac9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259d4b6-2e2e-4ede-a7ff-e999b62e7935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b6d95f-9aa2-457e-992b-d319e0953e9c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb141bd-6757-42b0-8131-14a21d084b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbd0a51-d4ec-47a7-b1d6-9fd28273edd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb03d7-f872-4ddf-8afe-6547d4b1e66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100b5b96-014e-4a96-bf35-59f264a2b143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88dd415-6c05-4ec4-9193-857a8a863576",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fd6e92-d1a5-4dcb-8072-65f21f6536b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba92df72-689b-459e-ab02-02bdda6907e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b8a8e0-4cca-42fb-aa72-bdb089650945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915c0d7c-9383-4e31-828a-b65b6fb2375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0283c7c0-069c-4a2e-b105-c33d19a3826d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58166e6-bd72-42bb-8565-c9b61fe9f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ed12d8-3bc1-4d5c-b6ed-9702a4e2a42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c81e75e-d339-4a80-b8dc-006c4b04eecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad604f3-d583-479c-9126-920ac7419153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f153f8ba-d926-4a85-bcb1-e090ab2f5006",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dce0a9-c861-4cf8-a255-904ea194c150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5ec255-9851-408c-b277-6d372854b52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57f1b6-f6d5-4393-a757-d14aa04c98cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f64853-067c-40ad-b7c1-f15708f87fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8513cd0-c3f9-4d3d-b628-d741897592a9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c4b3e3-5474-4000-ad66-1d48b938f7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd580c7-9ad2-4968-97cb-1ec17fcd7063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d6e543-0fe5-4c8a-bbb8-d99ff565b6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba777c1f-ddb5-46be-b8cd-9ec837044883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74c3363-14a7-48d9-bb46-1a880f6f74d8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c7222-00f8-4974-b5ae-1966407a179a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9613be1-a40f-42d1-837d-c07a7ae3205c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb55e49-7e8a-429d-a4a3-56e4ee4b9195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cab676d-0442-449b-838d-7f93aa3d86ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1addb088-fd73-47dd-a157-461188e2890b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f388c43-ef65-43ff-95b4-95060981cc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3e4f40-9c65-489c-9ebd-9017cdfcf4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6042a3e-0140-49bb-ae1a-178db352e7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8beb13bd-206b-4f0f-acb1-889dbbd0ec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cadea2-ae20-485c-95ce-3d95ae6cd17b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55232a-d886-4f28-a951-5b63d3715326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136d0aeb-3ada-4167-9ee8-1f11f96737ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd53613-c58a-4454-9d10-b4cd1a46d396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d53b3a-93b9-4f1f-9186-e3a0c7780a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa16e5-8c43-4295-9f17-02593bcc41e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0874b4-16a3-483a-8234-2c95b9f14f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a6c740-3b66-46d3-9933-92247950d484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f675d713-18e7-4c73-a107-01db6a6d4592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a8a232-21bf-45c7-996b-993960054862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d85f732-62ce-4f3d-b2ba-3867657d4f84",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c216a563-c17c-492d-b105-a90d7f78c9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfaccf8-1fad-4846-8838-c5cb3c0b3e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef84733-7353-46ae-a2f6-214621b3ef92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9ac06-bc81-4db8-a4e9-fc393bdd8356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27047167-dfc7-469a-9674-3c94f2b87faf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d72f10-15ba-44bc-b3ae-e3b0093b6feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6862cf-14db-4d7f-ad4b-207dec549996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc993d2-747f-4741-8393-2fe9ce506b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d8c044-1273-45ab-a3e9-377a2b8dbde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2b95fb-f4d7-4d5e-be9a-df883288eb79",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43ca85-baf6-4879-b4f6-a34ad4235875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef246f3-89ac-45a2-bf71-728d9b9932d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6315b55d-3588-4a67-a965-191da621a608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a86035d-9077-464f-a1a4-e06300d445c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84f948b-9a84-46b7-80c8-041b2fd3db10",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd2643-a9b2-4ad7-a0ec-a3d13dfc5cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f14299-1a99-4755-b5e0-45a2b18cc4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7258c476-9835-4669-a1ff-56bd4d8c0324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121be74a-2aca-4806-9b07-ffa15d9e6a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2706aeb5-7325-4743-9742-1fbe79cfb751",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47863e6-bc8f-41e0-b2f8-f74a84050caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552c7184-c9c5-4145-9f03-2b056886b09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3e7e35-68b5-4ddc-976e-100770de7877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb80b447-18fe-4ee0-ac6e-62d069fe12e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec7b0a-c588-44d8-b1af-79853fb4f682",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4db9d2-2f0b-484b-aeb7-daa18e314666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57854b63-3e94-4962-951e-2405f5fff348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072641f6-2b75-4947-9f62-3adb882cdd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b302042-e209-497c-b91d-2e4fbd6988bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2ea9a9-3476-4bc1-a254-d6635de9b286",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a1d29-1c71-43d9-a7a2-0fa0495799d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abf0da7-6373-4c87-82d2-3c7722f1387e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfb6e56-a42b-4bd7-9014-7160e046443b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31e92d8-b3ff-4e34-8932-6a574236d068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f8185-2966-4325-a87b-06da3b09853c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20635c1b-1545-471b-985a-cbbcf82ae6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8520599-e0db-4682-8a02-e7070409de8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c1f4a-7b7c-4c36-81d7-229e7796cc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc252e29-f173-4965-b192-daf144493dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263c1b21-c025-4c15-82dd-5ebaf603c6db",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8de6997-d600-4dd1-87a4-f39e37388a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce2e619-e376-45c5-a7b7-b6750c3e60a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a42e852-ee25-4e0c-96d0-55069d944197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721e922a-2214-4d84-9e90-b185976d5869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fe3496-5442-4e98-898c-303db40aaeff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddacaa8c-034b-44ac-a0e3-e01e20a5f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde2ba3d-cd74-493e-89cd-d8fe2b7cccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c81fabe-7259-499a-ab66-cde53082a521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bd74b8-4092-4c64-a1b9-0619e2be6492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0262bc-8a6c-4efb-8999-dee3ab9edee7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9882486-b167-4ba9-b8da-fcd4657f99e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098eb539-b8bb-4191-b45b-5b6751d9967c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09f88a5-adf8-4b92-aaaa-32f94f289572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eaa2ab-1aa5-46e1-8187-b168156929ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b3a81-008a-4c41-8d70-5caaa3c1fe68",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c42630-e2d6-491d-9e5c-973b35009512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab81926c-02ff-4206-bd64-bf62416de095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd5cb35-56ef-41f7-944a-a14c130beed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd991a13-8dc1-4b79-8e89-7c19bd7a6f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859e7e7f-b298-4354-b1df-b21de3528f78",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8b9000-a166-40ce-a0a6-4ed4bb7752fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f06221b-74c9-4d20-8dbb-8820a34fe6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28f9819-af7e-423b-95e0-3f444f53d337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea714c7-1e8a-4e44-8a87-bd78a8756f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1931a9c-7563-4058-95cd-e3babaf1ae3a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da71ef2c-ca21-4d1b-821e-fa0ca4634a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2246e43-67de-4117-aec1-de6c4d9585fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2657b20-804e-44a3-9ce6-fc99957afb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1815d47e-41d5-4c4e-90f4-58287522f7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b79e6dd-941d-4ff4-bf8f-366fb5ed4bde",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5796c80-1107-489e-b2f2-d2c3a4252a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a91935d-05b3-4db5-b6e3-ff5ea78b7388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2f2a95-db35-4ee6-b916-7dbfc675940c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb8e520-afd0-4345-8177-e838f6245249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93f612a-6887-4d38-90dd-16942abb6e22",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fbfa31-a42c-45b6-9aa6-06270f9ef60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8947dc72-4269-459b-bed8-ce57c3160350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf17ee0-1dd1-4366-a503-d4e10fe5484c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d62652-6272-47b3-9dda-f6168aa7cafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1afefa-9e7b-4d26-a71c-8e4d2516b0d7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302a6a2-f464-417c-834f-c5c8f095fd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1074f4-97d5-4f54-8708-51a28844b699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c8b55-ad5c-4e9e-983a-55fe53c55d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f3f749-05b8-4549-b9fa-377cdca7966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102cf456-d001-4c87-8196-8aa5600bafba",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5c9a6a-c65e-4468-b7c4-07181cc06d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513a44c3-249b-4a2c-b89d-cee7caf61b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4523f9-df17-4837-a98f-5fcd778759ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a86a92-01d6-490b-b9cb-ed9f3e2039a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da09d179-e71b-4d05-8644-4bcdb697fa90",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c1ae3e-be30-4ef3-8d42-8c737f49ee3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ee63d9-5549-40ea-b68b-0c69444eb739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d712b2-80f4-4229-bcd1-8f1397530727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e2dd96-4a54-4fb2-aedd-78d3a9a76fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec85f6c9-dd75-4077-bbce-56b5a4e34261",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82938276-c9f8-4cdd-bba2-225729114989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f0a2ae-8898-44a7-b1ca-aa128b5234c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3764f-c9a0-467c-ac85-99b88efc4e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c0c9b0-48c3-4eae-93a1-f441ba8cbce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2fe284-fcf6-4b39-9335-1c2837fc39fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc57601-0271-4db3-870b-d45cf86129da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209dca87-2ae2-4c55-9d2f-d16a47e1bfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e05d57f-d2f3-4711-8e85-a034a3aec482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4894d71-2918-4966-a0f5-9fb81bad1b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66caef00-fcd6-4ad9-a1d8-c06db550d6e0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e57851-e229-4a80-b372-02212522d9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6591aa1c-4132-4441-8d13-201d4074e65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe5bd4-60fb-409b-b0f0-6bbc3a1e056c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7888e5b-ee99-481b-8276-c660ece1fed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5ac04a-f06f-4fed-96e6-34ebdf54a3a0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbf3bd7-fd4d-4090-a529-5b0596037e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8de4d-fb23-4d65-a4f7-33bd1aedd2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f432eea-2af9-42a6-ae25-ae9d08c6df52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bcdb6e-235c-4c2c-9709-19024768eae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6554c4bf-2880-482b-91aa-1a4c8a6acb31",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fadcae-c3bb-43af-8158-25892d495ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425162bc-e87a-4111-ae21-2bfac1f395b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1189c37-d1ed-4995-bb18-51c464359a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddecb9e-5c47-49ed-89ef-2c896f824098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37db51c7-819d-4418-a081-249e50344d42",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76ccbcf-1811-4f1c-bfd1-b81ec6414ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5434c649-67e8-4cc4-a0b0-7da5d10c84f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5b6bcb-8359-42fa-a73f-d2830ec1e6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a3cef9-5052-42bd-82c6-3ca1a44c4164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6013736-50e1-46ee-beb3-da33f466fa7f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c46bda-da95-4762-a825-66b82792034e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c2a8fe-1772-4907-a74f-a2d6d101f886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f425a23-2f38-4c8e-a981-d4865c69c0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cb70f5-3941-48a0-bade-edff40fbfb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bbd02f-5baf-4fe1-8060-082f227482c6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4f807e-735f-4c2e-9deb-e27430d73837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cd9a47-5e96-4e6d-848b-8bb7b28a73d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82173f96-cda2-4917-885c-f26c175403bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3d796d-7a70-463b-a2b2-768a51e131be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f4d072-c642-42ab-ad70-c23c79008010",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea8e45e-3717-412c-8c38-401479e69f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696c81be-db07-46eb-a8d8-b56e17d7e974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45000634-9271-4f8c-a83d-de679e4c24dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bf1e2a-949d-47a2-a79e-66e7d0ecd08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445d38c3-1a8b-4459-b3d1-06a83fb2bf34",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6b6d9b-3ebd-4d60-bd7d-b24a5ca82fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc73f329-de0a-46ce-bea4-fa7b16990360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1763059-d877-406c-aa46-1cf9df728911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d87e28-1458-4305-8f29-4852f9228c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5ea011-eeaf-411d-931f-b344c70bd6b2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3616ca71-9130-4a07-8d2b-3fc5563e86e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6134e4-6242-4c52-a38b-6e72e3c5edd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b8bc7c-484b-420c-887e-f5aba933ea9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38dffe8e-5371-4c21-8d88-2fa1085b5a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f73e794-f991-4688-9a9d-9d84d11ce507",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c495a-9bce-40e3-9af3-3167d25b2581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea06338-3d8c-403f-8f1f-b58174efc98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ce16d2-d6df-445f-ae05-97081c04eeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5959f40a-a079-492e-a26a-db808a5418cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28c40b-b835-416c-abaf-1dcd6847219a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eba91db-0779-4f41-8572-a0590646d9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc2fbc7-759c-4b1b-9d56-e70a6bef46a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8e0775-313b-4b65-9434-91b0ebf8f559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f73b1e6-bc62-46a8-abc3-506a760d9df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a545344-0320-416c-b0a5-b8a18c6fce96",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8e07a8-a623-44a7-83ad-04d15a90fb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b5a836-2b06-4103-9408-3d8887161132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9686268e-4b21-46a5-b574-b9e593122ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21709fe-6e98-4cad-85ba-e9eba173cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172b0904-991e-4f20-bdad-73578031f456",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62849a30-91e8-4a91-a0f0-f2886f2a5f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e70312-a44f-41b2-b7f0-7949188a5c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec42c221-aeb0-42f3-8f19-974f62be9201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28425025-da03-49b9-923f-57b766a13e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60afd1f-49c3-4043-adc3-596212d1656a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2888e55b-10aa-4990-9eda-47f07959f7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc5ba20-ed8a-48ef-b381-9f785aa76b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c92ee-5521-4ced-806b-6f6661e42194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5d559b-48a7-43fc-9618-1a399c0630aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a633d1f1-d67d-46b7-96dc-9f4dba42a2bf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f108253-f9d4-49ff-a499-22c3e09949f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb8a967-78b9-483e-ae81-e1dd6da25be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37591ccc-bed4-4f28-a41d-1dfebe82fdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a44aa61-e948-41ef-a543-c572fc0e8d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0a8cc7-e81c-4008-ade3-912bac2784a4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fb533c-d437-4701-8774-4906fe0099c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc1611f-e1ab-4480-827e-27687af51f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba097d99-bbfc-474f-8801-ea0c094cd774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b5c38c-12bc-430a-8ffc-8d3a4dccc064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325ab09-60a5-4e50-9d07-a1c06b50441e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ee679f-3da9-4d8f-b74c-ce4a5ad18a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2785424c-85dd-4691-875e-e8615d08c3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960856c7-1d11-4211-8d14-e7a05c423c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eba0397-95fc-4482-b7b2-1a601a18c4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dc6de9-623a-4028-a0c0-0b5cf72ca12e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae089bf-6794-4aaf-b557-6f3f86cf0b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf562c4-6525-40ed-80e0-ec755ec993b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a03c4-cbd8-47d4-b20e-f5651b60032e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bd5698-7ac8-47da-a10d-b5701bc66890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d20e00f-fcd6-41b7-b5e6-e6f77a4dbaf4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80424e4-0a8a-4ef0-a1bf-a0aa666f63a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe21eb1c-3b11-45a5-9188-291a232fd3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd85887f-564e-4273-b405-ba99ab6ac9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ae4678-8ab5-4811-82e4-0fc9bcc25428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcbf8ac-85f4-4e67-8fcb-d3b4bbf48717",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430caa00-781f-400e-8cf6-89a7d16472a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6077778a-e520-4283-a2bf-127b1da70b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c2627a-b826-49c3-83c9-393d22d3499e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6785361d-9755-4b29-87fd-db6d2cebd6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb74676-e631-4c20-a3dc-6d4ceea158d3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42330b9-778b-45dd-9177-6a3bfca812dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e78a350-7a0c-46c7-90ca-116671d61b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdff462-e304-4b05-9e88-d23bbfe388b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0849c54-a48e-46b2-8307-11501a41b755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566cd0fc-3fbf-4f14-a72d-3f7a57513136",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c3cab7-d508-485a-b0fa-add57a2049a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce268e25-56a8-4a70-b86f-7815637d187d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c3cac-9ecb-47c6-94c8-09f42682f96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d65cf18-2bd5-4f79-85de-72958047ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb21fa74-042e-4b8f-8a98-2ec61a18af41",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2046be-187f-43a3-acf9-c31883fb6dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc712509-cd47-48f7-ba90-bd3e7fea9033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18342b7-ec58-4967-ad47-09ccfb5e5b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11920540-bf84-4ed1-9043-474c54ed4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94982467-5baf-437d-a958-46e8d792206b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9cdcbf-fd71-48d4-bdd5-eada132d40fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0bd66b-ac52-4dd6-89a0-141fbb7e6ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df262ce4-4763-4d66-af9b-c51e3d7abc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a1d4ab-8741-4a31-97ad-6c13931754b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a13dc6-7422-4883-ac22-5afff031a579",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7158ed-32ef-41c7-bb85-08c5aa38a274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c20f94-462e-4ef1-affa-d2749e29c1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276ee61-a646-4a92-9ede-d5abad8e3e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6d2300-7957-47d8-8d9b-e2e019dda2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff401827-09b1-4a45-be67-35c8f177ce50",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9afa996-ce0a-43ed-acee-d7133f0d7f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0919a89-f276-44d0-a0e5-ea96802f7ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7070a6-90d4-4758-82f4-235e93c65b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc51a87-7ab9-4533-88ae-c04ddf054710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de304b-2c74-4b8d-9d83-50a1024ffffb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc91cd6-b4cd-4ffe-b2ce-81904462aa11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087867d7-0a59-47dd-98d5-087eb4bd195d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c483fd99-84ea-4be2-9524-730dbabafe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9a324c-3066-41ee-a848-43d7778e75e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8144d2-1aa7-4aae-ad7a-0335f739ab66",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbadcc5-c234-433d-859b-1ea30243bd34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655180ec-9898-454a-97c1-c1ea8544c2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bea27a-cd39-43fe-97db-9ea31a09411d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e35bf13-26c8-4628-bacc-72eee6cb519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6110c9-f76e-4152-90c0-8b4cf012fd9f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aecff82-5634-445f-8fbf-882f358f8f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3e9625-e5d9-4bbe-9d50-d84fc9c820ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1780a61-aa52-4aa7-ad4b-8d5e5e11ca21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049cdf50-ff41-41ea-8a1e-75548932ed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f415df-9d3a-475c-963e-f65d6e8fc1ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e24135-032a-4c89-ae30-b3df1b9461ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e09e12-d5b8-4abe-8586-6fc9cdd589e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8034a38f-05c8-4d3e-8eda-026bb55633aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09006b0b-5afa-424a-beaa-c929c5b1d0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15416b85-4323-45f4-8cc7-c2ba055cafb6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff8e6aa-0de3-45be-93c5-37e747ed71c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebaa4d41-a0ed-4201-9a11-df4d747492ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f71870-e1be-4787-a808-7656942f438e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eafef9c-ab02-473b-ad38-3c5ede410d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddbf2d9-b682-423b-bb54-e37027ed90a8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a34466e-3585-4dc1-bc80-88259ee866f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b8c2ba-5a64-445c-9e16-8cc12e5edfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b74b85b-f4cd-426b-a1f7-4dbfc51cf191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c321294-cd62-45a5-8da8-0a8eb38163e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9ac298-0137-481f-a3b0-f4de0c8195ec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e485a-20ff-4ee5-a388-31d0eb946699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077c94d3-a24d-4d04-847d-22076d35567b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d84e2d-96fe-4b4b-b157-746ead94cbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc745f5b-d3d8-4793-92a0-367929695c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dca045-304f-4237-b0e8-00676871b332",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cdab58-0fe2-48c8-bf7c-bd562bcb32df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f25edf5-607b-478c-bb67-012157de6f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b184e45-b98a-4bcf-8576-0af27fbb74a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b7994f-c60a-4872-8a37-725ddd29be13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e303e0-28c3-4888-9cb5-321e9a6343d8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db6bd05-ca97-485e-97e3-2783970c8c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17244332-fcd8-47ee-9117-4ddeefff7c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0090de94-30ac-480e-ad23-0293e6e26dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2991a190-75fc-4abb-bf2c-32e85f88f644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2415adb2-2f11-4968-ab39-fe19d1c49a68",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fdf99d-7ba0-46b6-be44-11483824882e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e4522e-ce99-4954-979d-8612f232a565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d1acc-86cf-480c-875f-5afb3e5b5f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d950524-f159-495f-9ac0-9189539dfce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e8b5ef-8ed3-45fa-97fc-afd577338345",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b77c4-9627-41b5-919e-1a82705553fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d43802-6eeb-44d4-b98c-100c867eaff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab3918f-f5bf-4547-a494-5f64bfb08d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7457802-bf42-47f6-a6a0-d3afabed09a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2180d3b-5325-4c49-90f2-83ca38f76938",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43db3e6-8e4e-4d73-a9a3-ad4c13bd31be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b271edf3-582b-45c9-b6f9-e51eebc9cb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f13bdf-5cc9-4969-b90a-d5a96f61eb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39c58a6-9f24-423d-94dd-79276421514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478dc3ea-fccc-4e90-a52c-7e16a05df142",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e3fa8-ee92-4ea4-ae6a-a52860969903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17b2fc1-4967-462a-bf66-2013294d47f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc32749-c54c-45f5-9ce9-1e91ca3f64aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737b256b-d3ad-4fdd-86aa-26c1e4e93318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fe6892-c936-403c-a8da-f1991e6cc02c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba08776-0d83-46c2-ac4c-5b731ebfe09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332ef99f-b29c-4d60-a129-316f8a0acb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17817b11-0f77-49ff-9efb-37af0743a575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35893455-6543-439f-8802-6612870433bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abb9c48-88f9-4df3-95a6-fdb025df50b8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bde9ee-2800-4145-8f91-337bfa2b6a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65db9578-c324-476f-9728-421d0a37720e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1489f9aa-ae03-4650-9e43-af8c16d5c86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66d2967-6e86-43fc-8dde-ef98019f7e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ac3de9-55d9-4a3c-940a-84da47563707",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39486234-086d-4444-a17a-682c3c188cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86efc6ae-e7ba-48bd-9858-8a18e3aa7ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c443b1b5-1785-47d3-92c0-4a491e449512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc46675-257d-4e03-8f98-24a08540a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1c8506-838a-4226-a50d-f3b4242c7d98",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47302a5-5d91-4c43-b6e2-f360e258aa8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7342148-46bb-49d2-834d-9a44738e5b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298d482c-6c41-4bea-a47e-53f09248d6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06aa381e-3415-4ddc-8722-a7af24405108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd03bf4-b9fe-4567-a60c-2899a36a8347",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014d6e1a-3a0b-4a4e-8ab3-de9b3c14faf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c390c3df-4b27-4419-94c4-6cd39509eeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc0cd52-7efe-4835-b822-286a0a165443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f554f689-8cf0-4ed5-ac8f-313044c3f391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df4fea8-be6c-462b-98bf-3c37a4a562a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af8f065-269f-4db4-af0f-34e538bdb2b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8d06e16-b1eb-4721-924b-64efab0e010b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582ce8a3-0058-4d5c-81ad-e1bed1f89337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14ecb5b-2de5-43a1-b617-362525f898be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ce0db-e628-4d72-9341-56b81013fcfb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923b6c7e-afac-4bbc-915a-ea135ed29d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f2c083-45c3-40b5-9247-a33bb2e800e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db445ca-7b02-43ed-9ab0-7829bf4ace58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1da7c7-d7a0-44bd-85ee-cc4e5d5db331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c45e57-91f9-4706-b77d-c495a5869f3e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c28a2-d58b-4634-bac0-83c5632e22f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8307fc-9d35-4a64-ab2b-e8373df922d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5b8864-65e1-4f19-a1f3-79676a4789d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4e4ecf-6986-496f-95d3-1ed99cf6b748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cebee97-2d8d-48da-9b32-316ded5e5d26",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081933ff-e093-446e-8b83-4cdd7517f7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a82c25-8d3e-454f-a908-4271e3ebcadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603aa4d3-39fd-4aaf-a771-f67abf2c4924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d55d58-b7f4-479d-849d-c21823c7b6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5dee9-95e0-45c8-b19f-adb0e40e334e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd80cdf-b8d9-47ca-a48f-e2e97251a40a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e74ea5-d702-4803-a6cd-57a5a78178cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc82b32-c7c7-4330-87d6-f54605cd6c21",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126f888c-c9ff-402e-892f-8c281465859b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286a0c8c-3dd9-4b26-b543-09a4a2f94fee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b446f956-4143-421f-9fd8-2c049db3d54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f812a6-7d8c-48a4-afc5-94b527980c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008bebf9-ee16-4d83-846b-784009ea57ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6185597e-4923-4d47-8543-cf8ac39b63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9864721-d20e-4541-bf4b-dde70a769830",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6789528e-e599-4a46-b32a-215a4e0a62b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a308e9b-13e8-41aa-a37d-3c348fb5bcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf110b61-00a9-4413-bee1-0ba53e94b8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a19bfe-a945-4e00-a790-f806f80a9538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1905e10e-df3a-4538-a24d-f4ef253fe46b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f302a4-a48b-4aa4-9bed-64a4190545f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe35b8bd-2b4d-4190-a932-485f95abed87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0c17c2-4cfe-4eb5-b909-9142fdb451c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0905a8-071a-4dda-a897-9ff5035c900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97300af-25d9-4753-85e6-8ea77628ddb7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524390e-f328-4885-a1e4-d84780c49328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302db53f-312a-4a8e-95e9-48a00c001367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a129dc69-b148-4a3d-88ea-ac24e48ce7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971e0e84-6c75-4713-8ec1-b775b0a36022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268dbf7-69c8-47eb-abe6-c92254751d68",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29910a2e-2b39-4bb7-a275-30e5d4775566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4010c962-565e-4108-a9e5-be9f71dfcfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5ce8ad-21be-4c97-a1c7-d4fa44d4b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc8134b-7881-43f2-a1e1-823623b7cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615ffde1-206a-43dc-9aed-7578a268f357",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070a13a8-1d15-4435-aa18-772cf9d7f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea229fa-e295-4d43-9f08-5afed8492c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0250e07f-041c-452c-a132-98d2f9427ec3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18186503-eab1-41c6-bb6e-bfe714b4807d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84321985-a3a2-42cb-9824-76153bc64d41",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2992a503-7e90-4d93-9703-7ce2b04bf32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634edfd4-8498-47a0-9a09-b2aa1cadfa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2778be-2108-460c-8cd0-0bc9c5c3041d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785a14ef-bf8a-4076-bb56-d0dd46bf8f75"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "450de5d5-15cc-4aec-a99f-c4791893c347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e29dfc-0819-4432-b010-2afa304a552c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4f51358-befa-40ac-b624-8e3d5f557782",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52f62559-a217-49dd-a79a-608ced6f289c"
                    }
                  }
                ]
              },
              {
                "id": "3eb59243-42b9-4dc5-814f-16f6c1824a41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10f3a756-a5fa-4f11-9118-7c913628a984",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4e9679-2eb6-4fe6-955f-5ed7d7ecc08c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e144e0f-9210-490c-bcdb-99b0f5c79356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1991a1bf-0a4f-48d4-b49c-c46d8ae320ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "834dbab8-da81-45fc-ae9b-325e9812a37a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2920b644-4db5-418c-9963-53f0d0d133fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f59d914b-ea0d-4a93-ad3b-1cc46614a0b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da0181ee-ee6a-4e6b-9f29-12852dfaebe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddeade79-3393-40e5-b324-31a55cd0851a"
                    }
                  }
                ]
              },
              {
                "id": "192e81ba-1b2f-4bc0-b987-c09d824ce81e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "24770604-ada9-466a-a35d-aa38d84199e2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5a514a-8669-4d59-a6fa-ebcb268ae347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "812c050e-dfd5-4d4a-a1c4-3ed3eb4b4492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00805ce1-e494-4d16-b204-0316c2b3b161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba99c64-7895-4e63-8e98-d15fdc53aa18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2a432153-55dc-47f7-be57-098d1b8a41c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd51c749-4c86-4960-bdac-3bdca0bf36c2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b24a1774-5267-4928-9d03-f530180f1215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac97940c-3332-45b0-90b1-f849cba8e8d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f802954b-4fee-4c13-9637-606186f26fee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6ca962-9062-4c8e-a821-8ca30c2d5fbb"
                    }
                  }
                ]
              },
              {
                "id": "39145ebe-f56c-4c22-98ac-d63f3c308e31",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44332e1d-658c-48da-9af1-e7f74be5abbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12ea0aac-c0cc-44a4-aee3-ca9326938267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46c434a1-89ba-4355-bf4a-a820f68613de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f5c8e5c-4f9b-459e-9d03-e8753b75dfd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bc1fa06-efca-42a7-9a2c-e6f4d08e5b30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3abe8191-a208-4159-8cd0-512a69f8aff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3cd0165-54fa-4de5-a7a8-62269bf1cdae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "897f5c47-aedf-49f0-9fa0-c140efe063bb"
            }
          }
        ]
      },
      {
        "id": "701c265a-6f67-4c11-82e5-7967abb8ef1a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c341396-27ec-46ad-9ba8-4b0b4f0fa241",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a85daf92-b6d9-4980-b2db-5d74b3eafca8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8677c6b1-dc81-4cfc-b2f7-5437e8464373",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6b8ca2-7c6e-402a-94e0-8b0b5757ba92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6dcf2ec8-1233-4823-83c0-7624bcaeacb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2727a3-89c8-408f-877f-5105de230b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "543dafa0-bd7d-4355-a1e3-64fd373fafb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7cdc914-4aea-4e9a-8c65-2814d3ddb7f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90a6a158-00aa-4db4-bac5-09e824385638"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27ae51b0-2fab-4a61-9cac-1b54fe171322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "686af424-97ea-4d85-8378-3a2c1452c5ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fe2608e-04f8-4267-8d64-1145821d544b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4bac163d-3312-4f01-bbe8-87a3d7cff222"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f74ced36-311b-4f85-adfa-a115cfd7c6e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "366c8d08-04a0-40f2-b355-b1ef05b5612d"
            }
          }
        ]
      },
      {
        "id": "96965c6d-0620-4c31-b81b-2bdd15eff942",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d6107b20-4d40-4906-afd2-0c7faa118798",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33af7a81-ee11-4ef6-ad34-dca4adce5036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1111f95-1797-45d1-a9dc-f9e6638f241d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afffd861-ec85-41bc-a8c9-3ea82e0cfa2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2329d8f8-37e5-4512-8840-baabf96daeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb2126-8b0f-4838-937e-eb7ba430cc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10ce8e04-3385-4165-824c-abf34237adf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33945e6a-eb3e-4bb5-9ba3-63d52a870714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82923185-9b16-4301-808b-47b6030e6675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87845285-c8a3-4c2d-b98d-b7abf9c1d06c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "966274d0-328c-4e65-921b-a6f2802c3eaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd5b267-3cfa-49fa-853b-b1eaeacb385e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79e3bd7f-2d18-46e9-ac3b-2eb7e809bb62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "015d97c4-921d-4449-b969-27bce9e9739c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "133e6a12-9bfb-4daa-b95c-505c9394877f"
            }
          }
        ]
      },
      {
        "id": "6977f6fa-d0f6-40d4-b83f-c7d837572423",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3f7514c4-94c9-4693-bb3a-ef0b29dc3399",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6df4caf8-fb14-442d-b236-ae664bd721a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "849235f1-53a7-4df8-b199-9d70b2300fce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e929d2-e481-42ec-a3df-10b7349b3fa1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eda3d0e-5430-413b-8870-0235fb402747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704cec56-670b-4587-bc4a-9429bd501f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa14ddbc-1ac5-4b74-a71a-604a2525a771"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e55ad674-eef6-4671-ba5a-723c9c970313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c955fca8-a725-4016-bab6-0265d4e34e3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70fb09df-55e6-4186-a5f4-d5c4fbfddb4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ab26bc6-e086-4d87-b507-93c5227bb64c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df928821-35e4-4e0f-b5d0-dd4187d9830b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f4ddbbf-e16e-4fe6-a916-8294585f0b6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62f8b576-2be0-46c8-8e9d-64b066f2d079",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94aa5394-00b7-4d71-ac9a-530a22348f55"
            }
          }
        ]
      },
      {
        "id": "dadba1ba-1656-4d02-bbc0-3b09ba0a21d9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4b4b9ae-29af-4836-967c-99ee6b35798d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06eab111-4731-4dd9-8a8c-3afb2ed4b897",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4804f2f1-557f-45ce-9936-1081670d4e9b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70597b62-5111-43d8-883f-438160d6fed8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d37b17b-7d7f-4058-8b1c-011c8b49ca47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.50877192982453,
      "responseMin": 8,
      "responseMax": 462,
      "responseSd": 33.06374640844595,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699576469466,
      "completed": 1699576505339
    },
    "executions": [
      {
        "id": "335eea6b-20d1-4fa3-8ba3-3b5b0151832a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5ce058c8-e267-479f-b2e0-365a6c24688e",
          "httpRequestId": "e26bb7da-07ed-4fea-83d9-6462abeee6c1"
        },
        "item": {
          "id": "335eea6b-20d1-4fa3-8ba3-3b5b0151832a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9e15fe03-f5e4-4d1f-812d-cf9d244cc902",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "2c570284-6623-45cf-a305-66c8ed0d80c6",
        "cursor": {
          "ref": "2f045e46-92c0-495e-8948-29d5f9eb216d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "14fad1fd-cd12-4b0c-b356-15c7e21cf21b"
        },
        "item": {
          "id": "2c570284-6623-45cf-a305-66c8ed0d80c6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4488816d-4131-4a47-8f58-5fa20ba63609",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "42dec9d5-4b71-4908-a5bd-697de8244b2d",
        "cursor": {
          "ref": "22999370-83a6-4a76-8275-3478d176eb52",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87ac706c-19a8-42a3-8607-0f37579de269"
        },
        "item": {
          "id": "42dec9d5-4b71-4908-a5bd-697de8244b2d",
          "name": "did_json"
        },
        "response": {
          "id": "14413cff-a492-4d70-8e4b-7a8a05d84336",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd0d993-afe6-4f43-964e-72621e4c7f2d",
        "cursor": {
          "ref": "d834d5db-9426-4278-a9da-c51ef71b0639",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80fa7b75-f363-4d0e-8539-9f4cc6c20eca"
        },
        "item": {
          "id": "5bd0d993-afe6-4f43-964e-72621e4c7f2d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1785646-1106-4f4d-a522-f3a6bfb1fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd0d993-afe6-4f43-964e-72621e4c7f2d",
        "cursor": {
          "ref": "d834d5db-9426-4278-a9da-c51ef71b0639",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80fa7b75-f363-4d0e-8539-9f4cc6c20eca"
        },
        "item": {
          "id": "5bd0d993-afe6-4f43-964e-72621e4c7f2d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1785646-1106-4f4d-a522-f3a6bfb1fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682839f8-47b9-4ab3-b374-b4210cc41156",
        "cursor": {
          "ref": "7f35e5d2-632f-4e47-9160-1296cded758c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ef45848b-c535-4ada-baa9-22b4da6ef8f6"
        },
        "item": {
          "id": "682839f8-47b9-4ab3-b374-b4210cc41156",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6849dfab-c898-45ae-948a-0ec53c7039db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91645ca6-19cd-4082-88b4-291a53b0770e",
        "cursor": {
          "ref": "75398e6e-af07-4f0c-a222-a428970f723b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "edd40a1e-2299-4efd-852a-9f17f97a7e75"
        },
        "item": {
          "id": "91645ca6-19cd-4082-88b4-291a53b0770e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43366b84-d7c7-4a0d-8a33-d4267204c118",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca74480e-e491-4d6e-b824-2ce7352ef0d6",
        "cursor": {
          "ref": "e518aff7-2bc1-4146-bedc-8c62e5c60066",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "deaa7f4c-96c3-4d44-8fc8-9e0f3b76f283"
        },
        "item": {
          "id": "ca74480e-e491-4d6e-b824-2ce7352ef0d6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "13d8ffc3-40b4-45c3-a734-2ed55bd34333",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8dec1-43ae-43e1-bcfd-07075e3797ae",
        "cursor": {
          "ref": "6ffdffc0-842a-4493-bbb5-5c854d260545",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f1b8f70a-104c-4c18-a41f-968a55ecd9eb"
        },
        "item": {
          "id": "2ab8dec1-43ae-43e1-bcfd-07075e3797ae",
          "name": "identifiers"
        },
        "response": {
          "id": "58e2c78b-97c6-4181-a1b6-b2986ea17af4",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88917a80-dbb8-42ba-b08a-2e93419bd186",
        "cursor": {
          "ref": "9812ae6c-0717-4ac2-91d9-64b6147f1dc7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c8490b61-1851-41b6-a942-fa5691f7eaf7"
        },
        "item": {
          "id": "88917a80-dbb8-42ba-b08a-2e93419bd186",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6046df82-4539-41bd-9f6a-373525391d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e95767e-61b5-4498-bed1-140987529a1a",
        "cursor": {
          "ref": "70f548c8-da72-4166-b312-22eb460e386c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8bda653d-417d-4b7a-bd81-877df82a10ee"
        },
        "item": {
          "id": "2e95767e-61b5-4498-bed1-140987529a1a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8c4d97a0-c2e0-4c37-bf86-d095150e0317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6415b7c3-1af4-4ef2-bef1-cc6028150bd7",
        "cursor": {
          "ref": "e2018719-22d8-49d8-b8af-7ef7b7745f62",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b71c2853-f649-4001-8ff0-4b18f70effab"
        },
        "item": {
          "id": "6415b7c3-1af4-4ef2-bef1-cc6028150bd7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "84ba1e26-a2c2-4125-b42a-1ae798326135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc37d2c9-f8eb-454f-b5f2-2eca14ba8a86",
        "cursor": {
          "ref": "372f4bca-fae3-4a4b-bc85-ffe6c33ebdd6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "55f9b423-39a7-4ff2-8388-46a68cd777d9"
        },
        "item": {
          "id": "cc37d2c9-f8eb-454f-b5f2-2eca14ba8a86",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7e4021a-5bef-4dda-95e0-bf63b4b93b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c66e4a-ae17-4974-85e3-7a9b848dba35",
        "cursor": {
          "ref": "cc3cd05c-1edb-4e7a-9907-122622e6dccb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d8f84a97-f681-43fc-bd00-701f8aad1af6"
        },
        "item": {
          "id": "19c66e4a-ae17-4974-85e3-7a9b848dba35",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "98361ad4-df2e-4bbb-aa9d-8bc7bce2ded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a0bf0-d76a-4638-aec4-4eef59f7bfd4",
        "cursor": {
          "ref": "a0d22a65-101f-44fd-9b85-5cc8c7779031",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1c59fc12-c59b-47f6-98a3-2a05a395fefb"
        },
        "item": {
          "id": "d93a0bf0-d76a-4638-aec4-4eef59f7bfd4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af129653-359d-4de9-9285-5ae69a068be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6681688d-b892-48d0-9886-bc70a4d2e319",
        "cursor": {
          "ref": "a36e34b1-3b90-4f76-9152-1c2db162dfee",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88c702a3-0de2-4bc9-a150-d25483fd9718"
        },
        "item": {
          "id": "6681688d-b892-48d0-9886-bc70a4d2e319",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c9e03771-2f4f-4a9e-b419-74ecd2dd5f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc21f128-3c80-4721-b1fc-abd31d4140b8",
        "cursor": {
          "ref": "80a786b0-d836-4774-92b3-cc579b6244d0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f00753b1-6ccd-4731-9a13-f8b8935c9e19"
        },
        "item": {
          "id": "cc21f128-3c80-4721-b1fc-abd31d4140b8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "59ae6972-6349-49da-acca-90eb539d497b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73dcab-fdcf-42a6-88fc-a8a9e4f0313b",
        "cursor": {
          "ref": "ef9a1d30-d5e8-42c7-bbf3-3ecf0f2d992d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8fdddeb1-40fc-47b0-ad02-a2d8136a926d"
        },
        "item": {
          "id": "ca73dcab-fdcf-42a6-88fc-a8a9e4f0313b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c79b7454-e73f-4e85-8f3a-baba2476e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6ef568-d817-451e-bec9-efc74ead6ef6",
        "cursor": {
          "ref": "af73c122-5089-44e3-bc76-4d51302a6d49",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f14ae6e-8941-4b3e-b221-ff9824d953d7"
        },
        "item": {
          "id": "ef6ef568-d817-451e-bec9-efc74ead6ef6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "98584c3a-4d4f-4188-9106-039c581cbbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76b953b-afbe-40ce-b4b2-47e32f26c38d",
        "cursor": {
          "ref": "0401a29c-5767-4f9e-84cc-0ff59ce86393",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "af1fba74-7682-4ed4-877a-da5f97ae7437"
        },
        "item": {
          "id": "b76b953b-afbe-40ce-b4b2-47e32f26c38d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1caa6e00-e19c-46ba-b255-e77f114cc19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3765fed9-133f-4fe1-9b78-584765d013f5",
        "cursor": {
          "ref": "abab5333-c85c-4b1c-9462-769f8937fa68",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c62d19f-72a8-40e5-8291-c8b1c0b7993b"
        },
        "item": {
          "id": "3765fed9-133f-4fe1-9b78-584765d013f5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fb0303bd-c49b-4399-9da1-1b5e61a20e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1fe8d5-19ff-489f-ae0e-0c6a512a148f",
        "cursor": {
          "ref": "81d99118-9bd7-4671-8c42-7176790295fb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "090de9e6-ac0d-4ef7-8702-9350ed2117be"
        },
        "item": {
          "id": "5f1fe8d5-19ff-489f-ae0e-0c6a512a148f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "86a83c39-e035-437b-8d25-1b7ade92aa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e88c80-31c8-4865-83f3-b48c16641aa1",
        "cursor": {
          "ref": "8b4d858f-25c2-4b0b-a489-671a116aa414",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f4b8f9a2-bb8e-42ff-9b66-24b5a49d02ab"
        },
        "item": {
          "id": "c5e88c80-31c8-4865-83f3-b48c16641aa1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c6f3f6b4-be48-4c62-9111-215e2ac053da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaab7aa5-89f2-402b-94ef-22a90ac44bff",
        "cursor": {
          "ref": "8a83498c-f2bf-4ff4-a3cb-373b9dfd056e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de36cf80-0474-463f-9b9e-d148888b9a5c"
        },
        "item": {
          "id": "eaab7aa5-89f2-402b-94ef-22a90ac44bff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2ffc64b1-d4ab-4276-80d6-2205aa5d2d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fab9d35-911c-4fda-874e-339e10034db7",
        "cursor": {
          "ref": "ea6e9b50-24ff-40de-9d8d-de4b7fd65953",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d77c8f1d-4063-4b0e-aa50-0a4d0334f46f"
        },
        "item": {
          "id": "4fab9d35-911c-4fda-874e-339e10034db7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8059e901-7dd2-49e6-9e4a-53e29b4b0c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b84c932-6aba-4ed3-b719-80b888bcba14",
        "cursor": {
          "ref": "44867f31-6237-4315-942b-59f1cbeeb653",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d7be7aba-7af1-4563-93ab-272317fb82e6"
        },
        "item": {
          "id": "8b84c932-6aba-4ed3-b719-80b888bcba14",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7614db38-6376-40f4-b837-6267d17caeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc09bc95-6b15-41c0-b80e-68bb368492d4",
        "cursor": {
          "ref": "6d0b2d35-9393-4b25-94a1-1cf58e61ebaf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "79fff37e-0f97-44d2-863a-3cb300a9b007"
        },
        "item": {
          "id": "cc09bc95-6b15-41c0-b80e-68bb368492d4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe0342ac-b9d1-4b27-8abb-5ae83757d8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54be62e4-18f4-4029-8e2d-c30e2daf9255",
        "cursor": {
          "ref": "62622f43-55d0-44c4-82fe-9b235bafb08b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a181617-a445-43e9-ac24-b6b446e3e676"
        },
        "item": {
          "id": "54be62e4-18f4-4029-8e2d-c30e2daf9255",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5d0e972f-c76c-4154-9d8b-2eca75f21e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b0ee84-7919-4cfa-9085-4a8c94b9c3fc",
        "cursor": {
          "ref": "14c26a7d-0dc4-4993-96d9-f4ac462c4bbf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c5e595f7-9702-452c-86bc-3c0ba838d194"
        },
        "item": {
          "id": "c0b0ee84-7919-4cfa-9085-4a8c94b9c3fc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eb1e1939-250a-4c4d-8392-6b4ba188be59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7007b3a-f9bc-452e-a33f-e0b731d19ebf",
        "cursor": {
          "ref": "b9b91230-0938-4a7e-b0ad-a23b0ce8d8e1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e78b12a7-5b76-44bf-ae92-8cf3f6f3226b"
        },
        "item": {
          "id": "c7007b3a-f9bc-452e-a33f-e0b731d19ebf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bc3f62de-7857-4126-9ad2-863337fe7678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c05b8f8-bf38-49c6-9336-19d020cf2338",
        "cursor": {
          "ref": "68508a82-197d-4dfd-a5b1-5787d7a668c6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4fa90224-0394-44e4-beb3-f134a4fd1e3b"
        },
        "item": {
          "id": "9c05b8f8-bf38-49c6-9336-19d020cf2338",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bd14d1bd-57bf-45b1-96a9-b517a4c2607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46355aff-37da-4fd5-b48c-d79a203b993d",
        "cursor": {
          "ref": "0e4a0a27-b729-4aed-801f-b79b93691e78",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1e6c1d1-e65e-454d-b56c-17c17f27e8b1"
        },
        "item": {
          "id": "46355aff-37da-4fd5-b48c-d79a203b993d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d6c7758f-8863-456a-93b2-91e4e6987700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd00b45b-f03b-46db-8c83-2f2441716cd4",
        "cursor": {
          "ref": "0f3dced7-16d7-464a-a463-8e25aab6dd4f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6037011d-7107-49dd-b7ff-02934c75fe2e"
        },
        "item": {
          "id": "fd00b45b-f03b-46db-8c83-2f2441716cd4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "234f66b2-ee5d-4e24-a74f-49c6a5d89602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9703a93-5147-43c8-968e-b6241ab7627a",
        "cursor": {
          "ref": "b62163b5-27f5-4d2c-afb9-0fcbab77bb52",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7d27d3f4-2bfa-4a3b-b583-c00da70b204c"
        },
        "item": {
          "id": "f9703a93-5147-43c8-968e-b6241ab7627a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f1411edd-3e6e-4d3e-9e03-e1d15220d4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ff845b-ed60-424e-b5fd-025b2b131efe",
        "cursor": {
          "ref": "9bfb3386-3a4e-42d0-a7f9-7b062b8c3a8d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "22dca0bc-d454-4fe4-900e-c244315ca9a5"
        },
        "item": {
          "id": "19ff845b-ed60-424e-b5fd-025b2b131efe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0091d7af-2729-44f5-a61e-d609b6f998aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee703d0b-9cc3-4c51-819a-8b76c7556ee3",
        "cursor": {
          "ref": "e3b0872a-8926-4681-8c99-2903171772a2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "157c3c49-7f22-4d55-9038-6aa9244f280b"
        },
        "item": {
          "id": "ee703d0b-9cc3-4c51-819a-8b76c7556ee3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2889dd95-ed75-46bf-a881-8a787068ba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5355b45e-3a00-4eed-b987-585829b3045c",
        "cursor": {
          "ref": "7558ccd3-e7f7-4cf1-a2a0-c6fca1d28a24",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5bc03e0-ac9b-427a-9e67-78f3291dcd1c"
        },
        "item": {
          "id": "5355b45e-3a00-4eed-b987-585829b3045c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d984582f-5709-4da4-8f53-73f5e5d48e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b4eec3-9a87-416e-a14c-12a2f0f9af1c",
        "cursor": {
          "ref": "05c3673d-fc7b-4b05-806a-aa21ba65a518",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d5eed330-1c80-4898-bff5-dfd4d1bbb8f4"
        },
        "item": {
          "id": "19b4eec3-9a87-416e-a14c-12a2f0f9af1c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ae166a99-1d01-4d21-ad45-d531ca6294b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1203c1f8-6513-4c6f-8fa5-2d3757950303",
        "cursor": {
          "ref": "e833830e-859f-4f8c-a5e1-1434e09acc24",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "23fd240d-d209-441a-99f7-54ae78a36e28"
        },
        "item": {
          "id": "1203c1f8-6513-4c6f-8fa5-2d3757950303",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6543b833-9072-4e0b-bb2e-dada7c38cd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a309be9b-face-4a7d-9ad6-5b3ccc7a45d4",
        "cursor": {
          "ref": "b761ac62-f2f0-4788-acb7-9ea49a4ceafc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ff16c1c-98de-4725-a4f7-5f9fb62425ff"
        },
        "item": {
          "id": "a309be9b-face-4a7d-9ad6-5b3ccc7a45d4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0f7a480b-e9d6-42c3-9845-d4716f236e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3066d0-c2aa-4a4d-82df-a17d704f191d",
        "cursor": {
          "ref": "37f1cd48-d19e-452e-a9e5-bc11f84c84cd",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "08a3ec9c-1f72-451e-a8ab-b8d13f968c21"
        },
        "item": {
          "id": "3f3066d0-c2aa-4a4d-82df-a17d704f191d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "684b6caa-8e09-4370-b0a5-456cffe12f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af4ce2b-0ace-482c-9636-654dfa25bb20",
        "cursor": {
          "ref": "163a2af5-eae5-48bd-a453-f44596bdc3e4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b23d4598-590c-413b-95c3-9ecdb6404cbe"
        },
        "item": {
          "id": "5af4ce2b-0ace-482c-9636-654dfa25bb20",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cb871f81-60e3-4103-abd9-13f13c88c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad7c15e-d779-4668-90cd-ea37ac182b39",
        "cursor": {
          "ref": "af580730-26cc-4105-b810-b47774c9d3df",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33c3c68e-836a-496f-9861-764fca8af3fc"
        },
        "item": {
          "id": "4ad7c15e-d779-4668-90cd-ea37ac182b39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "714728e8-9076-42e5-b377-9c1f79c0ba52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e378800e-720c-4084-99d6-5f95e916f07d",
        "cursor": {
          "ref": "ea72fc38-9e89-40d8-856f-5657c0cb9b94",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "77df50aa-eab6-4c1e-a38f-b09e4cdcdfb6"
        },
        "item": {
          "id": "e378800e-720c-4084-99d6-5f95e916f07d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2c403873-467b-48c0-ab34-5c9ed4e65ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884aca27-5d51-409a-b037-66894979441e",
        "cursor": {
          "ref": "d8075e24-2d9f-45fd-8b80-ed7bb5260671",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c554b8ae-498a-4601-9107-0342d5a742af"
        },
        "item": {
          "id": "884aca27-5d51-409a-b037-66894979441e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8985e3f6-b2e0-4432-b223-30e22db7cf5b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350c66c7-a2ac-43d5-8168-66ad861612dc",
        "cursor": {
          "ref": "4a78a634-157e-46c6-8d8a-1c751f69eb3e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4427675-35c3-4be5-9505-a35649ad3239"
        },
        "item": {
          "id": "350c66c7-a2ac-43d5-8168-66ad861612dc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0fc6877-f9ae-4bf1-a00f-54c74fc19e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb11988f-be33-4318-b023-9c33516a6738",
        "cursor": {
          "ref": "f12849ec-dae4-4317-9833-a74fc431178c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "38149c69-cc25-46d0-9168-f78eb282e161"
        },
        "item": {
          "id": "eb11988f-be33-4318-b023-9c33516a6738",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f9b5422f-317f-41b8-8d66-c38237d90748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507da3f9-bb24-44db-9073-0307102e782a",
        "cursor": {
          "ref": "7f946c14-ee9d-4630-a799-dfea0b8d332b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8c794de4-b3ce-4987-b4ef-58bf83ebc69f"
        },
        "item": {
          "id": "507da3f9-bb24-44db-9073-0307102e782a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "41f69bc4-e690-4435-a4c7-81f71b3373df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28385b08-e7b2-4dbb-8196-92f296b1e66f",
        "cursor": {
          "ref": "8200101a-b2fd-43a5-aba8-f39596aa9799",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "27e1b6ba-2600-4e9d-bdf2-9fc3bf7c3445"
        },
        "item": {
          "id": "28385b08-e7b2-4dbb-8196-92f296b1e66f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d30fe85-9a50-4c03-8179-53056fcb2b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eb49b9-20d1-4375-81ed-d823aa237f6b",
        "cursor": {
          "ref": "ee670f12-9df8-41c4-aa47-8e8fe00fc90c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b98d0b3d-bc4c-47f4-a274-de6dfcf5f20b"
        },
        "item": {
          "id": "f6eb49b9-20d1-4375-81ed-d823aa237f6b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e7c05acd-433f-49a2-8aac-ff24d7847e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b48483-03bc-43e1-a37d-6f94499235cc",
        "cursor": {
          "ref": "756fa4b6-3ae7-459d-8054-1753446a5c36",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b3200d31-f22c-4f58-80f7-56844bb9ff20"
        },
        "item": {
          "id": "11b48483-03bc-43e1-a37d-6f94499235cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9040772d-bb72-46ad-b48b-6b7f36504e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab90b6e-07b6-4116-ad43-5be829e37dcf",
        "cursor": {
          "ref": "624a22ee-fc3a-4c44-83bd-c845758596e9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a52afd5d-beb9-4432-9727-b1315087217b"
        },
        "item": {
          "id": "aab90b6e-07b6-4116-ad43-5be829e37dcf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "67461907-f7d8-452c-823a-d84d218b8310",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a55ad-7291-4979-80c0-0ec688196f85",
        "cursor": {
          "ref": "09796ccc-1e59-4d84-8834-3058aaa2bde4",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cc3c99fc-2a59-439a-b9af-607c86872439"
        },
        "item": {
          "id": "2b2a55ad-7291-4979-80c0-0ec688196f85",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "03c7ae5a-6a0f-4092-adb5-e782dfa16fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b29688-c2f7-4bee-a1e9-61896c720cdc",
        "cursor": {
          "ref": "4b9a829e-c170-43e4-ba76-33d62efd6d2d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cd16cdf0-25cd-49ad-90d1-1b6e3dc36581"
        },
        "item": {
          "id": "48b29688-c2f7-4bee-a1e9-61896c720cdc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b68fcfc2-b3e4-4564-93b9-3a3b4ddec103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb850319-3f8a-48cc-ad4c-c5b38ae43cf8",
        "cursor": {
          "ref": "6c2d3eb7-92f7-4d18-8a18-5bad66d84278",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b8bcccc2-4341-4e3f-8e06-084ff1884f3a"
        },
        "item": {
          "id": "eb850319-3f8a-48cc-ad4c-c5b38ae43cf8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eaf1af57-bdbb-442c-8c7a-394da9ef4267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca373b0a-fa4a-454b-8891-551fb4ad71b0",
        "cursor": {
          "ref": "843edefc-6f5d-4957-ac15-cdbd7501bb36",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "262883f4-1826-4eb2-b609-b01cf41f2c7a"
        },
        "item": {
          "id": "ca373b0a-fa4a-454b-8891-551fb4ad71b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cd3f72f0-eb1e-432e-89a3-fd8f5f496087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d718c3-f3fa-4d48-a9d0-afd7922e2e6a",
        "cursor": {
          "ref": "4ebe2df6-b49b-4957-952d-5d02ec58180c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c578cd47-21fd-44f7-ba74-1e47d9187b89"
        },
        "item": {
          "id": "e0d718c3-f3fa-4d48-a9d0-afd7922e2e6a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a57f390-ff91-4ded-b6eb-4d6c3af45e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a5d19f-df9f-4574-9663-1ae0a013d451",
        "cursor": {
          "ref": "4167f6c7-b3dc-423f-be60-170686defcd9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31408bf3-8b7b-430f-a1e7-1c5bc4724b26"
        },
        "item": {
          "id": "59a5d19f-df9f-4574-9663-1ae0a013d451",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa6b211d-6c8e-40a2-bde5-8fea6a9df800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f779ee-e7ff-4662-af8d-4d1dd73029d0",
        "cursor": {
          "ref": "65ed8774-4c24-4836-a420-8ba49d59c00b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f39149a3-74b1-44c0-9a71-6b67a33d2cab"
        },
        "item": {
          "id": "78f779ee-e7ff-4662-af8d-4d1dd73029d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3e0ae75d-5001-4344-bec8-aec3f5c066cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27e4f50-d0f4-40cd-84a9-f119fafdcc4a",
        "cursor": {
          "ref": "04d3e241-9f9e-49eb-b130-8440a6e446db",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ff9796a1-6ef4-4ea0-a91e-0836e15de4bf"
        },
        "item": {
          "id": "d27e4f50-d0f4-40cd-84a9-f119fafdcc4a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f38a19b5-c0fb-4b01-ab88-ef5ae584c16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dd86bf-bfd2-4284-b722-2663a61888c0",
        "cursor": {
          "ref": "d6589d58-f28c-4309-9d0c-44ae27408b31",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "52252626-e67a-4581-a72d-71341783b72c"
        },
        "item": {
          "id": "d9dd86bf-bfd2-4284-b722-2663a61888c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4c24b5bc-8897-4464-b347-45a7d63e311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab19a65-0f99-4e92-999a-7d1b32ee564b",
        "cursor": {
          "ref": "6bb76ce8-e823-4108-b844-82971240ab26",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d8e0173-9155-4696-af65-5d82f2e17da3"
        },
        "item": {
          "id": "eab19a65-0f99-4e92-999a-7d1b32ee564b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3be6a748-fa0a-4898-ae4a-870b58ff20fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b00fb72-35af-4288-8be5-abc8ad989022",
        "cursor": {
          "ref": "c0d8b2f0-989c-4bd1-89e3-f1876001bc0f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4c5148df-dab1-4c45-8894-aa8c63fa73aa"
        },
        "item": {
          "id": "0b00fb72-35af-4288-8be5-abc8ad989022",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3098e55c-6c03-4a42-8106-873e6ad76b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2e8a4b-7f87-4c24-817e-d3dab378f93b",
        "cursor": {
          "ref": "9427cde4-a86a-48bf-894d-b905bc4d838e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5007620f-d690-4f1b-9b19-30ae87539941"
        },
        "item": {
          "id": "3f2e8a4b-7f87-4c24-817e-d3dab378f93b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "00541965-ca4a-469c-bd87-3cd4d1feeacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75421f4-8308-40f1-b502-c6092aa766b7",
        "cursor": {
          "ref": "8381ca1f-e0b2-42b6-9f58-9cee10586b1c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dfe58d81-f44d-4fbf-a88e-bd18ba0d7165"
        },
        "item": {
          "id": "e75421f4-8308-40f1-b502-c6092aa766b7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4bbfee6a-526d-49e9-909c-38a5c2f32e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc95784-a371-4d31-b56d-7d00c1b16097",
        "cursor": {
          "ref": "41d70dd5-1303-4288-ba64-6eee5ec55b56",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f4a435e8-50da-463c-b7bf-617fae706180"
        },
        "item": {
          "id": "acc95784-a371-4d31-b56d-7d00c1b16097",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f21b6a08-7c55-4d6f-b368-6a78a1dac16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace22db4-cdcb-4b20-a211-cc93d7ff9330",
        "cursor": {
          "ref": "c377fccc-f63d-48c6-9016-45b4ac7f3b05",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6e5eee1f-339f-4610-bf5f-4018c18dae5f"
        },
        "item": {
          "id": "ace22db4-cdcb-4b20-a211-cc93d7ff9330",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "05e77ad9-280d-405b-876d-0ea1be2756b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d04d1ca-7cc4-49cd-8dad-85de273a2f9c",
        "cursor": {
          "ref": "b545c640-d8e3-4886-9a05-45f964f0486e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "97cafcd8-be34-4486-97dc-6b7f96b82a1c"
        },
        "item": {
          "id": "0d04d1ca-7cc4-49cd-8dad-85de273a2f9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "46f4ea28-36b9-4776-8f93-ef682353eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a25caa0-07a3-47cb-b169-6b89fad88646",
        "cursor": {
          "ref": "78b5b914-5eaa-4c83-9df9-6f0a60ff79f1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "efc358e9-d5d1-4e55-a693-5b86246fe969"
        },
        "item": {
          "id": "7a25caa0-07a3-47cb-b169-6b89fad88646",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "edb71077-27eb-4eeb-b4fd-e8138f494f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35685ab-21c9-4f05-937e-5b15cd8e1008",
        "cursor": {
          "ref": "556df936-d1dd-455b-a7d9-011bc0f35022",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a700b5b9-88a9-4d0f-a0fe-f76c42953831"
        },
        "item": {
          "id": "c35685ab-21c9-4f05-937e-5b15cd8e1008",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "157b1ebf-ee54-4a42-909b-20249c304436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c12f06d-cfe5-4e35-b446-4b0e17c09639",
        "cursor": {
          "ref": "fd95e345-59a7-4188-b153-1a211caad46b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e27b6d22-502b-4046-9bfb-f5412120205a"
        },
        "item": {
          "id": "8c12f06d-cfe5-4e35-b446-4b0e17c09639",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce7035cd-71e4-4f7e-bad7-f306d44ad913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0548fc24-b979-487f-ae1f-4a92ceca7e40",
        "cursor": {
          "ref": "6ff6de23-06b0-47a6-8392-83a11a50043c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8b717479-f71a-448d-91bc-5fdd7deecd47"
        },
        "item": {
          "id": "0548fc24-b979-487f-ae1f-4a92ceca7e40",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9759be1e-dba5-4f8b-8ca9-f53673f9a4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d8487-9ebb-42fc-ac66-56009b56193e",
        "cursor": {
          "ref": "1a6d9e7a-d4f4-4bbd-91d7-68227c94e453",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4ff57350-9bf3-4bf8-b566-2f7a17a5a06d"
        },
        "item": {
          "id": "c21d8487-9ebb-42fc-ac66-56009b56193e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5d7637ef-d7af-4806-96f8-660155ab069a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351499fa-ce3b-4046-900a-fe53b0e1a89c",
        "cursor": {
          "ref": "788c90d8-9dae-4209-95d9-31eccf0fec53",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "030b4faf-8235-4ea5-b079-d69f4485855d"
        },
        "item": {
          "id": "351499fa-ce3b-4046-900a-fe53b0e1a89c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9a837b5-f94d-474a-8c3b-046cb2ea18b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f073455e-220c-4d7f-9733-d24a8efde771",
        "cursor": {
          "ref": "50d2f185-fb26-4d2d-8a05-e14946990538",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2db40e35-1679-426a-830e-b3657819fddf"
        },
        "item": {
          "id": "f073455e-220c-4d7f-9733-d24a8efde771",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e4f87966-f82b-4b62-a3c9-630c66e242bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2a8724-8dc6-46f6-8917-9c4ad3afc59a",
        "cursor": {
          "ref": "a99fa831-cfac-4634-8624-06a04f79ae40",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4f92de3b-a11e-41a2-bfce-a6ff965e394e"
        },
        "item": {
          "id": "ce2a8724-8dc6-46f6-8917-9c4ad3afc59a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aee8694b-e173-41b2-ac67-091c40cf8583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5b5749-a7a3-46c0-ab13-93a21d042d8b",
        "cursor": {
          "ref": "b65510a9-3fde-405b-a228-d7070ee85456",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "281d43ec-e8f7-49c8-9a4f-def5cb33a1f0"
        },
        "item": {
          "id": "9c5b5749-a7a3-46c0-ab13-93a21d042d8b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aec0783c-7ae5-4c9f-9009-a7235017493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400bbf0e-41ac-41fb-b4dd-1cf4d19eda7c",
        "cursor": {
          "ref": "b6e8fa86-cbee-4322-b42d-de47d3a6af8e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "94ed659b-0e01-4dd4-8dd2-665ba80143e3"
        },
        "item": {
          "id": "400bbf0e-41ac-41fb-b4dd-1cf4d19eda7c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2822e23c-ea26-4ba2-b408-b08a92bc4ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92db5fc-4a33-41ac-a213-e7ae551e59cf",
        "cursor": {
          "ref": "a8f20a3b-c3f4-494f-aa44-a9da121b6bd7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "386112de-9523-4b98-a8e6-50bb77658e43"
        },
        "item": {
          "id": "b92db5fc-4a33-41ac-a213-e7ae551e59cf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1f4a5067-b1cf-4f81-963f-91dd8ee60cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ad03ff-14e6-47e3-ba61-c03a4cc2754f",
        "cursor": {
          "ref": "33701187-52cb-4b4c-96c2-a11c8138d673",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9af59cf0-b2ab-4546-bb43-c646c6af50af"
        },
        "item": {
          "id": "36ad03ff-14e6-47e3-ba61-c03a4cc2754f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "659bb5ac-172b-432f-9f0e-33f26cb1d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588df71a-4689-46fa-9292-8699e85acc6c",
        "cursor": {
          "ref": "3976c705-a16a-4b5f-9fc3-1ab3d8191cfb",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce9bec51-ee08-4263-bba6-32736d6bf96b"
        },
        "item": {
          "id": "588df71a-4689-46fa-9292-8699e85acc6c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2379ab3c-d463-4b0e-9bc8-d585fa5fe55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9cc98a-caff-4664-993b-f948d2ebf693",
        "cursor": {
          "ref": "7558fb0b-7c9f-410e-ad3f-87ead7214da2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a6d7810b-8c1f-46c6-8a61-208f0256709e"
        },
        "item": {
          "id": "3e9cc98a-caff-4664-993b-f948d2ebf693",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "56b62822-494a-49eb-8c96-24e68565dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219826e9-c4fb-4769-931e-908b382c34d2",
        "cursor": {
          "ref": "ebf47fc2-e219-47c1-886d-a78ea7fa3734",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "21933689-66f2-415a-b0b1-91a5d9b1d79a"
        },
        "item": {
          "id": "219826e9-c4fb-4769-931e-908b382c34d2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a74b3d3f-dd17-4bde-aa0f-17c849f50710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f7d768-d434-4e22-bbf3-d2a49a74c37a",
        "cursor": {
          "ref": "ee8ab390-41ea-4200-a027-66a12556d760",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8da3ce35-d228-4795-b54f-005bdb0ff966"
        },
        "item": {
          "id": "17f7d768-d434-4e22-bbf3-d2a49a74c37a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2024725e-3f00-4399-9655-d4e8424ab68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642ca53e-0eb0-4eb8-9e4e-a7de78fc51d5",
        "cursor": {
          "ref": "9735dde6-18e4-412a-8482-78f05188f4ce",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cd869917-b842-4b31-9f38-00b1797a5e5a"
        },
        "item": {
          "id": "642ca53e-0eb0-4eb8-9e4e-a7de78fc51d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a50c4d59-6af6-49c4-9573-bb57721f9aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2942ac2c-e5d9-4acd-9521-5ffa8be98095",
        "cursor": {
          "ref": "a95ef01a-eb8a-419a-bcd8-6a41caabf587",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "13796d98-38ad-4b06-a477-a8b74ca9e3a5"
        },
        "item": {
          "id": "2942ac2c-e5d9-4acd-9521-5ffa8be98095",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "43a7c05a-f6b9-4dc9-b572-786da690e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c358469e-423f-4f8a-8c0d-5ff11e68d9f2",
        "cursor": {
          "ref": "ebcc5bb8-a501-4fe2-964d-fc12bfab8ac8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "22005ab0-6d5a-4357-b317-d5a1681ac978"
        },
        "item": {
          "id": "c358469e-423f-4f8a-8c0d-5ff11e68d9f2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dbe020c4-746a-41b4-9916-7f0303423c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649f066f-fd09-4613-9025-32cd001a72db",
        "cursor": {
          "ref": "43e57d15-8b71-4c1c-8b69-7ba78fdc58ae",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "37b158f8-e4ba-4619-a081-029d9d1c8306"
        },
        "item": {
          "id": "649f066f-fd09-4613-9025-32cd001a72db",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0bced923-a907-424c-bfa7-f19e30237bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6071ccc-1715-402a-8597-64257bb4bbaa",
        "cursor": {
          "ref": "3aac2cb9-1af6-4de2-b4af-1dcefb0c676c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aeb1786d-36c6-48fb-b899-933adf052ca9"
        },
        "item": {
          "id": "f6071ccc-1715-402a-8597-64257bb4bbaa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5958d454-4d97-4e50-8529-a014ebde9e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9b67a6-fb60-484a-8816-275c192149f3",
        "cursor": {
          "ref": "2147b3a9-8635-41a8-820d-e9fcb1475ba5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2242a20d-baca-4176-b587-f311f4ca665d"
        },
        "item": {
          "id": "0c9b67a6-fb60-484a-8816-275c192149f3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8a14d35-bccd-4d11-b71e-82b410089c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee98b1e-b188-4c31-9c6b-aa21967d0f07",
        "cursor": {
          "ref": "a756fbd5-4ed1-4aef-95cd-a82f2ed694a4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "90033e3a-ef00-421c-bab6-a882b8b81970"
        },
        "item": {
          "id": "5ee98b1e-b188-4c31-9c6b-aa21967d0f07",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a3792b5c-aba2-4951-bf7e-b63a5437a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d94379-fcbd-43f1-8d8f-d795e8ee5bac",
        "cursor": {
          "ref": "5082dc3a-5d10-4e4b-8d9e-f3725f6b40d4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "88c6f4f1-92e5-4a03-941e-e4e1b49e1a6e"
        },
        "item": {
          "id": "22d94379-fcbd-43f1-8d8f-d795e8ee5bac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "34b13f08-af8b-4050-82eb-3c8a698da6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53df2571-725d-4d96-b6b3-b00cba846bc3",
        "cursor": {
          "ref": "c212af30-c99d-4de2-94f8-96a2dfc73acb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5c130033-f65c-4106-8b68-e671c0ca9ebf"
        },
        "item": {
          "id": "53df2571-725d-4d96-b6b3-b00cba846bc3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e6c7e464-b1b6-4f56-b2ad-5513dfbeca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390023b9-9bd4-416d-af6a-6a83874fc932",
        "cursor": {
          "ref": "dcdaa940-7880-4759-88c2-d6cf65f7319e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "327ec5d8-d9d4-4beb-9aff-86792148a4a7"
        },
        "item": {
          "id": "390023b9-9bd4-416d-af6a-6a83874fc932",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b5c814d8-98c2-41d0-b75e-b6116010eaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c6eda8-1205-4e1d-acba-e860bfc8d712",
        "cursor": {
          "ref": "7a39b423-4d32-49fd-9fc4-cd422c9d6cb7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5066307b-c9ea-4cf5-b6fc-03818516e4df"
        },
        "item": {
          "id": "65c6eda8-1205-4e1d-acba-e860bfc8d712",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea0f964e-ade6-4c31-b21e-4a60bcd0419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6247a4-3255-4819-a7de-f47a92d88bc5",
        "cursor": {
          "ref": "a6e5b0c4-ebf4-4a93-9cb1-114bca91e103",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "87e53b5a-ad07-4b41-abfa-80a5b1ffab47"
        },
        "item": {
          "id": "9e6247a4-3255-4819-a7de-f47a92d88bc5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "26780de3-a5df-4d2e-97fe-368d89298a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87378a32-a565-4dbd-a2f5-951cabc945d8",
        "cursor": {
          "ref": "7efe0f73-f02d-476f-8c7d-0aa67d5a2b26",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5c399a64-39c5-4434-97c1-e02d8c36dfee"
        },
        "item": {
          "id": "87378a32-a565-4dbd-a2f5-951cabc945d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "88b569d8-f561-4109-99d8-b80469511e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e5e791-0e20-46b5-bfda-2a8518bd400e",
        "cursor": {
          "ref": "1ebef21e-c2e9-4a05-b6f2-270d03a80c2f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "951369d4-1ff9-4dbe-b998-ed94b1277cb1"
        },
        "item": {
          "id": "b0e5e791-0e20-46b5-bfda-2a8518bd400e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9778c816-c524-4218-ba72-84c2b2cb3509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65418419-cd16-41ee-a7c5-7595b83c1508",
        "cursor": {
          "ref": "12762362-7f7a-43e5-afc5-9a8d6f233c50",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8af4e3bf-7fe6-4608-b162-2921eea44bb6"
        },
        "item": {
          "id": "65418419-cd16-41ee-a7c5-7595b83c1508",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1eb5ed1b-cd0c-4930-af86-c1490272f273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa893f9-5bd4-4093-8eb7-241d23e84b27",
        "cursor": {
          "ref": "f360e156-75ff-4d05-9948-aed3873f8a6e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d0921cfb-bc1c-4a69-9ea7-5cadd7bad251"
        },
        "item": {
          "id": "7aa893f9-5bd4-4093-8eb7-241d23e84b27",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "41f19372-75a4-42e1-bca9-bb8f5dbfdc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a897f5e-592e-4cc5-b927-a506194d6d69",
        "cursor": {
          "ref": "ff2a8ae1-6e83-4674-b66c-81fe8ceaf4f0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e8bde214-2db5-43b2-ae30-e0e017f9812f"
        },
        "item": {
          "id": "5a897f5e-592e-4cc5-b927-a506194d6d69",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1533eb80-7ee4-4041-86a6-00ea3951e2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2f30a5-4f4b-4bd5-a8af-4a3f8878e61e",
        "cursor": {
          "ref": "c7b31d9d-9c21-4831-a3d4-3d7499e45860",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "12d53410-b514-4ba8-8171-01a6629bdcf3"
        },
        "item": {
          "id": "2f2f30a5-4f4b-4bd5-a8af-4a3f8878e61e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "290a7399-c95e-4017-b9bb-a760209e86a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47fac2e-309a-4cc2-a6de-bd8e24b964c0",
        "cursor": {
          "ref": "cccf9fc3-24d7-49d2-9e1f-fea544371bf7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c1cd8a89-f80a-4f6c-84ef-84741b9c6051"
        },
        "item": {
          "id": "b47fac2e-309a-4cc2-a6de-bd8e24b964c0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "75aea152-b69b-4e15-bfc3-974484f788ef",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f373b3d-ebc2-4cc9-bbc2-b82027a259cb",
        "cursor": {
          "ref": "24c2cf4e-c17f-4dad-9788-c22caa36c93c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "51b64e31-86a8-4e5f-8cc8-8467a60bf8d4"
        },
        "item": {
          "id": "3f373b3d-ebc2-4cc9-bbc2-b82027a259cb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8fb30ab6-81e0-48d4-8351-0620c2748b3c",
          "status": "Created",
          "code": 201,
          "responseTime": 246,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d2b13-9122-41f4-9fe7-f3a526812222",
        "cursor": {
          "ref": "8c638725-8099-4211-99d2-b8efc6e41ee7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3d024c7c-092c-432f-9876-07d30be4f8d0"
        },
        "item": {
          "id": "ba8d2b13-9122-41f4-9fe7-f3a526812222",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "09de94f7-8e6a-4c19-aa2d-178b8f0b89e5",
          "status": "Created",
          "code": 201,
          "responseTime": 462,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afed0b1-ed2f-4c9b-8b3f-456bb688fa92",
        "cursor": {
          "ref": "fa6a5f31-2e70-4be1-b694-5c657316298b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5b846a36-a2f5-497b-968c-dbff08576fa4"
        },
        "item": {
          "id": "0afed0b1-ed2f-4c9b-8b3f-456bb688fa92",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3ae8083a-df52-4a12-9b36-fd2346d5788a",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e40464-7b7d-4d43-a326-7d7fb223c11d",
        "cursor": {
          "ref": "62441f62-5651-4019-b979-28808e71fcfb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f7d3cfe9-690c-4b7c-b53c-125463acf153"
        },
        "item": {
          "id": "52e40464-7b7d-4d43-a326-7d7fb223c11d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6ae26753-b135-4e5f-954f-36ed1f6a16b9",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187fb91-8508-4c12-b2bb-907e8ea23a08",
        "cursor": {
          "ref": "eaaf211e-95ed-4201-b017-ac0747dd0d9d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4d777f92-79e7-46ac-aa66-9b2493203a8c"
        },
        "item": {
          "id": "4187fb91-8508-4c12-b2bb-907e8ea23a08",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a09ed0cf-2edb-4315-9f23-88e0a9d4bad4",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1622ca7-9f1c-45a0-a05a-a215b31d93cb",
        "cursor": {
          "ref": "9a04a383-d300-453b-b66e-5138cf9c8b0a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4d4d7285-0656-45bc-858a-9188b7b3d744"
        },
        "item": {
          "id": "b1622ca7-9f1c-45a0-a05a-a215b31d93cb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e281881f-f90b-4d4d-8ca0-9df738209e5b",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a55ff0a-b2b2-4c6e-a162-6b4ad40a738d",
        "cursor": {
          "ref": "fba48e7b-4ce8-42c3-bb7b-7ea65a75ce53",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0a34692f-2b7d-4985-8a69-f9c1e97e45f2"
        },
        "item": {
          "id": "6a55ff0a-b2b2-4c6e-a162-6b4ad40a738d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9396fee-3bb7-42a9-9f46-ff1744151606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef53f6c-7fd1-4e9f-b28c-9503e5db16e3",
        "cursor": {
          "ref": "56c3efe7-d76a-4b00-a190-bc8b93d509b1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "805850c7-fa3c-448a-8838-41c981e66df7"
        },
        "item": {
          "id": "5ef53f6c-7fd1-4e9f-b28c-9503e5db16e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c2dd50b-aa76-4ae6-9174-3212ceae2135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf16325-40a1-424c-a8c4-5b176a962ef3",
        "cursor": {
          "ref": "e8209e97-ee26-4c69-961d-e538d572968f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ce46ee53-c021-4d61-a582-1ed771831ba6"
        },
        "item": {
          "id": "6bf16325-40a1-424c-a8c4-5b176a962ef3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f64568cb-5da0-4ccd-a4fe-b75dece3b207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecbb3be-e714-4c27-9e95-515ad191237f",
        "cursor": {
          "ref": "c4a23022-6cf9-4d9e-a1b9-54957796d18e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "697f8859-093f-46f9-bc23-7ef28df815c5"
        },
        "item": {
          "id": "0ecbb3be-e714-4c27-9e95-515ad191237f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "31822e9e-b30f-4309-986f-dc92481d5eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e220f588-6f58-4a2b-a013-97be1ab44655",
        "cursor": {
          "ref": "0bfe6f4e-9408-4e7c-9275-2bb10534ff15",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c5107197-fb9b-444a-9f7f-ada598b1ef0c"
        },
        "item": {
          "id": "e220f588-6f58-4a2b-a013-97be1ab44655",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dbbb4a18-d660-4553-b4a8-1773448adbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95bf451-9aa5-40bc-bc23-22d83d1f1b0f",
        "cursor": {
          "ref": "89ea8765-cd3f-4df3-9795-db5ba648cd34",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "08d992bf-34f2-49dc-89b1-9785f4acec83"
        },
        "item": {
          "id": "b95bf451-9aa5-40bc-bc23-22d83d1f1b0f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8f589c8-b2b8-49e5-8549-7e47def2c0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4e147-40a1-4785-94cd-122d55b4a953",
        "cursor": {
          "ref": "7a92d128-f703-46d2-910c-a1b9e81f9fae",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5908bd28-c53d-46f6-95a9-f6123a3d3a17"
        },
        "item": {
          "id": "5bc4e147-40a1-4785-94cd-122d55b4a953",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0e7b8859-06ad-4a62-9cef-e50efdc54275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d7ff2a-6fdf-448e-951d-80d80f823c1d",
        "cursor": {
          "ref": "2d0c05b8-3c00-4587-9a3d-b88679e59575",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c9178878-99f5-422c-8af6-27884e52140d"
        },
        "item": {
          "id": "86d7ff2a-6fdf-448e-951d-80d80f823c1d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4cdf6a9-b836-4aa0-8411-549f3552ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0358b60-5f62-4a50-994b-59e176f59fa0",
        "cursor": {
          "ref": "4faac1eb-b9fc-48a0-bff5-b7abae45c732",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "98bb8dff-496f-498b-b597-f918425f3dd8"
        },
        "item": {
          "id": "a0358b60-5f62-4a50-994b-59e176f59fa0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d780fca-6c9d-49c6-b857-d3a2f697f05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d793794d-c2b3-48e8-a62b-26851edc8dab",
        "cursor": {
          "ref": "0a1fa993-ae0a-4d40-a247-972b829a6b9f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "694308a2-bc5a-41bc-a645-ca1d25d1c88c"
        },
        "item": {
          "id": "d793794d-c2b3-48e8-a62b-26851edc8dab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "769e1023-9ba8-47d1-a0d2-dd1f17b7f639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517be46-2814-4bf9-b2d6-5eb0d4f4c3be",
        "cursor": {
          "ref": "acfee1c0-c169-4494-b4f1-3c4e13126b0d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8f05739f-d796-44a2-983a-d28bfccd4ef8"
        },
        "item": {
          "id": "3517be46-2814-4bf9-b2d6-5eb0d4f4c3be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9220793b-8bd7-48d3-9ef0-86dbaac66e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d8de28-1dff-4cde-82cd-e4f7ebb5bd2c",
        "cursor": {
          "ref": "8eeecff3-6aae-4978-b255-66e2074e5202",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "81044696-b2b5-4af2-b7c3-1f7e1b41c68e"
        },
        "item": {
          "id": "69d8de28-1dff-4cde-82cd-e4f7ebb5bd2c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "425814c4-24f3-433f-945b-7bef9c8c7787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb9b168-1ae9-4f53-88fc-18240f2d3637",
        "cursor": {
          "ref": "3cf8f4fe-fe00-477f-b472-39d1985f11df",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d805d5db-0e0f-427a-99b6-5b14e50dc5aa"
        },
        "item": {
          "id": "7cb9b168-1ae9-4f53-88fc-18240f2d3637",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c8e47e7-4d43-4949-9e2f-0b54a230cfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40e2d18-52d0-4976-8370-a08829241162",
        "cursor": {
          "ref": "39ee7edf-c08e-4e19-a5c1-0e74244ba79b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15c4838a-e041-4c97-8765-1a2bd28dc4bf"
        },
        "item": {
          "id": "a40e2d18-52d0-4976-8370-a08829241162",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2c691968-1195-47ac-9472-6f92ee8e165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646bde83-98b3-4802-87c4-7e456a44ad3d",
        "cursor": {
          "ref": "eee0df6b-35ad-4bb6-8b08-08738fed7585",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "584a3b5f-182f-42d0-813d-79ac19d0c0ca"
        },
        "item": {
          "id": "646bde83-98b3-4802-87c4-7e456a44ad3d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cfe945bd-fb6f-4319-b799-2e006946b4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ee8b1-47c4-48cc-8aa9-1b5b215d9228",
        "cursor": {
          "ref": "21e26885-a410-4eca-a2be-aef86e55f6aa",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6d0ed8ab-6483-48a4-8444-f9bcc10ee028"
        },
        "item": {
          "id": "263ee8b1-47c4-48cc-8aa9-1b5b215d9228",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "35a3516f-03ff-438c-984b-6cbca92d29e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460c2654-3738-4877-880b-da512089fcec",
        "cursor": {
          "ref": "11f67c74-0aeb-4735-b0ef-e6b406fe6694",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "15d4bab1-b6be-49f5-a891-05c6dfd52fff"
        },
        "item": {
          "id": "460c2654-3738-4877-880b-da512089fcec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "de9a2fcf-723f-4f8b-8978-c95724ecac45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b92c5e4-f0d7-47de-ab1c-1bcad7efdeea",
        "cursor": {
          "ref": "79b64cc1-ac4b-4b52-8672-0c4f313263c8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d3b38361-79bc-4ba7-b698-c83ec36a3ec0"
        },
        "item": {
          "id": "7b92c5e4-f0d7-47de-ab1c-1bcad7efdeea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0d99ed66-78e4-4aba-98b4-d93c04619e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d80f98e-e9e7-411a-8b84-e556e9492df9",
        "cursor": {
          "ref": "5ccc2c75-0bde-4968-b2b5-7b1d48815632",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0527f779-870d-4571-996b-a06978a15cae"
        },
        "item": {
          "id": "0d80f98e-e9e7-411a-8b84-e556e9492df9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5088ab04-029e-4e19-b5a7-27732ace2d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827671d-a43d-420e-be46-5bfeb33b2f4c",
        "cursor": {
          "ref": "aef44d3c-8057-49e9-8529-f70d5bd96d85",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b72d31c9-6a35-44cd-a65e-4a51ecf95c56"
        },
        "item": {
          "id": "b827671d-a43d-420e-be46-5bfeb33b2f4c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ccf1a79-59cc-41da-99dc-b4193871e477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b409131d-dd78-48b0-ac6f-7ccf0779ee0a",
        "cursor": {
          "ref": "d7566dab-3d4d-421e-9a66-d0bb63a57956",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2950e7f5-29ee-49ca-8360-961c579c9ecc"
        },
        "item": {
          "id": "b409131d-dd78-48b0-ac6f-7ccf0779ee0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6cd5a62b-f942-4df4-b72f-598874b1799b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac9df6d-3fca-4cc7-bba3-684e68cb388c",
        "cursor": {
          "ref": "e8b866ea-ba2e-4b4b-898e-6cde6cc5191d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa7eb807-8349-4fc1-8161-592ed73f93e4"
        },
        "item": {
          "id": "3ac9df6d-3fca-4cc7-bba3-684e68cb388c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db063d36-3c0c-4cb3-b3f1-ee75d05831a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b645b48-8264-45b8-8ad3-3575c2e9f9b6",
        "cursor": {
          "ref": "ba3648e2-7979-4dda-b227-53b556a5df74",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d7bc4b54-2e65-4865-96f3-17c986c0baef"
        },
        "item": {
          "id": "5b645b48-8264-45b8-8ad3-3575c2e9f9b6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78641881-c101-46ad-a435-1c39749d311f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6bd8c-c50d-4ad2-8efa-ceef1d9538b4",
        "cursor": {
          "ref": "92fb9e9c-29d9-4507-a8a1-2238d219cf40",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a0bfe39c-f224-4af1-a388-4e9a43c06f10"
        },
        "item": {
          "id": "d8d6bd8c-c50d-4ad2-8efa-ceef1d9538b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73e7d6e2-f237-4965-bda3-67ab0ea3cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44374afc-350f-4315-83be-8a14259c4a11",
        "cursor": {
          "ref": "0cce43e3-c1de-4963-ab55-3133d0f5a329",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f3052b6c-7a9c-482d-9e03-ebd83bebdf74"
        },
        "item": {
          "id": "44374afc-350f-4315-83be-8a14259c4a11",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b22a2ef8-29c8-4bdc-b4f5-f596d395d83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15310644-24bd-4ffa-8c09-b7ae1d4a1f03",
        "cursor": {
          "ref": "38db1b4e-f58b-4f2b-b8cb-87b837de024e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a4129ae3-7965-4c42-894e-52ce926516c8"
        },
        "item": {
          "id": "15310644-24bd-4ffa-8c09-b7ae1d4a1f03",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a1786842-06a8-402d-8d53-79ec3b76ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff0707-b345-4a16-b1e0-38c869a438a9",
        "cursor": {
          "ref": "bb3654f4-87bd-4d2d-82be-52df8765d877",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "afcc5278-ca3a-48e8-abd8-83f83facec53"
        },
        "item": {
          "id": "2bff0707-b345-4a16-b1e0-38c869a438a9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8906b3c0-e8aa-47b8-92e8-77ec5af98ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aa9b4e-0310-4081-8c38-06856b312400",
        "cursor": {
          "ref": "b4dad9d2-52a5-4036-b57a-02e0f246e084",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6082b21c-cb25-48e9-b3d3-8b828168a2e4"
        },
        "item": {
          "id": "06aa9b4e-0310-4081-8c38-06856b312400",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "081b3981-7376-4882-a128-4ae3c1494015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c92423-9552-4a96-93c7-ed38beea0bf9",
        "cursor": {
          "ref": "b4b532dc-64d8-4c7e-86c1-587499c5ed64",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44969771-b61e-4548-92ba-c658b49d690a"
        },
        "item": {
          "id": "42c92423-9552-4a96-93c7-ed38beea0bf9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1a7cd830-171c-4318-a9ef-a2ad530fffb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d080ca61-839f-48f0-b187-4a1326fc8583",
        "cursor": {
          "ref": "bd151d08-1079-44d0-b049-9ea6adb40153",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9aad9a4c-951b-4d90-970f-276303205efd"
        },
        "item": {
          "id": "d080ca61-839f-48f0-b187-4a1326fc8583",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9198c997-a0ee-49c8-bb79-407ac5da0a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a84e6-f465-44e1-a880-fef96d45ae48",
        "cursor": {
          "ref": "0ac7931b-a4ba-483b-b6d7-a25f119c2f2d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6ad1469-c036-4844-830f-8e129a732f4e"
        },
        "item": {
          "id": "0f1a84e6-f465-44e1-a880-fef96d45ae48",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "071a1d15-5dcf-48e0-86e1-5222f40c996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9606e-f52b-4b35-ba53-fe9c92f42151",
        "cursor": {
          "ref": "f9a29ac6-8f52-4eff-8a78-bb06a4111e5d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c68ed83-5452-47ec-8dab-d82678c5f0db"
        },
        "item": {
          "id": "81c9606e-f52b-4b35-ba53-fe9c92f42151",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "feaa87be-afe8-4272-ad55-688d9bddb706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd065e1d-2d0b-441c-98d5-4a689048bd8c",
        "cursor": {
          "ref": "82bddad0-3890-4467-a356-a6abee7b443b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aa77549b-3174-4843-a145-f884721e6c5b"
        },
        "item": {
          "id": "fd065e1d-2d0b-441c-98d5-4a689048bd8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d66a4067-2034-49dd-a627-dad870aa3183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adb9834-629f-4634-afcc-a0f870f6f69e",
        "cursor": {
          "ref": "c86eacf8-d942-4f5b-86de-3bcc3d9b6a1f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d5f20f61-4135-4932-a997-a353085a35bb"
        },
        "item": {
          "id": "4adb9834-629f-4634-afcc-a0f870f6f69e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2135eea6-6e29-4b32-a88a-86fdf679ccf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a3c0ca-3fc6-44bd-99b1-35c507848ce7",
        "cursor": {
          "ref": "8bd2653c-74a9-45db-9c87-c178564bd948",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6a131142-e7a9-4d66-a243-3da65cedf709"
        },
        "item": {
          "id": "65a3c0ca-3fc6-44bd-99b1-35c507848ce7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "95384512-d6a4-40cd-a603-618acbc5629f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea8fdb1-4887-4d83-afb4-b639a5e8a914",
        "cursor": {
          "ref": "33cce7be-39d0-44e6-abd3-c38480d512b2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6e70bced-5cfa-47f4-8b94-03ea5bbbbef3"
        },
        "item": {
          "id": "8ea8fdb1-4887-4d83-afb4-b639a5e8a914",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f33f21d1-7bf5-43e8-9506-97f4d8f4512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee195a1-7b60-4d09-860c-83a4d1bdce48",
        "cursor": {
          "ref": "900036af-ba94-4160-bf9a-083f2636442e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "455de154-2a75-4882-ad3d-86426a750d13"
        },
        "item": {
          "id": "5ee195a1-7b60-4d09-860c-83a4d1bdce48",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c0e37c33-5184-49a9-9bd0-ab2a8c305f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5045e9-a9a9-45b1-91a9-000924dc3320",
        "cursor": {
          "ref": "b1bd07c5-1058-4278-bae5-2d956e96812c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "be76c605-af31-466d-9e59-021657a4df1a"
        },
        "item": {
          "id": "ea5045e9-a9a9-45b1-91a9-000924dc3320",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8bf38675-e81e-46cf-bf9a-fc0abbe21acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c7e4bf-fcdc-4235-a897-13318bae218f",
        "cursor": {
          "ref": "4523a7af-0a28-4c7a-a503-3d80f95a429c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aef5ebcd-9c4f-4d58-8784-e75ff9495ad7"
        },
        "item": {
          "id": "c4c7e4bf-fcdc-4235-a897-13318bae218f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b255c534-6faf-4b35-ae58-36bba1df9603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8499f3c7-3ed5-4398-a3d5-b0eb34e47171",
        "cursor": {
          "ref": "76437921-b0d8-4b5a-b6b2-d56c44a9366e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d7d5731-2faa-456a-bf55-ebf539af52ea"
        },
        "item": {
          "id": "8499f3c7-3ed5-4398-a3d5-b0eb34e47171",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "628ad390-4ed8-4a24-804c-69f945dd784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79913c95-6a76-44ab-8423-62d75690eef1",
        "cursor": {
          "ref": "53eb603b-f815-400e-b233-ac268553317f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "539e150b-3112-4164-8857-91c746208ce7"
        },
        "item": {
          "id": "79913c95-6a76-44ab-8423-62d75690eef1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c118cd6-7e25-40d0-995f-d107edbc8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c18315f-87e9-44ad-a2f8-edc535f31108",
        "cursor": {
          "ref": "5160d27a-7481-4702-99e2-d9e3f253c6c3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "99c538ed-90aa-43d0-b96d-b12d55075ceb"
        },
        "item": {
          "id": "9c18315f-87e9-44ad-a2f8-edc535f31108",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b293a43e-c094-4135-a798-47e04d743365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6fdac2-2488-477b-81f6-8825d5438788",
        "cursor": {
          "ref": "d7050aed-5a22-4f2f-8374-9edb863c1b3f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1c30e40d-93ff-4df0-b83c-6f969ed4b791"
        },
        "item": {
          "id": "8d6fdac2-2488-477b-81f6-8825d5438788",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b91dabf9-befd-49f0-b0eb-7a1a9716db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6114f857-a4ac-40d9-ab90-f873b024a298",
        "cursor": {
          "ref": "2e93adc7-3a42-43e1-8d3f-4ba482c9325f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c22d350-d0aa-46c4-9c17-2fb3ce399176"
        },
        "item": {
          "id": "6114f857-a4ac-40d9-ab90-f873b024a298",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d89ad560-aa68-4ae6-aad4-a231d6c652a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e14dc08-ffa8-405b-b9ce-10db55a88921",
        "cursor": {
          "ref": "f90a46af-5937-4d29-aa79-c5c1c523aa69",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cb9c992d-8f16-498c-9ff5-74aa50a2701d"
        },
        "item": {
          "id": "5e14dc08-ffa8-405b-b9ce-10db55a88921",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d998bcd8-e338-46ba-befe-a699c2741073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df705e6-3631-464f-858a-55ba7334e112",
        "cursor": {
          "ref": "a48cbe13-72a1-4bd8-ab35-666c5a7d4c0c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "231fe4c6-0d6a-4fa5-a693-5315fd1266e9"
        },
        "item": {
          "id": "6df705e6-3631-464f-858a-55ba7334e112",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1489b9f3-af80-4a88-b179-d5ae3c1a3038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8018594a-7dd3-427e-aa4b-b50c6914a699",
        "cursor": {
          "ref": "34b2ecf5-a087-4020-a865-a422d3f2f5ec",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0b7bd841-c4c2-49ee-ab19-23b9baa383c0"
        },
        "item": {
          "id": "8018594a-7dd3-427e-aa4b-b50c6914a699",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed69ae5e-277a-4f12-9827-48ab7c298ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55449dfb-e6b2-41fd-acba-14a7b92126bc",
        "cursor": {
          "ref": "29662392-1f3d-4133-94be-886be1c1674f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6b68ca9c-e04b-4c0b-aae1-a07758599527"
        },
        "item": {
          "id": "55449dfb-e6b2-41fd-acba-14a7b92126bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51dfdf70-800f-40a0-af93-495d23907b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3903a23-81a5-4912-95f7-2ff6fd333b8a",
        "cursor": {
          "ref": "fd224959-c37e-4c71-a68a-fcabd9e934e1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c1c51ca3-45d8-4fb3-8da9-149766785fe0"
        },
        "item": {
          "id": "a3903a23-81a5-4912-95f7-2ff6fd333b8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e2c865f-7c1a-496e-8057-8c321b79bccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d6935b-0dbc-4b3f-9798-455fd7d7af9c",
        "cursor": {
          "ref": "25f6e60c-2765-44ff-be0a-814631354fe9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7f1d9473-b625-4ad6-82a6-33318087581a"
        },
        "item": {
          "id": "b3d6935b-0dbc-4b3f-9798-455fd7d7af9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa6d8c3d-6156-49a8-9b3b-00693ffb29dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f01ea-8f35-4cdd-a462-f8ab7baede08",
        "cursor": {
          "ref": "59e48b1f-46f3-4353-8fdf-88931860409f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3bfc94e7-f134-41e0-abed-9ba0ce73f687"
        },
        "item": {
          "id": "871f01ea-8f35-4cdd-a462-f8ab7baede08",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0456895c-0630-4d75-9e4b-a87e062756ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fc9c06-d9cc-4900-a4bf-005618e2bf12",
        "cursor": {
          "ref": "94e52836-b05a-45f4-aa67-2ed1a7dfff15",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bb8ebd33-648d-4de2-8b08-acc14ad98ad6"
        },
        "item": {
          "id": "e7fc9c06-d9cc-4900-a4bf-005618e2bf12",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "84639926-1a41-4e65-868f-e70595e672e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f15fc-a070-4302-b005-5f77691e7aad",
        "cursor": {
          "ref": "3ac1ed20-c907-4710-8601-91fac47f8947",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4508858d-a2de-4752-a43d-19edfde89d1f"
        },
        "item": {
          "id": "5f9f15fc-a070-4302-b005-5f77691e7aad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba4c3659-0e35-4fc7-a085-30d9409d114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a431aaf-f679-465a-8629-52352837ee9f",
        "cursor": {
          "ref": "dd736d13-9d1d-4ca6-a96e-0b5bb7364851",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4b3ab427-9148-489f-9071-9f5571da9fb2"
        },
        "item": {
          "id": "5a431aaf-f679-465a-8629-52352837ee9f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf33cf32-0304-498b-9463-faec300b472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f823a12-391f-433a-9ed6-fc79f4320aea",
        "cursor": {
          "ref": "99605a9b-090c-4b79-97cb-2885462aae02",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef319dd4-a62e-48da-99ad-8c0b4a73b637"
        },
        "item": {
          "id": "2f823a12-391f-433a-9ed6-fc79f4320aea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5445660-4446-4222-a7a9-86c578601ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a15a5e-5c88-4e68-a61c-25cbd1fba6e9",
        "cursor": {
          "ref": "7795ab25-22ab-4487-bf33-8636bab626fd",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e54b267c-8f22-4568-9671-384fd92636a2"
        },
        "item": {
          "id": "e8a15a5e-5c88-4e68-a61c-25cbd1fba6e9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2b4fd33c-2f94-4c25-b1b2-0a6c977a5866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433ee766-9211-4376-851e-e46a22a6ee41",
        "cursor": {
          "ref": "42dd83a0-b722-4e1b-a99f-c05ba17fa0f9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "31f9e2c6-7f9b-42e3-bdee-e01f276f3d08"
        },
        "item": {
          "id": "433ee766-9211-4376-851e-e46a22a6ee41",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ee99b21-3f19-4539-9358-446f75d88ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fa8ed6-fcfd-49a5-aadc-0213e7add878",
        "cursor": {
          "ref": "7e5f36f3-9e0c-4f9c-b5b6-fa0dc1c90510",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c48caab9-121c-443b-8717-25036363e8e4"
        },
        "item": {
          "id": "54fa8ed6-fcfd-49a5-aadc-0213e7add878",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e337fc8-7dd0-437b-a99a-c8569e038af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f75c833-362e-4b4d-a5d9-fd40db14624b",
        "cursor": {
          "ref": "df2def72-89e5-41d9-82f0-929c42736826",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d4400177-1cb3-4c81-916c-dc32d5b104b5"
        },
        "item": {
          "id": "4f75c833-362e-4b4d-a5d9-fd40db14624b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "708e98dc-5f4c-4a36-9acd-fd5af2aa3bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4578d0fa-6f48-49d1-96db-113f0da786d6",
        "cursor": {
          "ref": "01ba5829-11b1-4f49-9c62-288fa0a0b6ab",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a59d2cd6-0096-4a54-bc75-8f56eb4c40fa"
        },
        "item": {
          "id": "4578d0fa-6f48-49d1-96db-113f0da786d6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "429b55d4-da00-497b-b29e-0e19a641a341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc07409-3770-42a1-97d9-7cf9240248aa",
        "cursor": {
          "ref": "9fcbb3dc-6167-4a9b-ba5d-511ed86f29fd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "48cccad9-de61-4b52-80d0-18be74ba546a"
        },
        "item": {
          "id": "8bc07409-3770-42a1-97d9-7cf9240248aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1cbd4bcf-f6b5-4e8e-ab11-843087482e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c727e0-74d3-4443-9031-51f277bc73e7",
        "cursor": {
          "ref": "58fc8865-a069-4f23-9b7a-e0d0babdb932",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8abcdee9-264c-42ad-8383-0ac79020ed8e"
        },
        "item": {
          "id": "56c727e0-74d3-4443-9031-51f277bc73e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4628f52-7d94-4cbb-be97-9744a3e5ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4034a4f8-28f7-494b-9cfc-677c580ac089",
        "cursor": {
          "ref": "d52da786-9da8-46a3-9a10-713b81ede26d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c8470f60-da1d-4a18-bb59-6ea40f5461fb"
        },
        "item": {
          "id": "4034a4f8-28f7-494b-9cfc-677c580ac089",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cd0dbe68-d270-4ced-bc1e-2501610234bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32646755-85a6-4db5-ae92-b649004d0777",
        "cursor": {
          "ref": "4dbe4c2a-7a2a-420b-9056-001da102865d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a51b621c-1341-485f-9894-214da842acd5"
        },
        "item": {
          "id": "32646755-85a6-4db5-ae92-b649004d0777",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8abe6b87-8be8-440c-ade9-252a69c4cb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720642dc-bd02-43eb-83a1-f265fd5f704c",
        "cursor": {
          "ref": "2b24606b-3f12-40cd-941e-87d26d326055",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e9c72383-0fb1-4de9-9cd8-ec6d1bcdaee9"
        },
        "item": {
          "id": "720642dc-bd02-43eb-83a1-f265fd5f704c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c5c13ece-6c08-46ef-b0dc-b0ce28ac93ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b85b2b-b48c-4f90-9a10-c68b9e7b28c0",
        "cursor": {
          "ref": "35d80e38-d5fb-4d42-82ea-17789598b7a8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bbba285c-9939-46ad-88db-439e7b773521"
        },
        "item": {
          "id": "e0b85b2b-b48c-4f90-9a10-c68b9e7b28c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c8b9cd3-2ee8-4235-b90d-c4018e73d6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f57848b-98d0-4661-9a9b-3ffc40760e1f",
        "cursor": {
          "ref": "b9191afe-4b05-4590-9726-e938edda7c91",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2d0c9d11-0ac4-4cd3-8790-3252763376b1"
        },
        "item": {
          "id": "6f57848b-98d0-4661-9a9b-3ffc40760e1f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6332a92b-c56a-4dcc-a6a4-4db125e56ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a789d4ab-3e2e-4719-8353-303a6e7fa6e1",
        "cursor": {
          "ref": "00eb3fc1-4348-4971-b9f2-2b671ab8f319",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d4e381c1-8b17-43cb-979e-8edf4f57bf03"
        },
        "item": {
          "id": "a789d4ab-3e2e-4719-8353-303a6e7fa6e1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ed233af9-c981-4d21-bca8-d0de5642fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0b7208-348f-4e8a-8e70-b129f0127dd9",
        "cursor": {
          "ref": "094b687d-a3b5-436a-9adf-528a2ed5f0a2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b7dd6c60-c1bd-457a-98c1-88fd34b20f17"
        },
        "item": {
          "id": "0f0b7208-348f-4e8a-8e70-b129f0127dd9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "58790b52-2902-4359-aac4-db4ebf549fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f1fb2a-d00a-426c-a38b-9202ed001ccb",
        "cursor": {
          "ref": "1cf8ce37-efde-44d5-8b89-6ed36740c3b8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca7fe8d2-21f6-4541-a8f2-7fcb5a010e6a"
        },
        "item": {
          "id": "64f1fb2a-d00a-426c-a38b-9202ed001ccb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d002fc4-7b7c-4f1b-8f96-70578ddca1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613238da-c452-4079-8371-91e28bb86eb4",
        "cursor": {
          "ref": "17fb3900-2b17-4acf-80e9-1441e79fd089",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7072c363-e0a6-4d33-96f9-d68bd7b3a563"
        },
        "item": {
          "id": "613238da-c452-4079-8371-91e28bb86eb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed0e28cf-0078-4393-96b2-422dbff107c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70c6a1c-2304-4289-aed9-f0341e7b07b1",
        "cursor": {
          "ref": "10d0af07-d236-4532-8761-b90c0b10214a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6a6761a9-da3d-4a83-b603-949850eee482"
        },
        "item": {
          "id": "f70c6a1c-2304-4289-aed9-f0341e7b07b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4c84bd4-f782-4221-9233-a09ae086ccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b034d7e-4bcc-4525-9532-7d0b1b24fbb1",
        "cursor": {
          "ref": "09d1c646-1a11-4316-a35f-225c6c90c6e5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "85822414-be29-4838-a003-563a6dd76cfd"
        },
        "item": {
          "id": "0b034d7e-4bcc-4525-9532-7d0b1b24fbb1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b550f492-d73a-49a3-9211-930adde89989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edd3bbf-3815-4389-a5dd-31a05b78e541",
        "cursor": {
          "ref": "88006acf-1f6a-4707-89af-85017275b91c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8c4646e9-00c4-4960-afb8-a7350ae5cc63"
        },
        "item": {
          "id": "7edd3bbf-3815-4389-a5dd-31a05b78e541",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0d1e7163-6ccd-463a-84c1-b430a92eef5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f2c483-7ceb-4737-8701-9d2c868d01b7",
        "cursor": {
          "ref": "052c1792-5a4b-454c-91ef-2fe9779c8937",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b98a76d-662e-4872-93db-5a3d165d67a1"
        },
        "item": {
          "id": "22f2c483-7ceb-4737-8701-9d2c868d01b7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0aa4cc4-f902-463f-8bd4-f25e5efee0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3db03cf-ea66-4cba-9fcd-50b9b8a75ad6",
        "cursor": {
          "ref": "da6344fe-d5cb-44c1-9cf9-1977e684f595",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bf4fd90b-9cac-4c33-bb17-04d74d5e1665"
        },
        "item": {
          "id": "f3db03cf-ea66-4cba-9fcd-50b9b8a75ad6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "67e4a3a6-fafb-4c0c-8248-908de553bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a1ec87-6a7c-4b6e-978b-0fe74020e14b",
        "cursor": {
          "ref": "314aa9b9-b4e3-4b28-b941-06dacbd4ef00",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e7b8e2ed-88a9-40c7-bd73-df77e7391c58"
        },
        "item": {
          "id": "f2a1ec87-6a7c-4b6e-978b-0fe74020e14b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb486e5f-d05a-40e1-a8d5-b66f9a9608fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c381da8-5a9d-46e7-9586-eeb3be20deae",
        "cursor": {
          "ref": "1d06fda1-9344-4e59-9348-811b99758c55",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3c21d64c-646e-4690-81a3-c6cf059fdbaa"
        },
        "item": {
          "id": "7c381da8-5a9d-46e7-9586-eeb3be20deae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7d7b75e7-88b3-4632-82f7-cf227b8009be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd153f7f-10c4-4071-9155-4b6ec11738d6",
        "cursor": {
          "ref": "02d92793-8f9a-4354-9f63-421606e9ff49",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "adb41ddd-faa1-4237-9368-11fbbc43de24"
        },
        "item": {
          "id": "dd153f7f-10c4-4071-9155-4b6ec11738d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "57790578-6020-4ba4-8a56-45f4f62e29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6df55-9f0d-4a12-825c-a3c6ed0ce8a2",
        "cursor": {
          "ref": "6ae791ca-c2c3-439d-8e49-3c3b9830c63d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54fef263-b4ed-4200-a63a-07029064bb0a"
        },
        "item": {
          "id": "79b6df55-9f0d-4a12-825c-a3c6ed0ce8a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "643cccfc-567c-4ac6-97c8-a600fc982651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306a572c-0c49-441b-adca-8469c7881b20",
        "cursor": {
          "ref": "eaa80a57-05ca-4061-a4e8-73d3afa7650e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e50832b0-5eff-4645-953e-99352256b772"
        },
        "item": {
          "id": "306a572c-0c49-441b-adca-8469c7881b20",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "48c72830-7113-4b55-adbf-a580b0e4710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e0f030-be6a-4a9a-aed5-b4adf0cf7c74",
        "cursor": {
          "ref": "238c64b7-a98d-4b34-9d94-efdfab11cf2b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a0f25d16-a2f9-4d53-855a-54e60e081c62"
        },
        "item": {
          "id": "c5e0f030-be6a-4a9a-aed5-b4adf0cf7c74",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4ee11a5e-3618-4cf0-843d-f17351210275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b6d95f-9aa2-457e-992b-d319e0953e9c",
        "cursor": {
          "ref": "c3be6444-f845-4c0b-a60d-5e4a71c51a35",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3fe17fb9-f868-4d93-8b27-9315868b2b42"
        },
        "item": {
          "id": "51b6d95f-9aa2-457e-992b-d319e0953e9c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08e86d65-fd4e-454f-9e1b-20418958829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88dd415-6c05-4ec4-9193-857a8a863576",
        "cursor": {
          "ref": "d8765484-ca49-4c9c-b7fa-1f758d1a91c4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "10650d60-e269-4d34-8218-545eb5a1e622"
        },
        "item": {
          "id": "b88dd415-6c05-4ec4-9193-857a8a863576",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9dbcea61-499f-4437-bf00-7f07605291ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0283c7c0-069c-4a2e-b105-c33d19a3826d",
        "cursor": {
          "ref": "e41d29af-c8c2-495a-8bf9-8184e391329c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd2dac53-5d45-4c2e-a702-6bd924f70ca1"
        },
        "item": {
          "id": "0283c7c0-069c-4a2e-b105-c33d19a3826d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "639b5f10-4b5e-402e-b1cc-f90c19ffc9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f153f8ba-d926-4a85-bcb1-e090ab2f5006",
        "cursor": {
          "ref": "8272e0ee-ea00-4809-96b6-9813f1520415",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1de040d6-2022-4f32-a40e-a4f83cf52e86"
        },
        "item": {
          "id": "f153f8ba-d926-4a85-bcb1-e090ab2f5006",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "69683e75-b67a-41b7-9681-0f4abb3eae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8513cd0-c3f9-4d3d-b628-d741897592a9",
        "cursor": {
          "ref": "10c12f7b-eed5-49c6-bbae-af8f5d37c5af",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e288595f-abd9-4785-b5d2-c132305fcac3"
        },
        "item": {
          "id": "a8513cd0-c3f9-4d3d-b628-d741897592a9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fd7e2fae-f2b5-4a3e-9ecd-b16410a96cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74c3363-14a7-48d9-bb46-1a880f6f74d8",
        "cursor": {
          "ref": "1f433854-6074-4c71-80a9-184f5d5b1746",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f11ab863-d96c-4fa1-afba-a62862cb16d4"
        },
        "item": {
          "id": "f74c3363-14a7-48d9-bb46-1a880f6f74d8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d986ec9-0b6b-4d6c-a323-d0ead9581c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1addb088-fd73-47dd-a157-461188e2890b",
        "cursor": {
          "ref": "2f34ead8-7889-4c26-964e-953aa4e76c15",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e0ec351c-347e-472f-932f-d332423ee761"
        },
        "item": {
          "id": "1addb088-fd73-47dd-a157-461188e2890b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "01f1b0ea-940e-4294-a9ad-f12bcfee7175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cadea2-ae20-485c-95ce-3d95ae6cd17b",
        "cursor": {
          "ref": "d527c402-40e5-46e6-839a-67baec41986f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a05b21ed-3056-4f77-a566-5ecb6c0d39a9"
        },
        "item": {
          "id": "d8cadea2-ae20-485c-95ce-3d95ae6cd17b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "930be909-2a7b-4c82-9e7c-d174256bc53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa16e5-8c43-4295-9f17-02593bcc41e5",
        "cursor": {
          "ref": "622fb240-762a-4af6-a43d-4cfd97af0ad9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fcbd11b0-04cb-479a-a4be-5c832943de07"
        },
        "item": {
          "id": "10fa16e5-8c43-4295-9f17-02593bcc41e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6ce3c36f-326c-4398-9306-4ed9b7a43a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d85f732-62ce-4f3d-b2ba-3867657d4f84",
        "cursor": {
          "ref": "1099e80b-c927-4215-8663-f663398c718c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d7345722-d4a1-4bf3-9890-32a1b16056b8"
        },
        "item": {
          "id": "6d85f732-62ce-4f3d-b2ba-3867657d4f84",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1dc6bdea-4cb5-4096-827b-18097a84db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27047167-dfc7-469a-9674-3c94f2b87faf",
        "cursor": {
          "ref": "1585976d-f030-47c8-969f-c31d358c9e71",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10757dd0-deab-48f1-8884-80529b0b5ba8"
        },
        "item": {
          "id": "27047167-dfc7-469a-9674-3c94f2b87faf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "335c7a6e-2945-42d7-9f78-736c6bbf775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2b95fb-f4d7-4d5e-be9a-df883288eb79",
        "cursor": {
          "ref": "c956ffd4-22a5-4e58-84ee-3b8fd1d788ac",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c35ed73f-389e-4507-809b-e75e7bb2cce0"
        },
        "item": {
          "id": "ea2b95fb-f4d7-4d5e-be9a-df883288eb79",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8a514e80-176c-45c2-b745-e5b89e4da241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84f948b-9a84-46b7-80c8-041b2fd3db10",
        "cursor": {
          "ref": "8065702d-ef1c-4721-8a04-ca3ed2c0bbd9",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b3a1a0f-bc1d-4a82-8b1b-539c6cd888a9"
        },
        "item": {
          "id": "d84f948b-9a84-46b7-80c8-041b2fd3db10",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7e55d373-38d0-438d-8ade-33c135dfa629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2706aeb5-7325-4743-9742-1fbe79cfb751",
        "cursor": {
          "ref": "b972ab96-27e6-4614-82e4-68181983d712",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "895a8308-12be-40c0-9250-d0e2804d4ed3"
        },
        "item": {
          "id": "2706aeb5-7325-4743-9742-1fbe79cfb751",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0a01ed20-aba3-4257-8fbe-e90998e97fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec7b0a-c588-44d8-b1af-79853fb4f682",
        "cursor": {
          "ref": "28e0fbe9-076e-4445-b2a9-9c1e04542a15",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c42a10b5-b13c-4d36-91af-03a0477e2c3c"
        },
        "item": {
          "id": "3dec7b0a-c588-44d8-b1af-79853fb4f682",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3f158b27-2b0b-40d2-937f-7421f19f9e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2ea9a9-3476-4bc1-a254-d6635de9b286",
        "cursor": {
          "ref": "e8cabb79-9cdd-4dd2-9cbc-9f22f09ba444",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "28152bf5-089b-4db4-bae3-6b10a911f2ad"
        },
        "item": {
          "id": "fa2ea9a9-3476-4bc1-a254-d6635de9b286",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9a63b231-85be-44bf-8202-912a25e369b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f8185-2966-4325-a87b-06da3b09853c",
        "cursor": {
          "ref": "38a61d0e-92b7-46f3-8e60-00c5aa17f8e9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1c41dba7-9d82-4db2-bca9-a54f7d540a21"
        },
        "item": {
          "id": "1b7f8185-2966-4325-a87b-06da3b09853c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1b39b5eb-2bed-496c-8bec-20c7f086d8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c1b21-c025-4c15-82dd-5ebaf603c6db",
        "cursor": {
          "ref": "df6b8aad-c7f6-4cb8-bae5-96098ed27614",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1406760b-9275-4e7b-8d1b-bc662acaeff7"
        },
        "item": {
          "id": "263c1b21-c025-4c15-82dd-5ebaf603c6db",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7969a091-3154-49d3-a22e-b09383a8351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fe3496-5442-4e98-898c-303db40aaeff",
        "cursor": {
          "ref": "370c1c12-41d0-4ac2-bea2-9e554bd4907a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "883dd98d-0446-49d1-a7dc-136bdb8b254e"
        },
        "item": {
          "id": "e7fe3496-5442-4e98-898c-303db40aaeff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "05468936-e4fc-4b25-b99d-e86b9a7f1089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0262bc-8a6c-4efb-8999-dee3ab9edee7",
        "cursor": {
          "ref": "c3b46108-cd7c-4fe0-bec3-d30c9bb7a9dc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c10448a-396d-402d-be0c-63ad569ec5c3"
        },
        "item": {
          "id": "5f0262bc-8a6c-4efb-8999-dee3ab9edee7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aa87dccf-c453-40f0-a5bb-a51e267b80ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b3a81-008a-4c41-8d70-5caaa3c1fe68",
        "cursor": {
          "ref": "e231c8cc-8b97-4fbe-80bf-20789f2fab91",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aa627e46-1955-47b7-854e-b666ff1a284c"
        },
        "item": {
          "id": "c00b3a81-008a-4c41-8d70-5caaa3c1fe68",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7dfdfe38-e20b-47f2-bf9e-d4ef57823cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859e7e7f-b298-4354-b1df-b21de3528f78",
        "cursor": {
          "ref": "11d0d2d1-347f-4d15-8f73-1187e543115f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "13770bfe-a533-4b48-858a-de016d8a91d2"
        },
        "item": {
          "id": "859e7e7f-b298-4354-b1df-b21de3528f78",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9ca5348e-5776-4127-9896-51a90a355c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1931a9c-7563-4058-95cd-e3babaf1ae3a",
        "cursor": {
          "ref": "1c540d06-de6d-45a0-8c8a-660f26563426",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f6a6b44-61b4-4ce2-b7f5-944a2861563e"
        },
        "item": {
          "id": "f1931a9c-7563-4058-95cd-e3babaf1ae3a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "699ab30a-475e-46f4-8135-9878bb71c651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b79e6dd-941d-4ff4-bf8f-366fb5ed4bde",
        "cursor": {
          "ref": "5426899f-d989-4816-b942-3da53d374305",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "17a957d3-502e-44d6-9d31-cf7cbacc4e07"
        },
        "item": {
          "id": "8b79e6dd-941d-4ff4-bf8f-366fb5ed4bde",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "994476f1-11ed-475f-aef1-389e5039e783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93f612a-6887-4d38-90dd-16942abb6e22",
        "cursor": {
          "ref": "fcdbfd53-7f69-4b2d-a9c7-8dee111f01ec",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "00a0008a-c174-4bef-b89f-ae6a09ddbb0a"
        },
        "item": {
          "id": "a93f612a-6887-4d38-90dd-16942abb6e22",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d3410287-2d73-49f4-bc61-a07a586a377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1afefa-9e7b-4d26-a71c-8e4d2516b0d7",
        "cursor": {
          "ref": "baa65dc8-a030-480a-952c-85d750e2fbe7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "419c241f-2fe2-4cfb-95c5-03e919a14b95"
        },
        "item": {
          "id": "7e1afefa-9e7b-4d26-a71c-8e4d2516b0d7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f42e549-5941-4c23-b0a3-048d94abb3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102cf456-d001-4c87-8196-8aa5600bafba",
        "cursor": {
          "ref": "64672cb5-8479-466e-beba-80111e4898fd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "679fbe92-760e-40ef-bbb2-9f970434e19c"
        },
        "item": {
          "id": "102cf456-d001-4c87-8196-8aa5600bafba",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3648fa1-3b39-4d26-85a5-7e9e3049c1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09d179-e71b-4d05-8644-4bcdb697fa90",
        "cursor": {
          "ref": "2588dd69-059f-41a6-ae50-5f2c3d68338c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5956534c-18ad-4fe9-9e95-2e24f2b6ef75"
        },
        "item": {
          "id": "da09d179-e71b-4d05-8644-4bcdb697fa90",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7312a098-0104-4712-8288-96dee0d66fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec85f6c9-dd75-4077-bbce-56b5a4e34261",
        "cursor": {
          "ref": "939fbb48-74f7-4720-b395-f4321b6fac5b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "98f78397-d653-4c86-8ac5-8e3543543795"
        },
        "item": {
          "id": "ec85f6c9-dd75-4077-bbce-56b5a4e34261",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "780787e4-2dc1-4a13-a432-4d136c55751c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2fe284-fcf6-4b39-9335-1c2837fc39fa",
        "cursor": {
          "ref": "1931b0ee-3559-4043-940a-b0c3b89d93a9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7877dbd1-b4f3-46ee-9a7e-ecd577f60169"
        },
        "item": {
          "id": "3d2fe284-fcf6-4b39-9335-1c2837fc39fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7038106d-e789-4d04-99bd-4dad0a740489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66caef00-fcd6-4ad9-a1d8-c06db550d6e0",
        "cursor": {
          "ref": "1312ef63-1c0a-407f-af6c-8f9bc7634cff",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e979f39d-ea76-4aff-a2ce-d81ad4b71415"
        },
        "item": {
          "id": "66caef00-fcd6-4ad9-a1d8-c06db550d6e0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f2c8e2e1-18d6-401d-81fc-81136c2c9edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5ac04a-f06f-4fed-96e6-34ebdf54a3a0",
        "cursor": {
          "ref": "8c6f45db-3572-4690-bed4-6ff99b4f641a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "672d75a5-67d5-43c5-8971-791b147b646d"
        },
        "item": {
          "id": "cd5ac04a-f06f-4fed-96e6-34ebdf54a3a0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a6521ac5-b2c2-4a8b-bea0-b307ec0ec2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6554c4bf-2880-482b-91aa-1a4c8a6acb31",
        "cursor": {
          "ref": "71b2a595-e96a-4e37-ad70-970ea567005b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "272d0482-92b9-4a9e-a5c5-6e9ab322ac84"
        },
        "item": {
          "id": "6554c4bf-2880-482b-91aa-1a4c8a6acb31",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "17416d32-f41a-40d3-9db6-ee4ffb571844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37db51c7-819d-4418-a081-249e50344d42",
        "cursor": {
          "ref": "f51b4f21-83d3-4f26-af1a-29847583eb88",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27909e4d-ea8e-49c0-9a0d-e2e31a328f23"
        },
        "item": {
          "id": "37db51c7-819d-4418-a081-249e50344d42",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9b7343dd-b0b5-4eea-8fa5-79fd4f3be4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6013736-50e1-46ee-beb3-da33f466fa7f",
        "cursor": {
          "ref": "e8854fa6-e128-45a1-a493-e869c578ec34",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8dde817-ea57-499e-b831-13a88d3f8ae3"
        },
        "item": {
          "id": "b6013736-50e1-46ee-beb3-da33f466fa7f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "27a94f68-dff1-4ebb-a6f3-8a966cab0019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bbd02f-5baf-4fe1-8060-082f227482c6",
        "cursor": {
          "ref": "4ffbfbc0-3046-4c9f-86da-d3929eb87804",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "042999da-fb4d-4319-b9b0-f878488280ff"
        },
        "item": {
          "id": "c1bbd02f-5baf-4fe1-8060-082f227482c6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2bec9052-727b-4833-8e77-3450205d90f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f4d072-c642-42ab-ad70-c23c79008010",
        "cursor": {
          "ref": "bb063411-bc85-424a-9486-c74fc276e2d9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6949b545-d268-429c-a65d-60b43bae8dc5"
        },
        "item": {
          "id": "f5f4d072-c642-42ab-ad70-c23c79008010",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "989a26d9-3986-4454-a8d2-8bf08b736693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445d38c3-1a8b-4459-b3d1-06a83fb2bf34",
        "cursor": {
          "ref": "0d1b09c0-3462-4e8d-8eb6-e96dfd3d181d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c05e4ef-0c1e-4af7-9688-c51c839cf1dc"
        },
        "item": {
          "id": "445d38c3-1a8b-4459-b3d1-06a83fb2bf34",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53a2f2d7-cabe-4626-bc15-828b903ae4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5ea011-eeaf-411d-931f-b344c70bd6b2",
        "cursor": {
          "ref": "d989a1ce-af47-475e-bb88-0ca268404d09",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6cdaa504-9dbc-46eb-b46e-a3d9bc6d5744"
        },
        "item": {
          "id": "0e5ea011-eeaf-411d-931f-b344c70bd6b2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8518ed50-2a96-4c10-a9f6-e17a754ceb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f73e794-f991-4688-9a9d-9d84d11ce507",
        "cursor": {
          "ref": "879feeb9-9879-4b24-a5f2-b10095eb0dc2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "509aaa77-21b4-47e0-9468-1714ac998a9c"
        },
        "item": {
          "id": "5f73e794-f991-4688-9a9d-9d84d11ce507",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f38a337b-d303-4ec6-9b8f-f49b7097fbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28c40b-b835-416c-abaf-1dcd6847219a",
        "cursor": {
          "ref": "86d042b1-e5ab-45a5-8fec-a43ceb0752a7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e889aab6-0fe1-4f50-a37c-0cd219afa2cd"
        },
        "item": {
          "id": "ca28c40b-b835-416c-abaf-1dcd6847219a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2342784b-659e-411f-bcf4-7914a0a6237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a545344-0320-416c-b0a5-b8a18c6fce96",
        "cursor": {
          "ref": "99ae4808-dfab-4e2e-8b1a-3958e02c4346",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a685fb46-7db9-42a1-9edf-6f7aabd29dd2"
        },
        "item": {
          "id": "0a545344-0320-416c-b0a5-b8a18c6fce96",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac7e269f-598f-4fa8-a0e3-e9d981336c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172b0904-991e-4f20-bdad-73578031f456",
        "cursor": {
          "ref": "169c6dfd-b29c-4348-bc9b-383d583fe1f3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fbf63fd5-112c-4c5d-b3f4-bb9d736c73f2"
        },
        "item": {
          "id": "172b0904-991e-4f20-bdad-73578031f456",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "832d9a77-f524-4262-962e-f91ca55e6ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60afd1f-49c3-4043-adc3-596212d1656a",
        "cursor": {
          "ref": "740f7c18-a403-477f-9f4f-21fb03ff8fd8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ee4e2602-631c-4916-af15-a23497c7383d"
        },
        "item": {
          "id": "e60afd1f-49c3-4043-adc3-596212d1656a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b8d068e8-75cc-44fd-bf91-fee9b40b22ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a633d1f1-d67d-46b7-96dc-9f4dba42a2bf",
        "cursor": {
          "ref": "02a66a43-8952-4bfc-b6eb-d6ce82026d75",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ca71e0b7-7647-40a6-8229-40daed8da17e"
        },
        "item": {
          "id": "a633d1f1-d67d-46b7-96dc-9f4dba42a2bf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ae09039-b1ab-4d22-ad94-726b12a35770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0a8cc7-e81c-4008-ade3-912bac2784a4",
        "cursor": {
          "ref": "0d8f9799-0b8a-4187-b813-93f02b5fd60b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3ce05a91-b35f-45a4-a91e-b5cfcbc3e24f"
        },
        "item": {
          "id": "4e0a8cc7-e81c-4008-ade3-912bac2784a4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "efa2aee9-c403-4d23-a9c6-cba2aaa75a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325ab09-60a5-4e50-9d07-a1c06b50441e",
        "cursor": {
          "ref": "9858f7b1-d949-46ef-8281-653c48e7d4a8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9c9ffec5-e867-494a-a928-28ef56c134d3"
        },
        "item": {
          "id": "f325ab09-60a5-4e50-9d07-a1c06b50441e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "635bd16f-c4ae-4cd9-9d13-12f8cd97fa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dc6de9-623a-4028-a0c0-0b5cf72ca12e",
        "cursor": {
          "ref": "89b2c3fd-eb55-4d30-889d-8d1b2f280d5c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2ebce192-7250-4527-959d-12a0b48a656b"
        },
        "item": {
          "id": "11dc6de9-623a-4028-a0c0-0b5cf72ca12e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0314dcf7-ddf2-49c9-9d89-51a5d40e4f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d20e00f-fcd6-41b7-b5e6-e6f77a4dbaf4",
        "cursor": {
          "ref": "5d006f83-a71d-4820-92e4-654ea90ef79c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "827c5e87-7038-4fe3-862c-12770c4b78ff"
        },
        "item": {
          "id": "7d20e00f-fcd6-41b7-b5e6-e6f77a4dbaf4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aef4494a-7174-4f04-837c-a2465c292d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcbf8ac-85f4-4e67-8fcb-d3b4bbf48717",
        "cursor": {
          "ref": "0bfad668-4a31-479b-ad48-9da30cdf38ce",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "919417c0-928d-4e57-afa9-4e250ef976e1"
        },
        "item": {
          "id": "afcbf8ac-85f4-4e67-8fcb-d3b4bbf48717",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5de82c71-a57f-4d34-b89c-207e82f245e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb74676-e631-4c20-a3dc-6d4ceea158d3",
        "cursor": {
          "ref": "d4b09c12-88fa-473e-8c24-bc181aeb6075",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0e1c4799-0490-4901-8694-502bcda60648"
        },
        "item": {
          "id": "cdb74676-e631-4c20-a3dc-6d4ceea158d3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d03d744e-6f58-4675-8869-fc04e33b0a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566cd0fc-3fbf-4f14-a72d-3f7a57513136",
        "cursor": {
          "ref": "91493cbb-9185-49e1-a4c4-8d2f1ea94ef6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "65d635c6-c342-4abe-aeb7-b5add88dbdea"
        },
        "item": {
          "id": "566cd0fc-3fbf-4f14-a72d-3f7a57513136",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "94517059-1a27-4759-b7ab-4120b6b8d45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb21fa74-042e-4b8f-8a98-2ec61a18af41",
        "cursor": {
          "ref": "115a2fff-5e5f-4371-a9b5-a4128d1c25b9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "475ff047-a1e9-4735-94c2-f17394a277dd"
        },
        "item": {
          "id": "eb21fa74-042e-4b8f-8a98-2ec61a18af41",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "12ab1650-1a11-4071-8045-5a6d764182ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94982467-5baf-437d-a958-46e8d792206b",
        "cursor": {
          "ref": "844f427f-c746-4584-ba5d-9fc5720c7ff0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c8d3df5f-769e-4822-9fd6-eb3aa9a40bce"
        },
        "item": {
          "id": "94982467-5baf-437d-a958-46e8d792206b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e54738b5-ba46-4dbb-9e3a-853124880c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a13dc6-7422-4883-ac22-5afff031a579",
        "cursor": {
          "ref": "aef4f17f-5842-4082-926b-b63d22e73b4b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "48b48eff-ed3a-499a-ba8e-8c4f13d29c45"
        },
        "item": {
          "id": "f1a13dc6-7422-4883-ac22-5afff031a579",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd508977-3ce9-45cb-9793-a54774430d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff401827-09b1-4a45-be67-35c8f177ce50",
        "cursor": {
          "ref": "1192ada7-7f54-4134-8f94-7e7632591810",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3014b35b-15b6-41b9-a92f-346ed68eb465"
        },
        "item": {
          "id": "ff401827-09b1-4a45-be67-35c8f177ce50",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "644e1a4a-fb8c-4d38-8005-86f2c641ba7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de304b-2c74-4b8d-9d83-50a1024ffffb",
        "cursor": {
          "ref": "b05df478-def2-4725-8290-15d11a5da36c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "994e223e-7481-47b8-9d20-41bc3cc61b3c"
        },
        "item": {
          "id": "86de304b-2c74-4b8d-9d83-50a1024ffffb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff58edf7-7e35-4e06-a10b-6cbf24bbd332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8144d2-1aa7-4aae-ad7a-0335f739ab66",
        "cursor": {
          "ref": "64b9d66f-1ff4-4180-af3c-22328cf9b3b9",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5627fab0-8d67-4d1a-88e9-5b0509bc46b9"
        },
        "item": {
          "id": "ab8144d2-1aa7-4aae-ad7a-0335f739ab66",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "af73821d-e9e8-4f71-a36c-80b20f13f119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6110c9-f76e-4152-90c0-8b4cf012fd9f",
        "cursor": {
          "ref": "3a0e15be-0d35-44a3-9261-da56e668f493",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f743c129-fca4-452f-b5b3-d9bf21716588"
        },
        "item": {
          "id": "bb6110c9-f76e-4152-90c0-8b4cf012fd9f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6542b36-037c-4a8b-a8fe-c3dacaa04223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f415df-9d3a-475c-963e-f65d6e8fc1ae",
        "cursor": {
          "ref": "75cb230f-2164-4efb-a9a8-c8c536112b6a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "84d3a6b0-5268-41f0-aa66-5c42bff20cc4"
        },
        "item": {
          "id": "a6f415df-9d3a-475c-963e-f65d6e8fc1ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cd483347-d466-4d55-b221-a2ee064c0e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15416b85-4323-45f4-8cc7-c2ba055cafb6",
        "cursor": {
          "ref": "3850c672-ea5b-46d7-adf9-b8412de2e353",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6ec0709c-fd7f-46ec-85be-15d849a6f729"
        },
        "item": {
          "id": "15416b85-4323-45f4-8cc7-c2ba055cafb6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "046989b9-9ebd-427d-85d7-0d706dbe0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddbf2d9-b682-423b-bb54-e37027ed90a8",
        "cursor": {
          "ref": "47c54811-db83-4388-a17d-19c202458dda",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d8d2da40-8cf4-410f-bb88-84c980be6a96"
        },
        "item": {
          "id": "fddbf2d9-b682-423b-bb54-e37027ed90a8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "06875a5f-0801-4789-9a1a-32f1c599f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9ac298-0137-481f-a3b0-f4de0c8195ec",
        "cursor": {
          "ref": "0b0f052e-844d-49b2-a17d-718127d40438",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f37f84bc-7912-440b-809c-71ef978aac17"
        },
        "item": {
          "id": "2d9ac298-0137-481f-a3b0-f4de0c8195ec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa249746-1854-441e-bd7a-218a93702f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dca045-304f-4237-b0e8-00676871b332",
        "cursor": {
          "ref": "9a3d126a-bd12-4848-8e15-13e94d2df821",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6690ebcf-d83c-492a-bdfe-dc29b61eacbb"
        },
        "item": {
          "id": "10dca045-304f-4237-b0e8-00676871b332",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "84d8733d-e4ea-457f-a197-ee3d483870b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e303e0-28c3-4888-9cb5-321e9a6343d8",
        "cursor": {
          "ref": "86dbb3d4-68d9-4a08-a711-9a0d7120c0cc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b53441bb-6e71-41e9-8a30-be620ac53dd0"
        },
        "item": {
          "id": "38e303e0-28c3-4888-9cb5-321e9a6343d8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b01079e-edcd-4b61-9204-4960fc180158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2415adb2-2f11-4968-ab39-fe19d1c49a68",
        "cursor": {
          "ref": "4b143679-2e38-4e10-96af-cf7d8dcccd08",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "074be853-1fd2-4c2d-a14e-6e8ffab3995b"
        },
        "item": {
          "id": "2415adb2-2f11-4968-ab39-fe19d1c49a68",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7178b3fb-7c0d-42fc-8eb9-ce3e27b83d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e8b5ef-8ed3-45fa-97fc-afd577338345",
        "cursor": {
          "ref": "04c4e732-0e0b-4287-87b0-be54f6696f33",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c83066fb-512f-41d8-850e-60b420a7187f"
        },
        "item": {
          "id": "43e8b5ef-8ed3-45fa-97fc-afd577338345",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "801b8ba7-f870-4d51-83c9-42a5869677b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2180d3b-5325-4c49-90f2-83ca38f76938",
        "cursor": {
          "ref": "6ef8f262-0d51-4cb1-b99e-94a2f0cc0e30",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f1cc2b81-1c66-46ba-87e9-101e7f173fb9"
        },
        "item": {
          "id": "f2180d3b-5325-4c49-90f2-83ca38f76938",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "efb97fcf-355f-495d-83b3-3b8d93b51ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478dc3ea-fccc-4e90-a52c-7e16a05df142",
        "cursor": {
          "ref": "e9665b84-dc2b-4929-91b8-7942b16f268d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3ef8045c-64a9-4ba6-aee0-a56c0461b692"
        },
        "item": {
          "id": "478dc3ea-fccc-4e90-a52c-7e16a05df142",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8cbf4e92-2e40-44ac-9e58-3f6c98bc9a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fe6892-c936-403c-a8da-f1991e6cc02c",
        "cursor": {
          "ref": "82b4b5ee-e8f6-493d-bf9c-fd487aa508b5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "11fbb7b2-6091-471b-a455-5be3fcf243a0"
        },
        "item": {
          "id": "17fe6892-c936-403c-a8da-f1991e6cc02c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5ccc2187-b573-4500-87e9-2890e9ab61b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abb9c48-88f9-4df3-95a6-fdb025df50b8",
        "cursor": {
          "ref": "1134996c-ebec-43f4-b44e-67b85b9d46f1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8a330480-0960-4e3d-810f-c9ea3979e143"
        },
        "item": {
          "id": "9abb9c48-88f9-4df3-95a6-fdb025df50b8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10a8135f-d69e-46fa-9beb-6c5ab71cf840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ac3de9-55d9-4a3c-940a-84da47563707",
        "cursor": {
          "ref": "34486405-e4da-402f-980b-71c87a34561d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49db0132-2935-48ce-b8f0-4b0b7d842f96"
        },
        "item": {
          "id": "66ac3de9-55d9-4a3c-940a-84da47563707",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "779e7d92-c79d-49b8-8893-363d58798e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1c8506-838a-4226-a50d-f3b4242c7d98",
        "cursor": {
          "ref": "06621ceb-13dd-49be-9ecc-3c15932c780e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c2c598f1-5f58-4021-8cd5-45d582719a1f"
        },
        "item": {
          "id": "0f1c8506-838a-4226-a50d-f3b4242c7d98",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0a3d012a-bc8d-4a06-bcb9-497fdf3a6f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd03bf4-b9fe-4567-a60c-2899a36a8347",
        "cursor": {
          "ref": "f5378f40-ff27-4d7d-aa5e-c36b539b6dee",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0cfde1c7-cb64-42bb-b266-1036a34ba84e"
        },
        "item": {
          "id": "4dd03bf4-b9fe-4567-a60c-2899a36a8347",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d802a87a-d086-4691-b667-455611271e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df4fea8-be6c-462b-98bf-3c37a4a562a1",
        "cursor": {
          "ref": "66f08bd7-a4b9-4b2d-9ecc-ce1abf2a906e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2f065779-315a-4e4b-b8e6-837b4ef082e2"
        },
        "item": {
          "id": "9df4fea8-be6c-462b-98bf-3c37a4a562a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9a7a6f2-6b4f-4b05-83bf-34995075964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ce0db-e628-4d72-9341-56b81013fcfb",
        "cursor": {
          "ref": "bd5cb8df-94bc-41de-8f6d-7a2e36d6ca26",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7356f9df-2416-4f2f-b284-5af84e2b989d"
        },
        "item": {
          "id": "544ce0db-e628-4d72-9341-56b81013fcfb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ab2e6ea6-ec3c-4472-b5f4-5cf5211c37af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c45e57-91f9-4706-b77d-c495a5869f3e",
        "cursor": {
          "ref": "612e04f4-2d0c-4aa1-a5d2-a34c843cb052",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ef19cfd4-813d-4d0e-a39f-4213a6f136e0"
        },
        "item": {
          "id": "d7c45e57-91f9-4706-b77d-c495a5869f3e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e0695bdb-9c6d-44dc-8238-7e659fa051b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cebee97-2d8d-48da-9b32-316ded5e5d26",
        "cursor": {
          "ref": "047d00e5-45c1-4b60-b330-0d9d1e03a08d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0312ad99-be80-459a-abef-21e8b60887ad"
        },
        "item": {
          "id": "0cebee97-2d8d-48da-9b32-316ded5e5d26",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ecd24f75-b8ba-4adf-8f75-b659173d2740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5dee9-95e0-45c8-b19f-adb0e40e334e",
        "cursor": {
          "ref": "ff3d747b-bb3b-44aa-b88f-abe1fb19e860",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4cb9140a-b3cb-427c-ac9e-c6444bcb15a3"
        },
        "item": {
          "id": "fdd5dee9-95e0-45c8-b19f-adb0e40e334e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d0e7c954-dd0c-400f-a33d-4c5d4ec6eaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286a0c8c-3dd9-4b26-b543-09a4a2f94fee",
        "cursor": {
          "ref": "1689cbba-65bc-4b6d-b385-ab4923b719c0",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "18dfff43-1785-4a04-8a17-759e26c2b1d6"
        },
        "item": {
          "id": "286a0c8c-3dd9-4b26-b543-09a4a2f94fee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5e8e9f7d-3c76-4af7-adef-dfe29c374b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9864721-d20e-4541-bf4b-dde70a769830",
        "cursor": {
          "ref": "74b2b25b-08c1-46a9-a50c-24ab331cf52e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d08ea5ba-8201-421b-acd8-0c2810cdbc54"
        },
        "item": {
          "id": "c9864721-d20e-4541-bf4b-dde70a769830",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "61a0f490-dc41-4510-8f27-7b1a36e22157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1905e10e-df3a-4538-a24d-f4ef253fe46b",
        "cursor": {
          "ref": "283c4362-b3fe-4ef9-ba37-afb9f0e9d6bf",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bf7cdefa-44b8-469c-8da6-5a734026ab34"
        },
        "item": {
          "id": "1905e10e-df3a-4538-a24d-f4ef253fe46b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e4fa584e-bc80-4b48-8e30-6f7c3b58d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97300af-25d9-4753-85e6-8ea77628ddb7",
        "cursor": {
          "ref": "c9187c1b-2a41-4707-91db-0856d65f2e30",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "30e3f9c5-e839-4055-bc86-53db52b86408"
        },
        "item": {
          "id": "d97300af-25d9-4753-85e6-8ea77628ddb7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5a224343-fe18-409b-ab97-b745ef573a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268dbf7-69c8-47eb-abe6-c92254751d68",
        "cursor": {
          "ref": "30f39b37-5011-48a9-b4f4-8c665620b873",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7247fe3f-759c-44aa-8d71-3325860c8627"
        },
        "item": {
          "id": "5268dbf7-69c8-47eb-abe6-c92254751d68",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e7a7d72-e89b-4a42-af96-5482c2c525d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615ffde1-206a-43dc-9aed-7578a268f357",
        "cursor": {
          "ref": "c7aa55ef-dc56-4d02-a7ca-177c31583668",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d8237e75-6d72-4ea4-a507-932685475322"
        },
        "item": {
          "id": "615ffde1-206a-43dc-9aed-7578a268f357",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1eaad9ae-b5c6-4820-a189-fd829e497963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84321985-a3a2-42cb-9824-76153bc64d41",
        "cursor": {
          "ref": "981996e3-f1f1-462f-8d3e-080ee5ff97ed",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c7e4b278-433f-4868-a789-adec5ad29447"
        },
        "item": {
          "id": "84321985-a3a2-42cb-9824-76153bc64d41",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "807486b2-7559-4ddb-a40c-b12fbc76bf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f3a756-a5fa-4f11-9118-7c913628a984",
        "cursor": {
          "ref": "9a36b95e-e0a1-4c09-96f8-e240aeb2b7ce",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "30626873-3acb-4db8-8fd6-9b8afc0f5475"
        },
        "item": {
          "id": "10f3a756-a5fa-4f11-9118-7c913628a984",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae36e64a-dcab-439c-bc4d-8a4c359b8b4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24770604-ada9-466a-a35d-aa38d84199e2",
        "cursor": {
          "ref": "67c125a3-0fb2-46f7-83cb-83fd728ee393",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1ff3a83d-e848-4723-9074-93de92b5be2e"
        },
        "item": {
          "id": "24770604-ada9-466a-a35d-aa38d84199e2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bd281f94-a24a-48ef-8849-4c35ee5ec4c1",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd51c749-4c86-4960-bdac-3bdca0bf36c2",
        "cursor": {
          "ref": "6e6ccf2f-42f0-4b23-a41e-e299b6f2493f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b3805b05-3497-49e7-8a86-266188a7f073"
        },
        "item": {
          "id": "bd51c749-4c86-4960-bdac-3bdca0bf36c2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33b6b2c6-97e1-4bce-a8b1-e8071d90e54d",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39145ebe-f56c-4c22-98ac-d63f3c308e31",
        "cursor": {
          "ref": "6763b689-7f8b-4f80-92c5-75e9e8e33bb5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "39a954e7-a530-4c9e-a46d-699081cca755"
        },
        "item": {
          "id": "39145ebe-f56c-4c22-98ac-d63f3c308e31",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ff377674-d130-412e-a966-f7046d447817",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8677c6b1-dc81-4cfc-b2f7-5437e8464373",
        "cursor": {
          "ref": "a7e6071a-923a-4354-9567-d10a85d8a194",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "66fd880a-a077-4e9a-b1df-fc62607ac814"
        },
        "item": {
          "id": "8677c6b1-dc81-4cfc-b2f7-5437e8464373",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "beba196f-473c-4718-baa1-19b59047df3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8677c6b1-dc81-4cfc-b2f7-5437e8464373",
        "cursor": {
          "ref": "a7e6071a-923a-4354-9567-d10a85d8a194",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "66fd880a-a077-4e9a-b1df-fc62607ac814"
        },
        "item": {
          "id": "8677c6b1-dc81-4cfc-b2f7-5437e8464373",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "beba196f-473c-4718-baa1-19b59047df3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1111f95-1797-45d1-a9dc-f9e6638f241d",
        "cursor": {
          "ref": "b4e6658b-7b2a-403a-9c59-ca678ee59522",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "92b94d5d-aeef-4e2d-9088-9bce92233dfc"
        },
        "item": {
          "id": "d1111f95-1797-45d1-a9dc-f9e6638f241d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95cd20ad-f7c4-44ed-b437-bb5ad4e379f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849235f1-53a7-4df8-b199-9d70b2300fce",
        "cursor": {
          "ref": "575827ff-7588-4cfb-b8dd-85754c45d29f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8651a1ff-0882-4fb3-893b-e32658eb7609"
        },
        "item": {
          "id": "849235f1-53a7-4df8-b199-9d70b2300fce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06479736-ba61-4de2-a7d1-1a6c4f8dd13b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}