{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d4f70295-88a9-44c6-96b5-2a5d980ef514",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a9cdf5f-96af-451b-8088-2aa890fc606e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "533909b7-a9d2-4421-91ea-655c8d0e9ab5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dba6fd4b-eaa7-4531-88a6-93289a43dc35"
                }
              }
            ]
          },
          {
            "id": "b2c4e40c-0dc5-46a3-b563-7c7c52eb8c83",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fafc64e-1ea2-4dcf-a26a-7bde2faab6f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8d25148-26e7-4f00-a14f-fec0509127e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3dd49d4f-0b4b-4728-aed0-efde6f63836f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a42cbf97-9250-4e4d-9f56-e18d784b1e79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdb6db43-aea6-490a-ade7-7d697db966f4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc03c9b0-44c0-46ed-af1a-2668003bd831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21a7b3ee-6d7c-4140-89f4-d940267c1aa8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ea0ffc1-578e-4f5b-9a63-fca130aff089",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a7608d2-3d05-4cb6-943d-0c8aea89861d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84ee33e7-5941-4f15-84ef-6c576b6e6eaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d716443-35bf-4376-a502-de3f32ba8fcf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b0a6977-51bd-4bb0-ad16-be6b1ae7d954",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5daccc27-24c6-4ba1-ae2c-74ca789433cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7cf5003-07fa-4b76-881b-95012cac70cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4804d9be-db4c-49e9-873e-d672f4877e4f"
            }
          }
        ]
      },
      {
        "id": "858dcb03-a6cd-41f5-8ada-3dc6e0765265",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1c164aef-27c2-4925-89bc-8f814f35ced2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76e43b8c-b4ba-486f-8384-023cb715ddc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbe765c6-035f-49db-8eed-a49c15fd1db3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d4a98c-8f3b-4906-9a1d-c9c07fef4dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbdc63bd-0310-4bfe-a40d-c5e964b6c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86b4bc-6c0b-4db1-a992-aed084987fb2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a365492-e766-4822-8749-973df5e91bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd46839e-a5a9-442e-adb7-d3566d85bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e780cb0f-8a91-4610-be4a-b3c2786a37b1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3dd400-44fc-4bee-9dfb-6e8ba68662d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5c0198d-ae94-4b69-8e8a-a7c880219990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d44e2ff1-4513-471e-afe5-ab135122f3b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c37486ca-1134-470b-b5b7-476b9233139b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d05146-4eaa-437e-b34c-fcdb6f2d1881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5715576f-74d1-4ec4-b15c-cbe4db8c9422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc72e4ad-a92d-4a85-8dd9-f2d5a7ab30d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41ad478-1bdf-486a-801e-b5ed8e148817"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4bb742f-dfae-4ddf-bbb4-0cc5cf4282bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f0384f0-05a3-466e-a5cf-4264e804ba6c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f00946-0e14-4d49-a88e-941ffda31c5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "293ef1ee-c2eb-47b2-92ea-2a2a74827eac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ee36e6f-4865-4f38-93fc-2953f84e7e61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "00f49eb6-b4b3-4770-a922-7dd988ce7d7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "681b981e-48a3-4367-9c21-68daace89d56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2980b92c-bc30-4c64-858a-7a51f927ed7e"
            }
          }
        ]
      },
      {
        "id": "c619b0b1-b87f-47b3-88f6-2ef41dd61b2b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a38ded3c-0f7f-445b-a31a-ed3993c0b447",
            "name": "Negative Testing",
            "item": [
              {
                "id": "557c4fba-f985-4966-882d-82fd8c114b9d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b123aae1-9cd0-41c9-afad-14d7291c92b6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0673e102-1ea9-4172-b284-a4667a491929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c69d7cf-6f41-4938-ab9b-8d9c28386620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b35a3-ab2b-4b12-8357-575c3f48cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e676fae-9e3d-47a1-8644-650c4e69a880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d3393f-ce14-4634-8151-6efbc2a192c5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c825ff57-443b-4298-bbf5-0a1375760e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35f46e-f64b-4127-b388-1c7736d45ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d67e36-225b-4891-a16c-54361b267f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "513a5efc-bd63-4958-a907-afda0cbcf0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e25002-0348-43de-80dd-d01e813c7720",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cac0ca-7f5c-4dbe-927e-a82d4af44c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638b79f6-0233-4efb-b2db-881eaea17a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c7052-1c05-419f-a5bc-32b84c06a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e4140fe-94e4-48a7-aabf-878a7366ccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2ed20b-60be-4e14-b036-b7276baf6106",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c565072b-7635-46b0-b3a0-9be18b0d22d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db639d2-6999-4310-a3f3-bc77b5889b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b1d67d-467c-4d08-a76a-4c64206931e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39570f00-9f75-4f75-8cfa-1b1d2af98f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88998101-331e-4ad5-b985-bb57b34868e1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f49a5c0-a1ca-4932-befb-83c30faf7f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99096e3-964a-4c50-99f3-b2312cddf985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8ebbca-6d8b-42c4-acc0-e51ffdb64993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "430d8865-313f-40d3-9fbf-52247299c29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a991d3e-1223-4e74-90a0-e1bc80b6b11d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665232a-c667-41d2-850f-c2a19dcabaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce4b135-c7ac-497e-9f84-4bf72717ffdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20c2807-ce84-4340-8a4c-dbdc254be51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "984cb8de-72b4-4a71-85c2-ca54ad502e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ede2efb-4897-44ec-a6fb-471f9ef77f9d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9b7bc0-9239-40ca-962c-16122c22606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f695adb2-3d78-45be-b0d7-43721d66f8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e39661-4441-4659-be89-b6d370ede855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7faee15c-1e6b-4880-ae05-73cb4d680da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e107f9d8-30bd-45d8-a156-15cc57fd0dcd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc1c4ef-312a-4e5e-9877-0ac3fe955c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80b3120-bc72-47ee-9f67-4c91faea64e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee8a71e-3b2f-473b-95c3-b4cadee8ff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb4b23d2-d290-456b-96c0-feb7d658a2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7e6fa7-b131-4ca0-b0c2-a7442aa32ed9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb26945-dffb-4f0b-96a0-cc82b6723a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dc7637-e626-4b91-be82-bdc499103e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46eb8dd-5109-4336-a923-02c86cab9493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "782ec0d3-8bbd-415a-b20f-a085368fa0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ee5ff-a790-49af-9010-767dc0ebea02",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7a6ffb-ee77-44ab-8b96-c993c12c6437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ee87fe-9eb1-402d-83a9-69c8303571dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c3d647-de23-48ee-bf74-560c15cb9305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb0efb1-ede9-4494-a732-0ad2622fdd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2591a695-7e8f-4c56-aec2-0db3f2211e8d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c20c3d-abd7-469a-9102-8d3c466c5fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fdc488-0623-48fc-8e59-3645e3e3bebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6066e8b2-2d03-4426-a2dc-946114a9b908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f12b2439-ab54-4be6-b071-2e6dba13bb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d4949a-7f82-4656-899a-95b02252731d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cb4eed-74a6-41bb-9f37-3709a93f542d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b123893f-aaac-4c31-9618-0c8a2df84ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cf6d4c-1dd4-494c-aebe-229d77bdbd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7246b7ad-358f-4514-b4ae-5aad8d2d83c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca8840f-b8af-40d7-8d47-a49785b7b2ff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a0d6e7-30ad-40b3-b7b8-20d92ef67ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a17e94-fd8a-421b-8fea-6f6f399c0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3423e82-5251-483e-af25-35a4db75355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f2b079-1635-4a07-9415-74245b60533f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785626cb-095d-41af-b4b4-cb19ac1a438f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bfc59e-6a79-41af-be78-c332f010d2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6558503f-d266-40a8-afff-37659764e701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1038fb96-ad61-4230-80a6-48d5b01b5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2cb03f6-2fd9-4989-b71e-badb9d2131c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c13a0e-a130-4055-9d09-bd55ae5dd375",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c82278c-da44-48ee-a7d8-c7cc94fedaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b58d12-74ae-4cd3-9652-9e66bdd4ddd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dc5ca3-484f-4472-abdd-b16f3593ce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e718aaa1-fbf2-49e2-a4c9-1b30ca4f7e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f2185e-2e18-40ab-a13b-f9d0f4d5243e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4a1e58-34f2-4355-823b-5fae97d29368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9ce041-fc05-4d82-b2a5-1f23f0b50333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a26acc-aee2-4faf-991c-1d064742c540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3336eb6d-ceaa-4eda-8632-2fb597eff4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c665dc0-d582-4329-bb33-0805854dddc7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708fc9eb-8307-495f-9908-3d8233452b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce443fa-bd46-479a-99ff-0579031f5a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073cfb10-6520-4b7a-aeea-1389d5195d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946d1a8e-ca7d-400d-8924-289b590acaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa50517-d01d-414a-a5f6-fe09b3ad4e8b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17aaed0-b4e0-44b1-ac05-c41b336b5867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72e9012-7054-4115-a7ed-f76309c781d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3b9154-37b3-4a74-96f9-93d10edd0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5348ec45-6fba-48eb-916e-6ca32fe510f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4afdbc-079b-42e0-8752-9b820b1339d3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e514a07-206e-4155-af01-e7edf51248ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19254e0d-7038-4132-8905-fa7c66fe9b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4094d52f-0340-4b2b-ad09-7c24627706eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1013b1-2f65-446a-85d4-f431ea396308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97384c5a-0f0a-4ea9-a824-56c971a0254b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02598ed-1675-430b-889a-55ebc1287eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256fad90-6eed-4b55-83c3-ba7fcad91486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f18f80-09b2-4c2f-b7ad-219e8ed9cb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b0a358-3f18-4ae2-bbbc-d5c6e335115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6bad8-73cc-44e5-a688-4041f3367810",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83adeb62-a030-4ad8-8aae-dd7fef9df81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f8269b-04e9-4f5d-b5b8-59f69e08b1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2f2763-0e83-410e-a5b1-e770dc26a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9542f8-c0bc-4cd6-bc71-48c9d6a0c6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6c331a-cf81-46d1-a651-a08b45b0d06c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9507bd-0288-428a-9d59-dbe60d2eb708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400e3a8f-1286-4e2c-9c4d-6982d0bdfc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee7510-1f02-4887-8281-f096f22f1406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5c471d-538d-4550-ade9-05cae16b8131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5ce1a1-f591-4eb2-8125-85a4202ecc87",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e30cc8-4181-4b2f-95ad-48f97265d7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e567eb75-41e4-4748-ba61-92058f3fb58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac44341-0ad7-481d-8f30-a739eaa743c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4478f43-ed38-47fa-aa79-2dd0ce799b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da4debe-573f-43cf-af1c-f247a5c45149",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706fd3bb-a044-4242-bf1e-cb9f9ecbda8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7db5d1-452b-4b68-b9fd-be69382213fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f7bc42-5885-4f13-b5ed-c678fc63abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9523d17-b1b9-49a1-9f23-46453b62929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59418245-a868-483e-a1ec-39b10d59dc58",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94caeab7-6feb-40a8-9b7f-fc1d07979533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b785a6-5d06-4be6-9131-e3a08de614d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab030af-5052-42eb-b88f-1eb279faa96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bbd9dc-1f0b-47fe-ac09-a2b75de10914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84dd7af-8357-447b-9e2f-bda77d7c093b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cbb1f2-8b48-4739-94a6-f0f04a666ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4671cfc4-9e43-4d76-89d9-09f067814b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eb3365-2b1d-4d4e-870f-53f2f8da31c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ad2d45-2eae-4110-860e-e542f0aec86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6af796a-ada2-4f64-a085-93f15d726a87",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2431d2cb-3f8e-46b7-98c5-a9702b7edb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573946a1-e38c-4ea4-a8d4-7cdc6fa354f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2f8b82-32b3-4b7e-9807-8c4ff3858982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a86af2c-17cc-4378-9b42-c5c6cdcc877d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d09bbd-9f81-4f40-9ab7-f96327e9b62d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b09c24-758d-45db-b17f-87632e9695e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c25b36-403d-4e6f-a563-7c8af6bd2682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7a65bd-86a8-42e2-8532-56d3fbb65ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac2336b-1943-49eb-b792-ea0cd8bb00d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a55fd7-8dea-4468-a34f-e3ba1caea780",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb32f3b-0a06-4474-86c9-6f5f1b5c12af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9868d2f1-2c7f-46a8-9690-21d382654a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c3c5f6-85de-4322-bd24-50fe6b292280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3b8125-f76f-4483-9273-96105377e6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ed290c-0bbe-4fdc-aa49-7b50a5a3a679",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ab17df-709e-4893-9409-19c0bd1a4843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf0a70-4e72-4b72-b490-c1ad53ea7432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba4f2a3-ce32-49d2-8814-f5b23ddd3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca8a4a4-0874-4ecf-9b07-096248773dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ffc940-4906-4b62-843b-9f6b30916cbd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d64f7-6d6f-48a7-ad8c-fa133517a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a734e16-2b17-418e-978a-be065ddc2d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f2cda2-17d9-428d-b5b8-35fc337a1c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b1e6f5-d7db-46f8-8c86-6b605ff0d065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2182b600-3618-4e8a-9879-9a6437879d95",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e942081-9d79-4f9c-aeb2-c1c0eb98de51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7247ec-4d71-41ff-a036-871b55c02adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d2b18c-1ea4-4263-8a80-f406aa88757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba53eac5-6c34-438b-80fa-894e1999ed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20798f6f-2f2e-45c6-9c2b-92c32b8892c9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651e3fe-9254-4d86-b65f-6041c5d2e679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20ba46a-764b-4f6e-98da-5f25eed27a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64984ea8-4e29-4cef-975e-e313dd757dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14c6b99-ec08-40a5-b821-697a45c199fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabeeaa1-d26e-4241-8f64-b0a04225b433",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fcaae7-28eb-4faf-a881-8a4115eb4cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54edd29b-ae4a-46eb-8eb6-af6dde6d8e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdced47b-1e8e-48a5-a30f-38d019ec2829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1695d262-03cd-47bc-bc06-211a9e63e6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8ef7c9-c52a-488c-a3ae-5538f7fa94dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efca745-762a-4190-bdc5-e58229e42df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a84943-6dbe-49ca-8140-72e761c08c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4f030d-5710-44d8-9aa7-64035a4f33fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec17a61-703f-4012-9adb-5bf931edc65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac6342a-dcd8-4a8c-8683-b660d8174c23",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c41caec-3ffa-46aa-86cc-0dede1ac662c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c8a81a8-fcc7-43df-be89-30ca06296935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c17ca5-6f6e-4271-973d-7e1d554bb0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bea1a74c-8306-4dfc-ae7f-d660754f73cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2715489e-8a0e-4f8f-8b70-685a86efb059",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92768630-45de-49b8-a7b7-f483e17a3502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd9fbd-b83f-4e66-882c-581afd41e21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a93ca9-9037-424c-b04f-20d69cd9ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12af0e4f-374e-460f-a71a-c988f626ec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639edb85-a9c9-4058-89f0-3f0a98ccdcc9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6dd69-3d1a-4065-a7e0-cec32d70fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac2dfbc-eb81-48c7-96fc-b0460d87dcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b1156a-38df-411a-be21-c957d0066117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "227a7440-9be3-456e-869f-f592bd9a364e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e150a7e-3234-4251-b797-4f563123639c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bf7858-1f5f-437d-af4e-d62122ce7ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75802d4b-e2c7-4b7c-bb60-ebc821c0dc97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2cf481-c043-41c6-92b3-81182adb3f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6b495f-72fc-4f63-8007-3bca251f52e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44298acb-552b-43f4-987e-d7e2934cbcfc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ead478-1fd1-405d-afc0-3ac673f4888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f409bc5-c224-47fd-9382-c1207d9559b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be788130-690e-43e7-9c24-b3700cbe0326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2e0d10-6710-4304-bd41-ceb134e88c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed670ac-8bf0-4faa-86a0-2499ea690b24",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a7af2-04e0-4b4a-8612-98021b5edee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f81fe8-25ae-4016-bb89-3ffb23f14ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ec59e-1ad0-4b6e-a1f3-c4e63ff3cefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53db1038-96fa-4466-83d2-a02c5f97ed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c92189-0dac-471f-9199-68fff06f1666",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa84912-5ef3-46e4-bf2a-2ff2cfd686cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f446cc4-5ea3-49b1-92eb-e759b95aba59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76d4f38-cad1-4480-80f2-195522c4ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d98c0ee-82b9-4f82-9667-a12020f0f355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f77126-eae8-4c4f-a987-4322c3d8c7a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab17f03-f385-4ac1-918a-c8adcf7fe813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6d0e81-158a-4eac-9a7e-18f0be1c1165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8ad07c-9a38-4344-9d3a-2ee2d9c5f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9614f1-d298-4498-a660-da258b0274cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e060eaa8-53a5-4e99-9b26-8a681cc1bdb7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677d039-7a4d-4d2d-b577-5ae4b6821684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aea4580-ce74-4afe-8b03-f8c1795ee5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51870da3-97bc-4245-85c5-4b2e7d456899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "03adbb64-20a3-4f72-91fa-ef9abec01c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f46438c-3d35-4fa8-9315-49dcee900aea",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921274a4-f6e3-4bd2-8b1e-7ed15873273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377fede3-e191-462f-b780-85af74e81899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e78acdc-382a-42e3-8de2-3dd12df066ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa41d4dd-a62a-4827-aec1-6987c5aaca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89adf81-6cec-4384-9ef8-38b8c7c4c2ce",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570dd891-cf44-4162-a872-c31c41e9c773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69bb34c-9594-44ed-8622-04d0b1600da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0354e8af-b153-4477-b26d-729f406a823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d6d620-df79-44d5-aba3-e8a4e55e90af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb1675e-0d37-4961-800b-9d1dc4844140",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc2d65-e6fb-4149-bdbb-47bfe53aa127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff5b57a-9acc-44a3-b011-9441aae60097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d14791e-fc75-4de3-9767-a642bfa23276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5044ec-7033-4e89-a718-a95d55f9e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c2ae6-0e02-40eb-853f-60cdbe6d11c6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c14535-87e2-47fa-82cc-09658744d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efba5220-8e55-47d7-baf9-022db2a617ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581c3196-a847-40c7-902f-47543caecb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1863bc-4389-4ce2-af87-ced0ffd105fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c621c799-1fab-4169-8ad9-a7124d32ed0b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd38f140-f235-4a4f-b4e2-5ede23ba1e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf596c2-ee19-46fd-a7f1-b8c7650cbce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb5525-78af-4438-a0d7-7ab95b0f5844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c59c7098-54c1-474a-ad50-df37f53c3675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dbe329-6e79-4a7c-a9d0-468f6722f117",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43325afa-cd1b-4fe3-9825-a8e9a5ac2b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea940c5-40b1-4e3a-a5ae-97790c3fe692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160849f7-a815-4ec2-a3a5-fbd1315a18e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb0299e-2079-4c64-a1be-1d41cebf3de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eacadde-839a-4968-aa72-47e21c068145",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e5e77f-8ddd-479f-8b82-12a63a1ce4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a631ec-0e14-4f55-ac3d-71a5e4ddf86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8f88bb-847f-401f-9f75-43c71b416ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "797b3e8f-7232-42cf-9530-10a085484aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7689bde0-cd3e-41dc-9748-6453b735ab50",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec1613a-77ea-42d6-ac82-db33170ab66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13ced42-5fa1-4711-818d-25e9f1ddbef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3318b96c-482e-4350-9a74-35956baf1e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bea016-f65b-4041-b538-d665b2aa0f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b6ed7-a542-41cd-a626-ac12880c6b77",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9c0e4-eebe-4f0b-8997-cf393b341758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beef6776-2b63-4c5f-8a7d-87ef64935834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac698e-5b07-423f-9a0c-721129d4fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff18a353-21d9-4ed0-a8f6-c61b983fa421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79e033a-cd31-4439-a229-0627df131d66",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4885edb0-58ca-419f-b361-bafb9f506747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a357c799-0f00-4c08-912a-faf187fb0dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f193163-cef5-4969-a8ff-2e82d729cbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf3c9e0-5561-401f-a442-23604ead0d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69ea9ee-0e2c-4b2f-a6ba-eb6eb5a93163",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3a767d-20df-4918-a8b4-eaf544f74b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121fa634-08fe-4a7b-a2e3-d3284285c08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b026bd-7cbc-41ba-a593-c8cdbe346110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3758292-dded-4d82-a341-6ae2ab8dace7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f93191d-68f4-488d-8c09-df0547bc88d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50776d9e-247b-4222-a7e4-16907a32d1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282f4b65-1e18-4538-b0c9-b7b671626df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756920dc-cffb-4e6e-ab38-f48b325f83af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04d7963e-1574-41ea-bded-b7dcef38f11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd25188-f542-4e3e-b166-2ad453fae786",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b3818-1d78-4abc-b50c-e98fa4ddeeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16032153-cf41-4ab0-8e80-b647012faf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0065cab2-84e2-4b79-94ca-13ac3b8c1471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b65a92a-b52a-40ce-ae4e-e89d929cfbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194b23a9-f0c7-4bf6-883b-73c5b96d0fa1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b87b35-3956-49ce-a593-d2ae817e55e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a758f1-8579-4b7d-b7ab-e0b0add280f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ebdb48-f672-4818-822d-9555ac92a4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3af50dc9-0f63-41c8-b965-42615506dd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bf6154-502d-4687-84ad-e2478ff11a20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c8ff6-6f38-47da-80bb-0822d6d28642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d3289a-ede3-4584-863b-4a6830f8473f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106bd00-0295-4f4d-8a4e-7f9148079218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "558104fc-d1b1-41ca-9822-fea9dd3ae6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa278940-4f5e-432f-aa23-67ba7549d9dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297fd8bf-018c-4b80-962c-cc298d0ccdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87d6ffb-7e71-4098-9fbd-cbdd915c9826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c55db9d-d551-4071-be7a-595e59231195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8be091-055c-47d5-873c-942ee2d9714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f88c5eb-4646-4d93-90a4-7f6c017c588f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1096752-f2fb-49f0-8e71-f3afedf7e1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32bf271-8950-4409-9922-de9802b44966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cfb38e-8feb-4837-a68b-7fbaa64fef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2015d8bc-e59c-403e-bb09-2ccd3e83d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087de2f7-239d-4f6c-8627-99b00e258ea0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a2c602-cc63-405c-be21-73cba386a3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a912248d-6d4b-457b-8c80-9f5c13a0235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9131c78a-74d7-4e0e-92df-e19e7487d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3c6be2-62ec-4df2-8220-34e41f865f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc56c5f-5755-4f2f-a554-aea21eebe023",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd02f4-6c27-43ec-9a6a-07d1805dfcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f34153-303e-4824-8722-a4e754149136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810e73fb-05f0-4104-9daa-a1e324758881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6edd106-045e-4913-b02b-0314d01cf4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2ac25a-a7ed-46f0-be6f-280ddaf9bdc1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3af782-3238-48c2-b179-abc486ff83ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d674ead-73c1-47d2-87f3-f4299cb08e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337f061b-510a-4770-b75b-e19dd117e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e39203a-4738-4b77-8774-71c06c56efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4228f813-3b97-4d3c-90f6-7b6417077203",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da07335-91f0-4781-9cf6-ec8497fd7753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941d0e22-f8de-467f-bd76-3666d65e43c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186509ca-9b78-447c-9dfd-f3a563296ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8afa034-fd8d-4244-b077-f884034f4edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1af4f7c-51fd-4897-ace0-9976be6d8a50",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f86847f-56ad-4899-932b-a24fa04effd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9643c35f-7adc-49bb-97c6-b0faf3155aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb5825c-59e6-4842-bb53-b7685e78b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c988f54b-7a60-419b-b3c0-140cb217feb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e71d0a-6269-4aa3-90c9-2e3816c61680",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a3459c-367c-476e-bdc9-af50f387e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e0db7b-3de9-45b4-bc12-acdbf53ee6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347f9435-4c68-42f0-8853-9830fc637672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eee0c3-1c5e-4992-9b99-10a7030e44ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a842c2b6-3924-4348-b7f7-e5dfec355ed8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e9e48d-714f-49ee-8e37-46505b208166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955cefc1-1c50-40fc-b65c-7b11a5c680bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0372a817-b679-4482-ad92-4c38350a98ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7360fc21-ed2b-42cf-af86-ba9ea8b0be70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4170de-7f92-47ef-8d6f-57e132e74138",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a3818c-b5b4-49a3-aaa7-82db343007c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7a13bc-8663-4539-9c0b-9f937f0ebac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845166a5-4b73-4f72-b1bf-d5b207d0b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2920fe11-0f3c-4bec-83f4-5d0cd9d9a4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75053bff-3f85-4839-846c-91e78e519fa3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c29b7-3115-40f2-88b1-2eebcd1bb6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd56fd0-01ce-47d7-a315-194fa8a0310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c21bd85-59cb-47d7-9c6d-0b8b04de2a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29436cde-f8f5-4d20-a831-1f71d81cec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36204777-1871-4d90-af92-a6a12bde8585",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010315f-7872-4f3d-b657-da87fb0f22f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f760b94b-00c2-4acb-93cd-55d2e1fb06fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70deac34-f982-4ac3-bd1e-0243a725ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f46b3824-aace-4a99-b757-8dae6058a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79db390-91f0-43e0-bda6-8ecb187072da",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9fddc8-209c-4396-8c24-3242c53d75cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255e45b9-eb99-4e62-8c68-4d853f22bde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f32e1df-cd3b-4c89-95c1-3100f44a6ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f69bfb-d3cd-49e4-972a-a2fc21d23d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2b69a5-b811-44e7-9da3-3748e5c0356d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e465cad-7ee7-4d68-953d-9d244e5b6783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be210e2-7967-467f-8d41-d8b2a396951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88544562-eb53-4496-b641-5f51455515f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ce82eb-c9e3-4868-a3a7-f25b70b90b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faba25c8-184f-4e87-a6c1-c1f280f6182a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9125f5db-f253-4ccc-90fb-cfe4022bb9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5368db-8e78-4e26-805e-be4623d79cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d80a9-779d-4ad4-90be-b47a75750fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82a8d643-c930-49fe-9330-495e84c935a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32107b2e-0841-472b-ad9e-8639a8b6ece1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f7af14-ac37-4488-a3b8-e9593474785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1598dccd-4845-435f-b50d-8254b542d308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75272935-5b67-4706-9384-9f4c52f71f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9d47c0-be89-4cc9-97d7-13681e6ef9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e900dea9-a137-41fc-9759-6cd4661bb7c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c2e310-342c-4815-abda-66636bed72c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5482ebd-98f6-4d6b-a498-9bc550b0f4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8378376e-bbcf-49cc-aff0-0662765270b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a121e64-e5e0-4529-871f-7af607135b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5e36c0-57da-4381-b8e4-47791bc0fd09",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72247918-4fcd-46c9-91b1-af7ceff1e4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b427a13-26d8-440b-8ab4-bdf455eaeb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd76e07-bdb1-48e4-ae78-4fc041f9038b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be37167-a731-4364-afd4-99c31ffea4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde88ad1-2ccc-40af-84cc-18d1e6dcc284",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bbbc71-23a1-4246-964c-893cee53bc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f486edc-3f2a-4f93-869d-ec7f8094d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac602b5-ffde-4c01-a3cd-59ea119c92ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6657f8d5-3aa2-4b43-89aa-da291db4d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb61c29-408d-48b0-8d02-bbd33e80074b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68c2eda-3abb-4044-8e1f-28865e949483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3093ba2-2aff-473d-89e0-a220e7daac0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826409cb-9a5f-4811-8618-f5d9a3e6e66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35eacfd8-785f-4315-b486-6df1efc800b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf65b8f-48dc-4494-9153-f44911a1eca3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c7b2f9-9d05-4fef-b0ac-1baa014e01da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fdc624-58eb-455e-8368-af6fe550167a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c593f2d-4117-42e8-ab87-86f19266e806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "334b7c2b-d9e7-4412-8fe4-0413a3062845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c56727-e673-4d04-81de-14f86298479d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f16a8b-983d-42ad-b65e-acb817bfbaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60759921-b1a7-413e-827e-8d7b0ba94329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd922be4-af53-44e0-be48-fa2e38d3858b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "906f7163-016a-4b07-8f48-226dc7aab884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81d5fe-6f43-42f4-a6b0-1dd6fb73ab3a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bab1916-b9a9-4595-b8d4-174ed6800930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2322cf-a81f-43f9-a7d6-9c97ec176dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb65a82e-919e-4a4e-a4d6-5a023ba5497f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7d0769-c42e-48a8-b427-cb185a106f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1101cba-7c9d-4621-9745-bbf4c94c71da",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb9099-cce3-431b-ba43-5a6243fe4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd0fbad-9448-46e5-a034-d1d00b67f55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbc7a49-979c-475a-8be8-f8f36a1b7492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e677e2-62c1-458c-a236-e6d4ca739189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ca1dc2-59a1-460c-899e-5f4eedd9e9fd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd3ff2-9fdd-44c4-bfe5-f869215fcf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a25879-d0e8-4125-98f2-341746aba727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e62e2a-d732-42f9-bf2e-2a67ae4f4302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3998ac24-3dcb-462d-bb5e-54b43b029a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1361b273-2166-4f38-b1e3-361eac845532",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1688b567-0ec7-4860-9948-bb56adcdc50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f651da2e-a508-4f60-bf1e-7bd0ae535bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6e676-d574-43b7-82d3-5d4952af69d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb07a8c3-038b-463c-83f9-e276bb8b7a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff15c657-586e-4b54-968c-ce61641e1ef1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076d0df2-5901-498e-88e5-157ca81101e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763d7f80-5ed5-4e72-a4f2-e926e43a9b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b09701-124d-4ef7-b7aa-593cff8f64fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a76fed8-e2b4-47fe-b5ff-794cd32ee23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8990597e-973e-436f-a247-9838e212d5bc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e33d3a-451d-4a92-9d06-70106faaec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5079e145-2639-4b1d-a4e3-71c3cda84e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a9d10d-ef24-4799-b345-f084c0be27b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a285d1a-72bd-407d-be49-9163513db88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4545c6-ce79-43cc-94ad-a32ca88b360f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8564a101-7e80-44d1-9d2b-b66daac51719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184edfe5-52b5-48fb-9034-32ff8448addd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb925734-d7ef-44b7-96a4-4eef4f27d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbac66ae-5a1c-47a5-bac8-6dc5d8058c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d67f865-a26f-4c61-b2b2-cc2be96901fa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e84d5-478f-44a6-a741-e195f5067576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b5904d-ed3c-4179-bf2f-01889b2f0618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea334c24-53ef-4b3f-a7d5-22cef2cbadc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb6c9af-e405-4a3a-81df-5be10f3b7bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c639d4a0-b0c5-4cfe-88b3-116b583fc704",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128566af-6317-41b3-a6c3-90d5f3c72e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e6ff4d-ccff-4089-a42d-adffe34ea1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cad7892-37b2-4e2d-a9bb-a8c2bf72b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede63a29-0887-43c6-ab21-646394cbf3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8252b6-d71a-42b5-a75f-13de2b4c9255",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57341d96-c71f-4bbe-a67a-051e10bfbd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57df79c8-ce0b-48cb-a38d-0305aeb472a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c09f06c-4222-4414-98f9-dd4db5b40a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a8f25c-4ba3-4cde-a6cf-6ad3edd80392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab144616-b311-4137-939e-987f81e59232",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f5565e-b622-4811-8ab8-d23f35f396c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ba4ac10-8fd1-45a3-b26a-3d8f98da7155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af79f22e-3393-4660-8a2c-89ec033b2e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f601f4a-c773-478c-b70d-b3cbf5c7364c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab77020d-524c-425a-be13-4f6d886b26d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "455db35d-b1e7-4139-9bb8-d38d3ed369ab",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d42a541-2d8e-43d4-b9d1-8a56d8fdd8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00c60cd4-02b4-48b3-9891-b8edd1a7ecdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684aef0a-0020-4d18-9b0e-4714d5635443",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bb0edf5-92bf-462d-b6a8-c50ac1e227f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac87d02-5621-4122-9428-dee67303d507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac64b08-bdfd-4d48-ba31-25c7f1bda82b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "084954f1-2a56-49cf-b6d1-2c47abf5bb9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39f0f11c-4d88-4bc9-aa5d-8b075bb20d87"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f302628c-f402-45d8-8e38-bad6e3d5fe1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ceb184ef-23a3-417e-b1b7-b8738d616423"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ebdf1ce5-f7a2-4f28-9d18-1ccfab857034",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01e5df18-7cff-45ce-8d88-576356590a8e"
                }
              }
            ]
          },
          {
            "id": "49b3cb42-40df-4cc9-849a-e1e12720aeaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6dbd59c-55e0-4533-8749-7b337d50f4f9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f146e128-c9a3-405e-8096-595fb3de3ba1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b6e973-8e16-477a-87af-b23e7a19e29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a92744d-15e1-4852-af10-a8e48f69528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732628d5-c7c1-4ca9-aaf2-d9a757c46baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f047a1-4f46-42a7-a826-74b79310118e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c511c9d-aa9e-4e6c-9d3f-8a02651d1026",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7604be75-e713-4da9-8bdc-7447c3d49989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca0e1256-29ba-4b8e-9a60-080a24273449"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a8af0ca-3fea-4220-83a0-041a1aa20de0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18533c28-3d6f-4348-94d2-b263c97e73ba"
                    }
                  }
                ]
              },
              {
                "id": "b36f46ea-0139-4999-91a3-140da01f64ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04d1964a-a246-4327-81cf-d77908ebd1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfdb8973-bb38-4ea1-8711-0e95a62f23ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a6b9c08-1381-4aa3-9776-54dff43e49b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a376ed21-884d-412d-a975-c39ea2ee87c9"
                    }
                  }
                ]
              },
              {
                "id": "0804ecb5-6ae8-46c0-824e-ef85e2957dde",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df1f3ecb-9daa-46fe-8d53-f3fb0c2f6077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f50434e2-154c-45e6-a8df-b9897b5e5549"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce005bc8-1b4b-41fb-a1e8-0571f8bf45d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84e11ec3-4662-448e-9b86-85f372ff2130"
                    }
                  }
                ]
              },
              {
                "id": "9455dab0-b0b4-4549-b235-99ea71522fc3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c07d5418-cc7f-4eb1-b881-ad61fc4e40e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a2a6057-ccfe-45d6-a735-f6564bbea2b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b500ce5-3e7a-425a-95df-ff3a54845d5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "51381810-736f-4984-b10a-fd578e6e4999"
                    }
                  }
                ]
              },
              {
                "id": "dd949814-3176-4e80-862f-66f13f34042e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23190711-dd8b-4259-94e0-e79be97bf145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8390c47-e469-42f5-bd1c-9a8a517ef4bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7268e6e-84a6-48fb-af60-9118f0377fdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e9cb6c5-3c1d-4362-b910-60c6aafbbf98"
                    }
                  }
                ]
              },
              {
                "id": "0e76997e-9d15-41fc-9602-ad68b4f76432",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "671e056d-016e-4ad1-8da0-59ab6149cf53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e9f56dc-7a3f-4f7e-81e9-12499e33a886"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76530e9b-63b2-4267-916a-2652b2d08340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48dd1889-ce37-4a43-bc61-5a63dbaba63d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3babda9b-ad80-4b84-be24-c92112440a77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bc70067-d583-4274-963d-4bd370a9dd4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "70301de0-d21a-40ec-a8b6-3dbf9a9f09e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c82447b8-e44b-4560-84b7-1b81fb5e9c58"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cb929bc-3aa4-4828-a9d3-f09b855109e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d3c32fae-0bc3-4d57-9448-fbfbff0a8508"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1dc1434-7db1-4fa2-abe0-ccd59fe2302d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08ee5f2a-a409-4297-858c-1b6a3aa1ef3f"
            }
          }
        ]
      },
      {
        "id": "3aae886d-34a5-4c44-b7ad-d50662ec9a55",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a1bd8c5b-ad4e-4103-ba58-5650cc308d92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef900ca7-f36f-448c-913c-703ad82d7c1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18936dda-5e04-4406-bc61-61ef66c5e699",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a080be-f2bb-4c7f-a393-99597e2d3667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b8ef7f-07a6-480a-b0dd-d8c17ad41cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1aa60d-64a9-4787-aa28-28936f58f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf6871d-0cac-40ed-9040-aaf544eb3639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f5ef14-9944-4d52-bb87-555baafcc5bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607212b3-7698-42a2-ac9e-07c8bcde6a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174610c2-5c6f-4fba-8d96-42da189d4859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a3ad5f-c765-4c40-adf3-924ce8867ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7186c9ff-01ad-444f-bd11-3f7f129e7d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e2903c-7181-4f78-bdf6-4ab48bfa17b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c3059a-1c3a-4195-ac55-92a2a36c74e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02086e48-f806-42d6-a36e-cfc81ef845f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e89084-7e01-4dd3-970f-ca42a191c182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37153017-69f1-4a90-ad5c-ca77c543186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb5d4de-09eb-4383-95d2-1dafda558ff6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ca313-ef93-4dcb-a7dc-59949ac8e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e6f7f4-a805-4a35-982e-27db7537f07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d232e5-c5a6-4bc9-b884-eae897878b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daca30aa-c9a7-4b33-a874-1d63980bc44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990cf841-d8f5-4902-8576-3298e62a6390",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861da6ff-9ea9-435d-96f9-d2fcef1230d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e01960a-e3cb-415c-9cab-c2dfb364cd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6927e-7cfa-4853-a376-c42d5a682518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3ddb49-6c9d-4522-b1d6-53de32808466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e559491-6ada-4f5f-b0b4-185be7bffa37",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8678718-f2e2-4772-bb3c-b6699d1d360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9915f5-b203-49c9-ad90-3c9da88130a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d95ed0-04a9-4513-a087-490a21f43365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c4545e-3b05-4bec-9d98-649d41464511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb622c0-1efe-4981-92e3-c81384e32f48",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96af8ae2-1063-421e-87ad-2a7d6dd87609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a46a73-3d27-4841-8f94-42e34109ba85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a06885-d655-4fbe-995d-aac7e2659672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "daab469a-4ff4-4834-b650-881eb40c85da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332da3fd-cb35-490c-8410-4f05c7bb7917",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066226f-ac20-4774-8808-4b4389c0cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192c0a04-5fc7-4646-8d7b-96cbebc884bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d8d76b-4e94-4d5e-8895-8b900e620839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b19de76-424a-4889-8766-78e5bf79d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c1c551-23f5-4978-94ed-c3f6ef462a43",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52149d-5558-427f-866f-715e35bc9d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9aba72-e95a-4624-8540-07d2d13060c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3defad-b73a-46cf-a9db-3265a91e06f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "405b27a5-3af8-469e-9f41-7f247e24fdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edf19e-8a8d-4d75-84d2-94e1abc4171c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce8168d-d908-4488-b2a8-04282f8cda77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55871b83-5565-4f36-ae85-2de3a27ceaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae83f59c-1684-4f76-bd9b-49b7568de224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5929e21c-7983-46ed-bc15-3c34d1745356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa3b49e-7970-4842-882a-e9085ed3915a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd92668-1767-45ef-8e72-3c925977bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be50e5f4-66fa-42f5-bc22-adec2f7cad15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb746b7-c5b4-490d-9288-f60ba2efcf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93d64026-1fbc-4bd3-8430-091d72cf03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a969f39b-8798-4f88-b021-08c9914e7efe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977095cf-5aec-4818-b7fd-cb5c0c82443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20aac4-3b37-4f73-b0d2-ded5c55bb1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ac41ea-c3dc-41af-97a9-7c3ed26be534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d140a04-e742-40de-b275-598833e9a9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1f111d-b60b-42eb-98af-2ffaec49c277",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8e8c8c-3ee5-4737-ab60-bc85adc0325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4d6bf8-def8-4eff-b595-8fc754cc1d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec3f91-ec91-4aab-8238-97b70fe89ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5229dd-287c-41b5-844d-7f0ecccf5c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82adc97a-f5a8-4174-805d-c867d31af953",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3811f8f2-00bf-47c0-985b-b62c2f0146e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91b3036-e108-49f0-8332-d7046812958c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fef2e35-f152-4b89-bd17-43854a155a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c091578-d58b-44dc-92f9-88e1ffd8d88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7e6ba9-de9c-4a90-a365-113c85be85f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6887ae8f-b9a6-47d9-b535-f9bd00b5cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aaddd0-e112-427f-92a9-85decf68b7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bc08a5-46c1-48cd-87c8-2d6b5be7c697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b505a352-b77d-4c86-8535-444d5b304051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a3212-3be8-4d9d-b74e-9b1c6d04ae97",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6620186-9356-4239-b36b-a48bb53072e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8e908f-ae97-4247-bb88-eb8d73a63980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b0372-7f6b-4162-b0fd-79462ff085fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d9eac5-d5ec-4c2d-b3c0-16178a41d997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b586966-399d-4007-9e7b-248eb17aebd9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5347dc77-51ca-437b-ae4a-d227b28ba0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23be05be-3433-4706-8e59-6d9d722c344d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf35998-0c3c-49d0-a052-c99908f3ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0375b998-43c9-4a32-b0ca-82839420412d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98616442-3d8c-43cf-9288-4523b8debd6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c4c2f-3103-4a7e-a47d-de4e5b4d3ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2f20c7-2aca-40e2-9cad-bc48c33622e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5c7c43-e7a5-4c6f-a005-d554efcb1a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01aa10ef-ed18-47ef-9e65-bad206b898c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f4e820-9b6d-4b23-aa12-7f21f385c348",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4024fa-774b-41dc-919b-8ff416edeac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd05efc1-200f-4d51-ad47-7727ba2108a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fef0a8c-7822-44e8-85a4-7ce9d1429e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2f6ccc-e810-4b2f-96e5-fed7dcf23f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1f8819-c632-4ce8-8b74-8b91af348571",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c9cd8c-3dff-407f-a7cd-9f64fc0facb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57702f24-67c8-4a27-b064-e8956a57312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec69cd4b-a321-403e-91a7-35bd69903b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc6c14c-12f6-4dd9-bc39-94e52fb9e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a0096-0f1f-4c9a-ba62-efa37e144547",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3df39a-b459-4040-92c5-ba63b0a1f12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d57331-93a5-4397-98e6-fbdb5ba448ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b28b83d-d605-4220-88a2-71a84cc80b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "568e83af-0808-451a-9802-456cb86b1f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1416fbcb-6bd6-4772-8110-59a363a912a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ce036a-6a4b-4794-b1a0-a3cb3d404345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586e02f7-4acf-496c-aaa2-a88c57236607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d32b37e-1e8f-450f-bd38-d618f6b07f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "152528f9-0002-4df5-afa4-47c60f658e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85710132-4531-42e1-8d9f-fd85a6bd5107",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31394dba-cddd-4038-87a9-900793aca90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dac837-3bf5-4b1c-82c7-ffdeb3f46fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18da1a3-658b-45f5-b12f-812bc7e2225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ad2a3b-6e25-4387-9806-548edd6e8a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfbd550-652b-40a1-aa65-d03616a0a796",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e173d2-b62e-4034-9f23-70ff7b93da64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459084d4-88a4-4a30-ab93-f27554d4a86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c3402-0793-4099-8b86-c3554e46c983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff99c1b-8beb-40ab-acdc-21f4bc27c690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4b825-a3b6-4cfe-857b-5ede9e68f3f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf2fca-7d6c-4fe3-9970-9c3d998ff0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ebe995-5e1e-4b15-bb89-c96670245622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c643dfd7-c72c-4747-8d63-37ae91502ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce60671e-f925-4ff7-90b4-d61cc4a1d6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeaffe3-7d6f-4f66-ae14-f98558d4961a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4864dece-69ea-488f-90e4-76dcf087a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d429e17c-baff-4f9b-a358-adee30d33396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74aa0a6-0244-427d-9067-f854097ca686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdc5ace-9101-4864-9175-fbcf3e24d437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c5cf59-861e-4c54-9d05-df2abb5a308d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a1e5be-f8fe-4fb9-a246-c6aa760c8dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9751d3f-d3b4-4130-aace-9ce6dc79ecff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0526af-159e-4e06-93f5-79b5eb3ea26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b85fd6d-2098-44ef-b06b-67bbed71e58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c50a136-4bad-47f4-86f5-46daca277111",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97b9074-3b60-449a-9a1b-2a8a334ecbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da4250f-0bac-427a-9de3-96e5b827afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4662069-3ab1-4efd-a08d-70d6f9b1a995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0e34e3-29f9-45dd-82d2-d389d5f12d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3e7e3d-0674-4f9a-9109-afc28719f384",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add8304b-d71f-491e-9bba-a2c2a155a96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22653fe8-3802-43aa-ad85-a40ac307f68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82610601-edb1-4e0a-a1c2-14d74ffb2073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7947ed01-9dea-427b-a4ce-a8d4b2aad5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0947c9a5-a584-421d-ac89-c3d84455b113",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ed7eed-bd8b-42c4-b013-0060fd76a88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0654182c-5e63-4b16-bb53-3063465152cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09db0f3-0dd3-4a9e-a5f7-b0c70bdebcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7fc0f7-0760-4582-9aad-b12535bac07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf49a1f-4c26-412f-94d0-cbeb09f9984c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84803d57-138a-4be0-8de9-6127cca216cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41afc9e-a0ee-4147-be7b-1b6b16bef813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07711e5-e2a7-4239-ac5d-0c167c0660b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67abc35-00f2-4df0-9d60-aed7ab4ce3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d907cfbc-6902-4db5-9248-230188ed58ef",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83080584-ce08-4f05-ba9a-aecf0528ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4ae5e2-7f72-4e55-b623-3992801aefe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31fd12c-cfce-4ac1-82d2-978708dc341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849aa866-75f9-49f9-903b-a786e35bf80c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ade7160b-ae88-4754-ad06-39173f15d970",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b95bc7f-b935-468f-bbd4-c21505e552f1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998fa978-9811-4c21-ae7c-1c0c7bd10b60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "36cad1bb-3f2b-49b6-b114-0d04db525488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4573d1-8944-44ad-97d7-84fed2f5d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d493f6b9-e78f-46e1-87b4-797af10c8ad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70f1564a-bf07-484a-b1f6-0bacaca210c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88e67d76-3927-4e8c-936c-4a102f65f4aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f994b9e-631d-4545-b4c6-305cfbcf1a8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8578e07-a8ab-419e-91b4-5d12f13db7c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7bb8ed7-9813-44a7-ab6d-5f8445c764ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cfc3e2d9-1948-4bf7-8fd6-a190cc01aefe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0561f23-b830-41a2-89d3-85111511e9d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e227cfc7-f409-44b9-9fa3-17604769cfab"
            }
          }
        ]
      },
      {
        "id": "1d09fd27-a5f1-4e5f-90f4-b5d8528c21ba",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "14162703-1841-4374-a852-2d003ef36d42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc3b156e-d4bd-4ac2-ace7-e8fc1b0d7eb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "415b8719-b81a-45d4-95d3-d46c0df92680",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83069f4-eb9c-41f4-87b8-c7c0e321c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caef0aa-3e6e-4d3a-9917-a9019652a7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3d18b1-3270-44c6-af69-6e85f034d650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "62afde8c-17d7-4137-8c91-51b315b87849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9117a4d4-5df1-4bfa-85ba-e3003d9df458",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a13cf5-22d7-4b99-8b9b-06c806bb7751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b4feb-687d-46c5-b004-cd8163e4a13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb019fa1-d697-4217-8af2-11fcb07eb11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "881c40b6-5425-4a72-a776-07a5392bd6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e922f3-6556-4315-9ff1-d89b4376efa5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c80a3-ef35-4b57-a14c-4a5b2edd899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f478d2-6922-4812-a1c9-1eddd70f4af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25ff99f-b82d-423b-835f-c83815842361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b111bc2-683e-4ef0-8cd1-7e528e1d7c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff6cad-a9d9-45ef-a582-245ab49367f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e4c7ef-4fc7-4a53-8c6a-58be5cb3a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2a486f-5606-4674-ac5d-dd67d6f44e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23243a3-dfe9-4cef-aadd-74f5d6b3f183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1067d4fc-a090-444b-acc2-ffda8264e6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d2eac0-3245-4046-899a-10f4f7244b03",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f9f369-5c20-4014-a3b8-f7d8a50055dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c01001-e2f2-4ef7-8677-75997c9402b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ae6a9f-fc7d-4736-bff0-a5fa05627a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6935ff5b-9699-4ad2-9d6d-2a7eff14e3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d4fef6-95f8-491f-9ed0-a0d9e48299b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f23e7-7c66-4e37-9327-a062d21d1e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60abc77-1e55-4b35-841a-a5dffff4ce44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353169e8-5ea4-43ff-87f1-f70de9c75e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9b11c7-c7db-4d22-91df-9052fe02ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647b19ef-1b5c-4901-9842-c35471da79a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d709f353-1fe9-4af5-8870-9bd6dc9ce4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8371806d-594c-4e4a-abc5-6f5453dcf7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd995204-d6f5-493b-84ec-64fd7d04e1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3adc3f-ab33-4ec6-b121-f23b41bef7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fa9d0d-d0f2-4d86-b4c4-79c87e124256",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af3f6f-1b8f-4b91-aea2-a7942149efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fc94e8-aff3-4faf-af71-5c1eca91bc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0267487-fe11-43d1-b346-dc10b08e5232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40b33a2-d746-4a69-a992-92411315ff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a890a602-2a69-4ec8-bd59-5517ade1aa79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acb6f90-0cbf-4a0f-8d31-9b2495ca155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e0edd3-c544-4728-8f2f-674bace80aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17549b59-78be-4f65-b400-02531d96e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d6dad0-890e-4fad-856c-15e8d6a810aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25efdaea-84ff-47a2-9e65-440059358281",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ac4348-3526-4783-9bdd-9b0e8ec9076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e850b34-1c3d-4bc3-b16e-bf8f75c3d83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f20ce-31b5-402e-a657-7fcad1c46a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15e90dd-eea5-4565-a054-5ff20ce4ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c4bd41-9740-4a93-ba29-81d53046a8c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b1f93-8682-4e5e-8a35-22df85844cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9e21cc-eb30-4680-85fb-393c6019cb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbaddcc-fe36-46d1-b2c7-89b81b9c4dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c162cfca-8360-4b19-a3c0-39589a698a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74771164-40e2-4c1e-80e0-2cd2389b577a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6064519-770f-4c45-b79f-b005227cbf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ee3e74-08b3-4b1b-81ae-238b07aabef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f33b1-dbd7-4bcc-8b12-591deb98069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c26eee31-e8ac-4e2e-a11c-9411c3d81f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca411ab8-6190-4a30-bfff-ff05d380702c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685d8797-3679-42d8-bfcc-4b361e2ab576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f362e-9d5d-4c62-ac73-421841eaba27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0459c8-ae93-40ed-8fdb-2dae30a4ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94185b84-09dc-44d2-903b-a70906a7ba8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf2c0a9-78e2-4e73-8e2f-e25cf0adcedf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fb4675-81bf-4d98-aab6-448422dbe586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338f555e-2633-4b25-a6df-a6f04266390e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d69f009-5735-4984-b961-f44a3e1b528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b901ed40-702c-456d-8f6a-865991f45fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c68ab5e-f5ae-4413-abe6-220ed229a6f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510aa377-3e04-4542-a509-77f6f9c84ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e66c2cb-950e-4bcd-a09c-44f9569b91c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9acf0c-2bd0-4a62-bc86-1bc7c55ce587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5950ab1-ea16-4200-9e11-c17403cf3f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c543a680-76cb-490b-b5be-53f275f33120",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2564bbc-be42-4390-bb6c-837513ac81d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de602324-a4f9-4b50-b5e5-9f6f4a9eddad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99750a5-d27b-410a-acd6-f387292b0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "721571a7-1c00-4d25-95b7-656d9c06f40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a75c3c-8930-43b2-911e-fdb5eb3ef51d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff7b03-3634-480f-ada5-d6a80f9f846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5b608f-656f-4ae5-812d-7fc2fe4ef5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daf13f2-bb11-45f1-819e-1845d5e3235c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "422f0c9f-982e-460b-8b69-3957c718ea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566eb297-f3e3-4de5-8b7e-68f89d450686",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b43bc3-3fe3-4aa8-a053-68642e07502e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45853243-801d-4d23-9ebb-aa3d9d222109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4286a6-22f9-407c-b799-fabb977e64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90bf90e-5171-416b-a253-78137b6bfcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b516e8-94ef-4581-9c29-f509eb069c96",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4063a90-e090-4556-8b1a-4e3bcea2eb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d2df17-6356-480c-8e2d-0e7bdd222ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7abc965-f887-4939-8714-9d4d7e39c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9e3cff-0c5f-423c-b917-575af5abc7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c858a7-d517-4c5e-9dde-eccc092448fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b84b440-975c-4bfb-bbad-c2f4599585f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cd91e5-8fa8-4339-ab15-63ec7beb3090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2518d40-bebd-4d7b-912d-85bd03bad17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f3f047-760d-4e9f-ad03-750f8e64f4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ebd75d-39d0-4167-963d-70a0bda74f42",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c77990-8135-44f0-9239-c29df8761a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6209a065-a82b-4a1b-b6ac-41f8819209e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9605d23a-c0e4-47a1-8484-e39fff9b29c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4698d25c-51b5-4331-9de4-f38bfdc14ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e15f42-04dc-440f-b617-6c59f37129e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91358b2-834a-45cd-88a5-21d1c219d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebce3051-a7ee-4af5-adc9-9ba719abe544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005ececc-c513-4622-9746-539b68325a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f724161-8213-4255-8637-b569774fb2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a1117b-4e99-4620-bd6a-4db5971b2f2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf81050-aec8-4352-8254-1aae78c8e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0104cfd5-ca28-4aa7-80cd-2332409687bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d888a6-23d1-440e-82b4-f8ed73ade864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0fccd4-8b85-491f-8a6b-a3d06f40b456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c882f786-6a88-4c6c-9fd9-9983f953e56c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe02d3-dc94-40c0-96f3-8d28c7467ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b0ce95-5821-40fe-8097-7fd645da9ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f8f124-91e5-494b-92f2-a0017c19fc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4bf6a3-cf69-48c2-bde8-894e8b5f9da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207bfea5-2093-45e8-b650-ba5be4b8c481",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9190aa8-3992-4bd4-9bc9-5f7a0048ed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc85a4a-7a26-4b57-9208-45ed667603e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9316414d-56ea-4ca2-98f9-8852bfbab204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1afdc66-2f9b-493c-a86d-a3df24dfcc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7f1e6-9f66-4509-9310-ca84d47127d1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23507519-0975-4531-87e6-0ba031bd6dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b0ad98-e927-41d0-9c8d-6093e708ec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009bc12c-d67c-420e-9ab7-3ab733400329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb564ca5-4ff2-451f-a342-14d5a63f62e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaf8e1a-92ae-49f0-8c2a-e0970f031281",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebd9aee-17c9-498b-a97d-d43a54601bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da385198-d1c8-4784-b31c-c4ec22190ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09429f16-be8b-4ea8-a92c-efe5d78c88e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "401097b0-3a14-432c-a82e-d6fa11fb7aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e7b28f-9c19-4a03-b8a9-e60b8b77a271",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b4c84-3260-496a-864c-af296b777b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824f3dd1-03a3-4b0f-b491-082b39003e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd376aab-2249-4827-8b2f-5ee8258592d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "486d600d-bc9f-4b12-b623-8e5eae5dd9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b295cca-4c51-43b6-9119-e9832147d28e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53057c5d-ea05-48a5-9f48-2f2004d489dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2340e8-32b0-4366-a6c3-9d39e5f2bfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d3b2a-5f7f-47c4-8caf-6ed5b0d2e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6605e05-8369-4924-a3c8-208a05ad0eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9c8e68-6ee9-4c98-a432-eddd521f3e55",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e8ef03-e3eb-460e-8d47-b8dc633f8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118b1d00-31aa-4539-b935-e1d372a091bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec842e10-978b-495b-8072-fde3fdaa3754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e12f80-e39e-42aa-ad34-5ddebafc3a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02ac0b6-2302-43c3-90b9-6dd31729f6a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da30d20-0dac-44db-946d-f5a20aaa8f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0aff7a-2666-4f95-92d2-7b869d4792aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54c6a8d-15bb-4cab-9e6d-a7086d65b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f29d26-9f0e-43f6-bc25-62d52d342e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae23ce6-935d-4bd8-af55-63f51b52aa23",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d4f8fa-6ca4-49ff-9f64-e06cd1132849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dded6f6a-1d6d-45ac-9341-fcc916b20d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95efb84f-ecc1-4a0d-9e2b-dde50feb547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d3273d-9c73-4358-8a42-7ea6dddaa7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b96f1a-55da-4b34-9a2e-a283ccf063c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d026f8-7d99-4bd7-a4d8-cf7fafce9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e3e4f5-1fe8-48e5-bb9f-17bbca51d5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34fbdf2-9f36-49f8-b081-80f3da40c2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9e4f72-4847-40a8-a951-3d7f12140ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3aa16b-45ad-4812-a461-9275ab3046ea",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c705bb5e-146f-4ada-be3b-7e9bbae4ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b6b042-b5bf-46a3-b757-2def0f8fb415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76e272a-ae6a-40ea-ac00-8b1ef0896922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f372c536-26e1-4c82-b83c-bbf4366f07eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e8cfdd-72c4-4533-9360-ff06be13ce45",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc63ee7a-def6-4712-8c21-0cbeb1d7fcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e58a50-cb15-4de3-8b1a-bce32fc04dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34511f7b-9ca9-4647-804a-84e4840f669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681b7ff3-7805-4ed4-8da8-87ed109b8bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d569e8a8-b49b-44f2-a97f-eee368fc4f1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dca6e1-6810-4afe-9e85-d533c310ad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39f4e9e-f784-4eb3-ab08-8a6f0968e57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de5811f-b382-4b05-b63c-f51589f2bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b4138c-b712-4206-ab2b-31fc4d7c27dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca0e16a-cc80-46b4-81db-233643f125c6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea658a07-8732-4d14-9d3f-833e4fb314ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c295b882-f4da-4277-9592-2915c19ac2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211c28ab-194e-4144-b708-8938be0e7993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8b8c92-6e72-45b6-86e8-68c27a472e9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efe55bcc-26c6-4ffe-a34d-c9ddf4a906db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca41e366-cd80-4bd0-8c61-dd4ac7be1671",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a299b20-5088-46a7-8163-97422d6cf172",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1144d2-a120-467c-b4a9-dcc9a420735d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf6e7f-e360-424a-ba57-3c7dfc1fdb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "149fec00-541d-4234-bd36-f1f2a621e619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3f73bba-f25c-46b0-ab8b-d64771381b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef15dc29-ca25-4643-9496-ece2a396e219"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dacadd1-09fb-4a83-8206-e368b3e9777d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e1554b7-f4b8-46ba-998c-b70ab181c3d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f069754-f798-4604-9c92-2228b698aa49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82bb70a9-fc39-4015-99cc-2334e9723890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3da1118-d9d2-46f2-8635-0990ba73a410",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18be6bc5-909d-45bd-a19b-22a59f95a7e0"
            }
          }
        ]
      },
      {
        "id": "a19a27d4-118a-4823-b337-52f84987e185",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "50d2a68d-ffe0-4e12-be54-888c14410f37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a7dd6fb-b251-42b2-83e2-0a80ac831745",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0defbec0-68a4-4a34-9e43-495940461b85",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbff4d7-272e-4a81-87c1-8dc52f544b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80aaa6cc-e102-466f-bafc-0cbff7f7a3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860223ef-c8d3-4b65-a5ca-b8f9cbd2f98d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9810f5-b88d-4834-88c0-7c1d62dcaad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfba0502-967e-47ab-86a1-ed7fbf5106dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56612700-a78a-4637-80b3-4b675aeca575",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c9ac84-0d1e-4005-b1d8-501e7360ae78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715188a2-973d-465a-9920-951754059ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029a4b82-2a14-4cf1-a280-5daa032dddb8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f2854-3e26-4ad8-aa00-e237d319120c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f1bd3a-4db1-4f51-96a5-a7b491c2b109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cc8784-5509-4636-ab1d-a1397ba80cfd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83f205c-9cc0-4640-b55f-b7204c8a678c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40df2356-f94e-4ff6-b7f0-bafb73a43e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49898af-cf15-471c-bb2e-bcc39282f7f1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96c517a-9863-4d73-9279-17c703f121f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f44909-56e6-4a95-846d-d532ccc00536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f88be9-f71e-4345-837d-b641cc1bda5b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a168a588-a893-49f3-b1d6-780148b3fc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ea6573-b650-4bcb-bff8-d1f18d460784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b3b9e3-7ce1-4dec-925d-da6d0ac0e51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0301d43b-c637-4e0a-bc6b-277510230eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c71bb-1910-4dd5-bb58-923ac1bac3d5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451d4059-d761-46fd-8de3-e8afb4e66424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e93a6ae-5179-4107-a215-bba6c326dacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8f4c9c-6f48-45e8-9752-ba31511001a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc2884b-cff9-456d-9e6b-12d7558c2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dfef5f-2d5c-44c7-b344-15aba2bf8e07",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06313222-01b8-45f4-8d74-5543a07a31c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b59795-0a4d-4dbc-9e44-b739e4d3db83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751a550-1ad6-4a51-9d8a-efd04413e0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c608b89-0a97-427e-9441-7a11b77eee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf61dcbc-d372-4571-bb40-8d6e183e1f18",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e83524b-7a64-4b16-aa31-b7c7d9dc1545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6587b4-97a8-41d5-ad36-ea8f33581d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d930cb5f-2bca-4419-82c2-988dfa994024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d6e85b-d580-496d-9164-6a6c7e05ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff754121-9d73-4818-945f-ceeb83e94cb6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe3726-8623-47fd-90fd-ae4413ee2f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3237fdd5-57cd-461c-b01d-ca21dc72918f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1397f-afbc-4ed7-8848-a503dbaa5e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95653e3e-df22-441b-b420-45f2d847dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43a212d-9c57-4d33-8a34-ebcd6347ccb3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c5383c-9f0c-45c6-889d-32b45e7748da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425b2e48-9948-41b5-8001-b88301dd3a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832fda77-652f-47fc-b227-7ebcffe8e59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9379dab-c552-4bfd-a8df-b240df99051f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd9e17c-2c14-4755-b417-e9abb602873b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159a67cb-53aa-493c-a4b9-aa4a3bdfc2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf89c9e-48fe-4a1f-b52e-019d0e4a22a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01282cc1-1561-42d3-9ea4-6d68b9c97ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef78142-7ce3-4c1e-b49a-f1a80ab0a09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c6f5f-a1e3-4368-9459-2bf1793ab2cf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52dc67c-22a2-4639-b82b-69304fa6d2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d142113-e27e-4263-b4f6-bcbeaf3e362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f483c205-765f-4166-800f-a2bccc655a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee93f478-597b-4c85-91af-94863d530545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd1bbf-d2dc-45fd-aa1c-5d8dcd9b3bbb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68acf54e-1599-4b68-af28-27cd42aa2b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff2df36-a3c5-4feb-9754-5e29d2f5149f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9772c65-199b-4b90-ad83-c6601f67297c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d354d6-e16a-40c3-b6e2-9055e0e318cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad22ade8-4196-42e4-96d6-f1fc8a3d0ae8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694a05a-1001-41cf-8771-ad3a51d42573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a586de-1bae-4ebd-ac0c-4c38704dd44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a961ac-78f6-4b32-824f-16ba5312011e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff47e911-1019-4ea2-9f54-04459a4217d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842955a0-06b0-435a-88f7-a7b3720c9a77",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e47b12-32f1-4d10-aff7-43e9276b997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f63bbf2-ec63-48a8-8d57-addafe27c26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dab236-ef34-4528-80f4-b4926763d462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339ca546-e098-443b-9fcf-99213bef15a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc59fac-063b-4284-9588-84039c4758d7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2055b2d-a0e0-4da0-a7ac-e3cd88532ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f837da64-79aa-451a-84b4-8d27c3c8f78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8492e32-db46-4d04-a4b4-5928215bd764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c2d3f6-bab9-4e70-9e17-85aa8b2c9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db64f51d-c824-426b-87b0-1ce33b33f032",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2065e2a2-4472-41b0-9354-82ed93afe693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c73173-0a01-48e2-84fe-694929eda8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f04f1f4-d3c6-4ab7-8749-a219c5821f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175bc3bc-64b8-4d53-b157-ac4a372b18ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d18aff4-1d05-4e58-80b8-02a2ecf50854",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d77f6b6-5f6b-453b-9bb6-8a3952d66d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea58df9-1378-4600-8779-88274277fa7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a908d110-a895-47d3-bad2-98630f1da310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36c0eb0-d6ee-4925-a35b-311b53413d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7276b40a-cf22-4cca-9f87-ec9eac5c0ee9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2321bda0-dc15-4052-9216-f76b06cf71b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c36b7d0-1864-4671-ba22-c229c74a60e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6553282-6acf-492a-9ac2-ffb8dcac76e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94ae402-4069-4c23-8d73-c4b585d58e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f8e91f-cde9-4b42-a6f2-a7ccf760e2b3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065a4ab8-70bf-40a6-8c4d-e0760a4c7719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848819bf-c700-4ab4-8986-ca665dcd0bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f455fc-2acf-448c-bdac-f237b01adad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398358f2-d225-4f93-8a01-bf9f5ca89f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d2520a-6dec-42ba-bbb4-6b673aa33753",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01baa164-9c0a-44d8-b6e2-1debd13e8933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0f6e6f-8b4e-44d1-9bd2-d136f82e8da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50ccedf-9421-4be0-b76a-f597f6293273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af39d632-267b-4e03-9c18-12fe7653b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e718d2e1-d942-4ff7-b2f8-8e0bcd2d88c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fad6d7c-862a-4d9d-b037-df0e19926ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac05db1-929b-4995-b327-538a8ed4f461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb42fa-a457-480f-8b27-acc4a300a490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3364a5e4-d52d-4011-beae-c368770eb13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6848bf-8852-49eb-bd23-e64edd90a6fd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe542f4-f8e8-4dac-82b2-394eeac3b05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85eb827-6333-40d4-a751-c22772e1a88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e11e0e-3456-4390-a2ae-8bb481fde7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ca71bb-509e-4cfe-9a48-8d1431126de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4494c3-d5a5-4b98-b049-fbf37d0c4f0d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78ad804-69e7-4bc0-9899-29b5edbf5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866868ce-f585-4b75-86c3-2cc9589598e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67063412-c59a-4041-a853-3d4575008bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d2f301-13ff-4735-96fc-0ae73efe4ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d18a46-a83d-478b-a4f8-076ee59bf34a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2f5a69-d9bc-40ab-bc7b-5ba5aa0115b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14343188-1ca0-42ed-8ca5-c8c55ce336c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7847b874-378d-492a-b742-49fd166bbc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdab6df-0b91-4619-97e5-0f1e2bf5f7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46061f47-028b-4c99-9e86-37659598f0fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917272c2-a5e8-4645-a61e-9e2e2adbbc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8453b2ac-934b-41c6-972f-2886ba49666f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8885d379-8c4b-4d18-9c04-16cd7f1ad9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2641f352-5453-4bcc-b1c2-2db99bde1b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdd698b-2fd5-4dbd-a419-34f88d26e1d7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040d320b-820a-4e04-a266-2b54f3605d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490b94ca-106f-45ce-9e83-257c225dcc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f7636c-8fc1-46ce-a70f-0a2c56c2294d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43b15b6-e2cd-4e65-9186-bc7d4d6bd153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a70e90-22fd-49df-93fc-1e36569ada44",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69285b5-c5e9-426e-8049-551361416361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3817ce24-aa73-47ea-9ef9-f772cfbe0d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d557df-7d2e-47ad-b135-6b05e2a36786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa447d9-3e80-4b3d-af6a-e823324da50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4317fa88-d660-4b6f-bb90-9bfabf1d21f3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72359d33-b3b9-4c6c-9291-0ac995c385fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72bd4d2-2ffc-4cef-a058-a7f6c5b7df89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac5874f-6184-41b2-acdb-2ebc88be0750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc7f00f-b958-4ac4-a0f0-bbfc55549be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657532dc-62b4-4dd2-bdba-6d6a44c2ad68",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4b0620-6ead-4bf6-90c8-f8421b182159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdcca90-b8e5-4c51-85ee-ccf75557df28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6784d6a8-6899-4305-82ae-9db4b0cf4a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d188635d-d944-4a5e-863c-4001358c53ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2858764e-35ea-4712-bace-aaa6179d256b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2490ac-805d-4611-ab7d-290619775e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c492bf5-e0f5-4af0-8bed-c9a9600accf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0dcd20-be7a-4f3c-8658-3fd7c51b02cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be202a4b-9a07-4fd5-acdb-a2e5063b736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7d399d-fdf0-45aa-8dcf-da8e62edebe1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e68126-cee9-4b92-b7cb-d133ba8dfc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef797da-9398-4820-af0e-c1aeab048347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092e32a6-fbae-492e-a384-07a7dff4fe2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d574c29f-1615-4589-85fe-65c1d4991a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd01b96-a8dc-4dbf-b032-9b623062cdca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be300d-6401-487a-b964-757c0bd3e8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb048aa-4cfe-420a-9fd1-e6a4119e52f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812e722d-41c3-4a55-b4e0-578734ffdc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346cd90f-062c-4040-82b3-2a90fad618eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274edd19-624c-44d8-84ef-5e750d75a05c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3199db5-a77a-4983-951d-16989d527505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f68071-5ce0-484b-8a58-951b94865663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d41326-2e1b-4675-8fc5-bbab7ffd46e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea732e-907b-4e3b-8d11-e278de5cb002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787c66af-1b35-4d93-a657-8aea071c3b66",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b9d897-f73b-40d9-8d62-61f1111c42cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54df4ddd-e172-4b8b-8df8-9217f3057046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7eefa6-4004-4652-8452-c387650aea72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108ec844-5df8-44ed-a997-2bf0933e723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9daeb7-f3ac-40b7-b8bf-71abbadf9f2b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7d2d40-40db-4275-8cb2-d34f0687f085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9e95f8-d66f-4dee-8a8f-3a7a3d76093c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c53c09-52b6-46e2-971f-dda429dce0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b884d46-2b9e-49b3-a839-8bbf3dd6678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cbde30-e762-41a2-88d6-c4741c1748a5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f484ef-5a86-4bcd-9e20-2a1e62c3abe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537ef4df-519c-4949-9540-0b882c79bd2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac03d20-509f-4c47-bd86-28c7c1636b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad0f4f6-2f16-4110-8d1d-1df0edc92246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be29859c-10e4-4615-9825-7de3cc265c2d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8898ab03-e577-41c9-ae4c-6a8f4a25a38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3670989-0ce8-4200-b326-c9fc8eba0d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01a51e4-8f9f-4671-93e7-b32bfbd75e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625de617-b525-4fb0-a377-1b903b9f02c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7df607-725b-490f-8275-de1c07fe0000",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbc79e8-2aa8-4162-a4f1-62e13592fcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3613e6-2828-411d-8764-bd92fe5bf78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb30ca7-da12-4b11-80e6-b91f074df821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c723d85-6b07-428f-86f1-06ba1f0702fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2265a26c-da41-4f8a-898f-40c3f49d165f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71238de1-36f5-4570-9f56-daf2f79771ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4fa70d-fe55-4ae9-9b32-c76e60606704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bcd321-96b6-45fc-9c6e-f708c918e346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd335ba8-e7c2-4894-b3dc-0319a0cf199c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ca6ba-6d35-4184-a453-5d73df71e5a9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc5407-eb03-49a7-9b98-ba55b177aa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0425a16b-ffb9-4c41-ae86-15b54aa4c82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204528a6-b239-4166-b988-938cdcae19a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c74c458-cf61-4cea-8b3a-532d22513699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59e4663-32b4-439d-96bf-670bbd344398",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763e358-f22b-4080-85c0-0ccf5d125ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3937287-1864-4c79-bbbf-e386ce279dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513afd66-5123-4bae-84bd-675614447ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50681e97-f300-4fd1-b1e4-7d2820956f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc27c8e5-f340-4154-96dd-43d9ef8b9404",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7d6062-9f11-4979-aa41-63acbaea8646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e227bd23-bf7e-4a4b-afbe-da512d446ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0782d7-9be8-4e15-b6fe-740511552d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a245ce-156a-4b24-bf7b-0f4d1d7dc1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a178b8-a74c-4d6a-bacf-7c373dfca7d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea4b337-566e-4e98-88a5-802f70a18230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebf7a28-c501-4f89-acd6-7563ca35ca1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ddf7b-704b-45cb-b50f-940ff319c783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ea7af9-606a-40f2-9d87-3883a6fdb636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44217f6d-9b78-468c-bab1-38b0f1d37b5e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca191f7-0aa9-4379-94b4-e2c7b6df107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2143dc1-7144-42d2-b027-7bfc8a9081ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf83880-e8e5-4602-8dd8-3c75629db4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d709200f-c59c-400b-bbb8-21cc23dd9982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa9ae6-74c5-41dd-8b06-7631caf8eb09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f60380-d156-4cff-adc3-a484ca9fe402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9560ecb6-b675-4952-9838-a526bd8b880b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3c7a63-107b-470e-b73a-51a52a11bccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19445f11-4bf2-4d7c-94e2-accbb0773900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23f9804-7249-46af-b2ca-bdf5387a980c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbb67ef-29d2-4b60-9e79-66847b3c82d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fec7fa-fe04-4e6e-b2e4-399d5991d142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b430061f-40dd-447e-adf9-a95a5aab774c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eebec72-4799-4a5c-a3db-7a506cd72cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65c3d96-87c0-4082-bfbc-0f8bf81e92ba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8b272f-dcfd-4859-bfcf-8822521b20d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aef361-30d1-4c3f-a4ac-fc83e518ef82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6746b761-abfd-45d6-80a0-603f36ed478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91563c1-e8c4-474f-baa0-04d5dda7b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ff5cc1-4142-436c-b368-405e70d8d89c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113811ea-e7b3-45ec-ba03-3a7990c1c232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acd3fbc-ba4e-469f-8da3-ad4c2a0ae5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432ed52f-fe96-4dcc-bf24-74eaa6b881f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de227c9d-bc8b-49f4-b59e-1a9cddd97e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a1531c-34c3-4069-86d7-f2a3558d929f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f97a85-d999-488b-97b8-d3befbc996c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836c5e6c-ea7a-4346-b229-6976de0b63cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f533b721-b269-4fc6-ae2c-bfcce434a81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8479c3e4-82af-4b64-b855-7e1076cd8c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f65bb16-1c58-4080-ad7c-c61677c5d138",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0150114a-4449-41c6-b75d-dc6a1070956e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8da1fa-f5eb-438c-bceb-5f982a79a29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff8fd5-101d-4a49-b930-a3855d7b55b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3b2fcd-4517-4cf3-935f-9c019b3b9160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa9f6c1-358f-4414-9ef7-22d2fb7000a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f0a1e-20a6-438b-bc55-38554332ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e391fb-a1ed-45c4-a7f4-12cbf87dc012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeeea01-92a4-4e76-a7f0-b6b0131bef31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe98211-7751-45af-be15-0fee2025e4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5063044-9ffe-4922-a277-a460b63439a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debf1ca6-5c88-4dd4-94e0-b36e7d12f08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710c5297-b825-45e6-8e11-757c7fdac0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9321b2-ca88-450b-830e-bba9eb821c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3b15c5-c4c8-4378-bf15-e8e6132abd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924b91ab-3a64-4e68-a2b5-a168414c0ad0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813d603b-b737-48f1-b400-d4b882a935b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace41dd7-fb04-4503-8a38-db6768d77314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc91b266-711e-4345-97a8-62ec369c9047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7c583f-a825-4554-bb26-93d0d6c3f199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d033ab-c458-4046-acbd-697e40540fc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f998f3be-b5d7-4e19-a698-cd3afeadd242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb33462-5727-4b65-9c4d-4e8b233fc7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d00b8-2429-4c37-b2b1-e14d240eef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f628c68d-ea05-4d19-b7b2-9867674a8a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18879be6-7abf-43c4-84cd-3b636ee2d616",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ce005-d24b-4fa0-9e4a-81dbcacc1445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724211bf-26f2-417e-8cce-4fc4057bd5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f84534-a862-4432-b69a-e16ae9fed6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cabbf0-288d-4b3d-8f98-9f684819f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38dac36-3643-4fb6-a089-7cf2aeceeb42",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c586e-c648-4647-8930-ba099f28799a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce750cd-39f9-41a2-8ea2-8b04b953de91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace86010-42b0-4bbd-8578-45886c2bcfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374f7b74-f69d-462c-be35-64fc69362c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81042e2b-f9dc-4f3b-b661-b7975e24d931",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49512156-be78-4c62-8915-04367f4d97f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e4f96e-8194-4cbb-bc47-cf5373605d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbfa645-27ab-480c-b665-81b59fdb174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318f02a9-1053-44a7-82bd-2784ac289dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd597f54-c4b8-47ce-bcd7-97db1023abd6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb54685-074c-4621-a34d-37e9762035d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a5eb19-9550-4ea4-a865-86805f4754c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0553b9-fb5d-4aad-83fc-7327bc871727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c716cf-53a6-4ae6-9ab5-5e1da89ac015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9535b4-70bd-495b-a80e-5f4c7485b253",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c816046-cdb8-40cc-87c3-e91b1913ec7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dea89ff-d7f2-4e1a-80d8-c34a99b0316c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3921ac-b11c-4da5-af4b-4648c7fc6587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60701cdf-e04c-4b12-934c-1c1d3699d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9aa1c4-9002-4103-9d93-6bc365842069",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1504438-ad6d-49a0-bf63-83dc1b6d7148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f54e445-7047-4273-9f58-9309c6bcd5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dff593-e0c5-41c8-a5be-cf78e0e7fac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff31ae2-5ac0-4b70-a382-71b39a66121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548fea32-c800-484c-8780-44f7977c0345",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a86a240-63a4-44f4-b403-7d77b54f0ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7f8f0f-75a3-4b8a-9075-e1c9fa47cf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58721739-1d61-4a82-ad5d-501392a4b7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea05ecd7-5b9a-4d35-bdca-394dd20a6b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e819af-4d8c-4965-9130-bb4c03d57bf0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e621be8-320d-4615-bc2b-34cd09256f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c5da3f8-5fb0-4bb7-a2cb-9d47b54bd156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f6360-8916-4020-938f-f66692a7d0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f469b9e3-2758-4399-8cd4-5b39263993db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ca8206-bcc6-47d5-a9d7-2ffb7477ed23",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113400fe-97b7-41b4-bc7c-a8dbe4b802b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d076d777-566f-44e0-99f9-bce1a6a4d426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7403e5-c0b3-4762-bf8c-f83791f634e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5156d5b1-1cce-49d1-a75d-b4cc0d117705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ca971-fbf9-49d1-9dc6-813a22e656cb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1585dfb-c93d-489b-8bf4-a5ac53e293ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b91c5f6-472b-4d77-a555-ea62623c41d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c400b5-3d62-4b1f-9883-b0f0583a53a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb9153b-2ef9-4430-907a-9317f7fba25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ce84b6-9b64-497f-a692-722e5ae9dd5a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3c7442-dc27-4427-b3e1-2665eff76ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f155974-600d-4d60-9e33-6ce479c41ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0f520-6081-4cf3-b8d3-3831e9d91334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd8ef99-2d64-4427-9658-bc1f9dff1f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f789a963-3b41-4018-ba05-a8a1c00d7386",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535af4a-70c2-471d-b723-52dad15e92ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d903dd4a-1625-4b9d-9ae6-c46f9cc93fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8af01-81b6-417e-9638-f6f07e19f305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebc4a4c-7ea2-4752-9cdd-a4e5db4682f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8345eca-6227-4b2f-8cc2-374c0b3eb345",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1208c9f9-1758-42ea-b43f-8f477455a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0cf4596-0387-498f-9388-e35fd2d4eeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec6196e-17d5-4dbb-9473-5f26ed028916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4a3641-aa75-413f-8327-7b6a13eb071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12875ec-14e6-4caa-b9b3-78581d4479d9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1b4869-d22c-40c8-a2b3-1fb954e8fa1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372a3611-35e4-445a-b79c-eee80ab8e7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996df14-b1bd-4d31-9195-fbff77b474aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19553811-245e-4f50-90b5-c17627e67944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2df2de8-b1af-41fc-a7e9-727df759c056",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea96ba6-603e-4ce4-adfb-208318f36af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66df4b56-f972-4365-8f56-4eff0d0c3cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785c87c1-84e3-4c26-93c7-e15dd7f00e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4ded02-846e-467b-9165-fd54def1a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c7903-704e-4459-8ab5-671b0819d59b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65c14df-e44d-4605-b2d4-79b84e079cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d61eeb6-6f79-4fe0-85fb-816cff002177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22391a-e5e7-4811-b658-473385452eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc56129d-7e26-4825-95be-80d5b19eed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ba1b97-16ee-4c24-a34e-30df934aebf6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ab996-3baf-489b-9205-682949820996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f056de7d-d053-4b83-b5d8-3bd21a8e876c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c53451a-c3ad-4c69-9b4d-95ca56138090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08c7e53-3cb0-4814-b0e3-407ac2613882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4568481-c437-4a24-8c67-13570869c028",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f20bec4-4ac2-447d-b396-08ec72824a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb8a78e-b7fd-47ac-b425-8e9f57bc14b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3893f0-9d9d-4aeb-893b-0189db486b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01279f-3aef-4f7e-9b9d-4a2682dc579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563a988f-157a-4292-bb35-f6e6bf00105d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4ebd2d-7b4e-40b3-abfb-1c666fbe4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ff62c3-c80d-427e-b2e2-c1f0b68a18f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f95c7-ca32-4a53-a3af-21b7c7788275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38986d0c-e9fc-425c-8f56-203b59fbd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a242de-811b-4b59-a070-c2c762e520f7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605dd20-2e74-46f9-b3ef-2e17cdd9e5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a56acde-9e1f-41be-9450-7a27d8527add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216862d-5f63-41f5-bb36-e7aa720e5976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1168537-78a3-47a7-8a48-d89a4fe0bb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd64568-06e3-4ded-8799-22e96283a59e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673be1c9-1da5-4cfe-b564-0b73cd4c2158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e0ff3d-a580-4020-9e03-ef3f53f11fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db3b6a-1d77-4182-a906-ebae292007f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c752a9-6e7e-4e32-bbfd-4b1d1fdb8f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbb0d74-1a0e-4934-900f-b4062f8fe81b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb516df4-e64f-45c1-8fa8-7710884b0407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb2d91c-62e4-41c5-9cd3-f221734b1a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2520ad-13fd-4db3-880f-7ffc5f1fbaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b6ac1a-cdce-4c0c-8d0d-2130ead7f19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde9e2ac-27ad-4b7b-ace8-6ef746c26771",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc950b9-e275-4bcf-a6e6-4217e30b7a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1796e4-4963-4171-9177-d6c29ed8522a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e3e041-9568-4bd1-8eea-b7cde283cc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd4edce-3ea9-4e0e-87e7-5d0a45357a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e99fd05-66fd-4a61-a7f4-270043c8c7e6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec95e5d8-44c5-49e0-903f-78c49143c10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a559c367-dc24-4aa5-a2b2-c4b64d3a12f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ac4eb-561f-4385-9dd7-3f0c03b177b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839ff918-7e15-49c9-ad45-75b82f8cb73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb63cf87-7940-4e64-9903-9594b7bd3934",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a1275-5d19-46d1-8ca2-dbf5d429e92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19257ec0-a7a6-405e-8a8e-44126ffa647a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9849b9-be20-4031-a65a-2d9449feee34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9581bb1f-cac9-4b99-af85-5ce2fe010e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82314007-ad40-444c-8108-615b0ea8dd76",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95a4fa-8cc4-4c2a-ad0e-034b9cebc4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22be45bb-f00a-4cca-9dcb-d3fd52b78f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537912bf-150b-4f1a-8297-cf5075398a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbe2ced-c761-4665-b169-2a2f48d7e60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef645dd9-22a5-4259-9666-0c264507371d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05dcb9-1c5e-459b-944b-7f24fd652061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eca08be-9930-4bfd-9885-53489dd1db40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cea5379-4b0f-4d01-a023-c1d8b0b0e2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888a6ef0-b60e-46a0-b208-74c9d8521867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e2e66-e817-4e28-aceb-878ea7a0f073",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26fbc4d-2151-46ba-8fbf-1d4f1ad2d3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c0c41b-1450-4401-9489-a918204faf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694fae4b-313c-4345-99c9-6c10d68d14a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734d2e42-a5c5-4689-9084-44faa297b51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3817b84b-c8d6-472c-a4b7-c78f63260e9f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a025f4c3-f899-4ca3-a978-8a122243c8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ab22af-1a26-4c6b-8737-7aa60040cae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca25c1c-0ab0-4e73-98b9-7c2ec30829e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3288ba-d84d-42f9-b596-8ceed19cedbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac8ae58-1977-499d-9bba-720a9053f230",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47f1a7-2d8e-4143-844d-fbabfd154c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90abf938-6a42-4f5a-ad2f-66377d094b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d9015f-8c81-4fbb-aa63-49fc7eb440a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a95e2b6-b42a-4b36-a4a6-57dba55e7e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982ec503-bb71-4d55-942e-acb5b95c0cdd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e180b43-561e-4418-986b-4948092e99d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c945557-61f3-40cf-86a1-a6bb2b18d036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496c0c5-8e90-43d4-b19f-42446c4af6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f260d8b-c733-4ce5-a483-44e9dca0a70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440c74d-1502-44b8-81bb-71d768d64bef",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0789688-6260-43f1-b86f-293f0cc83569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ee7a8c-6733-47aa-b383-2da90013ab24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456c36c2-ff00-4836-bd9e-61b7d640c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6e80ee-fa07-470f-bc79-d9613dd1ea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5193c43c-eeaa-4a09-80a7-78cdfcff1569",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd506b29-6bff-4fad-bedd-bf7dc22c98a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d7738c-473d-4aa1-a247-f823bef6fb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0784eeca-652a-4546-b176-19bbc39d5ecc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2392a8-85c4-4163-a615-bf2392ffd15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726443d-d8fb-408c-852e-2a7e6eb134d0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea54cd0-fb77-478f-a414-c3e051d00385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bfcbab-59b2-434b-997c-a5c02ae4410b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c561ee-1c5d-4949-a813-b26b058a0072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5636a3-5b76-4007-8722-3bb23e658a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611ac11-ef31-4804-a071-5116105a6dd4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ab01b4-a974-49ac-869d-3954d7be6083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b1b553-8ef1-449a-ac4d-b649f8c5a507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1df8d9-b5c3-4479-9c69-b0ed73bccae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070180da-b253-404a-8bbc-5dbdc4e62901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd0802b-f010-4858-a720-8ed0a9fae206",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc6b12e-74b5-4af6-ad68-f199e97ed98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ff281b-f97d-428a-9d44-4b81c88b109f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b3267c-f1e3-4321-8a95-7de64629f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff46438-9f90-470b-8e85-6db42a9be3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e577b9-6fe1-4939-bea8-a3e1189cc70c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f886ad-238a-43a4-b696-6ba64a46ff62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9e427b-688d-4cec-a33c-d3685b64bfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a88e20-a80a-4af6-8cb0-376dbeda4860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295896ce-9bea-4478-9a85-dc1f244648e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49090f9f-3986-49bb-b44a-f5499b452649",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c90b0-6a13-43ef-b01d-aa7996efa4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33959da7-4be7-4029-bba2-c2061f7315e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae6370-60db-4843-82c9-c9d34b6bca09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2133f77-fae6-4a6b-80b9-055e118ed519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f35921-9cb6-48ee-8313-71ffd166f31c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f598d088-56f1-4878-8cd5-79e8b467f264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a626cd-34f0-4f2f-b44d-f012a2c81b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0b4e5-3441-417d-8183-fa6ddf7a022b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7d40c8-1510-4c75-8816-9ab4d5abbabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15dcac8-a1f7-4696-97e4-c8345df3d5a6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7796b190-1a2d-4538-82f4-b9bc73ce3630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d136df01-f560-4c4d-b039-70215e856e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3287e413-3bba-4037-958d-5df39a2cdd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffc589b-572f-4e9f-81ce-74de7ced05f4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee8fa7a2-23cd-490a-b8a3-c3f68e8e480a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90b85537-aec3-4b10-bf84-af70b4065675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0056b9ba-6870-448b-8958-11246e960caf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49547372-8084-4e92-b434-83523b8840a9"
                    }
                  }
                ]
              },
              {
                "id": "92903582-9873-48ed-b153-39a2e8495f85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bfe3c2a-b048-40fe-bea2-180de96a0f81",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c3fd6-7bbe-46f1-b4d2-842daa9f93fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7318b2b1-b02b-4a3b-863c-79ab44128fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64553c63-21ef-4ffe-8897-036bc4451288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b627ffbb-04a8-4a5b-b7aa-34e17359418f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9967b693-9446-4c74-a613-4ad1ac20e4a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90d28dff-beaa-4916-be7d-907bcb666334"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7210bc3d-e45c-4d66-b167-271249a86cd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c2dd6bc-f74a-489f-bb12-12d68f5cdf7c"
                    }
                  }
                ]
              },
              {
                "id": "63149f11-54d0-4e81-a86f-8176d340352e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4a5e85b3-1f35-4ca7-b958-3212d2b82a0e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf66946-ef12-44a7-af4a-7f913a68f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0f7e9d33-0f90-4808-900e-d852a00a18f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b018f66-7251-4226-a08f-f2ff3da765b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221be7af-2076-49ac-af6d-18e52784aa38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50a84e27-fed9-4080-9d0e-61d504c52ef8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7fabd08-2bd5-462e-a182-94bc76b149ba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82c4d87c-03c3-4873-9a8d-9f571b5ae677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18d3cd25-8ae8-4a49-b653-d227c90caec8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f192e38-9da7-478d-a216-e85d891fb1dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4b89ec3-4694-4645-b416-66739da5abaf"
                    }
                  }
                ]
              },
              {
                "id": "05324247-6500-45ba-8f20-a7fd496f57b7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "999a723c-2d8c-4f4b-b7ef-826459858a41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "919c4224-2b60-4741-a6b4-1d0e75424965"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acabbe8a-e909-48da-be16-09d8b2692bfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3b7c910-57d1-4562-8ff3-e5e5f9771229"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2274979-349c-4417-aaec-be12ba0cab9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e6ede9dc-e873-46a2-a694-2069287bb241"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d916d91-2b39-4cb6-8896-4d414b1d0c5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c573d4e-1ea8-4f95-9312-e9bbc30ad9e0"
            }
          }
        ]
      },
      {
        "id": "36ae6872-f930-4799-8190-3765904e1822",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "51608682-785e-4a63-9848-6de924db1857",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92ec1366-a6d0-473b-90d2-e7ccc316b3be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64f6c7bb-c846-4ca7-9a43-54cd9b4b3ee0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af24f7a-76c1-49f9-b828-3b65838da1b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "51886ab9-d47f-4fce-b159-3e0a7ed1d474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715414bb-962f-4412-a5dd-a9e089870d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1b36192-8a71-4a7e-a95d-b1074dac7abe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6328298a-3c0f-4b48-b53d-750f8201c88a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b9e8fbe-2c8a-4eb1-a5b9-e7c8cfe4531a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7949c56c-dcb9-42d2-bb59-b68f0b16a2d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82fc1ed6-0d63-4732-aa90-9c2504aa5118"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f44a2f8-7d14-42b0-92e3-39067b20a586",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3512bfcf-404d-4688-86be-14474c6ef46a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30d53497-2cc7-47eb-a745-b1fc280ede29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "428cab07-cd7a-49a2-b699-9f3536e8fa25"
            }
          }
        ]
      },
      {
        "id": "1adbaf80-ade5-4920-90c1-1ea887607409",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "53843ea3-fc20-4fa8-ae39-8572ddfe8c15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be74ed4-53b5-4285-abd8-734d56887cc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e8b31c4-3a03-44dc-bf3b-6312f5d56d40",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdc3df4-0e5a-4553-bd51-507036b8fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee9d5ea-80da-43f0-ab67-d4def2f4ef75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086b115-59cc-4743-8f8c-cefb52f4fceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bad76efe-40d3-4260-a07f-c7b10495f49e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9199738-1e83-4907-ab13-76edb92c7d7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "915aa4b8-ae1d-480f-b635-7d2039dac195"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc63c59-a07a-4209-98b7-2040e85875e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3a1f43f-7500-4a81-8e93-47434c2701c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30cd559e-8da4-4ced-b7f8-11ad5077ce7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1810d2b5-1e28-407e-b80e-24dd879813b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "181362d9-2ed1-4532-981f-e53501be3701",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f130acfb-6d52-4cf3-848f-7d13d1e85ad0"
            }
          }
        ]
      },
      {
        "id": "ba745c65-496a-4df6-9775-befa1af27144",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8fe8ea24-c7b3-49f1-9bc1-a44c0271eaf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcb49608-8849-4280-9ec1-da2897e988c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38fea19c-98fc-4dff-ad82-a6295d0b5867",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff72f46-9499-44a2-af92-9f3e2c538e7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "590806e6-ce9c-474a-93a8-11e147db6482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba764672-383a-4724-aacc-12aa47315a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b303735a-039c-41ce-bfd3-1f0704e8386f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c02c0148-5c1a-42e1-b3a1-cbc0fc93a870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e19633-a413-40b9-b5c7-e3fb2b4cb48e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ac6a1a2-4d95-4463-9671-51b69b875ad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1bd9d45-2508-4a29-a1c2-9957ae2b8aaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a93f2807-6be6-4027-9a68-e179f070e03a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49183b4b-b6d5-481c-951b-cebd8791b2df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "243db0fc-f446-4c81-9576-fea8f30d5120",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fd56d2c-90c7-431e-95bc-2aef0dba8c6e"
            }
          }
        ]
      },
      {
        "id": "44a4752a-c360-4492-a97d-fd6d480f94dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22524fbf-5ac4-4bde-9c5c-01e381b7928e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "332a197d-bfa5-4345-829e-79833de9e93e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bfeb9562-22e9-4bab-b1af-dd236de23786",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75205002-68b3-42fa-8b56-b87e699c2534",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9229ff7-0549-4034-b2b8-248fc961edab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.59298245614035,
      "responseMin": 6,
      "responseMax": 2826,
      "responseSd": 332.4609713855354,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702168729970,
      "completed": 1702168766965
    },
    "executions": [
      {
        "id": "0a9cdf5f-96af-451b-8088-2aa890fc606e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5a8f6d01-52ce-4fc6-9862-b29ce0f871b6",
          "httpRequestId": "9e9cc430-5b76-4b17-8bc5-ae9a32e719f9"
        },
        "item": {
          "id": "0a9cdf5f-96af-451b-8088-2aa890fc606e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "016c5fc4-d71b-47ac-adad-79907b003052",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "b2c4e40c-0dc5-46a3-b563-7c7c52eb8c83",
        "cursor": {
          "ref": "107b8123-79a2-4265-9946-d5c70b742fce",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c720618f-8e7e-4d34-a32f-c008f7c25d15"
        },
        "item": {
          "id": "b2c4e40c-0dc5-46a3-b563-7c7c52eb8c83",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "96f2c669-fd90-46a3-b8d8-06b60d9ad1b1",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "bdb6db43-aea6-490a-ade7-7d697db966f4",
        "cursor": {
          "ref": "7ec52e23-8ee9-4f72-897a-6095d67d4893",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3cc6700a-2229-42dc-9260-ccd3fd9d1050"
        },
        "item": {
          "id": "bdb6db43-aea6-490a-ade7-7d697db966f4",
          "name": "did_json"
        },
        "response": {
          "id": "e2d37cf4-258f-4bf6-a089-72c56a844743",
          "status": "OK",
          "code": 200,
          "responseTime": 734,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe765c6-035f-49db-8eed-a49c15fd1db3",
        "cursor": {
          "ref": "707f4d93-d2ea-473b-a9db-86b83c25e3da",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4ac54ee-e37f-4353-b197-a8f4c7534914"
        },
        "item": {
          "id": "fbe765c6-035f-49db-8eed-a49c15fd1db3",
          "name": "did:invalid"
        },
        "response": {
          "id": "881d5f1f-422b-44c9-a9e1-b6c39bd9721f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe765c6-035f-49db-8eed-a49c15fd1db3",
        "cursor": {
          "ref": "707f4d93-d2ea-473b-a9db-86b83c25e3da",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4ac54ee-e37f-4353-b197-a8f4c7534914"
        },
        "item": {
          "id": "fbe765c6-035f-49db-8eed-a49c15fd1db3",
          "name": "did:invalid"
        },
        "response": {
          "id": "881d5f1f-422b-44c9-a9e1-b6c39bd9721f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86b4bc-6c0b-4db1-a992-aed084987fb2",
        "cursor": {
          "ref": "a30b949e-be59-40c7-8b40-bd04d9615ca7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fb8069e7-5608-46e8-9e7d-f2bfc182b6bf"
        },
        "item": {
          "id": "5c86b4bc-6c0b-4db1-a992-aed084987fb2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c736a72b-b2bc-43f7-aba3-2bd34af6cd6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 111,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e780cb0f-8a91-4610-be4a-b3c2786a37b1",
        "cursor": {
          "ref": "e16eb5bf-13d2-40a8-bd35-60cac45d4f3e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39434e23-0fc9-4a55-b38e-4c16f8240608"
        },
        "item": {
          "id": "e780cb0f-8a91-4610-be4a-b3c2786a37b1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bc676f01-fe77-47ab-9ab5-9259f4618cff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37486ca-1134-470b-b5b7-476b9233139b",
        "cursor": {
          "ref": "cade95f8-fa01-470a-a3c9-a0f5b935094f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1bf7c193-d913-4a5a-a17a-841933d10efc"
        },
        "item": {
          "id": "c37486ca-1134-470b-b5b7-476b9233139b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d6e8e101-3273-4119-b4b8-c259bdfbfd03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0384f0-05a3-466e-a5cf-4264e804ba6c",
        "cursor": {
          "ref": "6560bc06-fbb2-4dd7-b3e5-b19fe4c2cc10",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4db44eed-8e48-4a09-a3c9-81ef71d7ece8"
        },
        "item": {
          "id": "3f0384f0-05a3-466e-a5cf-4264e804ba6c",
          "name": "identifiers"
        },
        "response": {
          "id": "d436a219-8aa9-4064-b9f7-b63ead8fc3ad",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123aae1-9cd0-41c9-afad-14d7291c92b6",
        "cursor": {
          "ref": "808108f8-ce3a-4039-8281-6f4ddc3eaaaf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f96e9c6a-151d-4519-a2ab-1938272a8851"
        },
        "item": {
          "id": "b123aae1-9cd0-41c9-afad-14d7291c92b6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf9c34ca-fb50-405b-86c0-eca724c830aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d3393f-ce14-4634-8151-6efbc2a192c5",
        "cursor": {
          "ref": "16736ccc-7add-42db-b182-41d09efb4d9f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7d7e29dd-e13a-4f59-8513-eaad55d3e96e"
        },
        "item": {
          "id": "50d3393f-ce14-4634-8151-6efbc2a192c5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "58fb788d-2a0a-44e7-a10f-4dd9b643f135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e25002-0348-43de-80dd-d01e813c7720",
        "cursor": {
          "ref": "51894a25-456a-452d-b2b0-491637f4e0c2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c84c7e4-6d3d-4847-a89a-80e985d1352d"
        },
        "item": {
          "id": "c2e25002-0348-43de-80dd-d01e813c7720",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e336ad1-1c80-42cc-9cbc-48dc32a2ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2ed20b-60be-4e14-b036-b7276baf6106",
        "cursor": {
          "ref": "554bc433-b08c-42da-8484-c5b8d4a784a3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6550bf23-fe8b-445d-93b0-443c92a89058"
        },
        "item": {
          "id": "ea2ed20b-60be-4e14-b036-b7276baf6106",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "beca93b9-e487-48f1-91fe-c4b62f6bf6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88998101-331e-4ad5-b985-bb57b34868e1",
        "cursor": {
          "ref": "b40fab9e-44fc-4bbb-8473-92042e239fb4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ce447de2-e5ee-4cbe-8e06-950d2b6902ab"
        },
        "item": {
          "id": "88998101-331e-4ad5-b985-bb57b34868e1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6f965689-00cb-4fbc-bddb-480532000062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a991d3e-1223-4e74-90a0-e1bc80b6b11d",
        "cursor": {
          "ref": "87b2f65d-b03e-446e-86ab-179373ff8cf8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f7d51bf6-b9d8-442a-a3bf-043ef35ce3eb"
        },
        "item": {
          "id": "8a991d3e-1223-4e74-90a0-e1bc80b6b11d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "738b0829-cfd7-45ea-8e3c-96016380ee9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ede2efb-4897-44ec-a6fb-471f9ef77f9d",
        "cursor": {
          "ref": "e1c277fe-11bd-4c67-a766-25be88a0006c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9fa7147d-3bbe-4647-bd5e-fca4c601c8d1"
        },
        "item": {
          "id": "7ede2efb-4897-44ec-a6fb-471f9ef77f9d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aa4eaf07-fc55-461b-bc15-a747f74aeddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e107f9d8-30bd-45d8-a156-15cc57fd0dcd",
        "cursor": {
          "ref": "74d747e7-0d02-42b9-98ea-51c6ef7de766",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ea99b7de-f49d-4df1-850a-351767faf268"
        },
        "item": {
          "id": "e107f9d8-30bd-45d8-a156-15cc57fd0dcd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8e8098f8-8e91-43c1-9af7-4daaa2830207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7e6fa7-b131-4ca0-b0c2-a7442aa32ed9",
        "cursor": {
          "ref": "165a32f3-1ec7-4b89-9f62-7458b839aabd",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2e671408-c94c-4f5e-a08e-e7f9715cb8c4"
        },
        "item": {
          "id": "4b7e6fa7-b131-4ca0-b0c2-a7442aa32ed9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "304fd04d-87f0-42b9-8518-47246b8957bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ee5ff-a790-49af-9010-767dc0ebea02",
        "cursor": {
          "ref": "e781062e-f17c-4c61-8920-eb9a3bfb13a9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0da55a7b-37a2-4e44-94dd-2bf21410f750"
        },
        "item": {
          "id": "3b5ee5ff-a790-49af-9010-767dc0ebea02",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3a2bc9ae-7fba-41f0-b0ef-d25e2305d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2591a695-7e8f-4c56-aec2-0db3f2211e8d",
        "cursor": {
          "ref": "ab4f7b32-9c4b-4e85-af1d-af662f733965",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2917dd93-590f-4171-906b-d378088ea6ae"
        },
        "item": {
          "id": "2591a695-7e8f-4c56-aec2-0db3f2211e8d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6c48c7a4-962f-45d7-b5dc-423b3a4acc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d4949a-7f82-4656-899a-95b02252731d",
        "cursor": {
          "ref": "64a60017-4897-4848-b802-ee8ceb340b40",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6ac94625-9a30-4bff-916e-85347d0d4682"
        },
        "item": {
          "id": "a2d4949a-7f82-4656-899a-95b02252731d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb10455e-ab44-4779-af8d-cdcd0c7ca11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca8840f-b8af-40d7-8d47-a49785b7b2ff",
        "cursor": {
          "ref": "f0a51ba5-605e-46d7-97b5-06865e2600b5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5bb651d-363c-49dc-af07-dc5dff2d8d80"
        },
        "item": {
          "id": "6ca8840f-b8af-40d7-8d47-a49785b7b2ff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b57b88e3-44e1-4dff-a2e1-29650c7e37bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785626cb-095d-41af-b4b4-cb19ac1a438f",
        "cursor": {
          "ref": "3cef42c4-b3b6-41d6-b00a-546ec28473ad",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "794d517e-2896-483e-a8c5-0d7ac21ceb7d"
        },
        "item": {
          "id": "785626cb-095d-41af-b4b4-cb19ac1a438f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "303dc003-be6b-4388-bd72-57867383d373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c13a0e-a130-4055-9d09-bd55ae5dd375",
        "cursor": {
          "ref": "0c0d4d65-afc7-4ba3-bf31-6fee9efb2b26",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3b4e313d-fba8-498d-bcd5-2fdce62af9f3"
        },
        "item": {
          "id": "80c13a0e-a130-4055-9d09-bd55ae5dd375",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ade30f8a-d362-4281-8c17-c01cd12ad013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f2185e-2e18-40ab-a13b-f9d0f4d5243e",
        "cursor": {
          "ref": "317dc1da-d534-4f39-abd1-c54a6479bdce",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "60ac090e-ffd1-49bf-b495-a571555987c1"
        },
        "item": {
          "id": "07f2185e-2e18-40ab-a13b-f9d0f4d5243e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cba931bb-a385-4d37-94c5-bfaacd1fb040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c665dc0-d582-4329-bb33-0805854dddc7",
        "cursor": {
          "ref": "d1812726-d0dd-4399-9841-5da9e82f2a55",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b2975a43-0afd-4d18-9438-6150a942046f"
        },
        "item": {
          "id": "1c665dc0-d582-4329-bb33-0805854dddc7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1702eec5-b572-4db3-9fc4-bf059593bedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa50517-d01d-414a-a5f6-fe09b3ad4e8b",
        "cursor": {
          "ref": "bacd65ac-6178-4e4f-9e8d-71cf61c298db",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ac1eb314-ecaf-410b-99b5-143de14e0507"
        },
        "item": {
          "id": "5fa50517-d01d-414a-a5f6-fe09b3ad4e8b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "68bd3ab2-ff22-4a99-92dc-34a2ce99fb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4afdbc-079b-42e0-8752-9b820b1339d3",
        "cursor": {
          "ref": "e8fc8228-decc-4a34-a68a-c51de29f28b5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "23043378-418b-4378-a571-53945aa3874a"
        },
        "item": {
          "id": "1a4afdbc-079b-42e0-8752-9b820b1339d3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d1f25cbe-bafe-468c-a71b-08ee1150011f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97384c5a-0f0a-4ea9-a824-56c971a0254b",
        "cursor": {
          "ref": "0e2e3990-3e3d-45d0-a428-ac3bb9b71231",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ff3eb81e-82ca-4e05-a72d-9fb882d37d7e"
        },
        "item": {
          "id": "97384c5a-0f0a-4ea9-a824-56c971a0254b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "be91d46e-b9ea-463c-a761-66e2905a8742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6bad8-73cc-44e5-a688-4041f3367810",
        "cursor": {
          "ref": "3ef5f3f1-dc79-46fb-b808-910120c4e85d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "722ee444-dce4-411e-9bbb-70b82d702551"
        },
        "item": {
          "id": "8bf6bad8-73cc-44e5-a688-4041f3367810",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "416f53b0-6a2e-48e6-8087-2dcf1e1cc2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6c331a-cf81-46d1-a651-a08b45b0d06c",
        "cursor": {
          "ref": "6fc516c0-11f3-4222-a5ff-f6338db0f4bf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "328f8a00-36f4-476c-abd4-e06439321a61"
        },
        "item": {
          "id": "da6c331a-cf81-46d1-a651-a08b45b0d06c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31970a27-2564-4581-af04-bbbff7782bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5ce1a1-f591-4eb2-8125-85a4202ecc87",
        "cursor": {
          "ref": "ba58861a-4ddc-4f71-9b9d-13285e4fcd5a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4c757c9b-f539-4316-8dc5-3c6bb1427a69"
        },
        "item": {
          "id": "aa5ce1a1-f591-4eb2-8125-85a4202ecc87",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fbba81b-1260-4185-ad62-ce8e223b5725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da4debe-573f-43cf-af1c-f247a5c45149",
        "cursor": {
          "ref": "f6932cd3-b2c5-4d9a-a079-acb69ef38aff",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10e78fcb-6785-443b-9ae8-1792f818a0bf"
        },
        "item": {
          "id": "5da4debe-573f-43cf-af1c-f247a5c45149",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fd169ccf-7460-4b5f-801f-f0fd2f9c6486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59418245-a868-483e-a1ec-39b10d59dc58",
        "cursor": {
          "ref": "fcfde809-6ff4-4504-96a4-d207f2c993ed",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "299c99ae-d58c-411f-a8f2-f8a3623928b0"
        },
        "item": {
          "id": "59418245-a868-483e-a1ec-39b10d59dc58",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "491cc43d-8fc2-400f-8971-b3968daa05af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84dd7af-8357-447b-9e2f-bda77d7c093b",
        "cursor": {
          "ref": "c1fe50d3-1880-4cf8-afb0-01e310335f15",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "545df6b4-4d6c-433f-9c15-c9732ba742b6"
        },
        "item": {
          "id": "f84dd7af-8357-447b-9e2f-bda77d7c093b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aef0ae08-294c-4575-9632-3c9ab2c9a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6af796a-ada2-4f64-a085-93f15d726a87",
        "cursor": {
          "ref": "93038ab3-ed3c-46df-9c5c-08a4346250b1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4582e94c-573d-46dc-9875-333db0e894f7"
        },
        "item": {
          "id": "d6af796a-ada2-4f64-a085-93f15d726a87",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9ebb657-5092-4229-baf2-13dfffa5836d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d09bbd-9f81-4f40-9ab7-f96327e9b62d",
        "cursor": {
          "ref": "9fb7cdda-c89c-4f77-90d8-1c14ff510808",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "24d37d72-3069-4ad8-8f82-cd9228e8e4a6"
        },
        "item": {
          "id": "b8d09bbd-9f81-4f40-9ab7-f96327e9b62d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b7295ccc-6503-44fe-bc16-2d5ff20108c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a55fd7-8dea-4468-a34f-e3ba1caea780",
        "cursor": {
          "ref": "1edc9055-90e9-4a76-a809-d1d20153d358",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "def64ffe-e1d2-4094-a02b-d6269b9cf278"
        },
        "item": {
          "id": "43a55fd7-8dea-4468-a34f-e3ba1caea780",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6d186221-b8cd-4f86-b193-df8dfaf48b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed290c-0bbe-4fdc-aa49-7b50a5a3a679",
        "cursor": {
          "ref": "7d76a8fd-7bf0-4264-9be0-fd5ede1706ce",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0cd9ea15-c31a-44c9-bafd-d21b66c0e525"
        },
        "item": {
          "id": "a5ed290c-0bbe-4fdc-aa49-7b50a5a3a679",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ce559601-374c-4aac-9fa6-b656563c6b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ffc940-4906-4b62-843b-9f6b30916cbd",
        "cursor": {
          "ref": "5ee973a6-9cc8-4699-a231-d25646c471ac",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a694699b-9862-4597-a367-3d2af40ee973"
        },
        "item": {
          "id": "04ffc940-4906-4b62-843b-9f6b30916cbd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f404b22-5280-4148-9a70-d2f697f4f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2182b600-3618-4e8a-9879-9a6437879d95",
        "cursor": {
          "ref": "9bbc6bb3-fcbf-47ec-add1-e54c2f1b746a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1a6611a7-8d0f-460b-b655-e6fb8b9f4a6e"
        },
        "item": {
          "id": "2182b600-3618-4e8a-9879-9a6437879d95",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e5900ba9-02c0-4ca0-9c6c-f6b85e5f00e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20798f6f-2f2e-45c6-9c2b-92c32b8892c9",
        "cursor": {
          "ref": "e6d99f56-cff5-4355-8afc-87e819bf928a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "495bc9a3-48eb-4f1f-b67a-4ff926d17128"
        },
        "item": {
          "id": "20798f6f-2f2e-45c6-9c2b-92c32b8892c9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "80af8ffb-202e-4e12-a59b-9e0912562d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabeeaa1-d26e-4241-8f64-b0a04225b433",
        "cursor": {
          "ref": "2d3073ca-b5ee-45d0-89e0-66939118d89b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd5c555e-7302-4f1f-9964-fc1f58037a94"
        },
        "item": {
          "id": "aabeeaa1-d26e-4241-8f64-b0a04225b433",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f7e0789a-ce04-47d5-ae80-adce590969c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8ef7c9-c52a-488c-a3ae-5538f7fa94dd",
        "cursor": {
          "ref": "6eece389-7a5d-4db4-b17c-74b0872204fe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cec6f32f-31db-499d-9846-86aec95e71d2"
        },
        "item": {
          "id": "ed8ef7c9-c52a-488c-a3ae-5538f7fa94dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "446841a2-6f29-43fb-9971-d5394bc2f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac6342a-dcd8-4a8c-8683-b660d8174c23",
        "cursor": {
          "ref": "1d2b2a47-5f48-41b0-861b-2b814fca2df1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "770d12b9-58fc-4497-8536-b72129389a22"
        },
        "item": {
          "id": "cac6342a-dcd8-4a8c-8683-b660d8174c23",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "90d3247d-34a6-44a3-889f-42e1fca38885",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 312,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715489e-8a0e-4f8f-8b70-685a86efb059",
        "cursor": {
          "ref": "cf1870f0-2dbd-4619-8c25-7adce0e1c926",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "10e399c8-6223-4c86-8950-944f7eeb7e8f"
        },
        "item": {
          "id": "2715489e-8a0e-4f8f-8b70-685a86efb059",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "962a7143-5eb3-497c-b195-275574af34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639edb85-a9c9-4058-89f0-3f0a98ccdcc9",
        "cursor": {
          "ref": "2dd35083-b031-42bf-b2df-6ff223f8dde4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "536d7483-2bbe-46e4-97ca-bd300ec60c82"
        },
        "item": {
          "id": "639edb85-a9c9-4058-89f0-3f0a98ccdcc9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6390a6c2-d8f2-452b-8e52-d23000822c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e150a7e-3234-4251-b797-4f563123639c",
        "cursor": {
          "ref": "930ee1e8-7763-4684-9c3e-e726784696e9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73b85503-d79e-46de-aa6d-ed42c90bcb1b"
        },
        "item": {
          "id": "6e150a7e-3234-4251-b797-4f563123639c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "efe6152d-228f-40cf-86ab-17dee30c502e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44298acb-552b-43f4-987e-d7e2934cbcfc",
        "cursor": {
          "ref": "11de856b-e290-4901-b4a8-09d270afdde5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7624c9a0-10b5-4359-9c2c-93b91b392ee4"
        },
        "item": {
          "id": "44298acb-552b-43f4-987e-d7e2934cbcfc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8599810f-9b0d-4a02-975f-292e890576a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed670ac-8bf0-4faa-86a0-2499ea690b24",
        "cursor": {
          "ref": "ea6bbf29-6757-4273-b8f6-9a813182e1f4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "66ce2c3f-0645-4f96-97d7-0302ae3f56a0"
        },
        "item": {
          "id": "8ed670ac-8bf0-4faa-86a0-2499ea690b24",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "04547208-8a5d-4970-a2ab-16918e81bb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c92189-0dac-471f-9199-68fff06f1666",
        "cursor": {
          "ref": "c8883f0c-8062-493e-97e6-29e9f7829d58",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bdd814fb-6d0f-40ce-a721-ad1c8f736679"
        },
        "item": {
          "id": "c3c92189-0dac-471f-9199-68fff06f1666",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "01a15a79-fd89-4f1e-95fb-aa0c247bd2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f77126-eae8-4c4f-a987-4322c3d8c7a9",
        "cursor": {
          "ref": "e230c05a-7983-4c10-997e-d0c1b4b1980f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7723c788-e773-401a-91f0-c14604a1133a"
        },
        "item": {
          "id": "01f77126-eae8-4c4f-a987-4322c3d8c7a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cd5e2b79-a6ec-4dec-8a5b-b18e04cb5749",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 320,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e060eaa8-53a5-4e99-9b26-8a681cc1bdb7",
        "cursor": {
          "ref": "53cabd97-be13-4ad6-9a11-baf2641a4fce",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6657379b-480c-46c3-843f-7c4f05088109"
        },
        "item": {
          "id": "e060eaa8-53a5-4e99-9b26-8a681cc1bdb7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a9a8c160-d91c-46c7-895e-d0cefc496100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f46438c-3d35-4fa8-9315-49dcee900aea",
        "cursor": {
          "ref": "385482b1-846c-4b7b-a987-983e3eb803fb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0da4b1e3-8ce6-4a52-bf08-6998c1bad92e"
        },
        "item": {
          "id": "2f46438c-3d35-4fa8-9315-49dcee900aea",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3c36270a-da73-43a7-bce4-75a924754918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89adf81-6cec-4384-9ef8-38b8c7c4c2ce",
        "cursor": {
          "ref": "143ca9b0-711c-408c-a2cc-610f8ae1830e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "13b43a6d-c50a-4148-96f2-bca58633ab06"
        },
        "item": {
          "id": "e89adf81-6cec-4384-9ef8-38b8c7c4c2ce",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1455be08-bfd3-4236-bbd8-7f051a77d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb1675e-0d37-4961-800b-9d1dc4844140",
        "cursor": {
          "ref": "f53ceacb-2f7a-4e1d-bb18-4fd32fd58963",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f00ebef6-af16-434f-967f-a18e9fc71505"
        },
        "item": {
          "id": "5fb1675e-0d37-4961-800b-9d1dc4844140",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7087f3b5-27c9-4808-b0e9-6bdbec85a38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c2ae6-0e02-40eb-853f-60cdbe6d11c6",
        "cursor": {
          "ref": "68c5490b-b7bd-4d2c-888e-712cdb0d76e2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6de1f584-75c1-4c61-bb26-bb0bd20d76db"
        },
        "item": {
          "id": "a91c2ae6-0e02-40eb-853f-60cdbe6d11c6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b014b94-dfe3-4cce-a7be-76baa2f842ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621c799-1fab-4169-8ad9-a7124d32ed0b",
        "cursor": {
          "ref": "b376c95d-6f1e-4c7a-b816-424db40a3f59",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46b6bcb7-a863-4d63-9feb-acbc2dcd7cf1"
        },
        "item": {
          "id": "c621c799-1fab-4169-8ad9-a7124d32ed0b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6d1285b-b83d-4e75-8865-5bf7cb378c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dbe329-6e79-4a7c-a9d0-468f6722f117",
        "cursor": {
          "ref": "9c8a6649-dc1a-4908-b922-f093b26b9af0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aff1d31c-1ecb-4eaa-b1a1-a94126955ad0"
        },
        "item": {
          "id": "27dbe329-6e79-4a7c-a9d0-468f6722f117",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "71bef02c-30ca-4ce1-bc34-4b13f79df68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eacadde-839a-4968-aa72-47e21c068145",
        "cursor": {
          "ref": "2d7deda0-5dad-409a-aee6-b5a5e60a7bcd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4e4850bd-8caf-4a2b-9f29-26a47331c457"
        },
        "item": {
          "id": "8eacadde-839a-4968-aa72-47e21c068145",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7a555938-3b5e-431b-aa55-a279f2e207c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7689bde0-cd3e-41dc-9748-6453b735ab50",
        "cursor": {
          "ref": "3404c81a-fd67-408c-a580-26eccea9fdc4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "da29e740-98ea-4529-8efb-0631b9bd616d"
        },
        "item": {
          "id": "7689bde0-cd3e-41dc-9748-6453b735ab50",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d1cf49c7-21fb-4dc8-96f0-e038ff6590eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b6ed7-a542-41cd-a626-ac12880c6b77",
        "cursor": {
          "ref": "cd0fb9c7-4191-4e13-a111-c4b99ee4d3ee",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b8ece53-a1b4-4187-967e-4db3a00009b9"
        },
        "item": {
          "id": "5a8b6ed7-a542-41cd-a626-ac12880c6b77",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3eb62dbe-11ef-4598-a251-95b5d6057d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79e033a-cd31-4439-a229-0627df131d66",
        "cursor": {
          "ref": "6f269db4-8aaa-47a5-8cf5-f089377e8ef4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "719ce7f2-f449-410b-96f5-c6a3427625ca"
        },
        "item": {
          "id": "f79e033a-cd31-4439-a229-0627df131d66",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b534ccd1-69df-4534-ba79-785dc9eab752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69ea9ee-0e2c-4b2f-a6ba-eb6eb5a93163",
        "cursor": {
          "ref": "8f9866cf-de79-4aa2-87ee-1cfcfcbd8155",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a498d8de-30bf-4b75-9dad-dae4ff5919c3"
        },
        "item": {
          "id": "d69ea9ee-0e2c-4b2f-a6ba-eb6eb5a93163",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb3b6aab-1929-4b4b-bf39-b665b1d9f0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f93191d-68f4-488d-8c09-df0547bc88d8",
        "cursor": {
          "ref": "f4ef8037-de64-4d9d-8f4d-5c7662cb73c5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cd56641b-f718-49c3-9002-2ea633bf7747"
        },
        "item": {
          "id": "9f93191d-68f4-488d-8c09-df0547bc88d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1d131366-c88c-4f90-8bab-c940daf7541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd25188-f542-4e3e-b166-2ad453fae786",
        "cursor": {
          "ref": "58507d70-5c9a-4e6a-a445-1c5dcfbd77b8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a47fe43c-9bcb-47c0-b000-d7b8a8fae37f"
        },
        "item": {
          "id": "acd25188-f542-4e3e-b166-2ad453fae786",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f0606d88-91c1-4ac9-9c59-c41cf8244bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194b23a9-f0c7-4bf6-883b-73c5b96d0fa1",
        "cursor": {
          "ref": "a905c9c7-0caf-45bf-bf99-840f754238c0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ec19777e-77bb-488e-bba6-720ffad3551d"
        },
        "item": {
          "id": "194b23a9-f0c7-4bf6-883b-73c5b96d0fa1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "877104cb-f606-422d-ad47-64d0cb807074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bf6154-502d-4687-84ad-e2478ff11a20",
        "cursor": {
          "ref": "fcfa82f3-5f02-490b-9e5d-e814aca4f500",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "029969e9-22ae-4ac1-8937-9d3e7c94ba66"
        },
        "item": {
          "id": "c8bf6154-502d-4687-84ad-e2478ff11a20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6011e8fc-c108-47d4-a39a-da0f2393f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa278940-4f5e-432f-aa23-67ba7549d9dd",
        "cursor": {
          "ref": "31073bbc-6164-4691-be00-28ee44b74e65",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "acc9248e-1a22-43d5-98a0-c9d772f128e9"
        },
        "item": {
          "id": "aa278940-4f5e-432f-aa23-67ba7549d9dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "08e61884-efd4-4d47-8dfb-df2cc0088956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f88c5eb-4646-4d93-90a4-7f6c017c588f",
        "cursor": {
          "ref": "4d244d39-8795-48e8-a0a1-9ed43cc5f3ae",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48546c68-9d31-455b-9328-b99348311b63"
        },
        "item": {
          "id": "7f88c5eb-4646-4d93-90a4-7f6c017c588f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b54b5385-00d2-45df-b8c1-f26000c176f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087de2f7-239d-4f6c-8627-99b00e258ea0",
        "cursor": {
          "ref": "cab6d7ba-d349-47d2-8878-078cf579fd90",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "657c4366-f579-4d4c-883f-e6fd65c6e925"
        },
        "item": {
          "id": "087de2f7-239d-4f6c-8627-99b00e258ea0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b38e1ab5-83b5-4159-83e3-f5ecc5de7b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc56c5f-5755-4f2f-a554-aea21eebe023",
        "cursor": {
          "ref": "db830440-8cc3-49b8-811d-b3bb74a4cee6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "45f9722c-ae22-40db-a4e0-14d2d042d3a1"
        },
        "item": {
          "id": "cdc56c5f-5755-4f2f-a554-aea21eebe023",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e5e1936d-1bf8-44ef-a372-6cb63bd01c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2ac25a-a7ed-46f0-be6f-280ddaf9bdc1",
        "cursor": {
          "ref": "58999d3b-0cf1-496a-be63-50bd8dc71ca7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d64b223-4cfa-485a-805e-ec95abcb2835"
        },
        "item": {
          "id": "1e2ac25a-a7ed-46f0-be6f-280ddaf9bdc1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2c9707ba-8404-43b2-b72d-244c54ed27da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4228f813-3b97-4d3c-90f6-7b6417077203",
        "cursor": {
          "ref": "2c5f626b-5004-4caf-97b2-5ba153b2a324",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d0f9a1b1-a167-4078-859f-a150f8756a43"
        },
        "item": {
          "id": "4228f813-3b97-4d3c-90f6-7b6417077203",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "585d1200-da46-42ac-94b3-8e4c0bb516b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1af4f7c-51fd-4897-ace0-9976be6d8a50",
        "cursor": {
          "ref": "bc7f2835-0279-41df-a29b-f306490d5c03",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d1771dd-10bb-45f7-a6f1-be2c79547fed"
        },
        "item": {
          "id": "e1af4f7c-51fd-4897-ace0-9976be6d8a50",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe437eb9-5b18-40c6-84ac-36ac2cc7dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e71d0a-6269-4aa3-90c9-2e3816c61680",
        "cursor": {
          "ref": "12904386-3902-4751-86ae-ada1194ea375",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a62b4753-cc83-41c1-a9ca-ac703d2a5654"
        },
        "item": {
          "id": "f0e71d0a-6269-4aa3-90c9-2e3816c61680",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e76faa26-1170-4209-8297-bda7a71dd170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a842c2b6-3924-4348-b7f7-e5dfec355ed8",
        "cursor": {
          "ref": "4c54e981-4c0f-4cc3-af0a-60f45d0643ca",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9e21b77e-c9eb-4a7d-b002-811d77de6f6f"
        },
        "item": {
          "id": "a842c2b6-3924-4348-b7f7-e5dfec355ed8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "111a08e0-afb5-4251-b907-75d7bb9f4cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4170de-7f92-47ef-8d6f-57e132e74138",
        "cursor": {
          "ref": "155ab34f-0271-4444-91bf-317b67b4d6cb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2351ef95-f19a-481d-912d-65236c786e6b"
        },
        "item": {
          "id": "1e4170de-7f92-47ef-8d6f-57e132e74138",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ba9bda4d-7afb-4458-a078-9a0626641e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75053bff-3f85-4839-846c-91e78e519fa3",
        "cursor": {
          "ref": "26bf0f43-f4d9-4516-8754-75230a310755",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8c896eb9-5015-48c0-86b0-04cb4ff6c308"
        },
        "item": {
          "id": "75053bff-3f85-4839-846c-91e78e519fa3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8097a9d3-8822-428b-acb9-c4f16e534d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36204777-1871-4d90-af92-a6a12bde8585",
        "cursor": {
          "ref": "4633af5e-b6f2-4086-a881-de11f0b8245d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c2970b0f-cdf7-4b03-82ef-f5ff5e1020b5"
        },
        "item": {
          "id": "36204777-1871-4d90-af92-a6a12bde8585",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e345101-7e44-415a-b87e-f84e4217ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79db390-91f0-43e0-bda6-8ecb187072da",
        "cursor": {
          "ref": "dcd2d278-0a6e-41c8-801f-fed36c0e02bd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a29804e5-54d5-4445-bf45-891dc6489761"
        },
        "item": {
          "id": "a79db390-91f0-43e0-bda6-8ecb187072da",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "da5b708d-0f24-4b88-904a-f35573784207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2b69a5-b811-44e7-9da3-3748e5c0356d",
        "cursor": {
          "ref": "eda655d1-6eb0-4104-95a7-2e0fcfb7ea16",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "30beca6e-719f-468f-aa71-3192e951e1e6"
        },
        "item": {
          "id": "8d2b69a5-b811-44e7-9da3-3748e5c0356d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "31190eaf-411c-49d1-b3dd-d67787f6063d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faba25c8-184f-4e87-a6c1-c1f280f6182a",
        "cursor": {
          "ref": "279d23cf-5438-4d03-a886-7802c5671524",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1916cbc9-e694-42c1-b886-76767d9205f5"
        },
        "item": {
          "id": "faba25c8-184f-4e87-a6c1-c1f280f6182a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d955e6c1-a750-4573-a067-1e5234f35b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32107b2e-0841-472b-ad9e-8639a8b6ece1",
        "cursor": {
          "ref": "6ffd3434-a345-4dc8-9fcb-de5fba5cfb69",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4fe5054c-67a0-4ff6-89a9-efcd81210779"
        },
        "item": {
          "id": "32107b2e-0841-472b-ad9e-8639a8b6ece1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c1a57b7-aadb-4e82-8db3-cdb301dc4060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e900dea9-a137-41fc-9759-6cd4661bb7c1",
        "cursor": {
          "ref": "70a7e974-3415-4fa2-acad-ed0f7a67f7ec",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "485965a5-10e6-4f9d-ab29-58d21981d6b9"
        },
        "item": {
          "id": "e900dea9-a137-41fc-9759-6cd4661bb7c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8ecb0025-9741-490c-8b56-c18cf807d1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5e36c0-57da-4381-b8e4-47791bc0fd09",
        "cursor": {
          "ref": "cde537fc-5084-4781-b18a-7a2840780c02",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8f3f6eef-daf8-44d0-83af-54d8022cd661"
        },
        "item": {
          "id": "1f5e36c0-57da-4381-b8e4-47791bc0fd09",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aae0be59-7a6d-483f-83c1-a5f5bf099e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde88ad1-2ccc-40af-84cc-18d1e6dcc284",
        "cursor": {
          "ref": "37c3e400-430c-480b-8c45-d1d53749564f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5904a8d8-535f-4c28-97ba-cf8de92dc1e8"
        },
        "item": {
          "id": "bde88ad1-2ccc-40af-84cc-18d1e6dcc284",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a8a87b8-281b-4d3f-9c8f-3e19064189b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb61c29-408d-48b0-8d02-bbd33e80074b",
        "cursor": {
          "ref": "04a4ec64-3f2c-41bc-b714-74a6f2cdbfda",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ab11625-70ab-4204-88b5-32f9c3fe11ae"
        },
        "item": {
          "id": "9fb61c29-408d-48b0-8d02-bbd33e80074b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "90ac056a-cd6c-4bd6-840c-b3670b07ec43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf65b8f-48dc-4494-9153-f44911a1eca3",
        "cursor": {
          "ref": "7a77ee53-580c-4c6c-b721-9d17f21ddc6e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "86783d28-941b-4f58-bf0b-5a63bed654a1"
        },
        "item": {
          "id": "0bf65b8f-48dc-4494-9153-f44911a1eca3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ca4d02dd-7f6d-44bf-b9c9-05459787995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c56727-e673-4d04-81de-14f86298479d",
        "cursor": {
          "ref": "02e7fce3-b9ad-4dab-95f3-5700c642e502",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3b5c6acb-eab3-477b-a681-8b9f7d590f89"
        },
        "item": {
          "id": "68c56727-e673-4d04-81de-14f86298479d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ce0bcbd0-d2bd-417a-956c-acc2d48027f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81d5fe-6f43-42f4-a6b0-1dd6fb73ab3a",
        "cursor": {
          "ref": "d114a1fc-8f76-4b8c-8a6e-ed6fc68eb919",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22ff01e2-020c-4860-835b-792b581a06d6"
        },
        "item": {
          "id": "da81d5fe-6f43-42f4-a6b0-1dd6fb73ab3a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e98bfb68-e69a-474e-8c94-9445c4f64519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1101cba-7c9d-4621-9745-bbf4c94c71da",
        "cursor": {
          "ref": "67592480-561b-457e-b7cf-970800a28051",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aaebe4f7-3a4d-4487-8d25-bdfb85730948"
        },
        "item": {
          "id": "e1101cba-7c9d-4621-9745-bbf4c94c71da",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "894fa3c3-3104-46b8-af87-e3a9c507624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ca1dc2-59a1-460c-899e-5f4eedd9e9fd",
        "cursor": {
          "ref": "1f3233fc-d3d9-4ad9-8f1b-3b9f822189c0",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f09ee441-b38a-413a-862c-7e0c480a07f4"
        },
        "item": {
          "id": "e7ca1dc2-59a1-460c-899e-5f4eedd9e9fd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9dc8c4b5-f228-4771-829b-b3d80c564e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1361b273-2166-4f38-b1e3-361eac845532",
        "cursor": {
          "ref": "3a34fa17-1b87-4b5b-af25-dab5388fae56",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f4487416-4ef1-40af-bb33-fda1bb917e07"
        },
        "item": {
          "id": "1361b273-2166-4f38-b1e3-361eac845532",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9aa24c87-23df-427d-bae9-f094d4c2e087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15c657-586e-4b54-968c-ce61641e1ef1",
        "cursor": {
          "ref": "a07f61da-870d-41fd-a7a4-ebe21a083af9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6fdb9056-d6aa-4f08-a95f-6f1cd96e3a4e"
        },
        "item": {
          "id": "ff15c657-586e-4b54-968c-ce61641e1ef1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5dbb04e7-98f9-4d9f-bb97-a768e473e8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990597e-973e-436f-a247-9838e212d5bc",
        "cursor": {
          "ref": "deb8f40f-4285-4121-8430-370dcd7fb49c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e961ab4c-cbd9-49d0-9556-f3cc9e98df98"
        },
        "item": {
          "id": "8990597e-973e-436f-a247-9838e212d5bc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "85e0091b-a22b-4f28-8716-9b51a731d085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4545c6-ce79-43cc-94ad-a32ca88b360f",
        "cursor": {
          "ref": "56bb7889-538b-481e-a9bc-dbb5e0d840cd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c4d7b19e-b1ee-4f69-8dd6-2ec674d13fab"
        },
        "item": {
          "id": "5c4545c6-ce79-43cc-94ad-a32ca88b360f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9cfd914c-2ccd-4486-a513-8f63365365af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d67f865-a26f-4c61-b2b2-cc2be96901fa",
        "cursor": {
          "ref": "e30aba9c-5bcb-412a-a455-39bc35717565",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb9aeb69-fbb3-412c-9c9b-2b718e6ef49a"
        },
        "item": {
          "id": "7d67f865-a26f-4c61-b2b2-cc2be96901fa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1343950a-98f5-4fd7-8250-77aaa8de9995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c639d4a0-b0c5-4cfe-88b3-116b583fc704",
        "cursor": {
          "ref": "5609d5c5-0234-4813-9df6-bb92b5f37a70",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2db96967-6d4d-4ee0-a726-139a73de9882"
        },
        "item": {
          "id": "c639d4a0-b0c5-4cfe-88b3-116b583fc704",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9d85a24a-149a-40d2-b85d-403ac138dd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8252b6-d71a-42b5-a75f-13de2b4c9255",
        "cursor": {
          "ref": "dc3ce0a6-d61c-4652-b5c2-5d54124d3621",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c0d04917-a3d3-49e1-a718-c582dc16ad9e"
        },
        "item": {
          "id": "5e8252b6-d71a-42b5-a75f-13de2b4c9255",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9234e86e-21a3-4127-b502-19fe11f4ad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab144616-b311-4137-939e-987f81e59232",
        "cursor": {
          "ref": "7417c741-8520-4380-96d8-e23ac70b9bbc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f47a38db-6071-4006-b87b-b4ad636b9f6d"
        },
        "item": {
          "id": "ab144616-b311-4137-939e-987f81e59232",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1f072911-af1d-4dae-98c8-523608a7624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455db35d-b1e7-4139-9bb8-d38d3ed369ab",
        "cursor": {
          "ref": "98165e56-4ac9-483a-b3b5-13e514a986b4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5e459f4c-d1ca-4e30-9776-69e3348598ec"
        },
        "item": {
          "id": "455db35d-b1e7-4139-9bb8-d38d3ed369ab",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "10ac976d-d4f1-4aa3-854f-563524c47283",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f146e128-c9a3-405e-8096-595fb3de3ba1",
        "cursor": {
          "ref": "9e3d3a55-7e62-48fd-b0b7-5742c4f2f747",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f928ab02-1bdb-4005-bae7-8449664f1a84"
        },
        "item": {
          "id": "f146e128-c9a3-405e-8096-595fb3de3ba1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b5892809-a6db-4e0a-94d4-8fd087b7a07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0c511c9d-aa9e-4e6c-9d3f-8a02651d1026",
        "cursor": {
          "ref": "1e0e84be-73f0-4309-8f70-71006bf59ab5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "942852d3-b371-47dc-8fa6-566918cb02ed"
        },
        "item": {
          "id": "0c511c9d-aa9e-4e6c-9d3f-8a02651d1026",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f27ad21-c308-4dad-940d-02787af55b8b",
          "status": "Created",
          "code": 201,
          "responseTime": 2826,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36f46ea-0139-4999-91a3-140da01f64ce",
        "cursor": {
          "ref": "dce18a5a-881f-4add-a710-46b8996db20e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8ca6b220-5751-41d5-819b-7e5a3937cc1f"
        },
        "item": {
          "id": "b36f46ea-0139-4999-91a3-140da01f64ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "17691446-d6ff-4e7a-8fd2-c45f8652fb10",
          "status": "Created",
          "code": 201,
          "responseTime": 2037,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0804ecb5-6ae8-46c0-824e-ef85e2957dde",
        "cursor": {
          "ref": "48448bf4-b66a-433b-adea-c4fbdb3884b1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "89b51328-671f-4ca0-867a-fecacb17bdb6"
        },
        "item": {
          "id": "0804ecb5-6ae8-46c0-824e-ef85e2957dde",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "27810cfa-7e91-41c7-b57f-c12ea06ebe67",
          "status": "Created",
          "code": 201,
          "responseTime": 2082,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9455dab0-b0b4-4549-b235-99ea71522fc3",
        "cursor": {
          "ref": "a2cc52ad-1c08-44a7-9bd8-3d6d90444d88",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ef02df5d-3f60-4853-9226-20a748045ff5"
        },
        "item": {
          "id": "9455dab0-b0b4-4549-b235-99ea71522fc3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78e9a956-86df-4708-9f1c-ed314e451759",
          "status": "Created",
          "code": 201,
          "responseTime": 2139,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd949814-3176-4e80-862f-66f13f34042e",
        "cursor": {
          "ref": "c1dc109c-df7c-4b05-b06c-12bd6c6a166b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "275a2d39-ccb3-4676-a083-9e2b070c8ebc"
        },
        "item": {
          "id": "dd949814-3176-4e80-862f-66f13f34042e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e4cd8ffb-c0f5-4913-a370-505796a9b4cb",
          "status": "Created",
          "code": 201,
          "responseTime": 2738,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e76997e-9d15-41fc-9602-ad68b4f76432",
        "cursor": {
          "ref": "5b58c1c6-f9f2-464c-8ff6-6a23bb006353",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d4792708-2767-45be-a129-58d8c95ffd7a"
        },
        "item": {
          "id": "0e76997e-9d15-41fc-9602-ad68b4f76432",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "db8579a6-fc52-49fb-b191-d6fc10f36e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "18936dda-5e04-4406-bc61-61ef66c5e699",
        "cursor": {
          "ref": "fa6ba6f7-12f0-47b5-b693-636e63bc8d55",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9060cd4b-4fc1-4edb-8ba5-ce25c8cb9b19"
        },
        "item": {
          "id": "18936dda-5e04-4406-bc61-61ef66c5e699",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b2f8ffeb-b1b8-4c00-8340-932b8b42856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f5ef14-9944-4d52-bb87-555baafcc5bc",
        "cursor": {
          "ref": "58e7fbad-179f-4e5a-a450-d984a32447f9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eddd9d95-47a5-4106-b0eb-6c79a34dbb70"
        },
        "item": {
          "id": "86f5ef14-9944-4d52-bb87-555baafcc5bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d214ec23-6cd9-4a94-b382-81edda46abcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e2903c-7181-4f78-bdf6-4ab48bfa17b1",
        "cursor": {
          "ref": "5c188732-1002-4742-b904-b4281ea41025",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d1913228-9eda-431b-a305-96e071157b3c"
        },
        "item": {
          "id": "f7e2903c-7181-4f78-bdf6-4ab48bfa17b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "005eea93-5bfb-4694-b5b1-ea6403b1cccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb5d4de-09eb-4383-95d2-1dafda558ff6",
        "cursor": {
          "ref": "00827b6f-69fe-4378-b161-41412f598417",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1d3d9bb1-80ab-45d9-ada5-29ed89d2e224"
        },
        "item": {
          "id": "ceb5d4de-09eb-4383-95d2-1dafda558ff6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "786a83eb-fca0-4625-bb09-fccef78d5d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990cf841-d8f5-4902-8576-3298e62a6390",
        "cursor": {
          "ref": "5a490546-55f3-4d64-b72d-d8c848850478",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "32faee52-afbe-4881-939b-ae07acb297cb"
        },
        "item": {
          "id": "990cf841-d8f5-4902-8576-3298e62a6390",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "866e576f-8eda-4670-a538-d434fe62cc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e559491-6ada-4f5f-b0b4-185be7bffa37",
        "cursor": {
          "ref": "bc3cd38d-1451-4182-aed9-d6ad447f8522",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d319ba8e-9fae-4e0f-9c9b-3c4b66589c1d"
        },
        "item": {
          "id": "4e559491-6ada-4f5f-b0b4-185be7bffa37",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a21db1a7-458d-4ce4-9d0e-58f00f012c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb622c0-1efe-4981-92e3-c81384e32f48",
        "cursor": {
          "ref": "d13644bf-d993-41f7-89e0-36d735175bb3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7293116a-bb41-48ba-8dbf-0184812d7f7a"
        },
        "item": {
          "id": "4bb622c0-1efe-4981-92e3-c81384e32f48",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "afbe256c-ff63-4afe-9454-bab5bac01728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332da3fd-cb35-490c-8410-4f05c7bb7917",
        "cursor": {
          "ref": "57fd9806-d011-49a0-b146-adf3ae4c0872",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "72c9d835-c1ba-4a39-bea8-14891277f449"
        },
        "item": {
          "id": "332da3fd-cb35-490c-8410-4f05c7bb7917",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c35628d9-2121-4e10-9a48-cc72f154ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c1c551-23f5-4978-94ed-c3f6ef462a43",
        "cursor": {
          "ref": "ef9daf19-94ee-42e1-b168-0e6f0a275483",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "da5339b2-fa9d-497a-8550-bc8d67f999f6"
        },
        "item": {
          "id": "21c1c551-23f5-4978-94ed-c3f6ef462a43",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "682c8f4e-b1c0-4992-a7cc-46d41a1a0c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edf19e-8a8d-4d75-84d2-94e1abc4171c",
        "cursor": {
          "ref": "a2c3fe43-f4d5-4c18-aeb8-66634dff80eb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8398896c-fcbf-4959-9c3a-3ebdd9240272"
        },
        "item": {
          "id": "51edf19e-8a8d-4d75-84d2-94e1abc4171c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c36a4a5f-68b4-4db7-bd01-320f923ab7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa3b49e-7970-4842-882a-e9085ed3915a",
        "cursor": {
          "ref": "7c3bdbe3-3829-44a6-ad01-16bbfb006cc8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32e56e4b-c7f1-405a-8203-035c906ee9a2"
        },
        "item": {
          "id": "8aa3b49e-7970-4842-882a-e9085ed3915a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bf1ed6cc-ba9e-4f13-a062-043af9142281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a969f39b-8798-4f88-b021-08c9914e7efe",
        "cursor": {
          "ref": "adff7ab2-5b5d-49dd-a056-a4943ae8d1db",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "65f27b40-1eb9-4763-b2ac-10e823f3aaac"
        },
        "item": {
          "id": "a969f39b-8798-4f88-b021-08c9914e7efe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f488ede-ef47-4bd0-a5f2-e844a2ac17f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1f111d-b60b-42eb-98af-2ffaec49c277",
        "cursor": {
          "ref": "feba5a68-3777-47d8-9a4d-ab588ec17154",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0faf40f2-b5d6-41c5-88fe-6b064211f9ce"
        },
        "item": {
          "id": "5e1f111d-b60b-42eb-98af-2ffaec49c277",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1e19a23-f208-416f-bc31-932c1c63e4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82adc97a-f5a8-4174-805d-c867d31af953",
        "cursor": {
          "ref": "e282bd3c-1194-494f-9e67-9564f3ffcad7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b4d338a8-3ac2-4d43-bedf-a650784ff466"
        },
        "item": {
          "id": "82adc97a-f5a8-4174-805d-c867d31af953",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e025fea7-3347-4ea9-bedd-89f60f50aa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7e6ba9-de9c-4a90-a365-113c85be85f5",
        "cursor": {
          "ref": "23514fcc-d3ea-46a7-b319-dfd17f90abf0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2f8f67c8-e395-4526-8719-727fe8d96718"
        },
        "item": {
          "id": "9b7e6ba9-de9c-4a90-a365-113c85be85f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "abda8c37-80b5-4ac6-bb51-3f45cbdb8bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a3212-3be8-4d9d-b74e-9b1c6d04ae97",
        "cursor": {
          "ref": "e73a1b39-4786-466d-85f3-e8925fd0e633",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bfa41767-aba3-4e52-982e-1c5cbca7e5f7"
        },
        "item": {
          "id": "654a3212-3be8-4d9d-b74e-9b1c6d04ae97",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d4232470-166d-4285-b292-e3fd472284b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b586966-399d-4007-9e7b-248eb17aebd9",
        "cursor": {
          "ref": "abb52cc6-4d87-4bcc-b907-0d1104fb9e95",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f82d3ea-3ddb-4350-9376-b6572bea0bf3"
        },
        "item": {
          "id": "7b586966-399d-4007-9e7b-248eb17aebd9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f903d3b-9899-4dde-ad89-96e5166fb200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98616442-3d8c-43cf-9288-4523b8debd6b",
        "cursor": {
          "ref": "b258f14d-b79e-4989-ba22-6122c65111fb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b71c2f99-a1be-43b4-8a15-a80cd240a60a"
        },
        "item": {
          "id": "98616442-3d8c-43cf-9288-4523b8debd6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1c3d5ef-a331-4ff2-8298-9ae26c71554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f4e820-9b6d-4b23-aa12-7f21f385c348",
        "cursor": {
          "ref": "f0dfcebb-d38f-4b47-a1eb-7daf027bf78a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8aa0eed9-45ce-46b2-aacd-74ae18242f5b"
        },
        "item": {
          "id": "73f4e820-9b6d-4b23-aa12-7f21f385c348",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf8ce762-59ee-439b-ac9d-0ba5abcbb1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1f8819-c632-4ce8-8b74-8b91af348571",
        "cursor": {
          "ref": "aedc9936-a170-4275-a6eb-96a4bd81a05e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a28fcba-819d-4415-9838-98700204e87d"
        },
        "item": {
          "id": "2d1f8819-c632-4ce8-8b74-8b91af348571",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1b35974-4dce-4a4d-b795-c49114cad451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a0096-0f1f-4c9a-ba62-efa37e144547",
        "cursor": {
          "ref": "aab2acc2-a45b-4959-8779-9f69dc6ad729",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "795a8f18-81b8-4338-91ff-060fe237e94f"
        },
        "item": {
          "id": "4f1a0096-0f1f-4c9a-ba62-efa37e144547",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90bbb411-1ba0-41cc-ae71-2ce44945f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1416fbcb-6bd6-4772-8110-59a363a912a6",
        "cursor": {
          "ref": "c3cf0a13-7588-4c09-9bde-5a21e49d216b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "844f248b-e089-4874-afeb-92a8e8d5081a"
        },
        "item": {
          "id": "1416fbcb-6bd6-4772-8110-59a363a912a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4bf264ca-0d82-40cc-8671-61b26253a8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85710132-4531-42e1-8d9f-fd85a6bd5107",
        "cursor": {
          "ref": "0821ef9f-4aa9-4c8d-9b24-68c765aa76da",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6614ad9a-76dd-49b7-bbda-20650234ec00"
        },
        "item": {
          "id": "85710132-4531-42e1-8d9f-fd85a6bd5107",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d4bb9c1e-1380-4356-a975-6f9441c32fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfbd550-652b-40a1-aa65-d03616a0a796",
        "cursor": {
          "ref": "406304e9-addf-47bf-bbd6-b366579dc0f2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "20fb8e87-db33-4500-8f1b-e2cb974ced2a"
        },
        "item": {
          "id": "2bfbd550-652b-40a1-aa65-d03616a0a796",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ec66063-a83a-4fb6-9b73-3a52d75a7646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4b825-a3b6-4cfe-857b-5ede9e68f3f7",
        "cursor": {
          "ref": "40930257-2e99-4d3c-bb7b-44808af852bf",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "405826ea-614f-43e4-af8b-3023f6c7050d"
        },
        "item": {
          "id": "0ca4b825-a3b6-4cfe-857b-5ede9e68f3f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a6d16f4e-7cbb-4ac4-8be1-c29c9a04b2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeaffe3-7d6f-4f66-ae14-f98558d4961a",
        "cursor": {
          "ref": "09a4fc24-dccd-4a2a-b89d-3349e4ab61e0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e667134e-7e0c-44c1-9bd3-6dd9aba39e53"
        },
        "item": {
          "id": "3aeaffe3-7d6f-4f66-ae14-f98558d4961a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7fc68155-16ef-4e80-a6fd-2cda93eb42a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c5cf59-861e-4c54-9d05-df2abb5a308d",
        "cursor": {
          "ref": "e79ddbbb-2f77-4b92-9820-2431732693ae",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "af5ed952-f710-4ae8-9671-8f54ef52dd28"
        },
        "item": {
          "id": "63c5cf59-861e-4c54-9d05-df2abb5a308d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3d91c92-244c-46cb-9a94-f075e8de43b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c50a136-4bad-47f4-86f5-46daca277111",
        "cursor": {
          "ref": "a7d41b34-3dc3-43b8-b12d-4c3a0ed31b26",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c7eeed57-413a-48b1-8edf-67e8ac5af383"
        },
        "item": {
          "id": "7c50a136-4bad-47f4-86f5-46daca277111",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5ba94951-b501-4112-abdf-b7c6c7d9257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3e7e3d-0674-4f9a-9109-afc28719f384",
        "cursor": {
          "ref": "5bd62e2a-ff5e-429d-bdc4-a4b792e054a1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4dcb1315-cf1d-4739-8418-f1e8d584e14c"
        },
        "item": {
          "id": "4d3e7e3d-0674-4f9a-9109-afc28719f384",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "06dc4cff-65e5-42c4-a250-c6e165178731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0947c9a5-a584-421d-ac89-c3d84455b113",
        "cursor": {
          "ref": "a6aa74bb-49c7-49dc-bfa4-75d9dfb98ead",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7111b21b-6fd6-4530-b6d3-577d1dd7057b"
        },
        "item": {
          "id": "0947c9a5-a584-421d-ac89-c3d84455b113",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4da02fa7-e517-4e37-b0d5-caf744da5bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf49a1f-4c26-412f-94d0-cbeb09f9984c",
        "cursor": {
          "ref": "d4111185-88a5-453a-a4cf-19ccfe8e6ec3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "699f2e37-d8df-43a8-a907-de97173b53e0"
        },
        "item": {
          "id": "1bf49a1f-4c26-412f-94d0-cbeb09f9984c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b5d4f620-3c58-4c96-8a23-9861ee0f8c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907cfbc-6902-4db5-9248-230188ed58ef",
        "cursor": {
          "ref": "24e645fb-9fe1-45ca-8b4c-901ebdd10a34",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a562818a-3f53-4c6b-a5f4-3299529ea530"
        },
        "item": {
          "id": "d907cfbc-6902-4db5-9248-230188ed58ef",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "93b828fb-f776-4244-8330-2840a83ede8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b95bc7f-b935-468f-bbd4-c21505e552f1",
        "cursor": {
          "ref": "d64e9dc0-d22a-4c51-9173-1f33aecfecd2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "070efa70-43b3-4d63-8974-14530c9f88f9"
        },
        "item": {
          "id": "0b95bc7f-b935-468f-bbd4-c21505e552f1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72048750-a7e6-4e8c-a580-89f52bdfd383",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415b8719-b81a-45d4-95d3-d46c0df92680",
        "cursor": {
          "ref": "62f00169-b45b-49ba-b014-fb963215732e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9193a5ae-4bf1-4c19-b35e-ee048fd96ce9"
        },
        "item": {
          "id": "415b8719-b81a-45d4-95d3-d46c0df92680",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3228e20d-f028-433a-ad3e-938083784513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9117a4d4-5df1-4bfa-85ba-e3003d9df458",
        "cursor": {
          "ref": "321c4fe8-e9d6-4ff7-b85d-a8770676044f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c12dfa60-0126-4ec8-be25-e540d1db8d90"
        },
        "item": {
          "id": "9117a4d4-5df1-4bfa-85ba-e3003d9df458",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c03d5c89-a37b-42b4-bea3-c9d0c57c991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e922f3-6556-4315-9ff1-d89b4376efa5",
        "cursor": {
          "ref": "49520602-7469-443f-a95a-8033263e62d0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0053ac81-52e1-4d01-94e3-99a93a7c7685"
        },
        "item": {
          "id": "a5e922f3-6556-4315-9ff1-d89b4376efa5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9bc0c2d2-3a5e-4764-9740-18231d51ef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff6cad-a9d9-45ef-a582-245ab49367f7",
        "cursor": {
          "ref": "db964f94-cc35-4f62-8f1a-4920eae5c508",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eae93c06-ee10-43ed-8fc0-23be2fd13442"
        },
        "item": {
          "id": "26ff6cad-a9d9-45ef-a582-245ab49367f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c75d9b2-92bf-45d8-a46e-20f38c3a15b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d2eac0-3245-4046-899a-10f4f7244b03",
        "cursor": {
          "ref": "89303b0b-92a3-4c42-bbb2-58cb0386194b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27593162-abba-41a7-a962-db32588122c3"
        },
        "item": {
          "id": "11d2eac0-3245-4046-899a-10f4f7244b03",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2e24d929-1cd7-47b4-a563-4c0985b23879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d4fef6-95f8-491f-9ed0-a0d9e48299b3",
        "cursor": {
          "ref": "a7ab5400-2bf1-4e12-afa3-eda9d8b78f82",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "54b889c5-a9a3-46fa-8a25-1798f75a21d9"
        },
        "item": {
          "id": "e5d4fef6-95f8-491f-9ed0-a0d9e48299b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "318af88d-0137-489d-9f1d-4acbb535b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647b19ef-1b5c-4901-9842-c35471da79a6",
        "cursor": {
          "ref": "7b0211b3-2abb-45ee-943c-726d868ccb29",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "341d5507-e5fe-48da-88ac-fdde1d9b0136"
        },
        "item": {
          "id": "647b19ef-1b5c-4901-9842-c35471da79a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "07ce1eb2-ce7d-407a-a77a-407cf3a82906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fa9d0d-d0f2-4d86-b4c4-79c87e124256",
        "cursor": {
          "ref": "a004b4b8-a815-432f-bf9e-aa2c2e02be94",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5fc43995-dc32-424d-aae6-ca0e4bb83ba2"
        },
        "item": {
          "id": "e2fa9d0d-d0f2-4d86-b4c4-79c87e124256",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "78b18dd6-45ee-4b39-8dc8-2a51b6478f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a890a602-2a69-4ec8-bd59-5517ade1aa79",
        "cursor": {
          "ref": "f8d10ac2-434b-4bcc-8956-c02fadcb3a17",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c7443488-334b-4ab2-a9ab-0a20a00bbc3d"
        },
        "item": {
          "id": "a890a602-2a69-4ec8-bd59-5517ade1aa79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a77bca64-bf8d-4a94-9bb6-a7118aa8305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25efdaea-84ff-47a2-9e65-440059358281",
        "cursor": {
          "ref": "882eb2f8-080d-4809-bab9-ad91896b33a6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2eca7e58-f9b4-4393-8bf3-8190fdb17767"
        },
        "item": {
          "id": "25efdaea-84ff-47a2-9e65-440059358281",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e4754f5f-7875-4a7f-9a0d-73d9cacc99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c4bd41-9740-4a93-ba29-81d53046a8c5",
        "cursor": {
          "ref": "02b1c806-c7c2-420d-a14d-31883fbf220c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b56cd5aa-5de7-410f-8d1d-5ed6640b68fa"
        },
        "item": {
          "id": "96c4bd41-9740-4a93-ba29-81d53046a8c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23cdb28e-fd0a-434a-84fb-5321240cfc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74771164-40e2-4c1e-80e0-2cd2389b577a",
        "cursor": {
          "ref": "58ce9d6d-35e7-4886-a0dd-f24ccc6e769d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37d82d0e-b160-49b7-98da-b92b46bf2b5e"
        },
        "item": {
          "id": "74771164-40e2-4c1e-80e0-2cd2389b577a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bab80e3e-d2e9-4ebc-860f-dd0873cba3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca411ab8-6190-4a30-bfff-ff05d380702c",
        "cursor": {
          "ref": "e12f4437-8e32-425c-b7a2-4c5ea13edb61",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "26ece720-6175-4276-a295-8ee213abd5e6"
        },
        "item": {
          "id": "ca411ab8-6190-4a30-bfff-ff05d380702c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4296247b-515e-4035-8df5-907f17428dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf2c0a9-78e2-4e73-8e2f-e25cf0adcedf",
        "cursor": {
          "ref": "86804f17-17cf-468b-ba2c-5a6e0ef72eec",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b02d1e95-886c-4472-a963-876c91d1027e"
        },
        "item": {
          "id": "abf2c0a9-78e2-4e73-8e2f-e25cf0adcedf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "05191ed2-a54d-4957-9c3c-e044fd845054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c68ab5e-f5ae-4413-abe6-220ed229a6f5",
        "cursor": {
          "ref": "8dcf4948-7a72-42f7-ad3c-d641da33ce3c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e896a94-f06f-4433-9a07-c9fc510fc4d2"
        },
        "item": {
          "id": "5c68ab5e-f5ae-4413-abe6-220ed229a6f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9f0cb8c2-26f7-4267-8bdd-3a59ddce219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c543a680-76cb-490b-b5be-53f275f33120",
        "cursor": {
          "ref": "4eaa1209-e116-4670-8813-b74a4ca69037",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89677840-450c-4e6a-8dd6-abc6c68a81cb"
        },
        "item": {
          "id": "c543a680-76cb-490b-b5be-53f275f33120",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a0076577-e82a-43d0-9970-5e346ca02918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a75c3c-8930-43b2-911e-fdb5eb3ef51d",
        "cursor": {
          "ref": "2bbc3c60-ec26-41de-bfcd-478ae3f4bd8a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f9df9186-2737-4712-9396-808c7164525a"
        },
        "item": {
          "id": "e2a75c3c-8930-43b2-911e-fdb5eb3ef51d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a332e169-a4a8-49f9-a741-6809d85436f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566eb297-f3e3-4de5-8b7e-68f89d450686",
        "cursor": {
          "ref": "77ea31a8-87cd-4124-b7c4-6d17496bddc0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7f4b86a0-2f1b-4c3a-be06-bce49bb2face"
        },
        "item": {
          "id": "566eb297-f3e3-4de5-8b7e-68f89d450686",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5aef9d14-53c1-44f8-b91c-df0a27f095bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b516e8-94ef-4581-9c29-f509eb069c96",
        "cursor": {
          "ref": "1888c98b-a997-4e9e-980a-01d3b6f4fae1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e34a43f5-6960-4a2a-9ae0-3f05017b8ba5"
        },
        "item": {
          "id": "f0b516e8-94ef-4581-9c29-f509eb069c96",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "743f8a77-5aed-4424-af2d-0f8f7d875030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c858a7-d517-4c5e-9dde-eccc092448fb",
        "cursor": {
          "ref": "ce88ce31-f32d-4304-bb87-8c02d9f22d6d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "653b5066-4072-486d-b590-1c0a5ca18aa3"
        },
        "item": {
          "id": "73c858a7-d517-4c5e-9dde-eccc092448fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fa9c637-6cd8-448c-8192-d42f72ed717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ebd75d-39d0-4167-963d-70a0bda74f42",
        "cursor": {
          "ref": "650a9e32-f145-4b92-a742-19e2e416675f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "669c52ab-f7e8-4fb6-83eb-f9dc9571d7d8"
        },
        "item": {
          "id": "e3ebd75d-39d0-4167-963d-70a0bda74f42",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7e9e5054-dc57-4f4f-b8ff-0cee7380f909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e15f42-04dc-440f-b617-6c59f37129e2",
        "cursor": {
          "ref": "79f82f4a-a9f6-406f-a7c4-564d62c7d657",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e5e665cb-e510-4a94-abb0-125c8e80cf3f"
        },
        "item": {
          "id": "a9e15f42-04dc-440f-b617-6c59f37129e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "427bd446-e36e-4234-b0c8-aa378bfe6f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a1117b-4e99-4620-bd6a-4db5971b2f2e",
        "cursor": {
          "ref": "b4a5d1ac-0f01-4623-9a28-f07aac9df2b5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ef12d356-a0dc-4f81-be12-1c2858a2fe64"
        },
        "item": {
          "id": "e3a1117b-4e99-4620-bd6a-4db5971b2f2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31bdfa73-d634-4afe-9762-374501e86992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c882f786-6a88-4c6c-9fd9-9983f953e56c",
        "cursor": {
          "ref": "ea7231be-2d62-4500-9cd0-af94951f1563",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1311dc67-b5a5-4482-8067-7fbd456a62ba"
        },
        "item": {
          "id": "c882f786-6a88-4c6c-9fd9-9983f953e56c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6f209f7-e472-479f-a30b-f65d9ff5723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207bfea5-2093-45e8-b650-ba5be4b8c481",
        "cursor": {
          "ref": "127f2882-b8d9-4710-af8d-7e892723d2f4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3143f55d-8b32-4949-bbb1-7e6b91b9913c"
        },
        "item": {
          "id": "207bfea5-2093-45e8-b650-ba5be4b8c481",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bcacc0a2-9c3a-4028-ae54-d8373967c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7f1e6-9f66-4509-9310-ca84d47127d1",
        "cursor": {
          "ref": "fad70f30-ce54-45c7-80c1-5006801a33eb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "78d053b4-123e-466b-b097-235cd26ba4d7"
        },
        "item": {
          "id": "0ba7f1e6-9f66-4509-9310-ca84d47127d1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2d2f18b4-1389-432c-b5d9-d066d8312132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaf8e1a-92ae-49f0-8c2a-e0970f031281",
        "cursor": {
          "ref": "61575ea5-3dfd-4a23-be07-93cda685bee1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2640be7a-ae93-4aec-a88a-f3de04462b6b"
        },
        "item": {
          "id": "feaf8e1a-92ae-49f0-8c2a-e0970f031281",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5a9ed0de-0d03-4565-bc29-84de9a2e7930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7b28f-9c19-4a03-b8a9-e60b8b77a271",
        "cursor": {
          "ref": "e29dc10c-2e59-40fd-ab3b-5ad596c6de72",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3971c5cb-ba7b-4e91-93dd-d5abfa126d20"
        },
        "item": {
          "id": "43e7b28f-9c19-4a03-b8a9-e60b8b77a271",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fc7953bf-b136-43f3-8fef-0a2feb219a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b295cca-4c51-43b6-9119-e9832147d28e",
        "cursor": {
          "ref": "2bd0ac06-7765-4cc3-9cd0-bd7fbe455976",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bd28ae06-fff8-418f-8e8a-c2602c7eb4c2"
        },
        "item": {
          "id": "1b295cca-4c51-43b6-9119-e9832147d28e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "836b56a3-fec5-4d8b-8722-821709a564db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9c8e68-6ee9-4c98-a432-eddd521f3e55",
        "cursor": {
          "ref": "29970e18-f264-46ec-a804-d50037787ac3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c90e7a8a-cba8-453c-bd1d-a8229827984e"
        },
        "item": {
          "id": "0a9c8e68-6ee9-4c98-a432-eddd521f3e55",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f77e740a-685f-4532-a395-dbe4de6183ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02ac0b6-2302-43c3-90b9-6dd31729f6a4",
        "cursor": {
          "ref": "5265bfdc-752c-495f-997e-ae6e6d1a0e39",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "307367cb-4470-44d2-80d3-f34efeb35c3e"
        },
        "item": {
          "id": "f02ac0b6-2302-43c3-90b9-6dd31729f6a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "550a8b02-a44f-4149-bf61-1f48076ed1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae23ce6-935d-4bd8-af55-63f51b52aa23",
        "cursor": {
          "ref": "4bb94566-cae0-4f99-9c62-8ce94abcdda6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "41adaec4-aae3-4978-b250-4c336655d16b"
        },
        "item": {
          "id": "9ae23ce6-935d-4bd8-af55-63f51b52aa23",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a0ecaa3b-1222-457d-8124-218369500c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b96f1a-55da-4b34-9a2e-a283ccf063c0",
        "cursor": {
          "ref": "fab66242-0212-489b-a7f9-b3fdc8eb402b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bfc98b4d-9310-402d-8d24-0cee2f046110"
        },
        "item": {
          "id": "b2b96f1a-55da-4b34-9a2e-a283ccf063c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "44657d4b-cc45-4f33-8f1d-1b24b2f1b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3aa16b-45ad-4812-a461-9275ab3046ea",
        "cursor": {
          "ref": "48593095-9471-420b-b038-1de4d71bbfbe",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8cb23dda-0282-4150-95ff-d164778d3c71"
        },
        "item": {
          "id": "3f3aa16b-45ad-4812-a461-9275ab3046ea",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9850302f-5c08-4ced-baaa-a1be23e08d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e8cfdd-72c4-4533-9360-ff06be13ce45",
        "cursor": {
          "ref": "6c16d131-e520-41ea-bed8-7d55e7a22f1c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4b6e2ecd-fcba-40c0-abdf-ef9e8f6bbcd0"
        },
        "item": {
          "id": "39e8cfdd-72c4-4533-9360-ff06be13ce45",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "09d94214-c474-4f87-860b-625cdb32e2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d569e8a8-b49b-44f2-a97f-eee368fc4f1a",
        "cursor": {
          "ref": "79ee6145-4635-422d-abac-3af00bbbadae",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8042d580-acf3-4ce5-b750-3c2b81b0488b"
        },
        "item": {
          "id": "d569e8a8-b49b-44f2-a97f-eee368fc4f1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4578a51f-ab22-4768-b3bd-ea2518f1b2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca0e16a-cc80-46b4-81db-233643f125c6",
        "cursor": {
          "ref": "e3e00664-af7e-4e2d-b522-74d2e588078e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "47a3d5ed-753b-43b9-a72f-98d0c6564288"
        },
        "item": {
          "id": "8ca0e16a-cc80-46b4-81db-233643f125c6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "83c44d0e-f3c3-4bf5-808f-9525b1446bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca41e366-cd80-4bd0-8c61-dd4ac7be1671",
        "cursor": {
          "ref": "70cb9cef-5232-4ee8-9633-f648f244dad0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "46a461f8-81bf-4bd5-8b63-677436268f3a"
        },
        "item": {
          "id": "ca41e366-cd80-4bd0-8c61-dd4ac7be1671",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a23c1fd-6ac5-456c-9523-e0feaf698fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0defbec0-68a4-4a34-9e43-495940461b85",
        "cursor": {
          "ref": "37e14a2e-ed8d-4c4c-890a-2556c01c1daf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c03e8958-02b2-4e08-9553-13ae2aa145f8"
        },
        "item": {
          "id": "0defbec0-68a4-4a34-9e43-495940461b85",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8a445ff-a586-4a7b-9ac7-8040ddae6364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860223ef-c8d3-4b65-a5ca-b8f9cbd2f98d",
        "cursor": {
          "ref": "ce08b6cf-c28e-46ef-883f-ea87dfb5fed2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8cd7ad3-e058-48ea-8c4e-987d49a10788"
        },
        "item": {
          "id": "860223ef-c8d3-4b65-a5ca-b8f9cbd2f98d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ad95f45-44eb-4ccb-8c26-a37b4280291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56612700-a78a-4637-80b3-4b675aeca575",
        "cursor": {
          "ref": "9f346f5f-d5a8-4610-b9e8-a210e8a019a0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e783331-d2a6-4838-be69-9b94f9dd09c3"
        },
        "item": {
          "id": "56612700-a78a-4637-80b3-4b675aeca575",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "32c64542-8028-4647-b993-7b890d474e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029a4b82-2a14-4cf1-a280-5daa032dddb8",
        "cursor": {
          "ref": "3d5bd537-ea7a-4c2d-a140-cf6b094fd6e5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9bc64dc9-7179-432b-8485-f1454bcd59e9"
        },
        "item": {
          "id": "029a4b82-2a14-4cf1-a280-5daa032dddb8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d38ddb82-7b06-45a9-8836-2b44eb97498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cc8784-5509-4636-ab1d-a1397ba80cfd",
        "cursor": {
          "ref": "812ef04f-24df-462f-b012-a11b84d64f73",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "99f0376d-064e-408a-9f80-522c20daea16"
        },
        "item": {
          "id": "86cc8784-5509-4636-ab1d-a1397ba80cfd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a1e009a7-73b5-4e14-ab63-62190cfe43b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49898af-cf15-471c-bb2e-bcc39282f7f1",
        "cursor": {
          "ref": "490cac87-de7e-4939-9f3b-f78a6d2eb23d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c197f753-3ff5-4bb5-b774-1f60d8fea23e"
        },
        "item": {
          "id": "f49898af-cf15-471c-bb2e-bcc39282f7f1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e1f3f30f-3549-4159-b85b-df364389a47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f88be9-f71e-4345-837d-b641cc1bda5b",
        "cursor": {
          "ref": "1f42a654-3910-4ea8-bb81-a3bcf741b15f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c4f351a-88d0-4e85-affd-c15b3ac1d939"
        },
        "item": {
          "id": "10f88be9-f71e-4345-837d-b641cc1bda5b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1f9f3aa-59b6-4614-9cde-67fc07ff469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c71bb-1910-4dd5-bb58-923ac1bac3d5",
        "cursor": {
          "ref": "72edb264-d21b-4f48-9bb9-aaa92ee66476",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f72f5679-fa51-4019-9a5f-83e346a94b7a"
        },
        "item": {
          "id": "a97c71bb-1910-4dd5-bb58-923ac1bac3d5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e3d36bd-0787-40fa-b525-3fb3727fbe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dfef5f-2d5c-44c7-b344-15aba2bf8e07",
        "cursor": {
          "ref": "f8d84384-b5f4-4d98-a81a-85241d5c332d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b27210a3-9eea-4b84-b47b-0d1c7ad56f5f"
        },
        "item": {
          "id": "33dfef5f-2d5c-44c7-b344-15aba2bf8e07",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bb5c4dd1-d7f3-4be2-a5ec-2965049e2cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf61dcbc-d372-4571-bb40-8d6e183e1f18",
        "cursor": {
          "ref": "1228c0e3-f8b3-4cfe-a9f0-29bea1c752bd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7fd5d63f-bf60-4787-84df-097b39200a38"
        },
        "item": {
          "id": "cf61dcbc-d372-4571-bb40-8d6e183e1f18",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4d0e4daa-bc7b-47f2-8334-630333b87190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff754121-9d73-4818-945f-ceeb83e94cb6",
        "cursor": {
          "ref": "b5c6bd5e-7406-4ebc-8a6c-f2a6479acf50",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "54336775-64fa-441e-a2a1-5e5ddaee2ad7"
        },
        "item": {
          "id": "ff754121-9d73-4818-945f-ceeb83e94cb6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e69dde5-2b55-467e-b1e6-43b2d76de850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43a212d-9c57-4d33-8a34-ebcd6347ccb3",
        "cursor": {
          "ref": "4b726550-a5c8-47f9-9125-8e4f55340b0e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6f2f83b5-015c-46f5-ac3f-9364e359140a"
        },
        "item": {
          "id": "a43a212d-9c57-4d33-8a34-ebcd6347ccb3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "781f04b5-b9e2-48a1-9cf9-9572ae4e425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd9e17c-2c14-4755-b417-e9abb602873b",
        "cursor": {
          "ref": "ab3dda72-08d6-4d16-832a-dbde7567ee72",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "19ac48ea-4215-4486-a25b-9ed32e75a79e"
        },
        "item": {
          "id": "2cd9e17c-2c14-4755-b417-e9abb602873b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "46845b55-b118-4b1c-ac8f-30768923fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c6f5f-a1e3-4368-9459-2bf1793ab2cf",
        "cursor": {
          "ref": "faba885d-f8e1-44cb-8b22-3f02bd78d803",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d607ef5c-9429-4b83-b314-d277a52a6bc4"
        },
        "item": {
          "id": "723c6f5f-a1e3-4368-9459-2bf1793ab2cf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eb9afbfe-b1b6-452a-9596-e0e6683c13c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd1bbf-d2dc-45fd-aa1c-5d8dcd9b3bbb",
        "cursor": {
          "ref": "c9d4b481-c2ed-4b89-b466-7cc121e00f2a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "728cabb5-9c56-4640-a1e4-73ebb51e20cb"
        },
        "item": {
          "id": "08cd1bbf-d2dc-45fd-aa1c-5d8dcd9b3bbb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "40ecd385-cefb-464b-88e9-7d798a2d129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad22ade8-4196-42e4-96d6-f1fc8a3d0ae8",
        "cursor": {
          "ref": "0f1b377e-81ca-4547-8160-4a4c2905598a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dd80d26a-3941-484b-bc1f-0f04367397d6"
        },
        "item": {
          "id": "ad22ade8-4196-42e4-96d6-f1fc8a3d0ae8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa85626c-71fe-481a-a1bb-338d2b92f955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842955a0-06b0-435a-88f7-a7b3720c9a77",
        "cursor": {
          "ref": "d26beae6-03ab-494a-82eb-42a8176bd406",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46ef7b5a-b1cd-41fa-bcb4-4034b81b9439"
        },
        "item": {
          "id": "842955a0-06b0-435a-88f7-a7b3720c9a77",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0389b8d-a497-4b68-b708-42567bfeb037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc59fac-063b-4284-9588-84039c4758d7",
        "cursor": {
          "ref": "98061d93-ae04-41ff-8306-f4f58a1b787e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "67fcca94-fc2c-46d4-8cbf-872f86e45f9a"
        },
        "item": {
          "id": "dcc59fac-063b-4284-9588-84039c4758d7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4eed8423-d61f-4032-9519-1db2a3fd7ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db64f51d-c824-426b-87b0-1ce33b33f032",
        "cursor": {
          "ref": "83401756-028d-4965-b46e-d78addb26c76",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1963d047-bac8-43c0-a00c-90561c03c26e"
        },
        "item": {
          "id": "db64f51d-c824-426b-87b0-1ce33b33f032",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8807d1de-f63a-49c9-9531-c7bd4b8550da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d18aff4-1d05-4e58-80b8-02a2ecf50854",
        "cursor": {
          "ref": "08f58099-e1f9-4b91-8672-5092e15ddf43",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "14a9dec4-71f2-4903-b9cf-1f8b28edd9a6"
        },
        "item": {
          "id": "2d18aff4-1d05-4e58-80b8-02a2ecf50854",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "831b5a82-1bc3-4220-bfed-e5a65e83f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7276b40a-cf22-4cca-9f87-ec9eac5c0ee9",
        "cursor": {
          "ref": "75a15ba3-e9c9-4465-898d-e04bcb9aba45",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9e4de70e-bdfe-4f0c-aa3d-39659fc47187"
        },
        "item": {
          "id": "7276b40a-cf22-4cca-9f87-ec9eac5c0ee9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4eb5e96d-7298-4e88-88f8-74ef105bf87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8e91f-cde9-4b42-a6f2-a7ccf760e2b3",
        "cursor": {
          "ref": "d11e26a9-b3ca-4000-9e1a-73e88f046f06",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e52500a-f006-439e-ab85-ed00bac44a4b"
        },
        "item": {
          "id": "83f8e91f-cde9-4b42-a6f2-a7ccf760e2b3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ed2dd252-832e-436f-82c4-77286d87b0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d2520a-6dec-42ba-bbb4-6b673aa33753",
        "cursor": {
          "ref": "ed1ee8d5-1cd7-4bd4-ae9e-6aaa8b0bba2b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c858d981-7e30-492f-a41c-fbf80a8368bf"
        },
        "item": {
          "id": "29d2520a-6dec-42ba-bbb4-6b673aa33753",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ee01e37-07b0-4309-b9b5-cec3720a998f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e718d2e1-d942-4ff7-b2f8-8e0bcd2d88c2",
        "cursor": {
          "ref": "25082ddd-d636-4dec-aa79-b8682999f929",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "44f0307b-e2bc-43c5-bed4-fab81f9741be"
        },
        "item": {
          "id": "e718d2e1-d942-4ff7-b2f8-8e0bcd2d88c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6b9d5fb5-5437-4c1a-82da-d0c7f2d62b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6848bf-8852-49eb-bd23-e64edd90a6fd",
        "cursor": {
          "ref": "ad1b8c31-db2a-4cb8-b713-1e7f3413c9a7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9f7a6978-4f41-4c46-a0fe-ae29b6cf3165"
        },
        "item": {
          "id": "6f6848bf-8852-49eb-bd23-e64edd90a6fd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd28dff2-4e4b-421d-bdcb-f685bc5f0de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4494c3-d5a5-4b98-b049-fbf37d0c4f0d",
        "cursor": {
          "ref": "b7f47642-4c13-4097-a086-809c2e2ea653",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e532579-d9ff-4757-88ad-da89d44874e9"
        },
        "item": {
          "id": "1c4494c3-d5a5-4b98-b049-fbf37d0c4f0d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f96bf81f-fbd4-4115-9c5f-0e9dae678fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d18a46-a83d-478b-a4f8-076ee59bf34a",
        "cursor": {
          "ref": "c46e5dc9-8b98-45c3-b438-914c438c8d99",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ec4e5579-99f8-4b47-a5ea-b3526acc23d6"
        },
        "item": {
          "id": "68d18a46-a83d-478b-a4f8-076ee59bf34a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "feb44fc4-b188-46e7-83c6-a867c780e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46061f47-028b-4c99-9e86-37659598f0fd",
        "cursor": {
          "ref": "1bc8a9b5-3cac-412b-8335-beb8cbf493e1",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f90d952b-6ab4-4570-8853-a892b46bd849"
        },
        "item": {
          "id": "46061f47-028b-4c99-9e86-37659598f0fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cb214703-7015-42fd-ab1a-05668b5fa4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdd698b-2fd5-4dbd-a419-34f88d26e1d7",
        "cursor": {
          "ref": "d010f3b1-4cd9-48d0-9913-c17dfb89524e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "96e10f80-0e48-4697-89ed-f8566e53f08b"
        },
        "item": {
          "id": "cfdd698b-2fd5-4dbd-a419-34f88d26e1d7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5fc70bf1-d690-4488-be58-2692f84856e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a70e90-22fd-49df-93fc-1e36569ada44",
        "cursor": {
          "ref": "9923d9b7-021c-49f1-8bd9-6b9376c0970d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cef525eb-f57e-485d-9e57-e3a10e86ff6c"
        },
        "item": {
          "id": "e5a70e90-22fd-49df-93fc-1e36569ada44",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0d8c5d4d-a14c-4589-8579-9cc30c4d9b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4317fa88-d660-4b6f-bb90-9bfabf1d21f3",
        "cursor": {
          "ref": "6215008f-6f6e-46b3-85a6-f8012d8d0db7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3013edd6-c6aa-44d5-9dd5-eefbf198072e"
        },
        "item": {
          "id": "4317fa88-d660-4b6f-bb90-9bfabf1d21f3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f084924b-31e3-4871-9b6e-d256559471f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657532dc-62b4-4dd2-bdba-6d6a44c2ad68",
        "cursor": {
          "ref": "d8f635f5-abc6-46d6-83aa-d819703be8a0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "48860591-aa9e-4f97-aaa0-9a25dc871b8f"
        },
        "item": {
          "id": "657532dc-62b4-4dd2-bdba-6d6a44c2ad68",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2b528755-1021-42bf-9e35-cafbd8476192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2858764e-35ea-4712-bace-aaa6179d256b",
        "cursor": {
          "ref": "0c55cc9e-f3e2-4045-8ecd-10f2a7ed7cc4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de8553bd-d530-4ff3-be4c-bea337dedf4c"
        },
        "item": {
          "id": "2858764e-35ea-4712-bace-aaa6179d256b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "870b8bf0-65ad-4135-9690-17deb94573c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7d399d-fdf0-45aa-8dcf-da8e62edebe1",
        "cursor": {
          "ref": "3c12911f-9414-4721-88f0-4de0700a92da",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dd8dcbc5-d816-436c-8cb3-ff398ba4c3f5"
        },
        "item": {
          "id": "7b7d399d-fdf0-45aa-8dcf-da8e62edebe1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "529ddae9-fb8e-4453-9f6a-ce89c05cb317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd01b96-a8dc-4dbf-b032-9b623062cdca",
        "cursor": {
          "ref": "1733684c-83fa-4fff-9fae-40ea89683424",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6432ee8d-4548-400b-8d48-1c8d5d6cc6bc"
        },
        "item": {
          "id": "3dd01b96-a8dc-4dbf-b032-9b623062cdca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e4a839e7-256f-45e9-b13a-880797120bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274edd19-624c-44d8-84ef-5e750d75a05c",
        "cursor": {
          "ref": "aa8a3f89-690b-473b-89c5-64671e55db43",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b274ebe9-fbe5-46f5-bced-e1ac9d29cf4c"
        },
        "item": {
          "id": "274edd19-624c-44d8-84ef-5e750d75a05c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe773aba-b2de-4403-9ec2-39cc21307e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787c66af-1b35-4d93-a657-8aea071c3b66",
        "cursor": {
          "ref": "8778b9a8-28e8-4bca-9497-eb2f4094ab01",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ed698baf-eea6-4c7d-aa3d-65bb9be494c9"
        },
        "item": {
          "id": "787c66af-1b35-4d93-a657-8aea071c3b66",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1486a460-ca3e-43c0-b902-16dd635e2a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9daeb7-f3ac-40b7-b8bf-71abbadf9f2b",
        "cursor": {
          "ref": "e8685090-cb6f-4bbb-b2b2-de9b131554cc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0744a1e1-983f-4790-be5e-d6bd714c0d71"
        },
        "item": {
          "id": "7f9daeb7-f3ac-40b7-b8bf-71abbadf9f2b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "91e5a4c7-ac9f-418a-a977-6abac371def4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cbde30-e762-41a2-88d6-c4741c1748a5",
        "cursor": {
          "ref": "6fce790c-76ca-4f26-8430-aa7daae24865",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0867f499-940a-4c40-9ea5-0eedfdc1367e"
        },
        "item": {
          "id": "e8cbde30-e762-41a2-88d6-c4741c1748a5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "663ffe8d-0b80-4aa5-9e64-cee6ce652541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be29859c-10e4-4615-9825-7de3cc265c2d",
        "cursor": {
          "ref": "9bdb7de9-77c7-46fa-8b79-456b1cfb661d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ffd9639e-e6d8-429a-9ae9-0043962942dd"
        },
        "item": {
          "id": "be29859c-10e4-4615-9825-7de3cc265c2d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e6bc082-d7f4-448e-8f93-64271d94926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7df607-725b-490f-8275-de1c07fe0000",
        "cursor": {
          "ref": "f33ecb71-8769-43c9-bae5-39a2eda908fa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "50c284d2-08a9-4585-8824-0be62e7fc561"
        },
        "item": {
          "id": "8a7df607-725b-490f-8275-de1c07fe0000",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d48089d1-29a1-4160-b097-86c9520d7ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2265a26c-da41-4f8a-898f-40c3f49d165f",
        "cursor": {
          "ref": "85884acc-7ede-429c-998b-a6ef990f00d8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "81ad4a33-9af0-4410-b225-4ceee6ba5a7d"
        },
        "item": {
          "id": "2265a26c-da41-4f8a-898f-40c3f49d165f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a6be6b8f-deb7-48a7-b1a4-0fd70ab83ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ca6ba-6d35-4184-a453-5d73df71e5a9",
        "cursor": {
          "ref": "b360d352-e427-4f2f-8e83-b4b9f854fa8c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3bddb229-fa1a-4da0-93e0-2412e49d189c"
        },
        "item": {
          "id": "d50ca6ba-6d35-4184-a453-5d73df71e5a9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f1d31e0-a1e2-4d40-a96c-ed77109675bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59e4663-32b4-439d-96bf-670bbd344398",
        "cursor": {
          "ref": "81cb51eb-a888-4f73-9b2f-255c5e3732d0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2cca1a5-9309-4d5d-a66c-aac3c027d960"
        },
        "item": {
          "id": "a59e4663-32b4-439d-96bf-670bbd344398",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f588e6d6-76ee-4b32-a4f1-5a153d897013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc27c8e5-f340-4154-96dd-43d9ef8b9404",
        "cursor": {
          "ref": "0974b4fc-9595-4fb6-a7b8-e4cb17e00e48",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "292d4d56-b262-4ca7-853f-28a650f45073"
        },
        "item": {
          "id": "dc27c8e5-f340-4154-96dd-43d9ef8b9404",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea117c36-66f6-4317-a1c2-1020df99588f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a178b8-a74c-4d6a-bacf-7c373dfca7d5",
        "cursor": {
          "ref": "f88d59bc-6668-4ac3-a1be-99883441789d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "530fdf4c-e1fd-4c88-88d5-0cb9d86507cf"
        },
        "item": {
          "id": "47a178b8-a74c-4d6a-bacf-7c373dfca7d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e4215879-e7d2-4bd4-924b-8895c1f1c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44217f6d-9b78-468c-bab1-38b0f1d37b5e",
        "cursor": {
          "ref": "2af7455d-6b35-4947-b78f-cf55e8a2a939",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9898cabe-ad14-4760-a78f-eb8ecf67b512"
        },
        "item": {
          "id": "44217f6d-9b78-468c-bab1-38b0f1d37b5e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a723733-4bfd-4b7b-8f4f-7041dcb87b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa9ae6-74c5-41dd-8b06-7631caf8eb09",
        "cursor": {
          "ref": "d4501a59-4ba1-43cc-842c-624437475fe6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "09f1836f-4a39-4e37-9fa9-b3013b9a1074"
        },
        "item": {
          "id": "80aa9ae6-74c5-41dd-8b06-7631caf8eb09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "226beaf8-e5b4-4805-b9ea-bd00293850bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f9804-7249-46af-b2ca-bdf5387a980c",
        "cursor": {
          "ref": "9b8d6a09-8497-4b91-a740-183ec4ac8d4a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "667fb6bb-40d1-49fc-9709-0c0124de9ccc"
        },
        "item": {
          "id": "b23f9804-7249-46af-b2ca-bdf5387a980c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b6469a07-568d-462c-bce0-9d530fa03da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65c3d96-87c0-4082-bfbc-0f8bf81e92ba",
        "cursor": {
          "ref": "22826853-bdf8-4aab-b724-ff6650186667",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "04ec54a7-7c29-44fd-a535-0fe448395dd4"
        },
        "item": {
          "id": "f65c3d96-87c0-4082-bfbc-0f8bf81e92ba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a248706a-2739-4fef-8174-83b304250d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff5cc1-4142-436c-b368-405e70d8d89c",
        "cursor": {
          "ref": "ae7891ae-93a6-46ef-8e69-6a1c7fc9f15f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b884e01-85fa-49f6-99af-966e6025a4c9"
        },
        "item": {
          "id": "e7ff5cc1-4142-436c-b368-405e70d8d89c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e467ea77-a522-468b-b05d-170186574ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a1531c-34c3-4069-86d7-f2a3558d929f",
        "cursor": {
          "ref": "5641173b-cb35-448d-99e4-570a27d8cc35",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "28c6d870-749d-404c-8fdf-3b0a48e05c94"
        },
        "item": {
          "id": "b5a1531c-34c3-4069-86d7-f2a3558d929f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7e29c945-de07-4775-97b1-2329e145d348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f65bb16-1c58-4080-ad7c-c61677c5d138",
        "cursor": {
          "ref": "97a44d0d-0307-433e-b975-f4dfb79b823b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "329e6d44-1e50-4b77-bf0a-91bb19bcd9a4"
        },
        "item": {
          "id": "6f65bb16-1c58-4080-ad7c-c61677c5d138",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b28592a2-18a0-4118-af13-34c5dfc792cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa9f6c1-358f-4414-9ef7-22d2fb7000a0",
        "cursor": {
          "ref": "276389d8-fe42-4661-9d24-5fc7cb1cbd82",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fb894cae-cabc-423e-841d-588b27515bbb"
        },
        "item": {
          "id": "afa9f6c1-358f-4414-9ef7-22d2fb7000a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b317c5fd-d639-46b9-a893-149ab25b6765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5063044-9ffe-4922-a277-a460b63439a9",
        "cursor": {
          "ref": "85af339c-364b-41cf-b9c6-106c6acb574c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b859ec3e-5c23-446a-bf84-8de0b0753e2b"
        },
        "item": {
          "id": "e5063044-9ffe-4922-a277-a460b63439a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9dd34e4d-cdad-4dfb-bdeb-a1b38cbe6ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924b91ab-3a64-4e68-a2b5-a168414c0ad0",
        "cursor": {
          "ref": "d138f6c1-ebc9-48a4-b882-90b3171e78fa",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "88991674-96e1-4bfc-a643-a308b59575ec"
        },
        "item": {
          "id": "924b91ab-3a64-4e68-a2b5-a168414c0ad0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "95c2d8c0-5d3b-4093-bdb4-9f3c69b40588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d033ab-c458-4046-acbd-697e40540fc3",
        "cursor": {
          "ref": "4a10970d-9cbb-4333-9a48-190dc5ff5f21",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8f979e11-faf3-4783-a374-674d7866b3dc"
        },
        "item": {
          "id": "58d033ab-c458-4046-acbd-697e40540fc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "240fa164-edd3-490c-aeb7-0c75f26ad02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18879be6-7abf-43c4-84cd-3b636ee2d616",
        "cursor": {
          "ref": "3c77a363-8923-496e-a6c7-abf3bec221b8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7c5b4f39-7261-48e7-8481-586a8826a215"
        },
        "item": {
          "id": "18879be6-7abf-43c4-84cd-3b636ee2d616",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "689d7444-e297-4d66-b2f5-131a821a0e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38dac36-3643-4fb6-a089-7cf2aeceeb42",
        "cursor": {
          "ref": "2f7565f1-a3db-4c0a-a898-81aa7a6f8c41",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d389625b-d991-43f4-b610-576e50c400ba"
        },
        "item": {
          "id": "c38dac36-3643-4fb6-a089-7cf2aeceeb42",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "819ef9e3-3809-406b-8a72-71d5c4a9d557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81042e2b-f9dc-4f3b-b661-b7975e24d931",
        "cursor": {
          "ref": "fe4aa40a-b48c-4e92-865c-2503af36844b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f377fc88-1cfb-4d6f-a4ce-5accc0e4c8f4"
        },
        "item": {
          "id": "81042e2b-f9dc-4f3b-b661-b7975e24d931",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "813e4297-997b-450c-b16f-7a05db7b8467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd597f54-c4b8-47ce-bcd7-97db1023abd6",
        "cursor": {
          "ref": "c2d81dc2-ae4e-41a3-96b1-0fc1e3df3790",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4bd43142-5cb9-4b83-914f-c5594fd7c26d"
        },
        "item": {
          "id": "fd597f54-c4b8-47ce-bcd7-97db1023abd6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1301e25a-41fc-41cc-8356-4482c152aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9535b4-70bd-495b-a80e-5f4c7485b253",
        "cursor": {
          "ref": "08ce114a-c65e-4208-9b85-a8206f87bb18",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e4871dbb-05a4-41eb-b6c7-940180761be5"
        },
        "item": {
          "id": "df9535b4-70bd-495b-a80e-5f4c7485b253",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a017bd0f-0a3c-475f-a0b1-30acbc56c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9aa1c4-9002-4103-9d93-6bc365842069",
        "cursor": {
          "ref": "c8bfaede-1d6a-43ac-883a-e3ab0e0dcd45",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0763a403-b9dc-44d7-bc5d-16043892f146"
        },
        "item": {
          "id": "1f9aa1c4-9002-4103-9d93-6bc365842069",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "786ca421-06d1-41a4-84bf-ce70f1e35d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548fea32-c800-484c-8780-44f7977c0345",
        "cursor": {
          "ref": "21078b0d-11f7-4860-8c2a-db48b30231b8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e2ec8b97-3648-4931-98b9-89e9b838fecb"
        },
        "item": {
          "id": "548fea32-c800-484c-8780-44f7977c0345",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2dcbecad-761a-4f45-bb2e-9a4d350299ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e819af-4d8c-4965-9130-bb4c03d57bf0",
        "cursor": {
          "ref": "7d1a5cf1-20b2-4ece-94b2-69de8c45e1cf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43d71390-aac7-4fb4-aa35-e1df66bb7f3d"
        },
        "item": {
          "id": "e7e819af-4d8c-4965-9130-bb4c03d57bf0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "72c7707a-8407-4e42-a26d-b275bc760217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca8206-bcc6-47d5-a9d7-2ffb7477ed23",
        "cursor": {
          "ref": "9f653606-ed7f-4cfc-80a4-b5f046f1c425",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "41dd27ed-96ec-4021-8dcc-66e1002cd22d"
        },
        "item": {
          "id": "23ca8206-bcc6-47d5-a9d7-2ffb7477ed23",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3960c78e-cfde-44d3-86e1-c54b72eb641c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ca971-fbf9-49d1-9dc6-813a22e656cb",
        "cursor": {
          "ref": "f75cca45-830c-4a8c-bb84-4cac75509064",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c88c2659-15e0-4c14-a541-db80280fdf6e"
        },
        "item": {
          "id": "607ca971-fbf9-49d1-9dc6-813a22e656cb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd065c3d-3347-43e1-a339-e0dda1a4c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ce84b6-9b64-497f-a692-722e5ae9dd5a",
        "cursor": {
          "ref": "a60414cf-3a02-4f3b-8747-39c3b8181c77",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "06534686-32a7-47ad-9b69-6e2d3f990ac6"
        },
        "item": {
          "id": "25ce84b6-9b64-497f-a692-722e5ae9dd5a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4cfddb9c-02e4-4758-a5d1-80f1e549205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f789a963-3b41-4018-ba05-a8a1c00d7386",
        "cursor": {
          "ref": "3f249dee-4d4c-4f19-b563-2fcc0b94ea54",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "916e9191-0164-4769-9b05-bfee2d689e5f"
        },
        "item": {
          "id": "f789a963-3b41-4018-ba05-a8a1c00d7386",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4fd9b271-bfa6-4c6e-aaed-be5bf53b7809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8345eca-6227-4b2f-8cc2-374c0b3eb345",
        "cursor": {
          "ref": "49ad50a1-a66e-4778-a3ac-f2e6efe1a408",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe368727-d5e5-41c0-acf4-04bff05f4d6d"
        },
        "item": {
          "id": "c8345eca-6227-4b2f-8cc2-374c0b3eb345",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b4f0289b-5581-4afe-a1cf-7d8ce14a0ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12875ec-14e6-4caa-b9b3-78581d4479d9",
        "cursor": {
          "ref": "2fb04504-77e7-4405-9ed1-5fd7d92df264",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "77cb61a9-ebfe-4dc7-920d-dfff3953fe78"
        },
        "item": {
          "id": "e12875ec-14e6-4caa-b9b3-78581d4479d9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "882cd9e5-1f32-41d5-b7b8-c6840f6f9827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2df2de8-b1af-41fc-a7e9-727df759c056",
        "cursor": {
          "ref": "60df1e35-78c4-48e9-b4e1-f3a379abfa67",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d28e0b81-e2e9-4bc5-95ce-eb17165f0bcc"
        },
        "item": {
          "id": "b2df2de8-b1af-41fc-a7e9-727df759c056",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f82c7634-ecac-4d8a-ae21-9f6822a0fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c7903-704e-4459-8ab5-671b0819d59b",
        "cursor": {
          "ref": "a252ac93-e7c7-423b-ba7f-e3ffe4bc7de6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a31e6dc9-f2fd-4870-83f7-6163bc8fa885"
        },
        "item": {
          "id": "d60c7903-704e-4459-8ab5-671b0819d59b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "971594fd-f173-4d00-a8d4-23112ebe8738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba1b97-16ee-4c24-a34e-30df934aebf6",
        "cursor": {
          "ref": "aad7abff-6553-4a10-be14-4fae4b4f5018",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "69d26988-9c5e-4d05-a902-470384f96b5a"
        },
        "item": {
          "id": "15ba1b97-16ee-4c24-a34e-30df934aebf6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99f80983-6443-4f41-b78e-8cb73267fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4568481-c437-4a24-8c67-13570869c028",
        "cursor": {
          "ref": "446bfca3-2b9f-4067-9e55-a2103c2c3227",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ae239634-2c8d-4c55-b7e2-182dbebfa40e"
        },
        "item": {
          "id": "b4568481-c437-4a24-8c67-13570869c028",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6fa864e5-8a76-4773-bb26-a0b8a75304a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563a988f-157a-4292-bb35-f6e6bf00105d",
        "cursor": {
          "ref": "728941ee-a6e8-4f8f-a8be-2dd341960b19",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "740c34a1-90e1-4135-853a-231cf18e3dac"
        },
        "item": {
          "id": "563a988f-157a-4292-bb35-f6e6bf00105d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "90a0c4d4-b880-4b3c-bd16-302917a22d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a242de-811b-4b59-a070-c2c762e520f7",
        "cursor": {
          "ref": "5a3ce1d2-6f42-4a7f-99f9-68c470db87c8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e1b02c35-d46f-4630-8c05-cbe0bb849af3"
        },
        "item": {
          "id": "33a242de-811b-4b59-a070-c2c762e520f7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73305f4e-873a-4e19-b351-6b98f3796748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd64568-06e3-4ded-8799-22e96283a59e",
        "cursor": {
          "ref": "cd50a143-fd51-4d8e-a1e1-f38b0bf05d6b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6e97c745-c2a4-45c7-99e4-dc953c64053a"
        },
        "item": {
          "id": "5bd64568-06e3-4ded-8799-22e96283a59e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cf8a95b2-9a27-473d-8aa3-1a3023c50436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbb0d74-1a0e-4934-900f-b4062f8fe81b",
        "cursor": {
          "ref": "cf6abc05-4c27-4ed9-a86a-5ff66427f01c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "08a4e4c2-21f4-4a5a-9dfc-11066f30c3a4"
        },
        "item": {
          "id": "fbbb0d74-1a0e-4934-900f-b4062f8fe81b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cc86a3c5-7cb6-480c-99fb-7910da22dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde9e2ac-27ad-4b7b-ace8-6ef746c26771",
        "cursor": {
          "ref": "b0dba92d-04c5-4ed6-8d09-313e5185c7b5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f04752b6-c211-41e3-97b4-c83420533a12"
        },
        "item": {
          "id": "cde9e2ac-27ad-4b7b-ace8-6ef746c26771",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1628caac-9b42-4df6-afbb-24fc220ddc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e99fd05-66fd-4a61-a7f4-270043c8c7e6",
        "cursor": {
          "ref": "c7a272f7-babf-4565-a4a2-2fab74767688",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d0e199f3-3b12-4bef-b90a-2a35a625bbf3"
        },
        "item": {
          "id": "7e99fd05-66fd-4a61-a7f4-270043c8c7e6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d41fd3f-c607-4353-a93a-8fb0c4589020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb63cf87-7940-4e64-9903-9594b7bd3934",
        "cursor": {
          "ref": "3a8d7d1f-bcc4-4ffc-bd5d-8b891b9976aa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "90bcbee0-3a20-4025-a557-df87819012c8"
        },
        "item": {
          "id": "bb63cf87-7940-4e64-9903-9594b7bd3934",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0981beda-67ee-428c-81e8-66e8f1f1eb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82314007-ad40-444c-8108-615b0ea8dd76",
        "cursor": {
          "ref": "59b782a7-f559-4f17-a264-6902808c4ee0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9f1a4da2-6795-4673-b6cc-392bbde24082"
        },
        "item": {
          "id": "82314007-ad40-444c-8108-615b0ea8dd76",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fa08659f-c4db-4cde-9b37-a65b001e8523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef645dd9-22a5-4259-9666-0c264507371d",
        "cursor": {
          "ref": "f8717c1d-719a-4f34-868f-6144cf781123",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "15aefaa8-0afa-41ce-a3e1-19c937452b14"
        },
        "item": {
          "id": "ef645dd9-22a5-4259-9666-0c264507371d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ed0d7528-d736-481f-9a51-2b9caba8304b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e2e66-e817-4e28-aceb-878ea7a0f073",
        "cursor": {
          "ref": "c3947b66-6da9-47cd-8f48-7e2b6dcdd852",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6c797e83-0737-4574-957e-c4c657e8c4d9"
        },
        "item": {
          "id": "cd3e2e66-e817-4e28-aceb-878ea7a0f073",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73560d3e-62c8-434a-ad0d-a1d28c7060ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3817b84b-c8d6-472c-a4b7-c78f63260e9f",
        "cursor": {
          "ref": "6be375ed-3004-4f9a-ac16-fce7cf1491cb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "74b2e641-708b-4f83-b985-f9a504031157"
        },
        "item": {
          "id": "3817b84b-c8d6-472c-a4b7-c78f63260e9f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d20b40c0-c994-4fac-90b2-d663f8375d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac8ae58-1977-499d-9bba-720a9053f230",
        "cursor": {
          "ref": "67abe5e7-e044-4778-9bb1-7a4a5df99e6f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "46e9b865-a6be-4514-99f4-f227bd941c93"
        },
        "item": {
          "id": "bac8ae58-1977-499d-9bba-720a9053f230",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7ade1562-f2b4-41c0-9911-57f699144c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982ec503-bb71-4d55-942e-acb5b95c0cdd",
        "cursor": {
          "ref": "fe0bc5ac-b15a-42fa-8136-2dc4c69e8d8d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ce792af7-fbf0-47c0-9e15-b9ed000a8406"
        },
        "item": {
          "id": "982ec503-bb71-4d55-942e-acb5b95c0cdd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "53ad0280-5e1e-44aa-9c89-a1ec87798b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440c74d-1502-44b8-81bb-71d768d64bef",
        "cursor": {
          "ref": "93eff715-55ee-4a8e-9067-9c7bddc26382",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "28d44ee8-6912-49f7-b2af-335530ca0231"
        },
        "item": {
          "id": "8440c74d-1502-44b8-81bb-71d768d64bef",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d96b1aa-e12f-4b15-8eac-3a262ab04fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5193c43c-eeaa-4a09-80a7-78cdfcff1569",
        "cursor": {
          "ref": "387843f4-dc13-4272-9342-32b12bd150b2",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "32034009-4330-46ff-8fa2-880f2e248116"
        },
        "item": {
          "id": "5193c43c-eeaa-4a09-80a7-78cdfcff1569",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c26572b5-9bc6-451b-8242-655cef5001e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726443d-d8fb-408c-852e-2a7e6eb134d0",
        "cursor": {
          "ref": "36ae0262-38f2-4135-82c1-d6c9328b05f1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c2cf10d0-16b5-457d-97b6-34988910304a"
        },
        "item": {
          "id": "8726443d-d8fb-408c-852e-2a7e6eb134d0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12ff20a9-4b7b-4eed-9409-e0d812956a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611ac11-ef31-4804-a071-5116105a6dd4",
        "cursor": {
          "ref": "b31fd69b-8174-4b24-8012-40211a01bd78",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "923c92e3-3058-452d-97d7-8a6e7d22628c"
        },
        "item": {
          "id": "7611ac11-ef31-4804-a071-5116105a6dd4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "23fde2a3-72b3-4aae-9e08-0f1db965fb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd0802b-f010-4858-a720-8ed0a9fae206",
        "cursor": {
          "ref": "cd99bd4a-15b1-4269-89c9-f652aa57988c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "41070f60-1702-44f0-a7be-47726908accf"
        },
        "item": {
          "id": "bdd0802b-f010-4858-a720-8ed0a9fae206",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a97c132d-28db-467f-9b20-a0bcbf8fd1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e577b9-6fe1-4939-bea8-a3e1189cc70c",
        "cursor": {
          "ref": "3b11719d-726f-4511-91f3-76995f7e400d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c3dc7ae0-260e-459d-a947-26bfc52ada85"
        },
        "item": {
          "id": "69e577b9-6fe1-4939-bea8-a3e1189cc70c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2241d265-3f62-428f-83bf-60dc82485059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49090f9f-3986-49bb-b44a-f5499b452649",
        "cursor": {
          "ref": "c7ef0d43-ec0e-41b4-8b65-53f11574c65a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e1ad1851-4f25-4724-bc2a-f5f3df4b1133"
        },
        "item": {
          "id": "49090f9f-3986-49bb-b44a-f5499b452649",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b259b953-b670-4686-9aa1-b6a5e828a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f35921-9cb6-48ee-8313-71ffd166f31c",
        "cursor": {
          "ref": "4f568738-0e35-4159-9b20-802949354b1e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1ef98a1f-ee94-4b12-8cda-d1fe4c130ea5"
        },
        "item": {
          "id": "83f35921-9cb6-48ee-8313-71ffd166f31c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9279b03f-088e-4d38-8efd-7f9cd3519a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15dcac8-a1f7-4696-97e4-c8345df3d5a6",
        "cursor": {
          "ref": "b43db384-b375-4cc6-bb84-f233989feb75",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "adc01817-ec9a-49ee-b61c-502770ac391e"
        },
        "item": {
          "id": "b15dcac8-a1f7-4696-97e4-c8345df3d5a6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3e39faab-8198-43d0-8654-460a4d68b29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfe3c2a-b048-40fe-bea2-180de96a0f81",
        "cursor": {
          "ref": "f6d6ae05-7dc4-4402-911e-a2106dad9edb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f26fa4ad-077a-4aff-a528-7bce9ba99dc8"
        },
        "item": {
          "id": "6bfe3c2a-b048-40fe-bea2-180de96a0f81",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "250db966-0a17-45da-b551-f5f0641638de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5e85b3-1f35-4ca7-b958-3212d2b82a0e",
        "cursor": {
          "ref": "8e17777c-8c90-4f4d-87f7-91cbca853815",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "def1e778-d6b7-42b5-a55f-b747727a950e"
        },
        "item": {
          "id": "4a5e85b3-1f35-4ca7-b958-3212d2b82a0e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3359836f-224d-463f-be7a-1b9ab7f0b26d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fabd08-2bd5-462e-a182-94bc76b149ba",
        "cursor": {
          "ref": "b8231be9-85ba-41b2-bee7-6128f6e4b595",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "76a4597a-685d-41da-bcb0-c3577d222fe9"
        },
        "item": {
          "id": "c7fabd08-2bd5-462e-a182-94bc76b149ba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3a38ed2c-5f02-47d4-9504-19c767f1964b",
          "status": "OK",
          "code": 200,
          "responseTime": 1552,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05324247-6500-45ba-8f20-a7fd496f57b7",
        "cursor": {
          "ref": "86043894-88f9-4923-bcf6-8b4fb9944348",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ec029465-8845-4a45-b77a-87fb84bf129c"
        },
        "item": {
          "id": "05324247-6500-45ba-8f20-a7fd496f57b7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b8dcd2f9-f264-4b8d-8746-2f8a3c54167b",
          "status": "OK",
          "code": 200,
          "responseTime": 1313,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f6c7bb-c846-4ca7-9a43-54cd9b4b3ee0",
        "cursor": {
          "ref": "43c5e19c-22d5-4bc8-9a70-93d2bad7252a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ee2c7488-2f34-4932-99ea-23994d4c9a78"
        },
        "item": {
          "id": "64f6c7bb-c846-4ca7-9a43-54cd9b4b3ee0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98db4fb2-ce60-4bd2-b000-76b47cdb69b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f6c7bb-c846-4ca7-9a43-54cd9b4b3ee0",
        "cursor": {
          "ref": "43c5e19c-22d5-4bc8-9a70-93d2bad7252a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ee2c7488-2f34-4932-99ea-23994d4c9a78"
        },
        "item": {
          "id": "64f6c7bb-c846-4ca7-9a43-54cd9b4b3ee0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98db4fb2-ce60-4bd2-b000-76b47cdb69b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8b31c4-3a03-44dc-bf3b-6312f5d56d40",
        "cursor": {
          "ref": "a87a334a-8721-4266-b1e3-27a7d97f2a9f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3e86f804-2474-486e-9bff-451bcf212c21"
        },
        "item": {
          "id": "9e8b31c4-3a03-44dc-bf3b-6312f5d56d40",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95aaac85-8ca7-42f2-acb5-7a017f6a7552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fea19c-98fc-4dff-ad82-a6295d0b5867",
        "cursor": {
          "ref": "450a4145-0c5b-4cfc-b824-cad816b40602",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "548eeae3-e9dc-4efa-8259-6384d1624626"
        },
        "item": {
          "id": "38fea19c-98fc-4dff-ad82-a6295d0b5867",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1fc38949-c8be-4870-87a2-a8c7e9e5ba05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}