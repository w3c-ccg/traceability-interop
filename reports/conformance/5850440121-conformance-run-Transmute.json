{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4e4a68a2-94bc-4a87-bc4c-6b9a8ca6eae9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c1fe3693-0721-4ad5-9cc2-66c3f125af1e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a7e6acf-4245-4c5f-b54c-dcee78759731",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31f2f625-3e16-4b02-bc2f-0155d70b06d4"
                }
              }
            ]
          },
          {
            "id": "9ed9f1c6-0e78-4cb8-a038-96e490ba945e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a58f3413-eccb-4ac8-beeb-39c98c177d53",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "596bcbf2-ad2d-4e37-af22-8f782874fb7a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4cbd90b8-b6a1-44c2-b6bf-4456d9b42390",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dcccf805-537f-4945-bbdb-37c6835717e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb8bb061-3703-4911-8ccb-1606b02adb41",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a79d939-37bd-40fa-b816-72d25dbd1e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60d9e0f8-9604-4160-b640-e21a1094d8d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f8cd8b7-3a16-493f-97d5-ad6cf8c67cb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92269a7c-3d7e-4fee-8c29-64c1bb0fd2d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f840fe6d-9607-4fe5-8c2b-26759b3ca7b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f671f39-a8bd-4de9-acff-cd2c38e4351e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29bf5e9a-e911-4cd2-8e22-a6eeba0262c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1dbc980b-e017-4aa3-a5f3-b4d3839e1adb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c076900-b278-4d3a-81e7-34e301a80f54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ed5c2f5-9c75-4afa-8972-cda2d93b1936"
            }
          }
        ]
      },
      {
        "id": "6f297003-aead-494a-bd0e-45c5f0fe9b51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "292002cc-e58b-42cf-b41b-31eeb0e61bcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db4a71e4-d213-4287-a1c8-1ee656f58ed5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cabf8f8-e41d-4268-9ab1-8ad15265bf00",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74bc418-c161-4df3-bdf8-532f93e0ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438c510b-e6c6-46f0-978c-cd4561906653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d446cb-3c76-4449-b724-10590f29b922",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eb04dc-8495-4745-b534-ce984d5779f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db10a01c-d8e9-4a07-b3f0-e06ee164dc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6bc313-2498-4f6f-9722-c86c09501df2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40567c85-14cf-49d6-9af8-1ddb7d86029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f6f7b17-3351-4bde-bc80-1d486f47cc35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee142c9c-a59a-49db-ac2b-ee5858921957",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30cf4d28-6fc6-4002-8b0a-019ac5b070e8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a82ac82-80ed-4139-9b9b-6d8383afc134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f005ce0-be00-44eb-a665-118089125e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d737cd87-9b5b-46f1-ab21-267332c0685d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e57c401-cd64-4ecc-b843-f0d07ca2358a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f0d8452e-0071-441a-a387-dd87f12aa2cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca22ca3e-c24c-4451-8666-ab0af0b3c880",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e7262e7-26a7-41d7-8dbf-964d751391db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d2789d89-5d15-44e9-ae08-3c4c33411eb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "095d7945-dfe0-434f-b911-a11357a96f8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "94cb0169-1583-411d-83c5-039571813c98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2659d8c2-99ac-48f8-a2ee-5d7fc1b2d066",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "894ec6cc-b4a8-4084-94e3-6b5b27353dd3"
            }
          }
        ]
      },
      {
        "id": "a255d60f-62ea-4677-a555-00d50cbeb53e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "44ce0982-2adc-40f0-8b50-7c62da7f149f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de556128-4c9f-47cb-bfa7-d23578f5e290",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "69ce6228-4ce6-4625-a1e1-1298e1c92ef7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf73825b-2256-43a8-b525-68fe79149d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0125e008-8580-4a45-ae9b-2b7fc6fb54f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c6689-41d2-4cb5-8ddc-e3c63ae60bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02298e26-5089-4f7f-ab56-776b281eeaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c48ce3b-ae6c-44ff-b1c0-7ea27ac71937",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de160b-b179-43f3-9c41-095637c5cf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d24949a-c7f7-4b08-b98d-be291c91e5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172ac6c6-b0e5-4e75-aa7d-e5655fd8dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "967acef0-bb4f-43a4-a28b-9c388a72fc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a00d12-8327-4e3e-a694-b53a3dcdd8c2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145e330b-4a25-4df3-8f62-6c69d6fb8543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fede42d9-29ba-43a9-8574-29fc23e25e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8cf67b-58c9-4c33-aa95-69eb2cfb39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4d4d43-697a-4524-857f-c5b9c3d0a2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7e0066-84bb-44f2-987d-d60f028c90f4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c74d40-833e-4637-8337-adb1b33ea3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e35a72-be50-4bb2-8bcb-9329b4afd220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71632dea-8717-43a6-8297-32392b93b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c54f9346-88f7-4d7e-80b5-5870b53aca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019ca6d2-0501-4b1c-9b3c-9bce59c175e5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16891da-b3a4-4fc9-bc59-ad5b86471f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0a35f8-1763-44fe-bc5b-f51e0c838d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b433fa7-a710-4ffa-99eb-ecaea9ceb56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "147fd5dc-63bc-4d4a-9a72-9df69d2563e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0adaf9c-7040-4c93-9113-a2cb3057c667",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686dc3c9-801a-402a-8a18-7757ad35a621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304221f9-2f26-4092-bbd5-aa5404ccf071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08f54ca-eeb4-4acf-bef2-7aba27cd642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edea9bc3-46d4-40bd-87ec-6a64739907c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726d0a37-cad8-4dec-8393-ee4446577f15",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244b2e1d-016b-4167-86b2-217fc140180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114a1d3d-39ff-479a-91e5-ed6bbcad34df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c3428a-583b-4142-88b6-023bfc06f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a4eb1b-40bb-4530-90a7-eee851038356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0e7b26-23ae-46ae-bea5-e3c82ba08d74",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af944392-06ad-498d-9a4f-e8e7e3a32881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0e26be-4bcc-4ba9-851c-1121606e654b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add83b3c-1f59-4a52-b085-8f1b793121ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cbda37f-c688-4ed2-a469-249f7b514e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f41a4ca-ed8b-4def-a26b-4a0d5ecdb60b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae96c16-f36c-4764-a0a9-17648264514a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a225bfb-2a8a-4137-90db-5f42fd298414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e24706-b702-4aa0-be8e-40985de75796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ccc11d-c149-41cc-9d48-144bfe33536b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4e6f5a-690b-432c-8901-b3971cb38c2b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be67c6-5859-46fa-af5b-5ff6dfa69064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126fe43c-931c-4b44-b2ce-f4a1a696a123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd96306c-c2d4-4ab0-90e5-9003dc3c48e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f782f5-af71-444e-9bb9-27a90ff35ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0606e6-0324-4547-ae85-960c0fc65498",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ffdc4-4bff-4e2a-876c-4151a962dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea023a2-920b-45e9-b2f5-bf8a2a3ef5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295daa97-56ef-49eb-bfef-1684b2380ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d3fe63-bec9-4ddc-b95f-4631632c9ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676156cf-9c46-46a2-83a7-4001d60b9e41",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c11a4-b7c6-4a43-832b-09d02e494a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aabaa4c-2a12-456a-aa48-d529ab1cdc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f80104-3cb7-4c8f-931b-d0f46650575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3592ff8d-56ad-45ef-8ee7-bfcbbcfc9c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4dcc5-beac-4e57-806f-eaef98b2a1cc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071901f3-89c2-4f9a-81e4-4e3078d1e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347c5dce-d725-423f-9da6-0205efe646eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc1202d-a2c1-4c94-b327-86183baec18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d979203-f52b-4867-8ce1-b19a46547975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13fef32-7c57-4001-bcd8-db25124fe0cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73132fa-a40c-464c-aaa9-015979be0f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b7f832-b0d2-4349-850a-58243e178b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1df352-0f78-4e50-8dfe-3ad23d8a5618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52ec8069-cfdf-4a77-bcb3-1a95c777f873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7f4d85-f58a-436c-9a97-c40db721e706",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f04553e-f858-4c11-b499-6df5c1c91378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a37f98-a4e2-4aac-9bb2-deedf453cb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e33a80-f658-40cb-ab83-f302a6b0f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff70e551-fcc6-4e29-b796-22bf710fbd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af556899-257a-4110-b2de-ea54c8ea378d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46648959-1555-43fc-84ff-7a0e8a437aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1e3921-e912-4505-a96d-cff672cf45de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d134be-f134-447d-ae69-5674b9333fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97a1876b-e06e-4fd6-abab-5b2b82d9922a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47cff66-16b2-4ccc-8948-684a3ea2550d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9822edf-4ac0-4000-9fa3-620426c11131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b482f45-a634-4ddd-b681-2a35d3a655af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21adbe-d306-4daa-9617-d252374a7fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9a23fa3-b7f3-4237-a156-db883869795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70fb54e-73fa-42a3-acbf-ea67df937945",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754dde93-2ee9-4191-9ee6-35eb64cab316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c018f68e-bbec-49bc-afcc-ceba228e8a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f261bca-10fc-40d9-a49c-0c2a439f84eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e50bc4f5-4401-4fd5-b8c7-e5fc84a24be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edca5b7a-64aa-47aa-885b-d16135ef14f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a5adda-3650-4969-ab4d-0ea3a87f03c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad6b5d3-5338-4ecb-bc4d-f3d72862895b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94772bbb-f01a-4c33-9cdc-60b078d5ffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35780c60-a8c0-4617-a457-fe1d929bda16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21c71e9-17b9-42c0-be0d-eec4fb245395",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00887b4-338b-45b6-8e42-c7b73504c178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5667ac-12db-4fe9-a51b-140df2a24f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c014772-249b-46ce-be07-b3aab0a0f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25d7f97-9e65-4aae-b336-eb10198f442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959b13d4-a119-4bdf-84b4-8c6b5a40f466",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a192742-6fec-44d3-ba52-6961865ccc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15ca593-de50-47b1-8c76-ecea8a3f0fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab3fa4a-33f7-4081-81c8-16841dfde429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1066ed-0baf-491e-b5ab-224a0dbf1332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e4cc4-b5e2-4d7b-a7a0-535f192b071c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49ba1d0-92af-4c4d-b18f-e013b9c161ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267522fe-45c1-4bec-94de-ffe87af90af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6f39a6-3d84-40e9-9781-266ae31da84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "affeb778-6416-4db9-a95d-3d5ed6998fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0886362f-f081-499f-85dd-1be11a807204",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874374e3-ff06-4aca-9997-bd7da0b83f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793e7272-0e58-4bdb-9c25-7fcab3556a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683975c0-aaea-4b43-92cd-22e1bbb8c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0268b0b-1c0b-41cc-bd85-274782a206f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1cae5-f6be-4326-ab8b-02dd5db1628c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7281bcd-2dfa-4d47-8a97-921dc6667e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4dd6e57-13bb-4545-a28f-023b39def37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aa143d-6f13-4b50-a326-1a1738cc4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ba2c8d-0c12-4ce5-82d5-cb39f001be70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc274c9-c82c-46ef-a744-c221b2c3b9bf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27490d3-df4a-4c66-958d-25554a9d08b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ed0bea-cbc1-4e7a-a819-e945b738a719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d86094-26ea-4dcb-8f9a-caace1923cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bdefea-8853-4ef5-b7e2-5a39f7d98801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeb7b6d-71a9-4194-9c39-a5b9c5371bf6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b1c1fb-ddb9-4f74-9f59-dbe13ce17553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78938e6-cc32-4c96-adeb-a04138db68bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d973a307-bd03-46f1-b914-f98371901070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fe08ca-77ac-4897-ae1f-f65a49ff6476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67e61c0-0777-4898-bbec-df0a841d2934",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98529b35-06cd-4c1f-83ef-4242b5d17856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a1213b-1e8a-4a22-8dcf-23df64b81a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c46bf7-9178-4aa1-a177-82b718918504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91575620-c4f8-4b22-8beb-5117decb0a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c88795-4470-4a7f-bd43-ffca02a40c58",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdf4641-4607-42a9-90a0-c4a322ca136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c928086a-1e50-4d61-9f33-4a96ac34098a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df011d2-dd2f-4c5e-913b-87434f8a5b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d26ff5f-a298-4b0d-aa4e-f372839061f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a84edd-7bee-4f8a-97cc-54f665873659",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe8d44-de34-4a8b-bcba-af5610b72afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc9d0e3-32b0-41ce-a6fb-e537573c7f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6d763f-073f-4abd-b14b-a6aab06e584c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c43f28-b16a-4db5-82ee-948a18ff3d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0763c3c9-1c10-4bb6-863d-c2c19d7ee798",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98da6bf1-eb45-486a-864e-240af6a5d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b0506a-bbfc-4179-a03c-4963343a1ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90d2209-a4ef-42c9-819c-a2ad5e72861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "773618c7-690d-4583-88e2-685c945add06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a944d3-85b5-493a-9e8e-099973a20a8c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425be3e3-ebba-48b0-8188-40735e5f9b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532a9c39-d107-4906-bff9-95d3ccec09e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f257c4d3-9865-4ef3-8a45-0c97ae464593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30b176f-103a-4506-843a-82d24acc6c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68a8132-93c3-4cf2-aeb6-c7d99ddfad3d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168589bc-6305-4c81-a087-cbb36a00522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0093074-0063-4a64-be63-a8ee90fd117c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11090f95-a498-441a-9639-95b2c2880299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0909d3-45a2-4d15-9927-0e696e84f9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aeb96a-af0d-427d-8613-66fdfd02087c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295da22e-2b9f-4567-a2da-698c58e156ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc0166-6598-489a-8c17-42abf6b1b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a74741-f89a-4d89-8777-9c03817577c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b13d7bb-3bd1-4e63-a6e3-774f5198f31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75054ca0-2947-422e-a723-5f9a7fcc12d6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28d6b27-c0f5-4423-9727-022c82cab225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df779d1-89b9-4840-bc39-2b4d48a2e7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00472535-d8f6-4c05-82b5-b8554f84f1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b483aa-f396-468d-8984-e78489aa14b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c4777-135e-4780-b23d-ee4fb988e1eb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82335e-b0fd-4347-92c9-408477c4737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f6c3af-dc86-453b-ab1c-936cfefc9335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6a2ee-5443-464a-97b1-62404ccfba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1f9b79-37c4-4c73-8ee6-9861888d4fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a394189-975e-4d27-b9f5-cadd3a732e34",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa51ae6-3e6b-4d63-b45e-146362a8f23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aabde79b-1788-4d89-ad9f-ef42f228349c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f725a4a-7a94-45f5-b5e2-18a8c86c21d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc644f9-cf17-4b31-9068-df65f407e448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3cef5-b37a-4541-9e05-a276b2f5f191",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06b88a1-4e6a-4fa6-978b-dff9355f0405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87bbc23-343b-46ae-8dfd-aa528ddc8e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cbfe7-3644-4d3d-9186-9a6d43434d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e55660a-fb68-455d-8588-82933a13f966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3db5b6-0831-48e9-b70c-7d9cd5aacaf0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce91e770-0664-48d8-9cd5-99e32aff7a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8381d6-651a-4a1a-88f5-b1bd6af435ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb64fb4-be84-4fcb-80ce-e7cfbf2f09b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "700a8bac-71b5-465e-8a53-e61f7da9cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57866fcd-f384-4446-bca6-22e412d5ca48",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb9d696-5b35-407a-8011-287a610f2012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5afbd66-8ebb-4da6-98c1-98a6d6e60e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f323ad3f-d212-409b-a2b0-349a1bea3985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b6ba3b-5d36-4448-9ff7-c2e0d99501ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676773dc-ea4b-4c86-a314-9dbb4a205579",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba660c0-a0d0-4344-bb9d-d205eb50d713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c44280-91d1-48c0-bb73-812959e7103e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9772ae-e3be-4327-ac31-fe204596fc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f637deb-92f6-4e0f-85a7-586753c51f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f082bb0-b28b-47f2-9597-987b0511bf79",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96282011-1950-415a-9167-229ee37a1011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2233b48a-0aa5-42bf-a983-afea09ef166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29212e6a-341a-4442-a7e7-ceda1c036596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f478bad-3059-4260-9bc4-c0b9561b7eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c41335-db4f-4ae9-9881-368bf18caa90",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e46062-f323-4162-bc98-d1fb24ff715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e56f45e-1b4f-49ef-9111-f979b16ed5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be86f9f6-4593-4b21-95d4-9d518bf05537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "19a1e99c-f82e-41c2-abae-ceb4247a2ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbe9bda-10e2-4d63-854b-23180c02d553",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8671bf43-b5dc-4d74-b449-dbc8b216cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde34804-895f-4360-a176-b0b478920d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b5a4a3-9fd9-44b4-848c-cdc436261a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76b648c8-0b1a-4657-9860-57940f5ca2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5bf62-4a84-4d75-97dd-e677e1869f07",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85ccfd-3a0f-4752-bb1a-da22d0d58357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7fa60f-38cd-4209-8419-39fe31e3baea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b57caca-7944-4070-89e1-7c36ac9b5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d379465-52b3-4cc8-8461-6d53e0d98617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc0be94-bdeb-490e-b53a-fddfbdaaf59d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5e8826-a844-47cf-b907-1b37ac409ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662c5c6d-7454-4cfc-bd5d-a828409a8542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3ee433-2f18-4e8e-88e9-ec832d75b36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0b817f-4035-4ee5-a50a-c9b00353368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd612ed-c347-426d-8f5b-fb0cc1603435",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96988fba-a2f6-4563-81b6-3b1eebe44e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85f8051-8a91-4f79-881e-3e02ba24423e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b47a74-c5b4-4bcc-8d40-b14ba6b04fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8e0bf6-b7bb-4459-a350-eea1017ee7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2593d225-41eb-44b5-9db7-378f6859c5d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5748ae5-7008-401d-95e5-815bcd1623ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd032f27-3571-443b-a496-3443ab2cea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017ce347-1440-4345-a26e-2406a4c031d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbdd45f-929c-4485-8498-79875ba5d968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed16738-0366-4560-85dc-dfdd7527440c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cceb07-ea98-478a-b0de-45fa8c679b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246955fd-e75c-46bf-97ea-2e1dfd0a97d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266e78da-c67b-46a6-93fa-278ba31804a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b384bcc-f639-4237-9bf9-494014e30811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8914df-2765-44ee-833e-95248b86b489",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35cb8fa-d7b0-47db-a747-da85ff333dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06932a33-cd94-41e5-8fc1-b6e4c59de106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21eb3035-c839-4955-825d-1cf118e81a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f815339c-a70b-4fe9-a528-05bc9f974839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e141e55e-e888-4727-b612-ba87ecb2387f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c007fb-1e9e-4c00-a122-521630236b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa12440-8b5e-423a-ad2b-8e5de6704850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c612af-a680-4f11-93f2-6f2398311943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f4989f-6ffe-4a96-bb59-e0a48a9aa170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b82986f-bfb3-4481-943f-1e7520de9ae7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed07a88-220a-45c8-a43a-740c848efe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487caf00-40bb-4bbc-a760-1260d9570520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2378de25-ba69-4cc6-b4d9-31157d2fb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e54dc56-24ec-4b89-908b-949c2bcde413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10df4fcb-6d0c-4b9c-be68-6b9e9509c731",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110cf058-7d27-44ae-bf72-c506f7f2d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a784a606-4095-4d62-8acf-b0e4c862577f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e166c1-0ae5-497b-b4e9-0aa4bac6f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2f553d-d58d-4794-9ab0-dc888e049757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e380dcf-cf53-4e26-9847-b9ef6a1964b0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b685409e-ff61-4291-afb6-ac280feaa5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0ab411-0e98-452c-ab6b-eca586e3af9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d903c-8a67-4561-8af1-1a6931c35015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c879066-ad68-4878-b3c5-df72f04c1cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac4386c-162a-46f8-9bf1-ecbf45e25a68",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49024e86-ace1-4f63-96d3-6e7b57b15484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79af0e1d-76cf-42fd-b051-1a036cb2300b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55cf04c-db6c-40a6-b34b-fde9fd1f7c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "027a038a-d10f-4796-859a-ff695b9bcbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8317c-463d-400a-91c2-f05dbba67a43",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4259b9-a7d2-4778-b868-49a86a4bc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997acdf-c9cc-4a34-8731-d6bdb176f768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eef357f-4da4-4a18-b820-cf755eafeb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53af87a-ef50-455a-86f3-50f463b6d910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06530204-6377-4843-9b2d-61ce5caa85b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3bb126-1e6e-4abe-bbda-23f3d6602830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02beeb7e-2249-4d3b-9e48-d34235936674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5420d704-f1c7-4b4b-9e7e-66f55c242715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "71cd776b-6b97-44b9-8cc9-12a65d623ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d463df-2bd3-4389-945e-16d028f6b43b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917662ee-4c0a-4156-8a24-dbc53312f4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e392d3-79dc-4dc0-944e-dc05f2fa762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b4ecb-1cb3-448c-ae60-95b9c0e94334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcae28f-092e-44ba-89d1-410da27caa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c87dfd-a5af-4525-8fdf-9c8b33d105c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2815a4-7199-4e7f-81ab-4c703963a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50e677b-89e2-4e50-a93d-16dece6b15f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b37213a-8a5c-4fb5-b2ea-4118d148c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d2354e-ca1d-4c0b-9a0b-7b8269927c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a2750-d556-49b8-8021-4ee03bc39c03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a13e26-7f5b-428b-b556-72a5c5144e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f0ac15-a822-4f6a-94a2-b01f89a65992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a27594-97ee-4cea-805a-587d0de4ee1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2a9684-e987-4600-b87f-e7ea5982f6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bf4d82-dd2e-4eb7-a557-87dc0f0ae1f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556cc058-270d-43b5-91ff-7a911db2c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d0469b-3e72-4e26-a573-fefe27c3d854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18fe02d-7507-47a6-ac13-467f75c54c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6831b7fb-1a3a-47b6-8952-f8e32cb14577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43142cec-714a-4536-8256-3567ca809265",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98204c6f-cc4e-45c6-b3db-a69687e6242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192532e5-64cd-497f-a992-bef620607e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80edf1f1-dba9-495b-8616-5684b4e15b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f22bd9c-4842-4c93-83b8-fe548b011042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2575bc-6ac5-4b4b-807b-be028209bb26",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e613a26-5683-4fd1-8ef3-7c36b7ff856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11752acb-ebf9-425d-aa0f-10cca24da33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9f5809-2c23-45ba-99dd-663e15adb9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17db19d-3c43-4dfb-8890-503d0fb77de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a820c51-a8bc-4e4c-b59c-b1d3c20cc30e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600ebf63-ad83-49ea-9b8e-a7e2b34fc699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dd2d89-4c90-41e6-ab60-bc1356bb5399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ce93ee-1922-4a12-afd3-048df89dcdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5916b885-2f3b-4616-8d79-e3a9d7150d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b740e64-931e-4821-b7b6-a42bf0377655",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f6e88-5d45-41d9-9fa1-c5d64ddd7acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bab8e26-8f96-4065-8f77-ae6200ec6ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f239c79-671e-4d93-a352-4f958823cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2380c7-5651-46d2-9e9e-6c78845f133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458afa02-be9e-4393-ab3a-b270c7437bfe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc4640-1a12-49e8-8498-ed380d6d9a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c97db-f7e9-423c-8b7f-969124697f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c794a73-70cc-4f25-83ae-9539fe3fa0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96828ec1-bf2b-4898-8f1c-6d357920c808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3293b01-f920-4faa-b6e3-9a857c9ae7b6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ae8d3-92df-4444-b5e0-1b555aebe85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62703655-42ce-4e59-8d0e-a667a7c4b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14e56bc-dd1a-49c3-8581-e29069627e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e72210-1918-493c-af82-a2cfe91f6623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5fddfd-f383-4979-bfeb-803cd763d066",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df048ae3-ffd1-4fb8-bfdf-12bd6c1e8721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9b3c32-c027-4fb6-88ad-5be6a972bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5112fdd-9e7d-4824-b2c5-2751a77e3010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04ca671a-b132-4ff2-8db0-1f74fc3f0fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3d8872-b131-4d7c-9789-5be7534fac43",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2b48d8-4a63-44a2-b6da-829b02605551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95650c6c-a7cf-4327-b724-68203c56019d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5357796f-6254-4842-9c4b-5c11341f2dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae3e687-11a7-4865-9b49-6de93b186c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22136b92-203e-4b0a-96d8-7e0b1027c447",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e5896-3199-487c-bf1b-3ecf5a17e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314bd0f1-35e0-47a6-81e9-3ac976d25865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850893e5-1af1-4351-9a30-cd7793d6f190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8194e8bb-8dce-4611-ac9d-1f2b3874e691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d16a5c-4e06-49a1-a64e-6c421526f35c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a6e893-048c-4316-ba41-b743d232cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e58fd1-474b-4018-8346-afde2d2ade94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7435e7-bf40-4d02-8d8d-3794be769a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f88c31-5630-4ad3-aeb8-73d6b86a29a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36087b9-52de-437c-a72f-bae661967fef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6518f4e3-9485-479d-a6d8-e8ec80211f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7ab1ee-90d9-484f-8857-3ed4b608a319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecc954d-f4b3-42c0-a92f-1998d95d2bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "176a447c-a572-4a04-9afd-79c73f8ff670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365e0bfc-6a6d-417b-823f-bbf907445450",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93a2ea1-6ed3-4265-8c02-08151aae4c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7c08a4-d150-4163-9bfa-2175d9cd4aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d7822-eb87-4b3e-b233-379286134ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a5d7b2-3d5a-4283-8e82-f52baabd55df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2d84f9-1f20-4ce3-933f-9cf804c13899",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd8f1c8-3833-4bee-abfb-71399d76227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3750579d-a4ca-4244-9693-4d2370619a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5987e-fcb9-43ca-ab4b-ca20e689b16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f14bab02-88ce-4d86-b395-aa2219ab507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72034496-b3e5-4439-8f5d-0666989320d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a23139-1cb0-4df4-ab8a-56950a13ec42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faf47fc-f339-4045-a189-3d88d17f174a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d324f640-63ab-487f-ae9f-08a3d6334081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08ae551f-90ea-4ae8-8fc4-21de467aa055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4501f6a4-9e08-42a0-b155-35cd0995d76a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad44895-f7db-4e65-9d46-bc15634ab1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c922b3-b190-4d48-9619-c4b0524ef6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2be62c2-2ca9-42db-99e1-c06cf1f1e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3ae933-695c-40da-9370-939b3792869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d935f0-6edc-44a8-ab8a-0c11febcf9fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d112aea9-31c3-496a-884c-dae5037a29d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2612800-6565-4220-9eb2-0686ab132acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09178a81-a489-4279-afac-347b3aa2e996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55cc1bd-6e66-4272-8c6e-c499a945bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a170d52b-d2a2-4588-bcd3-80348f880b3f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2452531c-c262-4b9d-9bb4-49bdaeaa5053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cbb7ea-fe87-4d21-a818-81c41a666f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f331a241-81f9-461c-96cb-a5606e7489ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32572d4a-5428-4af6-b031-c2505dbd5de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791f11ad-9f3b-4d48-ba5b-7047f7556a67",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fbc0ed-0d97-4877-a3ad-69be764fe330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5138b91-0e6e-4cbb-aa9d-8607bc5f9301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5464bbe9-501a-4a90-8a03-3f448a5e12b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d5c9ce-a4a9-42ae-9c64-f04d38eb45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b5d55e-897b-4eb7-841b-b5ad6ee228c5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d580958-0b30-4549-bc50-2ad2038020c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a628315f-466a-4524-919d-c210f68f7cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d02e523-e3ec-45bb-bb57-ec391b6a1e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f72922-d4eb-4063-91ad-3b34ba451c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50baf57f-6ab0-4a8c-8ef4-7a1aff5987c0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83807788-5960-458f-b680-12bee1248510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d500d5-2ae0-46eb-a5bd-d1af7328ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d1489f-0367-4e2f-b4b2-b540c3ba967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f796b7c-0977-46df-a980-20573384999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03383571-a83e-4c98-983f-1649cc10feaf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d410021e-1c1d-4a3e-9967-feda7933e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dd8481-72a6-41f4-a2ba-900da923d8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f80474-b295-4aaa-8e1b-2f91013f1f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa9fb60-3de2-4ed0-a7ae-40b26a397cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f8a6f-b060-4239-b4d3-821c1f910e2b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b104823-6a76-4fd1-84d6-e2f9aafa39c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4646a4fd-5bdd-4976-9d25-3360203a71ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1119879-104e-4014-88cc-cf6c78a4e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7adafb6-a0aa-4db6-80ef-d81203f0eaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d08703-6c1e-425f-9fd5-f41d5444a990",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2353d6-0b62-4211-b468-75b196cfa76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a31afce-dab2-4aed-b2d2-bc286e69fe23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da4953-2721-4834-a405-67127fca8722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e121c13-29c6-4c26-b550-004fa6fe5e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fd2dbb-703b-453c-b958-37290d400f43",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed0ece6-3e19-4c6a-a2ee-7ef24bca4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd8e372-0c5e-492e-9dbb-cfd9ae4a1d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b997307-b6f5-4263-bce9-2972f67293ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff9ba42-5466-4720-bc06-e7059d39242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79522025-1345-4481-a109-08a8390c9b9b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d885aa95-04c9-4d02-9a27-ca7f804619b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69c956d-83f7-48b3-9e16-ee2c4c07ee2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45d6bdf-5d84-4106-a29c-8520bba76c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffcdaf3-a570-4014-a363-6e4bf0bc3583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d183e8ea-f069-4a5c-bf49-31839173582c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8064d5bc-81c7-4a45-bb9b-551e00d3476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87df5c71-97e4-4cdc-b566-2ab80e991bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41908e76-93fb-49d8-a028-4791cccb902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62353704-a540-46d2-b47e-e52b16bcb91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b547b750-2221-4f1d-9dcc-312b420885c6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67596ea7-adc9-41f0-88c9-8e8168f343ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bdefbe-1b29-480f-8586-d790f9404307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e490d7eb-582b-42a0-815e-1decddc26aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f0c2a0-b9ec-4085-ad12-5e4bf3d22e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe2c2b1-ea14-4568-b21b-827c6766059e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54847da2-76cb-4c2e-bc0d-5db6e671cc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077a2b09-6626-4595-9b94-870c31627ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbe0104-dfef-4e6c-a741-6e5a6445c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8f1756-d256-44db-b934-518c2b941ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9e169e-dc97-4676-b4a2-1b2be77b8e04",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ab3e3-9346-4bd7-86fa-9c445b8c31fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555fc0e0-5dee-4497-b979-51f6aa883cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c076a35-3a8e-4da6-9434-8d146fdd5d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de659d1-97e2-4f66-a173-07f15a79db5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62daa1da-52a7-4362-b3d7-01a0baa1a569",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3c1b97-3122-4207-b330-50413baf8732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6c742d-1f2f-4df8-a218-487f632918cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca28347b-8009-4796-91ee-b21f187573be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d00541-e4d7-4c28-843d-d972a4413db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6128c065-46c0-4ad0-bf64-a766036cff51",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7590819-0c3a-45e9-a95a-c5be6f6dd5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ac760a-b7e5-4768-9928-77f38850afa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7fdd7-30f2-451d-b754-0134564f8d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a985711-48d6-4a95-8cb2-6434d46021c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f449847f-b3ce-44b0-9486-cebe653c419b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa94a12d-9f24-4957-a5e6-8176218f743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db7ab7f0-bb96-4ac3-a816-87e04e49398e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598155ed-330c-4351-a663-2c92ad019032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8625b8-7c0b-4b81-8fbd-d5ae0e94b204"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a60b3da-77df-4568-bfeb-16bf75c5bede",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f5b3f46-7b54-491a-9f09-9b451912bb02",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15e7c8-80c4-443e-8707-c273dc70d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee9d277-8b21-468e-ad15-da9933c4dca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751c0957-702b-45d6-b925-2bf8f3bb1042",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48462098-9a19-4301-aa2c-55f9d63c8546"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b2052e3-b658-4c6e-a1f0-8a2b9fb91df9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e57bd48-f71c-412d-ad96-9405a5aabe3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0007d863-70d3-41b2-9fc1-057d1ce374ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac9f9b3d-40b4-434a-b976-3a8edb22b302"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1047cae-50a4-407f-ab1b-b6b5359fb27c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb563385-2971-4d65-aa55-d3543c497418"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c07f1ceb-df03-40b2-8784-1523f0f9c5eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f1506ed-68b0-43cb-987c-694011ada31f"
                }
              }
            ]
          },
          {
            "id": "942be025-0984-42ad-81d6-a02f775df566",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73046fb4-4429-4446-84f3-388862c4565c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a215b2-998c-4295-a98b-933e4dee097d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72541864-113f-4b12-8e83-a8c77650143d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76527f6f-de4e-4849-8226-97aca9b2cee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa8aa97c-ad4a-4562-bb5b-387d7a91fabd"
                    }
                  }
                ]
              },
              {
                "id": "d6a83534-082e-4397-8ec8-4ae08b1bd33f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72f9279-599b-421a-a48b-c082d04a5bed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f87d42d4-dcbe-490c-920f-a88f0662f302"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804705b2-e3a7-43d1-8774-07172d545f65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd902563-41b9-44a5-ad53-0ed226232118"
                    }
                  }
                ]
              },
              {
                "id": "9a5e31f7-f377-4728-8370-19d96223e0be",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ed4149-6a54-4824-a940-4355fe87c591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffb964c6-2327-4374-a686-0e22582f83c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f482409b-5647-4237-b9e0-1f44810e7578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac5c8f9d-28df-4d0b-ac7c-51414e53915a"
                    }
                  }
                ]
              },
              {
                "id": "3e218e59-3025-44f0-ba9e-c5fa0188dc1f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e20d1f00-ccde-4a44-a52c-8bcde5322bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2ae7291-4d5b-4bbd-b4a3-043f303b182f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab7bce03-82ee-44b9-9f92-dd546d5f22ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "13ea5b11-063a-441e-aec9-1b5ac21a057e"
                    }
                  }
                ]
              },
              {
                "id": "e18c65f1-b388-4dc6-b5d4-66e5cc2eee1e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "472f2e23-1b09-4de8-8c94-e72e134299be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22e3d777-cddc-49ab-9a12-83409ac12125"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "588434b5-2951-47cb-9fa1-23b08f81c2bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0fb48289-2d50-43d5-b34b-97296501baa7"
                    }
                  }
                ]
              },
              {
                "id": "73de2260-93a0-4a27-986d-c8b19068849e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12b5754b-abd0-414a-8468-68e37131d5be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbef4654-3369-4d26-8ce7-8c1a762212ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dadad07-e0af-40d5-8d71-99870ad7172a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd73db01-bc4e-410e-999b-9bcb3e4f2cdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f6e5f4e-79ad-4659-b036-8856cc814f3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af1fa8c5-2c93-445a-bde3-a179ca628dad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc85d650-214d-42de-b630-d950f22aa428",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d878f39-a578-46ee-8c0f-595b3185618b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e0b1b68-fa56-4704-8ece-190f0621b491",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0c80722c-df5b-430c-8ee0-9ef2534fddab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bbf9c26-ed85-47c2-a455-a74fdffe15d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fde07366-ba1d-4df2-804c-76f9e28eee3f"
            }
          }
        ]
      },
      {
        "id": "367eb214-7fcf-40c4-9e09-a0faf22c38c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dbba89d5-8302-468f-a0db-2d0cfc4f899e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "533f9d60-4b35-49ee-8327-78b9aeecf96d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f20e7ef-576a-4744-91a2-7e984825765e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef3d72-1839-44aa-b685-51f34e7c7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1116ae7-5b69-4969-9773-a620fe6d6733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b772926c-87fa-495b-8190-c5d59c3e80ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ee66fe-42c2-4bac-8118-520b85daac9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ebfab2-7d5f-4391-97c5-f1572171e6da",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34dcda7-eb3b-4d6b-afc6-698eaa301dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1dccb8-303c-406f-856b-5043f4c5cd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece58b89-2043-44ca-8a0f-b6b8bbf75864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a48bfd-29e6-40bd-98f6-a997da638ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b9f445-7710-4984-aa61-e8a20465838a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2681569d-aa22-461d-8f33-e5724ff0ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2cab7c-c87d-4b5c-8e63-ae083128d864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9480fbd3-1650-4c5e-b9c5-ca66aadc9f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c549a3-ce8a-4fba-853b-b0f150c8d14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd647e2-c617-45dc-8ed3-d64b479ecf20",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beefe70-4c88-4f7f-9469-ba8de17341e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c2203b-0118-4101-bb39-c97bd29368a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78914c7-d44b-47e1-b8f0-545e95d2a712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5054ec6d-5aa1-4afe-a340-0275b5c4ef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5bb046-8adf-4cac-bba4-79232b90ad95",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f23e9-90ce-4b53-957b-fbca98c40357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476fa580-6613-4048-a9b4-f33bd8dabddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3852149-4c10-403f-9e42-a84a9317b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8867f39-6f84-4fc2-8465-90eb449ffdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d836e6a-c123-4248-91fb-56d1814344a4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4431e0-3d89-4a53-84e4-f85a2abe49b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deabb898-9f83-4e4f-b310-d987fd325ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99967020-d906-4d77-8128-1181e06d7c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8146c3-46bb-47bc-9d6a-fbc59c5c1e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186a6353-5687-49e8-b9de-ea8fff0dd01d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3b8fc1-7704-4bbf-81ab-dc11fe234592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213038d5-4668-4471-89b2-22fa73f9c28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d75afb-8cdd-4851-aada-74dede014aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca823df-3b08-49ab-8a18-6c8a690474f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b370045-6670-4849-a6f5-ca3274157e3c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6211defd-8b94-44a6-8fca-085211f14e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503a94c0-e91b-4021-8a24-bbba15e9e60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d94c68-ed04-49bb-801f-fb4face2f32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6329667b-8008-4b4b-b6f7-6ae905d02e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be2fbc-acbe-4f24-8a6c-c99703b2add9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd122c9-bb85-42dc-9d21-090fde723d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bba149-1a07-420e-bf86-84452d320e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaf8300-9ab0-4535-868a-5b95a4501c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee616a17-ea59-424e-947d-17a93b4865de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4e88ed-54e4-4854-a200-b6757728dd24",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d6916f-bd9d-4f76-aad1-416b474186f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11bb4c4-7e38-4175-9f5b-c247bfea520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e93dfd0-bf47-4d35-99e7-fe50fef58844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68899de-ab75-4d96-8fd1-43e0d0139092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e108f7b-359a-4cb2-b036-330194aafce2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba21ec-ea1b-47ed-aac2-1631ce1c9055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570a06a6-e2d8-442e-b3a1-d901f1189c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e246e4b-6397-40c7-abec-bd0d6d00ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07243089-ba77-4641-b0de-84a1cc905498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44313a44-d87b-4122-9729-a7054528a6d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324ec0c8-5b6a-4ff8-9a47-c0fee620481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38779708-c14b-4685-8720-28cc83c1b18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff4165f-057b-4ffb-a5aa-2a3a6889cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "157fbfe1-9e69-4ee3-858e-c0413ef0d628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedb7eb7-824e-4cf7-bab2-c513dc1eb6d8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b315e-84e4-4af3-886a-7962ff765cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c18f19-1fb9-43f6-b94a-126526c20a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd9c8b9-75aa-410e-b9d0-eadb7abd7354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02523d95-d499-4705-9ada-5bc6c30ed7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f982c287-ac7e-490c-b7f5-a9446fd008c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85223847-15c3-442c-919e-895e27cf90d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712a83d5-977a-4432-9758-491e0763d830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d3d97a-6499-4907-ab07-e04fa55192c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0061ae87-fb52-40ac-af81-f120e3c2fa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2125946f-e2c3-4012-8b94-d3cc4eca817f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91015c78-1285-488b-a0ee-5c0b9492d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a91e3-7f0a-44c1-b731-416ef4d11cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c39b6f1-c457-4dbf-9b5d-36c8fa3d9ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aef1745-2526-4ead-8ab2-b6bb73099a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786dc08d-5c4b-4c61-8e45-42a4618a8086",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8833a7-f4db-4fa5-8a14-125641659230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6083286c-2b90-4441-8743-aec202d9a6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52095c32-3cfd-4cbf-a501-97a738adedc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f646603d-8f40-4342-ab27-e7510a67941d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9618a795-b0d9-4dd5-844f-2cbb73ecfcb1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6d2b3b-78fb-4452-9849-b6a1cdd83eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c19fb23-82af-4ec0-89dd-3f048fc72c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44e3d7d-640c-4c86-b857-00f91dc66c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b3840d-fd48-4f3c-bffc-9e5180184e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c6a3f-9c3d-4871-a4df-4a34e45d230c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f8a500-283e-4f65-8ab8-8698b3c5a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501fe096-028d-429e-8982-5f2b83c4bd85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6929384-6195-41ef-b7bc-699aabbf496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9695c9-41fb-4769-be6d-21ff1655808c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499445a0-b519-45ed-afc0-d4f02be645aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17939a3-4e63-4365-ae76-a401568ffc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500b5f66-d3ac-4951-a2ac-394fd6d219de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e086679-f385-4043-a6f4-0e1c7bd6589f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b1fdf7-c9c5-4853-834d-ca13dbff3f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ba368-c7cf-4f07-b66f-7df11f972add",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730f97fd-6601-42db-97a5-afbfa39b0210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0993bb-2d9e-41c0-bf98-f91ce6b48a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6013c12-ea54-49e4-948e-aa4dd5c68532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "870303c8-bdf0-450f-81ce-350489d22123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67f88e3-3c24-4d8e-8c38-8046b5faa03d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4f24be-9337-43d1-8cb3-0f44da908b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43161eb-8cf5-4495-b490-b2006472f22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd93271-9181-4807-b5b9-9c63a8cde59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898af4e6-9b2c-473c-9040-11d3dfec3f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e0b5bc-c259-4318-944d-75060eb230af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20355fa2-4c6b-4ade-8ff9-4912767a88af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d7e7b2-3ac0-47a3-8daa-e24b73d17d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56db443-4486-4c1d-b2d2-cc32683ec059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d665ce-c6c9-4b23-aadd-6de4bc337fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734be78f-e474-4d91-9735-0d9f952e339c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bdaad5-f30c-47af-91f5-9f50bcdaffe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734c55e8-1c9e-47a4-baf5-678a4aab8343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e1c79d-7c32-4547-a930-02e542e6c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a954725b-b475-4d3f-9645-6a8b0ea658ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a705b6-22e0-42dc-9d45-4a0e796e4aa1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce1e043-0d8e-4bd8-8ba3-94bdf05f0205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dac09dd-edc5-4420-9147-36032b888d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee754363-eea8-44c0-a816-d882ea31e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7732a0cf-7e43-416e-9cbb-6fe15e425793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b43f9-ac21-4e7a-a2cb-aab933c25446",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830574b0-d6c6-4053-8a2d-c4251b49b4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da32242b-a0fd-4bd3-a300-e0d688a1b68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6752d8b6-b251-43f1-aeee-2caa6c41fc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec136da0-a270-4e53-ab95-35994203d7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c4447-9d10-4dc1-803f-151be37abfd5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb2c80d-3356-454d-9a5c-7e1707fbc6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146554b1-3bbd-4806-a13a-3fd151af76fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc627e27-799b-456a-a240-ca63f1d3a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28465cd-7d40-4ab2-8d79-4359bb3023a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bba67e6-a2e5-4108-b0b3-bac54e9bab7a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fdedf7-ec16-4142-9b87-a031f659d130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310190a2-3a59-4aea-9453-cca281247212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e1628-9f42-468e-b3fc-ab02f33878a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314adf62-434d-455e-b611-f85ade6e4ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8557be19-80e1-4df0-86bf-390025604377",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf896f0-ec43-4713-aa9a-db6c326b534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656969b7-f8b5-4357-b56f-9f05ff7ca878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb6ecfe-ec1f-47e2-b695-04dc2e3ae022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d34e4-fab3-4b1a-83c9-df081b680e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93316e-cead-4e2b-aade-8a75f0e6eeb9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcad510-fa95-45de-9dc1-9d46080f4e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094f323f-a315-4272-bb4b-1f1a436c9b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cfcf7b-3e45-4dcf-b8d0-6d915556fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed1c6c8-4b7f-4e75-8f13-0217a2579361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a60e4d-b038-481e-be90-43c59858218d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bbbae5-14df-412b-9651-8833b6019918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59b6be9-aa0e-4a1a-819e-58030e3cb484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e1e5a-95f5-4160-9324-930f284fad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7092a117-067f-4c14-8bbb-7ae8b6e60051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427f0ac7-dfbb-4022-96fd-6bf427465aa8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dfdff2-4084-4fef-927d-36987ad9d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6851bb-dfa4-4ce9-871d-147499e06078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c84771-d6c6-42f7-b097-e1f59b753747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d700f882-a8cd-42a8-b769-f714d703b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b898fb-7015-410e-9ed8-a818b2ab3af0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9431832-61e8-46f4-b00e-5ee04a6cf095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24723b32-de11-4132-a420-285ab7389175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f964f2a7-2f68-4719-9cff-8186361cb565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e698e46-f263-443a-9b16-acc573463595"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20b51e08-50f0-430e-a9fa-f7d9ffa16073",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0731fd3-9792-445a-8d3a-38778c0b5fe4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe0ecd5-db6e-432e-92a9-9770764485ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29028b2c-ba37-4c25-b809-9e944791a49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16447170-8569-4c63-a1e1-311340975e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "004d1f6a-59aa-4141-8495-97468a34a7c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d90e4124-3985-4841-b27e-7ecb339ff78d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d1cffc-6630-4acd-8341-d209776ab988"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f71e5a4-790c-432b-a7aa-369787475e39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6039598-258f-477a-bb71-9d635bfa67ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a43120c8-5eef-4476-9769-aa1c215cda19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e29e456f-17ff-4dd3-9b11-981137035931"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b5d24a4-b181-477e-a332-b488ccbdf416",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6535448-a85a-4ac1-8a22-d7e59e236938"
            }
          }
        ]
      },
      {
        "id": "d70586bd-cdd6-4b78-b4bc-391ccd52d202",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f74ddc43-80ad-4c7d-8425-f9d94bcb053b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31ed8872-7957-4537-b1ba-53512adef650",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fa62bb9-df55-4d25-9337-defef83a015c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9aecf-4d94-4aa0-adce-80c29d4e51ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e459d9e-81b6-4a42-b5aa-17a028226402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf67a52-d219-4790-85ad-dfe82498b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "87efa92d-d419-4fd0-b308-570be2104366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cbd1b1-cdde-46a1-a0b5-bec5e0ae2e2d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d008db-995e-49a6-8e73-26c5d7560d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9675c39c-9469-4987-9a41-76ffcbd47067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1517e09c-bad3-4544-85c3-bcd6e29770f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eef469-fb2d-426d-8400-3a1d94f2b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1ad256-46db-4d7e-8938-43d7ccf2da84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d185bd-9994-433a-8a3d-d7dfacadabea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980c8216-d0be-4f5f-8559-e35881936326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b1c58-5f78-49ad-aece-578976d8ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efed8497-596d-4f44-b1fe-3e266ec475f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d2adb2-ca1c-4f83-aba3-8bc541ee69a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa43726a-256c-416a-821d-43c3a1fb802e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676aca4c-b1c6-451a-b0d6-aa5bba0e4690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaf0c47-8b26-4bbb-81fc-fbbe62075d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2381f64e-c76d-4b1d-8044-3b12050ffa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c9a2d8-de33-4ee4-9b55-eac0f140b0cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0decc466-547b-494b-919e-5f53a1a60ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf06b54a-dfba-4aab-b324-68fac7aea2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a96bcf-dc16-4cd1-9805-73c3869d9df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7edfbff3-9484-4d99-b1c2-73f663c8cb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90d2888-2f39-4a44-a77d-e4b59e023469",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a09b2c-1bea-4e74-b1d4-cc41c25d74f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241bcabf-3085-41d2-9cef-dd9341b1520e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40fe94e-30ce-45ac-9837-751f0b453f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7933190b-80e9-4188-878f-95c422fed465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1a872b-6c65-47d7-8976-1bbaa1f552e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c818e756-d5b2-4ae8-b152-ef630243718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a5b295-3ee1-4503-b566-4342a6f914aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcde4c-ea6d-4ada-9166-9e41fd66e8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8955eefb-b403-479f-80c2-4efbf020ed20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de41f12-f340-4220-86b1-0e52fea1cd70",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c70eaa-0e25-464b-a606-85948ea1e9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b0a33d-cec7-4d99-bbf8-6657f343bc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57544417-324d-41ac-999d-fa2f9e40f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1581f1-4877-4dd6-ba4a-56124d8d10f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb5527f-96a5-4ae0-9778-957d79321324",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e4d8c5-b9f3-4257-ae27-a80375db337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0a68ce-0d04-44ec-8cec-72d529eb7d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f637be4b-14a9-42d8-921f-88f86a13c03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e292ffb5-214d-48f4-ab6b-461023623314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6397a8d9-687f-4eef-8bbf-710e12e04c41",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0e65b6-be87-4ed0-94c2-cca42194f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf77b8-470f-4b85-8f49-4a3488f55749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0ef001-088c-4ed9-abd5-a849e70a273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b29a2d-cff0-42b9-9b29-77f21104f8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d68cb8-c8e0-4508-92dc-18e39724a83c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97682a21-8533-408c-8d37-44165ec33b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7acfde1-f44a-410c-9471-58dc41ef684d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cc36ab-4984-40b7-9ae7-121045583efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65dbb06e-6a0c-4188-91bf-1e19d6215d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7d52e-b5de-440a-a51a-6c9713d61e34",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e939dcb-0704-4602-ad0a-c8de81aca9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a202f1af-8db0-4bb2-8890-731fb0f78aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd75d8-58bf-465f-81f8-eb96e0b27988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c47e5e-3e36-4a3b-9bb4-81fad54e99bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb0a8cd-30cc-41c5-bbaf-8e176bf93f80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b4c035-437c-4f21-bf54-64b5aebb258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099ad808-7c41-48ae-87a6-39a94c98c41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d87d18-f03b-40a1-acce-c1abf3cf7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb422b44-0be7-4436-b7d6-135afe31d6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63a5619-0ec1-4dcb-8e42-4c5b12652395",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a666ec8-089e-41b7-b04c-c5f3f946c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf6a8d9-5937-4c51-a3ba-79be0ffa6486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fde750-5141-492c-9a0b-61f5c9ffac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2c364a-18c6-4e8e-8c30-62d19528f910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe959487-57ee-4ec8-b2a7-7dfab5a8d053",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e98fe-452a-4e2e-8a5f-1d39e561f658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbae4fd8-0cbf-450c-8f6e-30c5efe5d08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6dd3c7-67ba-4923-ada5-e68322a3c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d84ed7-dec1-4253-9f5e-e5b826879cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652bbc2e-50ba-418b-81c9-3e8d3d1142cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26801e8b-70d4-43fc-8ad5-541ebfdc5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e9a48f-e393-45da-80a4-1c1cad9a993d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a7dd4-a178-488f-bc92-91aef4a974e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23848cbc-f306-40bb-8f90-7556ca69705a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f71c8c-9359-4689-bfd4-371bbd619699",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a400a051-c754-4d5e-b061-0551a47e684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4b73d6-d32b-402b-b71d-d1b82a998302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51777474-c7a8-4ae6-8acf-3bdf1ad06c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "609da28c-0186-40e6-9a5b-c03a558acbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8569f54-c37a-4e72-8a1c-1906045fd7d2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4e0a9-c606-47ce-9230-499a75847ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a48cee1-789b-4320-a3c0-ac716e8965f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff4bc19-b441-423a-9db8-2718595b8de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7da180a-6af9-4c0c-b0c7-25e9950ccb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d6b399-3cb6-4926-b812-e31234bb0ba2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8b8a8b-9dbf-4957-888b-ea05bf3569cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87508e58-a8af-4a9e-a19e-d0134b91745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60db7ed2-f800-487f-b9eb-1e0ff41cee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07aa0081-0c14-440f-9b39-e2917f2baa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f468de51-1917-4707-81c9-be45a455c324",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba21a52-aec0-4541-9d8e-eaf030498a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5a93a6-1a31-4008-96c3-7fcc4f3b47b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fbd21c-f5fd-420e-ae60-190b1abb996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5caa03-45ce-43a1-9fbf-3bbe7de544dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a90ef1b-5681-4491-8a46-03c0a3c66a07",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9262c4b0-9879-4d5d-89e0-ff53ee443615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c201d71-aea0-4506-a1df-c4ce7e8918b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67854af5-ae72-4a4a-975b-d3b79fa7c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7359e9ae-e2c3-409d-80b4-12d8611ee3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434aa30e-9ee2-4223-a9f7-0ee192897cc7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f4c9c2-5b76-4192-b36a-4fdc6c3b8404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb73080-aba6-473f-9ecf-5227e21b5ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a742c7-e981-4f9c-b558-2460e74585cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79465ac2-fc16-4cbd-a585-26dc2a0f8db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cc3bfe-9ba4-4526-9d20-b035a26245e2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334240be-fa60-42e6-b6d1-4d9aa74ebdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434a7c52-e0f0-4294-a395-2caeaf8c5db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40656454-3836-4903-99d4-8994efb134a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27d6519-0603-4134-807e-59c0ab0d909d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b3a14-f43d-47b6-90ce-89b0c382988a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301461bb-35d8-4af6-9ea4-eb690140c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd9f569-91f4-4f8e-aac1-f49a9157f020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a2b01c-7e03-441c-a5bc-1cbeaf66d701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb7679-87b6-4495-a8d6-2d8a4cf93480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4c30d2-8ccb-4d8d-91d8-741f4607ac4c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e213b9-c51d-42d2-982f-42349286e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677b4fb7-7611-42df-9644-34d0e7168565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84439d23-baf1-4054-ba03-4b5f95f0af02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436cb5c9-46c9-46a3-9d5a-e0b354ee6c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7885c76-beed-4b75-a274-1c0f5260e5e7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a563c-246d-443e-b089-8429aefbc66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4180a515-8c02-4d65-ae50-6ad09ea39a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7aee50-3f35-404c-9530-4d60b7fb7b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4459ad3d-f73a-4a34-8f88-6af3f9353ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee0b238-3662-489a-b684-b2e7b444e1cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9728b5-0cba-40c9-8460-d9c316c0eca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242270b7-51b0-47ce-852a-17ab71241800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa788f49-a397-4d3e-ae48-33c7a505bf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e49868-9d73-4d67-baac-51c7e8ecbd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97579b-baa8-454e-b90a-b18c4b201638",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f0f14d-6800-4fcf-bfad-10b8d9e65730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda89db4-e69e-4ee3-b76c-a896d7cac30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef9d59-e327-4849-9d4c-d8bbaa0578ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5378aafc-a139-4dd7-8fc9-190f778762c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2823c4-04c6-47fb-8129-65e174791bb3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c5e486-b7b8-4a2a-8175-f819778088f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9cacf8-13ba-4d91-8f7a-4bafd5e2c0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ef1719-46b5-493f-8981-cebe8866c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4a1ee5-f647-4ee3-8ee8-c98655885a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4607f744-6252-44ee-bef7-59f17f4e2732",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17fdf69-6021-4164-8ef3-129a35a47df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b81fc2-300b-470e-b7f0-040cfb593f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07bb2dc-dc20-4cbd-ac91-cf11c51cc7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df226ef-2177-442f-865a-d972eb2dbeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9300ef9c-48a3-48a4-b4d9-99f00a6d2ddf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc799ab0-5f76-454c-af0e-0e7cb3edf6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb8c3f5-a3d8-4dd7-ad97-da5e66145548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb161ac-90a3-43a6-b01f-f99a91041c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae88743a-7c4f-478b-8df2-e2b8b9e90dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eab18c-d44d-4eb2-84db-bfbe30223c00",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cdabb0-1c39-44a8-8bcc-8c02a6a2b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f471da-89fc-4158-bc83-1a0932263a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7cc5c9-00de-4ed0-8d8d-dd5cad26687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dafb7d-77b7-4ff1-bbf8-ab53484f673a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f743b249-a318-4d48-a4dd-0d4e58f97fb7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da4de42-48cc-4270-a104-8e27a1f576d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753d8761-3f10-4cca-830a-e1e25fdd2189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950710e1-e8c3-432d-a452-eec5c38edfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6467696-ce3c-4b71-84a3-4616db8499a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152947aa-a0d6-428d-91d0-28779839e63e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0792e102-fbbb-44a3-b70d-9e66c36b5429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded76f7a-f658-44d2-88ca-9aaa05104d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f553b81-92e6-4a86-99d4-16278655f93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80433c18-6d9b-42a1-9a1b-fd545f3651ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1e6058-e722-4b92-b1a5-8915493c38f6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b1108-716e-499b-95a5-b45c587684eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ad94b4-dcbb-45ea-ad7c-e79f865eed41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf6cd70-b732-4928-8f22-9bfb564ae002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "636b47f2-3b39-41a3-ae9b-7f221048bc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d79787-5bff-4ba6-ab5c-1f38a394e0d0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309d6302-06c4-43fc-a077-25d250bf17ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebef582-20bd-4e4f-8c19-05d8733b61f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f7a0d2-712f-4726-aba8-a575020abd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3d5c7b-7336-44ce-ab5b-4f405711d20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0baab32-ee4e-4d21-b96a-c3bfc62854f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965ff534-4232-49f0-996d-d7c251e1e15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1125a156-5675-4407-b482-69b37637ac4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8140b6c1-d9de-4336-b199-4c7999298c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115c816d-c126-4ccf-b261-51b3bd3d63f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9fb15a0-f94f-49cd-9e17-e875480dd2f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94d9b3bd-d435-48e7-8066-615506756ef9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761f829a-3cd6-4654-b870-428d79a58eb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e886b117-36ef-485c-b67f-a3eb8e595a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b441e6e-d553-47d9-bc8e-56faa8493133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86ac7928-80b6-4ff1-a709-9db0bacdbe45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b41cfa4-a6e8-4fb2-b1d5-5fa56165c4a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a01980c7-d4cf-47fa-968e-95366b486f50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb17d327-663b-4abc-a28d-04b0c33d3b71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3dfe396-b315-4633-bee9-a5ec318623b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fff4d6a2-a2ec-4299-ae08-fd68c5f3498d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97ae1b43-5ccc-42e0-853e-d712ef6e19a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "282c6f59-067f-4645-b7ff-a662dd7c20f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "369d9281-9401-434e-ab03-46b6e8c5872b"
            }
          }
        ]
      },
      {
        "id": "6192d41f-2175-447e-b6f0-60096dfa67aa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fb8e2c1d-de92-4684-a17d-7f2ff8e7f741",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ebbffa3-c664-4064-bd02-52494ef5119d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3dc57cb2-3791-4a3d-97dc-3a048992f776",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b79c683-7c01-4443-a0fb-efc1164c1e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf81f34-009e-4575-958e-35fb26b7c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd9ad9-d42d-498d-92d3-83887e7e22d8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabc1d01-b44f-40da-8816-105d6c044e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76509c50-a68a-49ce-b5bf-8540616578f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9163572-84c6-4524-9a4e-5e89fd6991bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24031d72-1ecf-4c09-a4e5-eb954826769f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa792366-6724-46ff-b0da-be40dd428731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3b6f68-f5aa-475c-abe3-32d81e98f759",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795cff1b-1e20-46b0-bdac-fd1f0bc459ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bef67c-d67e-4478-a052-e5b06b4194d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39628801-52d9-4fcc-a6b2-f6469ee6064d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d25f54-e835-4466-8fdc-3e77e8127001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e199d287-366f-4fc7-9a79-d9c4b559f2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c1d976-0021-414b-8f3f-1eb1b48a816c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b33e2f2-2b9b-4df3-8b6c-676d2b16223f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358a253b-2954-4cf0-9d27-51391a076a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8da5da-e53f-45e2-acac-81c7f474df30",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dec8e5-21d1-4ef0-bc36-555d108abce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c211ada-879c-4600-8fb4-c3ea523dbe76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58c3701-c7a7-4927-a373-154f16d2baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab801720-68e4-4dd7-9079-f4779814c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7134694-7413-42cb-8a5c-81f3c6c6db9e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c91d1a1-e6e2-44b1-a8ef-2902a1004431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2967241f-6965-4a4f-bae5-3efee10c4e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7c85f-1106-47d9-b31c-cb3a3afdcea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddacee0c-5af1-4ca8-9f45-4bc3f6fbfc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca66450-0db4-41eb-a719-62c921c5bcf6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1d9bcd-849c-47e4-8bd4-cd518761e123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e71e161-b950-4c07-85c0-7725b3c6fc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5605334-e643-4bf4-93e7-a068751b47ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55912ee9-7d07-424e-81d9-ccce6cbce48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c816c257-9e3f-458d-a0e2-bf9cf962f1cd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0935ce86-689a-4b7d-9545-a86959af5779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d44dd8c-c793-494d-a622-a325dc3cdf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b32a9eb-83ec-413d-8034-86fcfc1ac2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765c566b-5125-486f-a34c-3a484cb6643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a5614-b1b0-45b2-a6c1-c3f29d63e4cf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7f99d6-b370-4dee-90d2-3d29d6210d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff12fe35-a066-4dcf-9c4a-0f0bfce46aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7ed63c-320e-4666-a337-55e4c28cdc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361f8c8a-c017-4617-ade2-d61d556b6be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4d2897-006d-436b-8038-ccda880e3374",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea1d2f5-9bfd-4f6f-b2ab-b58e6e124e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d0f192-e69e-4c20-8abd-bcce8df225b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfefc572-e4b9-4efe-9957-0ae67087dd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47460145-1169-45db-8823-b33d29ea5e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7de8e-9c54-4d32-a4e6-a68f07d9b515",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7da9c3-76f8-4570-addd-15bc95fb73c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22a1224-0cef-41ec-bf8b-82a32b8ba3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25667a4f-02f8-457e-b685-6d2808f62ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e60456-2108-4a4e-be14-7831ffe318e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db232581-1bc2-4b63-b702-5da8dda97ff2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6218ec7-072a-40e3-8016-d28612eaf284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a1f840-a468-48c7-91b7-8886873f735c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b78370-d51b-49e3-b851-637db3bd921c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb54f909-f836-41d6-a0a3-cf41001edc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a37cf98-c322-403a-b7d9-cc335f2eb057",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ca6d15-7db6-4b8e-a124-951b534f2842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b246658-44a0-45e6-abea-344472ea6890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef2ef32-6db9-44c3-8e6c-6d404f80e250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af876f4c-60df-4519-a8c4-2dc9271e5e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfec1f6-1572-4293-86f8-ada71e81ca64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15b9442-3366-448a-b75e-4067869c8156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0bd046-8c9e-43aa-982c-0330b100077d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8e4232-7ba9-4fa4-b2f6-3e461a6402bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2415a519-94ec-4673-915b-21921cc204cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32687fe-91c1-4096-9602-f7e645186b34",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39cf594-8913-436d-96df-eb81d8bd807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c55ecd5-c693-408c-9172-cf83e949c79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed44465e-c673-4b5b-96c6-6c95675e0e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041d84ad-a4c1-40f9-ac21-2ee3fa38c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbf0b5a-bb89-4caf-bba5-b32ec690dd6a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb9806-d688-4131-851b-2fc9eab28337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2900ee9-b217-446d-86ec-a15861f2b0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce25012-6577-4803-9fa5-d3e86d7a7700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ef8c44-6dda-4579-8c67-476b594dd479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5527ece9-8255-42e5-8b2f-653a498a9dfe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcec4b1c-31db-4161-afd2-3f99bd16f756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379223f2-f8fa-4314-9393-2a79dc11c355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ebfad9-6475-4247-8814-8969e2afc9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8be5ddc-cbb7-4843-bab3-c036dcb853bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df1ffdc-7642-49fa-a4ae-e4a6535baf32",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fe274f-f93a-4cf3-8ab1-5f1232af9777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbcb4ad-6025-47e2-b784-724a04cf8403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4384e-988a-414c-b23b-0a1a33a3bb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7f5f17-3a06-475f-9f6b-5155522800dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0c484a-3a2b-4e9a-93b2-7e4aacadf94a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a6731a-6a74-489e-91c8-f628265d9708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed9957-d15d-479a-9da5-af2305517867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c461513e-9179-45ff-8709-a4f5469cf6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba685d5e-a643-4f70-92e8-73b01d92383e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b9750e-eb6f-41be-9f62-0857e7346a26",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd73ef9d-8372-46b2-8767-41af2b3f859b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef31ade-8160-4d2d-81c9-57b10a0758e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a212b-89fb-4bb7-a3f2-29840bb39c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0cb1c2-8867-4bda-ab5b-aa72c7c59aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98cef7e-ee72-43a3-8459-946056a9e926",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b44336-26ad-47d8-aee3-c7d51e080c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d981fef-4c02-4bd1-aedc-24a386025e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4645a2-c9ed-48e2-82a6-56a7564d89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383179b1-96fc-44be-83c6-de4ba365fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a99d193-66b9-46bc-b077-36ce3d438014",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cb06fd-ce8d-4d98-a285-d1f765c5a341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414e7849-d87a-41b9-81c3-82bb0d84a2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dc5ceb-0ed4-48bf-883e-60a8cf183639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e2a6e1-a88e-4688-aae4-67884058be21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0b45f9-aae5-4b7a-99e1-2e8eaaceb4e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e4c35b-e284-4e35-8b35-ceb98919227d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1dd4ed-ce34-41fe-bebf-99fe15086209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8868374-e649-4182-8bda-63787941d7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f659bd8c-52f0-49d7-843a-086b1f13dfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda59c59-cf15-493a-9646-1cf61d37c15b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5213c34-5fe4-49a2-b2c4-f97f801f55d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8956ee-1eff-46ea-a446-c70155966cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87ce92e-5bae-4cf1-9caf-2419a448ffe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d547365c-d427-4e3e-87d1-f60e0609fd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131469ab-6570-4b97-8a7a-117e58c277a1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9d7390-2735-4917-b114-8d7a43403505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfafd168-9048-40f4-ba61-a368b48f960f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2727269-da76-4ed1-8ee8-90921a19328d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095dd1b7-0116-41a9-8cde-4f81241a1fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5843a079-4928-4f80-b336-0fbef76dfa5c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dace250-3e40-4e60-93f3-4981d8210219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d30b3f2-0e08-4a9c-a18c-fd40055f430f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f474ec-8fb2-4773-b722-45b759f2089d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6140197e-cbce-4c9b-a64b-e610cfd91e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd847fa8-d4d0-4f71-b7e7-623b1f352ae0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ef093f-23d8-4b72-9249-06f059345f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3895e5b-5af1-4dd8-b536-90d57a60460e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe4d23-168e-4ab8-8a77-641c9c060099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f410b4-b64b-417a-87f1-91a66514adb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d32e20-38e5-440e-b9eb-76c8d6773a89",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f7af26-6380-4710-b44f-50856fac6e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babc3e7e-65d7-4ff5-8919-f7cf9f491da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900f529c-1fb6-4cb7-a021-24977b01b7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673a4a4b-a8fa-49b6-a9ec-c763cc930d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec32889-364a-414f-8c8d-1145040730e3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95098bf-0ce5-488d-9128-9aae854db33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23498788-c085-4eca-92f1-9dbfeee6c9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce77c036-77c6-4faf-a66d-633ba6573ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7affa34-7401-41e3-b945-b50c6d5ebd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05dc4da-181a-4ad2-b36c-a464edcdad51",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf96f4a-29f6-4cc3-97cc-2bda29ba9bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadf286e-97de-4ef1-9800-cb3d1c18e16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a1bf42-b154-4662-a1b6-41aaa43abd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c60a8c-8cf1-418f-8a76-3945317fbfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24752b14-5ffc-41ea-a68a-65078ea205b2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0d8e60-05de-4d80-ab99-7deec94ff505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288b4777-1419-4355-8e2d-bd030033c1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca5bbc-5379-4c34-b6b4-f576dec645f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e2f58-a68f-4893-a63e-e64c72995cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfde17e5-dac4-467e-9149-73cd2b4ccac2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a6558b-d738-46b3-b996-bec4cf1ecc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1237e5d-633e-429e-8c87-ee86ce7af1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdd2dbf-1789-4ed7-854e-f72cf8a191d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf773506-5bf5-426d-8693-445fa9e6ee18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7504d25-f73e-48c2-a193-cfc722b4a1a8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe450c3b-e298-42c0-a39f-3c80cf17e834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721dd735-905b-4062-9fc2-a02f416fe199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa0e24-29a9-42d0-afd0-e4592054563c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcdd97e-8ba3-4d2d-b255-49540a70f538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba84909d-2dcd-4839-915c-39ccbfee3d54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3654c6f1-85e8-4d35-9251-4b35333e3c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfaf984-14db-42a1-ae2f-8547b9818f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ca9833-011f-44e6-a435-46fa370e4ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00665644-3a90-461b-9b0d-79e73d34505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a7ac79-5722-41f4-812d-9701dce4861b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f889c2c-adc1-44f7-ac50-069c26ffcdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12dab55-f669-4d46-ac0a-a7d7a190940c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bc91aa-26d6-4c28-902a-4e54903bfd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbb1370-4cca-44db-96a4-6b902093fcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acb7a6b-fbdd-47d9-8fa7-6e4f4b4c4035",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b705ee5e-7f61-4a21-abe2-e8cee897d3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d12c80-12e7-42c6-aa2d-a3e3fa628a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a85c680-3b36-4e4a-88c3-7120e81031b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d638ea-5b12-4197-8590-845b4b0f7f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d882aca-cebb-40ce-96c8-0dd68bb86d1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be39eed-7572-4bba-b575-4474ab3d31cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e14675d-1ce4-41c7-b098-aa28ae4d5fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a644e0bc-a9fe-4b88-b57b-90b167669038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd41bf0d-4347-4dfd-8cfd-96a7f11410a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3650b82-ab38-4b15-9cab-9e39efcb585c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1824cc71-4068-4caf-9d2c-2efe041c4596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff401b9a-9a24-4b0f-bba7-52bfc587e103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f36dbc-e182-40c5-8b2c-eab608d32ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef29db3-6d06-4b22-b27d-e3a7bbcdbaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b3647-7ca2-4874-8cf5-cd8901368b80",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ac6562-c71b-4786-931e-f09c3e6b7aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567bbfac-5d95-4352-9451-fdfefd86146e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2d20ef-ad20-44de-8af5-c62ad0cdbaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47935b6-fc41-4605-bb09-e75ac095c2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886268e5-26e7-4d06-9d08-63edd2c10ad1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6efd1d-28e4-4e5f-a234-da82bd2de8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9634fc-0616-4709-94c6-d74fb8045c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c27cef9-21c8-4c47-9b05-53a8b57bbcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3efde0-b149-4616-818d-643b4cf82afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d43ff9-53d3-4ba8-893f-9d88765accb2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bba6fa-7a63-4366-8de7-726fc89cc412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b7246b-a683-4b8c-8d7c-736f05e3c13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764f158f-ca6b-478a-a52c-485e0f86e7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab5eb49-4bdb-4ba8-8c38-a3f014f0563c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31929b6c-e315-416e-9d3a-e0786b4d7764",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebe3738-b047-445e-bf2e-c73ce3b3a579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59231de6-f54f-40e7-8836-62f3eed75e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2162e6bb-a815-476a-8fb4-2c79ab11e89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caa6efa-50a2-4e95-bfa3-0d186a64e9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c3847a-96c8-4098-9461-8fddf129667d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f304b-9736-4d7a-9a7e-f3a6a1e0d8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e81d8a-c1df-4193-842d-0bba5cd7c214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98adb234-bac9-4a55-b377-c46f61ebb0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbe9583-1f86-4a4f-adaf-e536954bf15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef107c7e-b1f6-4f77-9a2f-fddadf630166",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceb4f43-4313-47f6-a472-5beef3b9d71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f00d1a-fbd7-42ea-8beb-3d06a08b596a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5057985c-812d-4532-8e2c-1018d3b2de98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdd0e78-9228-43eb-ab3c-77e1d3ba48c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4362fb52-dc44-48c1-bdf4-56b56f12e6a4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5392cd13-7073-467c-92e4-55e4026c334f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74be34a6-a3e3-466c-9ef6-5a9e5d7fbed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b090cb-4159-4617-b95b-13eac7cb2834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7388f1-2499-4932-a7d5-1cecf2906117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee5779-21c9-483d-87d7-779491752997",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa45837-324e-44d6-b41f-b2a91f09e239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158825a6-b9b5-4a44-b0f2-313b688d9b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b31e340-19cc-4d83-92fa-b49f7e7e909a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceebd7a-33d3-48fd-9401-57dbaa1fd16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff7705c-9153-4ac6-9bba-6f149def83f8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7b43f-3870-409d-a341-29bb3555d684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749af74f-0558-4997-8327-0201b319e090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e625c5-d3ab-4db0-b622-bc88f8f1b5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3258670-653b-4c63-9944-9a147001358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a13b32-de26-4853-a95c-a3e5675b0b3e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418ff4be-760d-422f-a967-3b44385ff664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d45647-80b0-47d1-9938-bd86e327807d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1309160c-bca3-450b-a9b6-e8428897064c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77fd7d8-3453-440b-a67b-c907c4b122cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5654bf-7086-461c-8d3e-60133dc76916",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c22d40-0afe-4f43-ad61-bc719ed5ca08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404a76a2-19a9-48f4-be74-105ddf54a232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7310f4-0dee-4221-9a2a-8e34d56b4cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3895e327-c662-4d98-8c94-8260f2b82ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5a987a-db86-4d34-a24f-ba806be36d98",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816463b5-d46e-4b3f-8664-6a4e1d9292b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9357e3-174e-4f54-888d-82f332d115fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fced2f68-31da-4227-8e58-050ddad9190a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb820de-5547-4ed1-ae88-700f5e28cf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e645ee64-bf36-42ef-8f22-a692ddf0d589",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e03ed5-0078-4c93-bcc1-e67821b50c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e8d66b-0caa-45da-9311-188fbb9c1e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa894e2-bdfa-4855-8ee5-16578f36ed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453bbf0e-6c56-447d-aaa4-7c30d13055fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf0b5d-4a08-4a36-bdda-d106903a6c39",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef55c8ab-6c0c-4c22-96a8-3fc532cb233a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ca7f97-8632-4402-88de-d54730545892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd2e054-8d4a-4bb6-a7a7-75940c615238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d58cf8-fdd2-41fd-aba3-13aae8298030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8299db72-0762-4c69-9837-b29eeaac273b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249af94f-a79d-441a-bc8d-5f84a7af2c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7253bb2-1171-4ef4-943c-4e199a8fa308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c1cdd0-97a2-4359-800e-c9f736d41d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c654a53f-2bea-4413-8f02-a4eb4d04a769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da56e4f-ef62-4602-9b0d-b639ecf97777",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeedb0a-0d9f-4444-a59c-5e30c4978aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617d883e-d3fc-4026-a74b-d5c1ce702833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d4c2ec-ceea-45bd-a483-0e22b260d34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086c2906-e4dd-4ef1-a69f-8f91d9686257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4384350c-d7ff-4800-b0be-9fba055db7e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a393c8-86fc-439d-bb85-2aeec4ad43c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a8a308-6e27-476a-89a3-a8cca0c16d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7fcfbd-bd7e-46e8-bd45-2941260f4d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af70c8ee-b98a-4d85-b750-e7686e4aff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4078464f-10d9-4c4e-9835-3075217b4d10",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3be20cf-01f8-484b-a4a2-ed5aaa9dbb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de01509-2b14-4ea1-8688-d76e3010f691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d482850-1acc-4a84-abea-4df621601202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99588e7-f64d-4a97-bbfd-79f862ca4351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe3b68-c6d5-49e2-ad45-af2d8090468c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7140d73e-5d3d-499f-879c-c55f032aafa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d51bf2a-233a-4d97-ba15-0d53b6546932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab3ae04-e423-4909-acf8-624ae43bca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79233f1b-cc81-4a93-9e9b-46dc08b04c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba5f74d-0f89-4fd9-833e-c78d43ca09ad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe299637-d51c-49e3-9500-fc7b9cf01f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93308b8c-2013-466a-ad94-08dac75582f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16529696-65e0-48be-8e20-96c9190fd5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46e9111-0a28-428a-aefc-3815c47b17c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b235b6ae-ffb3-4c42-8f6e-7d1e23c0f209",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffe7eca-6bc2-429f-9b2d-546a335b3c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8082af-8693-4420-ae50-6aa6e596ec46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e418c0-42e4-43af-8f6f-3a56847f39e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4847310d-9528-4ca9-862c-5c0a0ec3a9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6b57ea-7656-4703-904b-7ba11f763911",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f42278-11c5-4ceb-b033-6f0fd337e0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f59936-eace-4434-8903-246d9b1fd201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33d88d0-f066-4ed5-80ec-3bdfcf5e969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a13e865-731e-4aa0-b482-f8fc8b4677b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7995c364-2b1f-432e-b3c5-23b2bdf1f5b7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee7b2a4-b075-4a0d-a26b-b7c2b8975d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f4e98-c563-4050-97cf-0ef568aa9c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a8e54-5bd5-42c1-9582-d7cc35399c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923e76df-bafd-456a-bec0-374e9dd866ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e562be5b-cd30-412a-801d-70d16209226a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2dfa23-698d-46f9-88cc-91a8421cc89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f10e81d-4326-44c6-8211-0500770fcfa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a676083c-441a-4334-8591-0d3a7a17c50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b810eade-72be-4f85-b875-6b54b35c643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa83ea9-df06-4bbb-af0e-030801290276",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20e9158-4fc5-42f0-a441-7a8e74960c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a9417a-855b-4f57-9e2c-5dd1a9757ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331224a-5cc0-446a-8705-ca4b7525ce1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591ade81-ca11-4a7b-a724-9b4b2cc1bc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2c9924-1544-4147-9c94-f0da513137b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad2fab-96fd-4a3d-88fe-3b48e876d064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8562c6-5565-4f7a-a88a-93f804d1dff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21030b26-5230-4931-beb3-0c39b5461aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc07b80-b454-4b9b-996c-d2e0eea6beed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca0d7e0-89b8-4aa3-a16b-b3591b75c236",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bec2380-b25c-470b-af46-ddd8dd42a913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf58f69-8019-4002-abff-85f57798f6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057924c2-7032-4119-a0bf-0435a8941a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aaf67d-f510-40de-bf84-88059051dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0b51e9-ff23-444c-87c2-1c788a6951b5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dda0a7-c9c9-4efe-847c-473cdac1af76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4f1c2f-3a8d-4202-afb6-cad248ceb0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ee054-a857-49c7-982b-6272dd5ad9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783fbfc4-4c4b-4e83-b2b0-479a21c3df12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf7cde6-3435-4c77-affd-87d35aacb1f7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88811f6b-e018-4cc8-af0f-04bf350dcac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d00690-9a79-43a8-a8a2-f6dd3412d0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f248101c-cf36-49f9-86d2-6421b8e8bce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42baecf-52d2-412c-a0b1-caf597796058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d371f5-aba3-4533-b200-21a701add41e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7085fdc8-eb30-4a76-b232-737fc6195ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b52426-6d40-4f9a-bb0e-cdc8b5365d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b76fac-561d-4ab8-9309-7bef213a5099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bea80e-a603-4273-8494-28a457a55fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c678ae3a-3b9d-4a56-86e1-38d90137852a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd9720e-4bcc-4041-91ca-a2c0d6593e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3ecb33-c26b-4ba8-bf31-8d981d11d931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fea8e8-00f1-446c-bd6e-4023f5dd2282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20289531-80eb-47ad-8faa-25f7601989d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a13141-f5fc-48fc-910f-86f45d14e724",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780bc55b-c263-493a-8416-fd33470ce267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8971ced2-307e-4ca0-bfe8-10311fdbf0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c93d00-2e20-42ff-a30b-a3301c40e75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038c326f-1ad1-4484-a164-8494d0e0a10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e717793-9572-4eec-9507-d8ba3a74ec3b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544c8d26-a424-4904-9be5-078911d993b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fa4915-7727-450f-8a42-0de21df0114e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8826b-de6d-4ed6-874d-ea2386cfc820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9c1af3-3f9a-41ac-90cc-238cbc611daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde92b77-bcbf-47bc-931f-971d48915364",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322ac1c-5e09-41c1-afe6-ba662cd0ae66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c962e978-b81c-4375-9228-e17325edbeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26e6ea-17ff-4cbf-a01c-a6b0a1bfc2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8292ea9f-307b-4d0d-9066-33ab058dd11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3b5884-8dcf-4a91-b33e-b1845199e9a9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbd9c0e-13c2-4d28-bb7b-3b9686a8d045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0744f75b-2f49-429f-b627-ecbbd8649733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563df3ef-ee6d-45a5-91a2-5f0364cda0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61643b0f-2855-49e5-911e-431f7a3a928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b065b24-08e4-439e-b19a-adab0572632d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8159fe-90d9-494a-8a3a-b230a8044409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477949c4-45d4-41c1-bfca-55a69209ecc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105a2065-5d8b-4954-94a6-55c71bbbca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b6b46c-711e-4a62-a170-4e4cb2ee6eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cd224b-39b9-484d-a23b-e98469737a75",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7734e83d-d2be-4270-b240-eba9c9778570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838957d7-791c-4c46-80c0-2e048e0f56b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5628f7-e470-4663-830c-a020d7dff481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b8da5-1cdd-47c4-a891-63d17873c137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadc49f6-ff2b-47a9-98fc-129e448005e5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce392d11-6238-4e80-bbd0-50660edcf11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830e85e9-fda5-44a7-b130-be993f916e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac14d6d-039d-4f5c-91f9-58a9fd86ab45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c213e2-3e3d-4a31-8fd6-d436d14616fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8845e41-5547-4b2b-88cc-77dcc1b92dc4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a03c91-8dea-4596-b73d-fbfd840682ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c8a86e-1798-4333-b54d-81305d114091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac539f9-c0de-4d9a-a34e-5d5e7de3be85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd539d05-0a02-491a-be08-f66ee8fec511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402102a-6128-4ada-ae96-3d5ff3c4df98",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eba8ae7-55c5-4fd5-a9cf-5265278fdc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188d80a1-8791-4ce1-bc43-988c2ab93f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ea291-f47b-4d23-a39f-2e08a52b16ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74b64ce-feee-4dee-a450-445b05aa8f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8e1291-5b94-47a6-80a1-2529cc9f46b1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7121e8c9-daff-4e96-9adb-4b2cc218e8a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff4d79d-43c2-4983-aec6-f5fddb42243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056bfbf9-430b-4849-8e8f-0e98b49e5584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9f7e41-47f1-442f-9ea3-6db0565ded84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a282fef3-bf4d-4d1d-8fa5-b2fb59ce9dd9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee9e9df-99e7-440c-903b-f94e7af93295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43acc543-2fa6-4908-8a84-0fa448c3fb77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f2814e-7a56-4f2a-afa1-9623014d9b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db762112-c068-4455-9031-4481e58b083d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77982cb3-51ba-4eb8-acb4-2a4f74ae427d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d33efd-8e7d-4878-83f7-7b6626eb0adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efd4c56-0026-47fa-8351-5d3acf3345ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e792120-5cab-4f9b-bcd6-8c59a72703d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f66d7e7-9d2b-4520-b294-f0f1873c7445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d8c852-b1d7-451a-8834-a4390c57e6b3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8438dbe3-0896-4b99-a93b-211719b36571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a428469-5401-4a90-a19a-cfdad2e9358c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f888fb-4a3d-4bd6-ba8c-ac7602a52d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa018d3-375e-490a-918d-4f1779a98cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b447506f-e11c-4454-8aaf-9b50a1ba96d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c48622-86ea-4312-886f-41d3464e5f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59bdb2f9-d8d0-4511-bc92-118495799998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817341de-614c-476b-b4e1-d8501b1b006e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05d9da5-1d87-4160-bc4a-b8e524632b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794323c9-a07d-43ef-9b8e-4ff68e14d2e3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da15b52e-0097-42a7-8e4f-9d6d7fe2aac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35284a9c-e601-4c1e-89b3-26f5e98e7f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc38df-23ac-4ffb-afdf-0f7e9d97270c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064e6d3a-0bdb-4169-ade7-141013c728e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3e229-5e90-4129-b2a8-4a7ad2a493c2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a12d11-9566-44c6-9b21-3ad3cf7a2814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2341176-0486-405e-8960-1ba22eca45a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce399884-ebd0-44d7-a68a-a0f24c53bbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ceefac-f525-4de6-9f74-593cc41c1a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3f27f7-dec8-40a9-99eb-56ea494661a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbfbf86-10dd-4f2a-b2de-c5f45b94903a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20036bf-8519-4232-aa21-7d1488e56f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2bfbd-b423-4d16-b7ae-92cbd486da8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c20979-329b-4639-a04f-4d42d8f7e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8648e5-20ac-42ae-b2d6-6642d53f6807",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc01d5e3-6002-4b66-9e52-4846057340fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a6e6ef-0195-4ef2-80ea-7854dcd01b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4062a99f-ed76-4a6a-9c7e-66fddfd7eead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df415507-c664-4f60-b729-4343e782fbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00573176-784c-4c1d-8ce4-839bf12b7c0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9888a87a-f4de-48fc-ad83-c47906cd4d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2782c636-33ed-4ba4-aedf-97aa6f87a01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721dd0e5-a2e0-4f9e-93e1-b780400f29f4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be61877-bd64-4f52-b0ef-516222511d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2595eb99-bea1-4db9-8e8a-b9062fa7d0eb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144acee7-b575-44f8-9489-23b79dd6e546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6edd965f-8cf3-4bc8-a93f-c535d2db333d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a21940-2a33-4144-9fce-529297129543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea27e49-459f-4852-9beb-0f712f1002cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8aee6f-4cb2-4bfa-8542-bcff67dcde61",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c30f18-0bcc-449f-854f-c601342897bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1165377a-b9e7-46eb-935e-2474a6c5ad1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5506c-3b70-4ac9-95b5-9ebb347fe00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e404d49b-73e7-4b6c-a14a-25f0d1258b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54743c7-6ed1-46e1-9fff-9d4dd7a2a168",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b5f10a-b861-4b3c-b186-28cedad65d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddc65f8-4bbb-40fb-b9f1-8038d48bf764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604bc486-a013-4dab-bf57-c06e9fde02ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fdffd2-2ca8-45a6-8622-c06714c03904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59dbae3-bc58-4525-a125-f263095408f0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa80480-e14b-456f-8d5a-88a10aab3b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf28902-8f83-4def-a9aa-ad632c20bc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab20c92-86d4-4e2c-af0d-bf190138f3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c098f2ff-2491-4f14-b0de-41e4851d0999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb3066-0cf0-4d47-aa82-87d0e55b4ed7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a701c9a3-d1c7-4e6e-9b73-c471dcff7344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5518a28-e62e-4537-b6d8-fc150c97171e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17353408-d53c-40e6-8e39-7f3a1a1a197c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9650a7d3-b36c-4ac9-a4e0-6bbbf7602482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359f7bb-480f-4c0c-bf63-92d5ce7a1830",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e818c34-507c-4fff-8d4f-23649d51335b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d005cda9-ec4d-40d9-97c7-9400ba0b8ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e8a6f2-471c-4492-9987-25ca3c7eb576",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04582051-7cae-4f0b-a976-527861db165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62342b01-2c36-44d7-90b7-b41c0de7ac36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c03880-d9c3-4123-a040-760d8f47b720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa5bab9-5e3a-46a6-b1ef-c872df1cfd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af115a3-c138-4203-ae79-14fdcfc73305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf289c0-d5fd-4a63-b987-e0b5652a8b73"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "971e4d96-5d12-43b6-bfee-49f929e21f53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e30297c5-9184-44b0-acc2-3e7199bacfa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7f87e67-62d0-43ad-904a-fd3049871201",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88b558b3-d05a-4a5c-8154-6d2938991e62"
                    }
                  }
                ]
              },
              {
                "id": "4ed3a048-9980-44b0-86ad-77abeb593fd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb2d722f-14d4-4bd8-bddd-f79080b3a72a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75daeb29-f8c7-4be7-bdf0-8635c9cccf31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "159e4ef9-5a05-4f26-b6ce-1eb8530d09a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03707d83-70b2-4afb-9ca6-238ccd098280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0761dc8d-b1a6-41f1-9a06-93eadbc06a1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8a4a3d0-b6cf-4c2b-9286-2ba0874d7fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f48abd9d-9f6c-40fa-abec-3527cb96b065"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00379d06-2638-48bb-b866-a42daf68f4a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6cbea0e-dfb4-4701-a496-72fcd52af519"
                    }
                  }
                ]
              },
              {
                "id": "c8ec7c2f-4c7d-46d6-ba34-237c0f5111e1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f484a95-e909-4f9d-a8e2-707e618ae893",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b85246-a348-454e-972d-e7ee279fce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9d1c9e7-85b7-41ce-99f1-d4169850523c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac85de5-2ef8-41f5-8152-53e2a7d85d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd059116-79d5-4266-82be-817b26616faf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71ac2705-8441-4349-84e5-bb45be3d30a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87f0607a-68cb-4eee-97fd-6b54c0662f3b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81e14a39-0647-4b74-9cb6-df50aca1cb2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "be8d5871-3f4e-4380-b525-fa9699354d33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47439f0f-04c3-4af2-88cb-40b2bd9512ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8976641b-0e05-4971-a77a-995237379455"
                    }
                  }
                ]
              },
              {
                "id": "dc529aef-8607-4c09-ac4e-f08212a3a976",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77e8f29e-5817-4741-a362-49f68b08135f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86801b4d-e2c2-4edd-8819-31d3dc15dd62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1078e57-b129-4cc6-9ea8-31fd1d9d7ca3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87936fe5-be90-4644-ace1-b6bdb3584ecb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7d3f907-ae24-46a4-9885-cc89f21f3856",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f1ed7922-4032-4b57-a673-37542d8fd9c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37c6cbcb-1d74-4a48-8433-78963d16d4c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eff50059-c393-4f1b-bbd9-68dacbb3feca"
            }
          }
        ]
      },
      {
        "id": "45b309f7-44a8-421b-9711-3342193958b9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eef092b8-8ed9-4348-bd19-81d87fca2668",
            "name": "Negative Testing",
            "item": [
              {
                "id": "965ae566-f6ad-43e2-9b43-f81015a26179",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7c973ea-309d-4b5a-baa8-45c46fa33a64",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62f9c87-cd46-4d6c-96be-55cc38381d50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69bf1b17-b128-4b1e-9113-49af9d44ae3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77dcba7-7734-4bd1-8738-c9679d6af5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff6f03bf-98e5-4a4b-a4a1-b2f77a468045"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccc95648-912b-4e57-9ff4-2618a352ba87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ca6b29-abe9-4ed8-8e59-27c86ba2ef22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8001eed-862a-459a-8fbc-fa9a105be052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b3589c1-2703-4df8-be9f-ea873512c11f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "476ab165-51c6-4dc3-a31c-e5df44a25de5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "74fb9e5b-a1be-498f-a3bb-eb3789dd3240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fc1423c-213c-4a26-a2d6-7ebd60ec0983",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "381025dd-de1d-4681-9448-6b1065a18288"
            }
          }
        ]
      },
      {
        "id": "f6e768dd-44ec-4f7e-a01d-651479262d94",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92159f9c-b284-4b6b-b841-567b58a0e856",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b10a1868-f18f-466f-8a5f-7c3f0842301e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cc3c462-f263-4ccf-abb8-c0482be994e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08147dd6-7172-46c3-8dfd-8c2853fad0cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f47105c4-8b2f-4b73-a79d-198d1306534c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef558d02-ceb6-4f4d-af12-6f7e0b845339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27f127be-05f3-4b49-9a01-a86efdc2ae83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cbdcc19-a7f4-4cd0-b88c-8d727d8071b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9dbe10c-74b6-4574-9b87-451983ed2bd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1add0b56-9feb-47da-9bf7-f911ae7c580b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3606db64-c876-4ef9-bc6c-0062b143aced"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50ebb898-6b0a-4644-99df-0796b901634f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2328df88-0c9e-4329-9340-d15317910ef4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "530f4e5f-3902-4c4c-b8a0-5aea48c1aa62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fec0b8be-9464-472e-982a-ba4c7172bcab"
            }
          }
        ]
      },
      {
        "id": "287c7194-9a3a-49d2-814d-4999654cc92c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee98feb3-32a4-4534-ba99-bee585d9fdb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea411a9e-ef3e-4ec2-9d65-98eaa2803095",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c47f13d9-8bec-4a01-b163-e03e9f90e7ef",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3344ac82-a07f-4437-b814-b6fd7c25580f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b40c2795-21b8-4c95-914b-56241a9244c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9598e714-71c0-4fdf-8f15-2d7578cd7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27ea78bb-ad1c-4f15-90ed-906e8e624ca2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fcdda9f-5737-4c94-8004-664d15e09caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b8ac645-9a8e-4a82-b5a8-ff5d14d5b391"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ab9f553-6653-42c5-bf77-aa2c97a50125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f764093-a149-4347-8361-3db94e471dd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e889cbe-6018-4af4-8cbd-ce015259ed2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3103fc9-c736-443b-b203-c0dc0e1d0dbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14e6ef98-4c31-4785-9859-1ea200ca21d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "673dd8b3-bfca-467c-ac42-46aadb15f750"
            }
          }
        ]
      },
      {
        "id": "bc47eb3c-74fe-4514-b9c0-c0153db326d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5d867d3-fe37-4881-9bce-ec6007e5b1c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "930b596c-cbf1-442a-9f11-f7f6620d3bb3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "37e2a4f6-81c4-4774-b5cc-a37ec52d7570",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4002e7c6-3dcc-47c8-9a0d-218f5415b6c8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "577a3ab7-1862-4c79-806a-e565f1f3853a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 339.41901408450695,
      "responseMin": 15,
      "responseMax": 6733,
      "responseSd": 847.8492531796778,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691973155740,
      "completed": 1691973265821
    },
    "executions": [
      {
        "id": "c1fe3693-0721-4ad5-9cc2-66c3f125af1e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f98201ba-88e8-4df5-91e0-4e798c9e4fb6",
          "httpRequestId": "0023b8ea-4c1e-4a15-bcab-ba4f540ff4e1"
        },
        "item": {
          "id": "c1fe3693-0721-4ad5-9cc2-66c3f125af1e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b87bac63-2b87-4527-80fd-97d42266a8f4",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 0
        }
      },
      {
        "id": "9ed9f1c6-0e78-4cb8-a038-96e490ba945e",
        "cursor": {
          "ref": "b55b7241-24e3-41c0-a16c-97c7e5b4362c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a4925d-53a2-4960-b31e-fe2d778755b2"
        },
        "item": {
          "id": "9ed9f1c6-0e78-4cb8-a038-96e490ba945e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3641efbf-d43c-40ce-b679-a4d1dc6ed0cd",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "bb8bb061-3703-4911-8ccb-1606b02adb41",
        "cursor": {
          "ref": "cb81c0d1-57c0-45ff-8afc-ca69c757f756",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c765f546-61b2-4531-ab90-6dd00d34cf2f"
        },
        "item": {
          "id": "bb8bb061-3703-4911-8ccb-1606b02adb41",
          "name": "did_json"
        },
        "response": {
          "id": "16ea533d-c342-4636-a36b-a5b305b179ab",
          "status": "OK",
          "code": 200,
          "responseTime": 1243,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cabf8f8-e41d-4268-9ab1-8ad15265bf00",
        "cursor": {
          "ref": "c0c12323-518e-4a21-9d4e-838b332d8b3d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da0bd053-e80f-4878-a7b0-e55e3e247080"
        },
        "item": {
          "id": "7cabf8f8-e41d-4268-9ab1-8ad15265bf00",
          "name": "did:invalid"
        },
        "response": {
          "id": "76a516de-e68d-423f-8642-981aff3b73b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cabf8f8-e41d-4268-9ab1-8ad15265bf00",
        "cursor": {
          "ref": "c0c12323-518e-4a21-9d4e-838b332d8b3d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "da0bd053-e80f-4878-a7b0-e55e3e247080"
        },
        "item": {
          "id": "7cabf8f8-e41d-4268-9ab1-8ad15265bf00",
          "name": "did:invalid"
        },
        "response": {
          "id": "76a516de-e68d-423f-8642-981aff3b73b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d446cb-3c76-4449-b724-10590f29b922",
        "cursor": {
          "ref": "450bc2d7-d106-442e-a6c1-32beaa485693",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "86658387-0480-46c0-9966-129d06760fc0"
        },
        "item": {
          "id": "26d446cb-3c76-4449-b724-10590f29b922",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4732b715-fd3a-4884-824f-f1dc153c699b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 462,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6bc313-2498-4f6f-9722-c86c09501df2",
        "cursor": {
          "ref": "51461ba1-bd4d-40eb-9c42-fcee58b40140",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e7ec69a-1752-4458-8c40-58bcc577ed42"
        },
        "item": {
          "id": "bb6bc313-2498-4f6f-9722-c86c09501df2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7c490b2e-35c2-49b7-80ed-ada432f925bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cf4d28-6fc6-4002-8b0a-019ac5b070e8",
        "cursor": {
          "ref": "5c34049e-f872-45dd-a5ad-c83c7615bc53",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1e368ff3-1945-4fe5-ab70-14811f8435e3"
        },
        "item": {
          "id": "30cf4d28-6fc6-4002-8b0a-019ac5b070e8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6af344b6-34d9-4e5e-b856-a54b520a5ccb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca22ca3e-c24c-4451-8666-ab0af0b3c880",
        "cursor": {
          "ref": "d215731e-4d87-45c3-89d1-a215bf7b7e37",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "311654af-745a-44db-a380-5bf933ef7a31"
        },
        "item": {
          "id": "ca22ca3e-c24c-4451-8666-ab0af0b3c880",
          "name": "identifiers"
        },
        "response": {
          "id": "d7d1067f-59fa-42d2-a675-9c6474e96087",
          "status": "OK",
          "code": 200,
          "responseTime": 1250,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce6228-4ce6-4625-a1e1-1298e1c92ef7",
        "cursor": {
          "ref": "050859a6-2397-4749-abe1-6f1e2cdae57c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "895d0490-57ad-4be1-88c5-5287233d534c"
        },
        "item": {
          "id": "69ce6228-4ce6-4625-a1e1-1298e1c92ef7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "435c56b9-3e9c-44a0-a1c3-fa875e75e086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c48ce3b-ae6c-44ff-b1c0-7ea27ac71937",
        "cursor": {
          "ref": "4731b700-4ded-4668-b83f-4b451d4a003e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "09a35567-7842-4314-8fcf-bee2778d2c92"
        },
        "item": {
          "id": "4c48ce3b-ae6c-44ff-b1c0-7ea27ac71937",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab9110d5-bec5-4377-a26a-f14a102ad62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a00d12-8327-4e3e-a694-b53a3dcdd8c2",
        "cursor": {
          "ref": "8da1a4f2-3f69-4e15-a017-7358e9fe6dd1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b9800dc7-04ee-41cb-b577-773d5d078a35"
        },
        "item": {
          "id": "f0a00d12-8327-4e3e-a694-b53a3dcdd8c2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0f3f65c4-3b49-4b79-8892-5b9c789c6449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7e0066-84bb-44f2-987d-d60f028c90f4",
        "cursor": {
          "ref": "86e934d5-7172-4080-bcc5-80c5bc117016",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a35db90-478c-4505-a72a-74d7cfc0bfb0"
        },
        "item": {
          "id": "9b7e0066-84bb-44f2-987d-d60f028c90f4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c85fdeb3-1b12-4fdb-8d3f-62f356a318db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019ca6d2-0501-4b1c-9b3c-9bce59c175e5",
        "cursor": {
          "ref": "8de2d40f-c1af-45fe-86c0-4c55ccd5a80e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da050ac2-c900-4c8b-9382-e40a62eb2fba"
        },
        "item": {
          "id": "019ca6d2-0501-4b1c-9b3c-9bce59c175e5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "32094641-0c9b-4e36-9657-a249627bc4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0adaf9c-7040-4c93-9113-a2cb3057c667",
        "cursor": {
          "ref": "34bd9f33-8902-40b4-82d5-39081fa92b61",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7d5ea3c-f1cb-4a9a-862d-0c7b717eafca"
        },
        "item": {
          "id": "b0adaf9c-7040-4c93-9113-a2cb3057c667",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eee17c55-445b-40dc-85ad-db954727e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726d0a37-cad8-4dec-8393-ee4446577f15",
        "cursor": {
          "ref": "26c5b4fb-579e-4025-b67e-e6f87bef72d8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f1410f8d-99ee-4fd7-a3a3-30005e228396"
        },
        "item": {
          "id": "726d0a37-cad8-4dec-8393-ee4446577f15",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38646053-7742-4b38-9ef1-27f297181cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0e7b26-23ae-46ae-bea5-e3c82ba08d74",
        "cursor": {
          "ref": "e034707d-3073-4bb4-985b-56e88e9cb314",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3ea9108d-29df-4db1-93d2-f0257afde05d"
        },
        "item": {
          "id": "fd0e7b26-23ae-46ae-bea5-e3c82ba08d74",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11555dce-9474-47bf-a629-16297854775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f41a4ca-ed8b-4def-a26b-4a0d5ecdb60b",
        "cursor": {
          "ref": "4fd28a62-7cfa-4d2d-b9e1-dcfd30697ae4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "75d1bb82-befb-4a2b-9d67-c72e67a4ab54"
        },
        "item": {
          "id": "9f41a4ca-ed8b-4def-a26b-4a0d5ecdb60b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "952e4a7f-382f-41a6-9e51-99f5cdeb9e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4e6f5a-690b-432c-8901-b3971cb38c2b",
        "cursor": {
          "ref": "7ad68085-29b9-42d8-b0bf-fc05bf83d89a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1a8239a2-edf5-43e4-b9a2-ac7ef549f5dc"
        },
        "item": {
          "id": "5d4e6f5a-690b-432c-8901-b3971cb38c2b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "55d2d866-ff34-425d-8fc3-b2c11aea3074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0606e6-0324-4547-ae85-960c0fc65498",
        "cursor": {
          "ref": "0d2e45c9-750b-4680-a659-9e8dc9dfdf36",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95bbeeca-9b81-4e57-aa1a-8305e890df26"
        },
        "item": {
          "id": "4e0606e6-0324-4547-ae85-960c0fc65498",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "be8495b3-b88c-4c43-9db6-308be609a39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676156cf-9c46-46a2-83a7-4001d60b9e41",
        "cursor": {
          "ref": "5c0c763e-8735-476f-a088-2997b0505cb0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "959ad999-60f9-48c6-9e3f-9ebe19adc611"
        },
        "item": {
          "id": "676156cf-9c46-46a2-83a7-4001d60b9e41",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d4c1a338-4e67-4897-9693-6678cae5f205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4dcc5-beac-4e57-806f-eaef98b2a1cc",
        "cursor": {
          "ref": "c756c622-c9c9-4def-a061-9ce82e6cbbdd",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7fca0d4b-0d9e-4b0a-be24-73113198ea56"
        },
        "item": {
          "id": "f7b4dcc5-beac-4e57-806f-eaef98b2a1cc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "83814ca0-9873-4461-9679-460a5ac0a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13fef32-7c57-4001-bcd8-db25124fe0cd",
        "cursor": {
          "ref": "cb154b94-ca95-4983-9a7b-7f154a0e60af",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2eab3e5-f8af-4d00-bfef-b3b8cd74292e"
        },
        "item": {
          "id": "f13fef32-7c57-4001-bcd8-db25124fe0cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b981a31b-01b2-4f91-b3d8-cdf7cf9cfc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f4d85-f58a-436c-9a97-c40db721e706",
        "cursor": {
          "ref": "d542f50a-1959-411a-9409-531c2190b05d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ab02935-5339-4b14-9d70-cd124a8c13fb"
        },
        "item": {
          "id": "ba7f4d85-f58a-436c-9a97-c40db721e706",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9ac00ba3-3c33-4f95-b756-9ed5c11df801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af556899-257a-4110-b2de-ea54c8ea378d",
        "cursor": {
          "ref": "08206ccf-a5e8-4bc4-b3dc-90781bf1f494",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d1398d8-d6cf-4831-9fcd-70ef826c00a4"
        },
        "item": {
          "id": "af556899-257a-4110-b2de-ea54c8ea378d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ddfc9cc7-b06f-4f4a-891b-6c00c1b1d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47cff66-16b2-4ccc-8948-684a3ea2550d",
        "cursor": {
          "ref": "3128f61d-6c9e-4af6-8ede-69c96713cc72",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "975f987c-09fb-4730-b6a7-3f75c6e35276"
        },
        "item": {
          "id": "e47cff66-16b2-4ccc-8948-684a3ea2550d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a477a0bb-1ee2-4cb3-a1d8-ee4b92c752be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70fb54e-73fa-42a3-acbf-ea67df937945",
        "cursor": {
          "ref": "5ba02fb8-883d-4b1d-8821-670d9439df41",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c9202fac-8848-4005-9d20-4a4276b987a8"
        },
        "item": {
          "id": "a70fb54e-73fa-42a3-acbf-ea67df937945",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8d7b8a3b-cacd-4fdf-bb31-ef75c56a81a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edca5b7a-64aa-47aa-885b-d16135ef14f5",
        "cursor": {
          "ref": "d89f1ad3-e271-4799-96fe-3b1772fa238f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9fde3967-fb79-4d7b-955d-c8bdf3438dce"
        },
        "item": {
          "id": "edca5b7a-64aa-47aa-885b-d16135ef14f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e60d33b-d7a0-4cbd-81e0-e8a09e494382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21c71e9-17b9-42c0-be0d-eec4fb245395",
        "cursor": {
          "ref": "eefe0a1c-7d0a-496f-8b5f-a71d459cb13a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd833ec6-52fe-4176-9475-022367ffce9b"
        },
        "item": {
          "id": "b21c71e9-17b9-42c0-be0d-eec4fb245395",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fa321e77-953f-4c5d-bc04-91a6721cca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959b13d4-a119-4bdf-84b4-8c6b5a40f466",
        "cursor": {
          "ref": "9a84d64e-5fbf-42f6-834b-76dad1cfcb38",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "65f45594-ad83-4a1f-b5a8-b9f3e3bdc36e"
        },
        "item": {
          "id": "959b13d4-a119-4bdf-84b4-8c6b5a40f466",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "41faf013-0b83-4c9b-9f19-02d5e444a595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e4cc4-b5e2-4d7b-a7a0-535f192b071c",
        "cursor": {
          "ref": "fc2e96d9-7c85-4792-8b6b-1b2ef4fa5e63",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5fb90553-be23-47ea-9222-1fe9651a5c3b"
        },
        "item": {
          "id": "ea6e4cc4-b5e2-4d7b-a7a0-535f192b071c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ae69c338-d058-4ca9-8c47-9ac3e07406f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0886362f-f081-499f-85dd-1be11a807204",
        "cursor": {
          "ref": "2e3975e7-d2b8-4270-8fc7-3903939fcf63",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d5c5e85-ff78-4b62-bfeb-0a7f54703d15"
        },
        "item": {
          "id": "0886362f-f081-499f-85dd-1be11a807204",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1cc54116-26d6-4ee5-9dc0-7fd05d3c23b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1cae5-f6be-4326-ab8b-02dd5db1628c",
        "cursor": {
          "ref": "c53ec709-f160-4d31-82d3-deee3606bba9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4503f31f-9f7b-4bb1-9cb6-db171cbd2cdc"
        },
        "item": {
          "id": "89e1cae5-f6be-4326-ab8b-02dd5db1628c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "86ec632f-ed8d-4b55-9e9a-6bd262e90c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc274c9-c82c-46ef-a744-c221b2c3b9bf",
        "cursor": {
          "ref": "061dc4f8-0df6-4629-9ddb-231b9824fd81",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "11f374b6-0e78-415a-9921-cc588de3f189"
        },
        "item": {
          "id": "3dc274c9-c82c-46ef-a744-c221b2c3b9bf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17758855-bce4-4f56-a2de-48f02bb1381a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb7b6d-71a9-4194-9c39-a5b9c5371bf6",
        "cursor": {
          "ref": "e8f8e054-b3ac-432f-9965-3659f2f044bc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cd8fde5a-5012-4272-bd02-37a4fee16411"
        },
        "item": {
          "id": "1aeb7b6d-71a9-4194-9c39-a5b9c5371bf6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "987e5bd6-3ba4-4fb1-a4ee-622e284b6ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67e61c0-0777-4898-bbec-df0a841d2934",
        "cursor": {
          "ref": "f0969316-8690-4bfe-9c85-04d90c82333f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "722490b9-f7d4-4d66-b7db-982fbbd01a10"
        },
        "item": {
          "id": "c67e61c0-0777-4898-bbec-df0a841d2934",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2832095d-622e-4b34-82a0-2a03ef7f3e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c88795-4470-4a7f-bd43-ffca02a40c58",
        "cursor": {
          "ref": "3f728aca-cc28-4109-8b9e-9920f4788751",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3e5b6e1e-c84e-4439-b75d-5e9ec6bd04d8"
        },
        "item": {
          "id": "55c88795-4470-4a7f-bd43-ffca02a40c58",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "56fce825-4bfa-4636-98f4-de53330c151c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a84edd-7bee-4f8a-97cc-54f665873659",
        "cursor": {
          "ref": "edccccb0-e3c4-4f27-af6d-2a23ffdcfe7c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "336cbaac-b727-4cd1-9e83-dfbcd2816bac"
        },
        "item": {
          "id": "91a84edd-7bee-4f8a-97cc-54f665873659",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "482ef8b5-21eb-4312-8dee-1de2a066c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0763c3c9-1c10-4bb6-863d-c2c19d7ee798",
        "cursor": {
          "ref": "9506810e-a4cc-4675-9823-ba1c593dfa0f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5c10cd3a-bc65-48c3-9751-56872c2642a8"
        },
        "item": {
          "id": "0763c3c9-1c10-4bb6-863d-c2c19d7ee798",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fc0109b1-6499-4cab-b3aa-045196d70b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a944d3-85b5-493a-9e8e-099973a20a8c",
        "cursor": {
          "ref": "5489c5a3-201b-48ac-bdaa-fa42b2d10cc7",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2792217d-c277-40fc-a8de-6f233f5f173f"
        },
        "item": {
          "id": "d8a944d3-85b5-493a-9e8e-099973a20a8c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6f2feabe-1057-4b04-bead-271c4d090fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68a8132-93c3-4cf2-aeb6-c7d99ddfad3d",
        "cursor": {
          "ref": "545922cc-1dc8-4c62-a4c6-df76f3aa5e93",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "256a8087-56ff-455c-87b1-bae28aedbcd4"
        },
        "item": {
          "id": "a68a8132-93c3-4cf2-aeb6-c7d99ddfad3d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b973f06f-8157-47ef-b4b7-b869b00b3ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aeb96a-af0d-427d-8613-66fdfd02087c",
        "cursor": {
          "ref": "e0851682-ce42-4204-b1e1-e583ec1bbd39",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2e5c1956-efb6-4534-820b-c50ffc553694"
        },
        "item": {
          "id": "76aeb96a-af0d-427d-8613-66fdfd02087c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a061218d-316c-46d6-818e-40c0c120f8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75054ca0-2947-422e-a723-5f9a7fcc12d6",
        "cursor": {
          "ref": "059c9c8b-8aae-43b7-9c00-0553c486f3da",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4a21b3db-8a48-48a4-b3df-977234cc9e95"
        },
        "item": {
          "id": "75054ca0-2947-422e-a723-5f9a7fcc12d6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ce6d2cd-f8f3-4855-9aad-a80f0eb8f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7c4777-135e-4780-b23d-ee4fb988e1eb",
        "cursor": {
          "ref": "1b546f80-d96a-4520-a3dd-b0eeac7cf8d3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "60ae63ef-1634-4c35-a4b5-d0bf06ea9a9c"
        },
        "item": {
          "id": "2a7c4777-135e-4780-b23d-ee4fb988e1eb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8339f2f0-b606-41b9-b2c9-606a27754108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a394189-975e-4d27-b9f5-cadd3a732e34",
        "cursor": {
          "ref": "afc41414-1f4a-4000-8a97-58c4e34ff869",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3d3fb646-2c21-433e-9637-5db7adb47353"
        },
        "item": {
          "id": "9a394189-975e-4d27-b9f5-cadd3a732e34",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ff5e2669-7eec-41ec-8ad2-3093040e711c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 638,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3cef5-b37a-4541-9e05-a276b2f5f191",
        "cursor": {
          "ref": "2e06e5d3-4927-4383-b5bb-4df17ceb7aac",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c9333a27-b687-48ec-8f78-ced15cb5497e"
        },
        "item": {
          "id": "c0b3cef5-b37a-4541-9e05-a276b2f5f191",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0e9d9e66-dd82-4abd-9459-f3e69fffd39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3db5b6-0831-48e9-b70c-7d9cd5aacaf0",
        "cursor": {
          "ref": "d5d88d7a-0281-43d8-b06d-748e6fa367ba",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8db2164e-119a-466d-86f2-372b77100961"
        },
        "item": {
          "id": "2f3db5b6-0831-48e9-b70c-7d9cd5aacaf0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff6683a8-56e3-4cf1-8453-b6916963bf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57866fcd-f384-4446-bca6-22e412d5ca48",
        "cursor": {
          "ref": "3fa2f249-ffff-4cdd-a25d-734de684a0c8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2cc538b5-ec15-4373-ad78-f7030b0bb699"
        },
        "item": {
          "id": "57866fcd-f384-4446-bca6-22e412d5ca48",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b8b35bfd-8245-4029-8565-ad902a0a19a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676773dc-ea4b-4c86-a314-9dbb4a205579",
        "cursor": {
          "ref": "cdffe41b-8948-48ae-8fe4-4bff59f396a9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9f58f6fd-bd8e-4782-8758-aaec2463afc6"
        },
        "item": {
          "id": "676773dc-ea4b-4c86-a314-9dbb4a205579",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ff7bac1f-eddd-4752-833e-ea51cbd4ccca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f082bb0-b28b-47f2-9597-987b0511bf79",
        "cursor": {
          "ref": "b34365fb-d449-4979-a647-5710a17b29e7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "75297249-8c49-4131-9582-9e430d1a898a"
        },
        "item": {
          "id": "1f082bb0-b28b-47f2-9597-987b0511bf79",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eb0cfaee-92dd-4de4-b4fc-c7ddd4901eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c41335-db4f-4ae9-9881-368bf18caa90",
        "cursor": {
          "ref": "5f6e30a0-038f-4246-a496-e646a6b3f3d3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "394c4227-63f7-4573-b390-b462269e255f"
        },
        "item": {
          "id": "98c41335-db4f-4ae9-9881-368bf18caa90",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f4ce74f3-a7f8-4320-a61f-8108dcc48577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbe9bda-10e2-4d63-854b-23180c02d553",
        "cursor": {
          "ref": "4c19e59d-f129-463f-a390-4bc08c59e729",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08179673-fad5-435b-94b8-5a9e415eeae9"
        },
        "item": {
          "id": "bcbe9bda-10e2-4d63-854b-23180c02d553",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "069f61bb-4fe2-46e7-a4c7-4c148e6417cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 568,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5bf62-4a84-4d75-97dd-e677e1869f07",
        "cursor": {
          "ref": "91b6925b-d22e-4989-b98c-ece31d21d8e9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "526abc57-183f-4d76-85d7-c48f687ec714"
        },
        "item": {
          "id": "38f5bf62-4a84-4d75-97dd-e677e1869f07",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce250683-69b9-4491-9e51-4dd8b346cada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc0be94-bdeb-490e-b53a-fddfbdaaf59d",
        "cursor": {
          "ref": "59ca553c-c03b-4d1e-8f0d-793cecb2ce35",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "85fd2472-400a-40af-93a7-5b0ff3d68abe"
        },
        "item": {
          "id": "ecc0be94-bdeb-490e-b53a-fddfbdaaf59d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b7f05d7a-4310-462b-a956-760e4519be1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd612ed-c347-426d-8f5b-fb0cc1603435",
        "cursor": {
          "ref": "84b593e3-0885-476f-8120-20205c3a6f70",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3902457e-7735-47d7-a3c9-f178b710fb69"
        },
        "item": {
          "id": "bcd612ed-c347-426d-8f5b-fb0cc1603435",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e7f7aed5-0ce0-4f49-9ec6-fb566150439a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2593d225-41eb-44b5-9db7-378f6859c5d5",
        "cursor": {
          "ref": "37f59d94-4b83-4951-9c09-737ecb8e5025",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "513bf28d-003e-4c7e-a8fb-71209bb9e689"
        },
        "item": {
          "id": "2593d225-41eb-44b5-9db7-378f6859c5d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2f42bf15-ed36-40ac-bed2-60d569e276e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed16738-0366-4560-85dc-dfdd7527440c",
        "cursor": {
          "ref": "d0af3225-7358-4544-9aef-78e02174fb8a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a9e133b8-95bb-449c-b80e-55eda46dc3c8"
        },
        "item": {
          "id": "eed16738-0366-4560-85dc-dfdd7527440c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4100968c-ab92-45e6-819d-4760c44c49d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8914df-2765-44ee-833e-95248b86b489",
        "cursor": {
          "ref": "d5ca0c84-f3ca-4cc6-a932-4d56d661917e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "acb1c662-ef86-40c5-a0c2-59817651da55"
        },
        "item": {
          "id": "ba8914df-2765-44ee-833e-95248b86b489",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3d74f429-6bb4-4277-a4d5-9546587f636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e141e55e-e888-4727-b612-ba87ecb2387f",
        "cursor": {
          "ref": "8d22814f-de62-4f91-9e01-016c4155d20e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "678113d3-221e-43f6-8157-56d2d9f41386"
        },
        "item": {
          "id": "e141e55e-e888-4727-b612-ba87ecb2387f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b3db46a8-e224-4a90-87cb-f0ff3662cbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b82986f-bfb3-4481-943f-1e7520de9ae7",
        "cursor": {
          "ref": "7249cc65-6c3b-4e38-9c9f-071845e999cf",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "96ff5c47-de97-4197-8731-596a56e28149"
        },
        "item": {
          "id": "8b82986f-bfb3-4481-943f-1e7520de9ae7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "649b14e5-e1a3-40c5-b28c-7bd4dc158a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df4fcb-6d0c-4b9c-be68-6b9e9509c731",
        "cursor": {
          "ref": "862b8bb5-6142-4b4b-9e52-657f079579e0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e440adc5-84d6-4432-9357-75390be4526d"
        },
        "item": {
          "id": "10df4fcb-6d0c-4b9c-be68-6b9e9509c731",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1cde30cf-3e48-48de-a43a-fa4988eec4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e380dcf-cf53-4e26-9847-b9ef6a1964b0",
        "cursor": {
          "ref": "a44f4442-0c58-4636-9415-2505b4030b72",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e6fbf295-9108-4ba5-a4b7-4a0f7a55d1c6"
        },
        "item": {
          "id": "3e380dcf-cf53-4e26-9847-b9ef6a1964b0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "93d3aa82-2521-4920-8f70-19a7af2c9ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac4386c-162a-46f8-9bf1-ecbf45e25a68",
        "cursor": {
          "ref": "ecc3aa98-55af-4ae4-9e87-6337612743f3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8047e6a2-f1bd-439e-bdf4-55d8ce8ed1a3"
        },
        "item": {
          "id": "cac4386c-162a-46f8-9bf1-ecbf45e25a68",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8eeab4f7-9a68-4b41-b9db-d0774d8db640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8317c-463d-400a-91c2-f05dbba67a43",
        "cursor": {
          "ref": "f6b72c4a-2bf1-458c-b983-fe290f3e1252",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7a68771b-54ea-4703-b5d5-b791af743e19"
        },
        "item": {
          "id": "27d8317c-463d-400a-91c2-f05dbba67a43",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28f81194-7dd9-4b52-81f1-e2c49994bbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06530204-6377-4843-9b2d-61ce5caa85b4",
        "cursor": {
          "ref": "29e6220d-412d-4f41-a5ba-9703a4de59e9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a8283b2f-cac2-427a-9b3f-f10ef7a43d79"
        },
        "item": {
          "id": "06530204-6377-4843-9b2d-61ce5caa85b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cf87857c-0813-4186-928a-05bfc0213861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d463df-2bd3-4389-945e-16d028f6b43b",
        "cursor": {
          "ref": "0de13673-7111-44cb-a2e3-8b1a7739baf8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eb7e026f-1124-4d9e-b9c2-62bf1e3d0e22"
        },
        "item": {
          "id": "86d463df-2bd3-4389-945e-16d028f6b43b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eb707062-3b22-47db-8cbc-048ef6542c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c87dfd-a5af-4525-8fdf-9c8b33d105c7",
        "cursor": {
          "ref": "f6c0c49f-c0c0-47ec-a478-d2facf0115bb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "38c63252-d2e2-4ff1-b384-faa78f2858a4"
        },
        "item": {
          "id": "92c87dfd-a5af-4525-8fdf-9c8b33d105c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cdecbcae-2023-45f5-acf8-790323eeb249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a2750-d556-49b8-8021-4ee03bc39c03",
        "cursor": {
          "ref": "ebc487d8-a2e6-4890-bc9d-7f0f0b2c379e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a4e8ff94-53ec-4dac-aae1-bc634834cb7a"
        },
        "item": {
          "id": "0e3a2750-d556-49b8-8021-4ee03bc39c03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cf328291-0d35-4953-af0e-2d838885998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bf4d82-dd2e-4eb7-a557-87dc0f0ae1f4",
        "cursor": {
          "ref": "a72e9bdd-311d-4039-8a92-7fe88588dd5c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "21f5c3ed-13ca-4332-92cf-43218b1d3a58"
        },
        "item": {
          "id": "b2bf4d82-dd2e-4eb7-a557-87dc0f0ae1f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "16d3a923-e9ec-4c7f-9414-daf638069173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43142cec-714a-4536-8256-3567ca809265",
        "cursor": {
          "ref": "118525a5-59b6-46cf-93a5-f1164990ecbb",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06f7dd8a-444e-4689-b617-26aa1b9801b3"
        },
        "item": {
          "id": "43142cec-714a-4536-8256-3567ca809265",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "310975dd-d0ca-408a-a877-f93096dcb8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2575bc-6ac5-4b4b-807b-be028209bb26",
        "cursor": {
          "ref": "e695df9d-952d-4d0b-ac5d-7d56613100df",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8e45f736-c0a9-4b8f-ad2c-7ad602d185d7"
        },
        "item": {
          "id": "1f2575bc-6ac5-4b4b-807b-be028209bb26",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "20233872-7184-40f4-8d34-34041b6f44f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a820c51-a8bc-4e4c-b59c-b1d3c20cc30e",
        "cursor": {
          "ref": "43425db0-d732-455a-bf33-3dc361df42ea",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "786dfaf0-8fed-4e0c-b05b-d8a8b20695ef"
        },
        "item": {
          "id": "5a820c51-a8bc-4e4c-b59c-b1d3c20cc30e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "07d1e003-6318-4d88-aa65-1a7e6bfbd3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b740e64-931e-4821-b7b6-a42bf0377655",
        "cursor": {
          "ref": "1280c75e-f8c2-4e0e-9373-8180b8b980a5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "48012f99-b29f-42f6-9edd-8fe5daee714e"
        },
        "item": {
          "id": "9b740e64-931e-4821-b7b6-a42bf0377655",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ac482aca-81ea-48e3-a8a1-6e07ef1c193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458afa02-be9e-4393-ab3a-b270c7437bfe",
        "cursor": {
          "ref": "e41fb903-b475-4ebf-9b77-5021dea6e8cd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ceb6254a-4b86-4e08-87af-25e6111ca241"
        },
        "item": {
          "id": "458afa02-be9e-4393-ab3a-b270c7437bfe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "95a30f9f-6b43-4515-82f3-bc15c8697c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3293b01-f920-4faa-b6e3-9a857c9ae7b6",
        "cursor": {
          "ref": "0c443741-b37c-4cb7-914a-6063a33d9800",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aec1548f-d40c-4bab-b951-f5f78793c670"
        },
        "item": {
          "id": "b3293b01-f920-4faa-b6e3-9a857c9ae7b6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e3275d46-ef2a-4ac9-a837-818f4fbc13fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5fddfd-f383-4979-bfeb-803cd763d066",
        "cursor": {
          "ref": "42da026e-6504-4021-9c5b-0c129f289ec4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2bdcd06f-c130-4391-b2a7-16a3e6fdbba7"
        },
        "item": {
          "id": "9d5fddfd-f383-4979-bfeb-803cd763d066",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dc935d28-2987-4c0c-aab3-747b8dee86e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d8872-b131-4d7c-9789-5be7534fac43",
        "cursor": {
          "ref": "7d919edf-64b6-48b5-b4db-02077afaf861",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "69643ea8-82ba-4f14-b759-ec070262f115"
        },
        "item": {
          "id": "ca3d8872-b131-4d7c-9789-5be7534fac43",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c6ee3da6-2da6-48b9-a69d-03b74dee4ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22136b92-203e-4b0a-96d8-7e0b1027c447",
        "cursor": {
          "ref": "a47c9b36-4dd5-4a2b-879e-0d48940a2f74",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2fa1f4ff-27f0-4744-99ae-fee95e5055e7"
        },
        "item": {
          "id": "22136b92-203e-4b0a-96d8-7e0b1027c447",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9c6e2b05-9967-4be4-aa71-9d1cf0a69d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d16a5c-4e06-49a1-a64e-6c421526f35c",
        "cursor": {
          "ref": "9b3567b4-b550-4976-a266-b7c990a73854",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2cd3f26a-57d3-48dc-a8b6-3d561ed52362"
        },
        "item": {
          "id": "80d16a5c-4e06-49a1-a64e-6c421526f35c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fdd82074-e1d6-4c0e-a08b-1096fd537c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36087b9-52de-437c-a72f-bae661967fef",
        "cursor": {
          "ref": "09404e40-957f-40b2-acd2-0d471a0d0fd8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "54b13f7d-535a-442d-871f-ed7e330b102e"
        },
        "item": {
          "id": "b36087b9-52de-437c-a72f-bae661967fef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b45df77f-4a81-4038-8fef-ce6b13b66cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365e0bfc-6a6d-417b-823f-bbf907445450",
        "cursor": {
          "ref": "c3522919-754a-4440-bc43-b992eda86bfd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "af654e1e-e3ec-43fc-857f-6a3c0910ad89"
        },
        "item": {
          "id": "365e0bfc-6a6d-417b-823f-bbf907445450",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d9406b5a-3670-4521-9890-7a3c35c3ff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2d84f9-1f20-4ce3-933f-9cf804c13899",
        "cursor": {
          "ref": "32ce36c8-3e1e-4c7b-a82a-6b7557e69948",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "962fdfc8-bc9e-4a02-a838-92f6152b6dd4"
        },
        "item": {
          "id": "ae2d84f9-1f20-4ce3-933f-9cf804c13899",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "95ebdd5f-5e14-47d1-b582-b4dc8b548884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72034496-b3e5-4439-8f5d-0666989320d8",
        "cursor": {
          "ref": "b06923f6-7a50-4991-9aeb-e9fe8d4cb072",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0a9676c9-1e15-4366-af82-620b3b96b4e0"
        },
        "item": {
          "id": "72034496-b3e5-4439-8f5d-0666989320d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c53da02b-92e5-4fda-b8c7-99bcb798dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4501f6a4-9e08-42a0-b155-35cd0995d76a",
        "cursor": {
          "ref": "57f9ace1-e8aa-4f0e-86a9-699bd872c86a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "43f71d04-4dc2-40f0-a960-e4e44c5e8ee5"
        },
        "item": {
          "id": "4501f6a4-9e08-42a0-b155-35cd0995d76a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c8827ff8-2122-4aac-86e4-521448fb226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d935f0-6edc-44a8-ab8a-0c11febcf9fb",
        "cursor": {
          "ref": "a6013c20-cba1-4749-a88f-5f290c5c6c89",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b67f61b1-aa7e-4f8d-a2bd-6062eca77c64"
        },
        "item": {
          "id": "c6d935f0-6edc-44a8-ab8a-0c11febcf9fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08924b61-90d5-469f-a93e-0be172a446f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a170d52b-d2a2-4588-bcd3-80348f880b3f",
        "cursor": {
          "ref": "db6e6850-22be-42a5-af18-4a3dbf1aee48",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a00dcd96-1c6e-4295-9190-e18fad026f1e"
        },
        "item": {
          "id": "a170d52b-d2a2-4588-bcd3-80348f880b3f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fff1bcd3-343e-4fb8-8b9d-d9539232863b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791f11ad-9f3b-4d48-ba5b-7047f7556a67",
        "cursor": {
          "ref": "2a2843b1-e981-4dbf-8a24-0dd65939762f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca865fa4-2eb0-43e6-bd7d-08d97d559463"
        },
        "item": {
          "id": "791f11ad-9f3b-4d48-ba5b-7047f7556a67",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a80d2be3-47b8-4f54-beaf-3f3f878d8628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b5d55e-897b-4eb7-841b-b5ad6ee228c5",
        "cursor": {
          "ref": "68ab3694-cefb-435f-948c-59067515a459",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3209230f-88f8-4bb8-a869-8db705e9fcc7"
        },
        "item": {
          "id": "91b5d55e-897b-4eb7-841b-b5ad6ee228c5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c91cb9c2-bc39-4cfa-ad57-65e0cfb642a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50baf57f-6ab0-4a8c-8ef4-7a1aff5987c0",
        "cursor": {
          "ref": "fa654af4-b970-4d4a-96fd-8e26326ec6ed",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "78d75b77-5a2b-49e8-832c-42aafc05da7d"
        },
        "item": {
          "id": "50baf57f-6ab0-4a8c-8ef4-7a1aff5987c0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ee99d61e-93cd-452e-9f8d-8e4543b58a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03383571-a83e-4c98-983f-1649cc10feaf",
        "cursor": {
          "ref": "ce915d5e-9b2a-4f3b-9686-4e4060758e7f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d51681d4-2a73-452b-8274-8b1c8baaa728"
        },
        "item": {
          "id": "03383571-a83e-4c98-983f-1649cc10feaf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bb0783f9-12d8-4622-96d0-40d813be420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f8a6f-b060-4239-b4d3-821c1f910e2b",
        "cursor": {
          "ref": "cf13d3d6-5eca-4686-bf7a-d06350f83ea8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2f3f31e0-0958-4c49-956c-f08a4919515f"
        },
        "item": {
          "id": "be6f8a6f-b060-4239-b4d3-821c1f910e2b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "47381f1a-518d-4f09-a4cb-6ec3241b6f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d08703-6c1e-425f-9fd5-f41d5444a990",
        "cursor": {
          "ref": "74e57250-8329-42fa-abd6-2600d6f01ea8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "249bea26-e3f9-4e61-99c6-73679c05a4c8"
        },
        "item": {
          "id": "81d08703-6c1e-425f-9fd5-f41d5444a990",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f54d0a7c-5630-4bcd-bf19-76611a0cdcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd2dbb-703b-453c-b958-37290d400f43",
        "cursor": {
          "ref": "92ec2433-e449-413e-90c2-cc75885f96a7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aa60070b-690a-4e4a-b4c8-8abf0cef7ee9"
        },
        "item": {
          "id": "03fd2dbb-703b-453c-b958-37290d400f43",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d503c88-d38b-4ad6-accd-1a0adc63eb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79522025-1345-4481-a109-08a8390c9b9b",
        "cursor": {
          "ref": "5e4176c1-bae3-49cf-8fb3-e0366838a867",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8e90c5d-fb77-408f-a1fa-16a4b3717b37"
        },
        "item": {
          "id": "79522025-1345-4481-a109-08a8390c9b9b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7e6dfb36-92ff-4d0e-81c3-26f0773b8546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d183e8ea-f069-4a5c-bf49-31839173582c",
        "cursor": {
          "ref": "d3313b35-feb7-4418-b24d-e776b6ecb30b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d37fb915-b1c6-40d5-b78c-9133aaef5203"
        },
        "item": {
          "id": "d183e8ea-f069-4a5c-bf49-31839173582c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3abc40e8-5a1e-4ba6-abc5-b86e7ef99773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b547b750-2221-4f1d-9dcc-312b420885c6",
        "cursor": {
          "ref": "4d357ec2-7422-4f2c-99ab-a7bdfc776eeb",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "248c0742-fb3e-42d5-85cd-130ca0a004b3"
        },
        "item": {
          "id": "b547b750-2221-4f1d-9dcc-312b420885c6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "87aa0291-a38e-4b22-bc08-a0004f9a67f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe2c2b1-ea14-4568-b21b-827c6766059e",
        "cursor": {
          "ref": "78e73995-c22e-4527-b401-fcded77821db",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f9c961ab-6371-4cef-b3aa-3c48c255fb94"
        },
        "item": {
          "id": "6fe2c2b1-ea14-4568-b21b-827c6766059e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fcb2240f-f80e-4753-bd25-dc5cd3cd0923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9e169e-dc97-4676-b4a2-1b2be77b8e04",
        "cursor": {
          "ref": "f1f6bb34-ef4e-4646-b681-4ba1ae7a89a0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e8bca747-b251-4c07-bd9a-a0b2ad92fb0c"
        },
        "item": {
          "id": "7c9e169e-dc97-4676-b4a2-1b2be77b8e04",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c1b4730a-00b1-4362-8bdf-02bff6fdb44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62daa1da-52a7-4362-b3d7-01a0baa1a569",
        "cursor": {
          "ref": "4b671283-d9eb-4a01-a317-5304070f904d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a80cbb39-5a46-472f-8b6a-72504910fa0e"
        },
        "item": {
          "id": "62daa1da-52a7-4362-b3d7-01a0baa1a569",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "11a7fe3c-c048-4db5-9b68-3b1665c14f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6128c065-46c0-4ad0-bf64-a766036cff51",
        "cursor": {
          "ref": "c252985c-6cd0-4158-a35a-224d87d17c9e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca7fab28-ca82-44dc-bdaa-443d373a8e20"
        },
        "item": {
          "id": "6128c065-46c0-4ad0-bf64-a766036cff51",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "05b8cde3-9765-438e-b2ad-3f99059574ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449847f-b3ce-44b0-9486-cebe653c419b",
        "cursor": {
          "ref": "ba9a3f38-d3af-42fd-b22b-57dc552c6fa6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "881afe65-b220-43a4-ad9c-2103029d1b02"
        },
        "item": {
          "id": "f449847f-b3ce-44b0-9486-cebe653c419b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b6bee05-8192-482d-8681-77b3316e6571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5b3f46-7b54-491a-9f09-9b451912bb02",
        "cursor": {
          "ref": "4a440d95-1047-4187-9fc2-1373d57ae519",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2e54422d-ef94-44e8-be2b-a7a92d9b6db1"
        },
        "item": {
          "id": "0f5b3f46-7b54-491a-9f09-9b451912bb02",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "badef7e3-8e34-4d8f-889b-3159fa6210b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73046fb4-4429-4446-84f3-388862c4565c",
        "cursor": {
          "ref": "2844fa2a-5bb6-4262-b10a-7355bffbe0fc",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b2e027e3-10d9-4bff-8ed4-01df89e70c95"
        },
        "item": {
          "id": "73046fb4-4429-4446-84f3-388862c4565c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6371da15-0787-4561-a760-5ed059dce3c5",
          "status": "Created",
          "code": 201,
          "responseTime": 6689,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a83534-082e-4397-8ec8-4ae08b1bd33f",
        "cursor": {
          "ref": "fbeedfd1-6055-4b36-b299-9be98de4c04a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "412cf5c3-c49b-4c53-bfa8-6c6150131aab"
        },
        "item": {
          "id": "d6a83534-082e-4397-8ec8-4ae08b1bd33f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cd811f5c-4591-4445-9051-1336333e16e1",
          "status": "Created",
          "code": 201,
          "responseTime": 6733,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e31f7-f377-4728-8370-19d96223e0be",
        "cursor": {
          "ref": "5be96d90-a546-442e-b536-acad395892a6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aa5c4fa6-2815-47d9-a684-8f093b4b9aae"
        },
        "item": {
          "id": "9a5e31f7-f377-4728-8370-19d96223e0be",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7b24a2ec-ecf1-4945-a0ee-3863cef94395",
          "status": "Created",
          "code": 201,
          "responseTime": 6057,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e218e59-3025-44f0-ba9e-c5fa0188dc1f",
        "cursor": {
          "ref": "5cec19a4-f5c7-4a38-a3ea-cee083f34f88",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8984375d-1a62-48fc-975e-1339d2e5f95a"
        },
        "item": {
          "id": "3e218e59-3025-44f0-ba9e-c5fa0188dc1f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e284f205-ac57-4092-a41c-910f61ecbd36",
          "status": "Created",
          "code": 201,
          "responseTime": 6478,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18c65f1-b388-4dc6-b5d4-66e5cc2eee1e",
        "cursor": {
          "ref": "7e58fe60-c643-4e23-b28a-255b42938284",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7f5bba85-b2c8-4a34-b85f-4e393e9efad1"
        },
        "item": {
          "id": "e18c65f1-b388-4dc6-b5d4-66e5cc2eee1e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4971a6ee-8d1f-4481-a70d-6b1b054d90a4",
          "status": "Created",
          "code": 201,
          "responseTime": 6468,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de2260-93a0-4a27-986d-c8b19068849e",
        "cursor": {
          "ref": "ff09e80b-da33-49cc-922e-9a4f83638d5f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b3d5cc47-9a7e-4eaa-916c-3e8440d2fa7d"
        },
        "item": {
          "id": "73de2260-93a0-4a27-986d-c8b19068849e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a9786d63-a8f3-41a9-a0df-dc5fbe461ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4f20e7ef-576a-4744-91a2-7e984825765e",
        "cursor": {
          "ref": "a0871732-9494-4edc-82df-1dab19ec9f55",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1c43e31e-55e4-4ae9-b7c0-6609807924f8"
        },
        "item": {
          "id": "4f20e7ef-576a-4744-91a2-7e984825765e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e786f239-14ac-4624-a522-7abe17b07464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ebfab2-7d5f-4391-97c5-f1572171e6da",
        "cursor": {
          "ref": "3cf7710c-67ce-45ce-b440-0195b05eb42d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f6269049-ea2f-43fb-9222-afecf567c61c"
        },
        "item": {
          "id": "b8ebfab2-7d5f-4391-97c5-f1572171e6da",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6a842760-e0b5-4414-bbda-54285a12c693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b9f445-7710-4984-aa61-e8a20465838a",
        "cursor": {
          "ref": "af6b5800-6566-4237-9b5c-af8211523c9c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bafd3e9b-525d-419a-8944-7ef88ae6f83f"
        },
        "item": {
          "id": "f4b9f445-7710-4984-aa61-e8a20465838a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54fde777-fd49-486b-b7dc-481fbbe04cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd647e2-c617-45dc-8ed3-d64b479ecf20",
        "cursor": {
          "ref": "ec2b3229-da22-4bdb-8c81-a17dbb77152d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b054040-27a3-43a3-9945-7cdd126d4354"
        },
        "item": {
          "id": "1fd647e2-c617-45dc-8ed3-d64b479ecf20",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e1e5d4a-aa75-4a3e-b01c-4e15c64e3e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5bb046-8adf-4cac-bba4-79232b90ad95",
        "cursor": {
          "ref": "ecec205a-a551-40ae-b7ef-b87d54aa569d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a553ae31-ab4d-45a7-831e-9b142d2eb69d"
        },
        "item": {
          "id": "6c5bb046-8adf-4cac-bba4-79232b90ad95",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c19e874c-7c6f-4f5d-98e6-4638a6f9b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d836e6a-c123-4248-91fb-56d1814344a4",
        "cursor": {
          "ref": "38569424-b90c-42e4-9fc1-610c7b70bd50",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "12bb9696-f2c8-4d20-9b20-47bd79c8dd0b"
        },
        "item": {
          "id": "7d836e6a-c123-4248-91fb-56d1814344a4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bcd9e8f9-cb26-4e6c-b75e-5d94d3fb8958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186a6353-5687-49e8-b9de-ea8fff0dd01d",
        "cursor": {
          "ref": "e001fb00-d90f-466b-9eb3-fb1acd2c283d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ff41c49-d2e9-4385-896a-21e35c613869"
        },
        "item": {
          "id": "186a6353-5687-49e8-b9de-ea8fff0dd01d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c64191c-4867-496c-ad6a-9e64d8849045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b370045-6670-4849-a6f5-ca3274157e3c",
        "cursor": {
          "ref": "600e070c-637e-4100-afbc-87037f4c146f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5490b705-5f1e-44eb-8f08-0c7a970a0c70"
        },
        "item": {
          "id": "3b370045-6670-4849-a6f5-ca3274157e3c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0879bf5d-ce3f-45cc-ad44-2583ee1dd684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be2fbc-acbe-4f24-8a6c-c99703b2add9",
        "cursor": {
          "ref": "88c10958-4adb-442e-b20e-8cf0db996134",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "967c45a8-1910-42c7-a376-96cd1ef498fe"
        },
        "item": {
          "id": "d8be2fbc-acbe-4f24-8a6c-c99703b2add9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72ff4e2a-3ed1-4a71-a624-dc826239336d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e88ed-54e4-4854-a200-b6757728dd24",
        "cursor": {
          "ref": "3cadf01a-3773-410f-b588-dceedb1d8b4c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "93a14ac9-1847-4bdc-862b-3e44b694af75"
        },
        "item": {
          "id": "cb4e88ed-54e4-4854-a200-b6757728dd24",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "264fee5c-6f23-40d3-bdf0-b042ee2030af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e108f7b-359a-4cb2-b036-330194aafce2",
        "cursor": {
          "ref": "db12f250-14ba-46cf-82a1-6ac2eeced765",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6f1ef63f-0ab7-4610-b797-1e930495a536"
        },
        "item": {
          "id": "3e108f7b-359a-4cb2-b036-330194aafce2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "974010e0-f632-4463-aa19-a5a1f6a07994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44313a44-d87b-4122-9729-a7054528a6d3",
        "cursor": {
          "ref": "4fb2d914-58a2-4270-a9b8-2d7fec5305fb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ecf27763-a6fb-454e-85d7-611528f69708"
        },
        "item": {
          "id": "44313a44-d87b-4122-9729-a7054528a6d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84f96c48-bcbe-4359-af7f-7881776954fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedb7eb7-824e-4cf7-bab2-c513dc1eb6d8",
        "cursor": {
          "ref": "32a1ec6a-b40a-4d88-84a3-df8848696fa4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "264af04e-6938-44f4-bf04-7e7f051388f0"
        },
        "item": {
          "id": "fedb7eb7-824e-4cf7-bab2-c513dc1eb6d8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12679aba-28a5-452b-b223-9d1939f61018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982c287-ac7e-490c-b7f5-a9446fd008c1",
        "cursor": {
          "ref": "39fa6e77-8c84-4e44-bb4f-e0c231bbeb06",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f697b507-4b50-48a3-b858-45793fed16f9"
        },
        "item": {
          "id": "f982c287-ac7e-490c-b7f5-a9446fd008c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "349883a6-7177-4b3b-8013-7b67d8041b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2125946f-e2c3-4012-8b94-d3cc4eca817f",
        "cursor": {
          "ref": "801ac288-825c-41a7-be95-fddd8a38fb9b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35464770-1593-4ac4-bb38-24f88cda3a5c"
        },
        "item": {
          "id": "2125946f-e2c3-4012-8b94-d3cc4eca817f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1dc804fb-c831-4f60-86d4-edc35ec910a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786dc08d-5c4b-4c61-8e45-42a4618a8086",
        "cursor": {
          "ref": "3747af39-aac6-4f70-94ce-8c57a658cb8e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42928c4b-abe9-4568-b344-a5d96be77a23"
        },
        "item": {
          "id": "786dc08d-5c4b-4c61-8e45-42a4618a8086",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a79b07d6-a452-4b98-b06d-c22afce2075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9618a795-b0d9-4dd5-844f-2cbb73ecfcb1",
        "cursor": {
          "ref": "95aa2cbf-cb54-49d0-b9ec-cc7b3d96c271",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f6940d7d-d5fa-4fa8-ad4a-d8571d3cc7cb"
        },
        "item": {
          "id": "9618a795-b0d9-4dd5-844f-2cbb73ecfcb1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b1d50e02-b643-45de-a2b2-98bffe84b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c6a3f-9c3d-4871-a4df-4a34e45d230c",
        "cursor": {
          "ref": "fce72df0-e16d-492d-b60e-9e73502dc8e0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0ec80caf-00cb-400c-99e8-46af1ac8f1f0"
        },
        "item": {
          "id": "fa7c6a3f-9c3d-4871-a4df-4a34e45d230c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e612ed5-6567-454f-a9fb-300c1ef423ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499445a0-b519-45ed-afc0-d4f02be645aa",
        "cursor": {
          "ref": "47ae4d32-b9bd-4cb9-84bf-bb63f3ceb531",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1d17932d-3e1d-4ccc-ae5d-f056ea131b1b"
        },
        "item": {
          "id": "499445a0-b519-45ed-afc0-d4f02be645aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ae2394c-3fad-48a2-88ab-461f62a1569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ba368-c7cf-4f07-b66f-7df11f972add",
        "cursor": {
          "ref": "347219e1-446d-4c4b-bcdb-81a051bb67bb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1e852cd9-167c-498a-a00d-e0709d1d6050"
        },
        "item": {
          "id": "568ba368-c7cf-4f07-b66f-7df11f972add",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "834999c2-6c34-491e-80ab-e2b13ca02d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67f88e3-3c24-4d8e-8c38-8046b5faa03d",
        "cursor": {
          "ref": "accf45a0-59e9-4b6b-ad65-8c1e768f621d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a6bf8bd7-b9c5-4e08-bace-98fe1e8a2d7e"
        },
        "item": {
          "id": "c67f88e3-3c24-4d8e-8c38-8046b5faa03d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ff14de1-6670-4124-a68b-97fe58f7fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e0b5bc-c259-4318-944d-75060eb230af",
        "cursor": {
          "ref": "b00ea4f5-7163-4b1a-be48-e0bfa3571eb4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fa28164e-57b5-4205-95ce-b1a4591c1d2e"
        },
        "item": {
          "id": "86e0b5bc-c259-4318-944d-75060eb230af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9afde139-53d3-4808-b9e0-b267a36ad09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734be78f-e474-4d91-9735-0d9f952e339c",
        "cursor": {
          "ref": "00ad1fcf-668d-4edc-807f-553b504c8d3d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "18fbcde2-e1aa-49bf-bf74-692be1c429b3"
        },
        "item": {
          "id": "734be78f-e474-4d91-9735-0d9f952e339c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "792a17ad-5f6e-449e-96b3-65872ee9ae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a705b6-22e0-42dc-9d45-4a0e796e4aa1",
        "cursor": {
          "ref": "15d7b0c3-c65f-4ee4-b960-76b5369ed3d7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "804df7a5-5789-4d66-b5ac-ce6fc3cfe3a7"
        },
        "item": {
          "id": "47a705b6-22e0-42dc-9d45-4a0e796e4aa1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5899f74-0ec7-42ad-9d1b-0d91934797c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b43f9-ac21-4e7a-a2cb-aab933c25446",
        "cursor": {
          "ref": "2f275e46-605d-459c-9ada-02321dcb08a2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "27f373a6-28ec-4670-b913-c615706e3986"
        },
        "item": {
          "id": "2f4b43f9-ac21-4e7a-a2cb-aab933c25446",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c7d25ef7-6b88-4524-bfdf-d3f3bd007ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c4447-9d10-4dc1-803f-151be37abfd5",
        "cursor": {
          "ref": "106ce2c7-0cf5-4d20-bf6f-f017317c4ea6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "77a82744-3485-4225-a45b-80f156ff0ace"
        },
        "item": {
          "id": "619c4447-9d10-4dc1-803f-151be37abfd5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2eba1acb-3f02-4c5c-8f95-59ebf232473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bba67e6-a2e5-4108-b0b3-bac54e9bab7a",
        "cursor": {
          "ref": "3b63b678-7350-4265-b624-69fb702c6ea5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d442c22b-0c34-48e5-8cf5-8c1d86278b89"
        },
        "item": {
          "id": "3bba67e6-a2e5-4108-b0b3-bac54e9bab7a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75c88967-2800-401b-889b-ea58f4f36ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8557be19-80e1-4df0-86bf-390025604377",
        "cursor": {
          "ref": "f830d196-db88-4f3b-a07e-0f9ee8bcb653",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "21303941-9da2-44ff-acaa-47a153284578"
        },
        "item": {
          "id": "8557be19-80e1-4df0-86bf-390025604377",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79d58ab1-05ab-48ab-afed-9897ff6a140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93316e-cead-4e2b-aade-8a75f0e6eeb9",
        "cursor": {
          "ref": "abedf01f-2fbe-4137-9565-caca7947a9b7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e88dba7f-044d-4993-b94d-ece131e64051"
        },
        "item": {
          "id": "bf93316e-cead-4e2b-aade-8a75f0e6eeb9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0187eb8a-89c0-4a2c-8304-4d15e32b8b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a60e4d-b038-481e-be90-43c59858218d",
        "cursor": {
          "ref": "459b0ced-4d61-4949-817d-20453ef110ef",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "33b7b095-3a25-4fcb-b8ee-9c1d76daf620"
        },
        "item": {
          "id": "e2a60e4d-b038-481e-be90-43c59858218d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73135126-ce61-4cd4-93d4-95a5bdb71649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427f0ac7-dfbb-4022-96fd-6bf427465aa8",
        "cursor": {
          "ref": "17d7979c-8cfb-40ab-b0c0-bc7fc8c40d4d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2a722f3a-382c-4200-9407-fadedb8765de"
        },
        "item": {
          "id": "427f0ac7-dfbb-4022-96fd-6bf427465aa8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "836b154f-0005-4bc7-8b18-091b93abfb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b898fb-7015-410e-9ed8-a818b2ab3af0",
        "cursor": {
          "ref": "c86b0279-9d7b-4928-b44c-a47b9f80ef91",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4b83a352-e037-4ec3-a82f-1af858824500"
        },
        "item": {
          "id": "84b898fb-7015-410e-9ed8-a818b2ab3af0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3d57039a-aae2-4bba-9282-cff24a9b594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0731fd3-9792-445a-8d3a-38778c0b5fe4",
        "cursor": {
          "ref": "3be1f36b-8998-40ca-9057-b876a608f439",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bfbaa56b-3cd3-4a05-875d-428a9e0b8feb"
        },
        "item": {
          "id": "f0731fd3-9792-445a-8d3a-38778c0b5fe4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "57c0226c-0704-45d0-b4f0-0109efae35a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa62bb9-df55-4d25-9337-defef83a015c",
        "cursor": {
          "ref": "fc202d71-c707-4f59-8bd3-a20ef6440864",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aa9ffe6b-9967-4275-a5f2-7418ef24cefb"
        },
        "item": {
          "id": "6fa62bb9-df55-4d25-9337-defef83a015c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1a512d9-94cf-46a3-9943-0937f91f3d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cbd1b1-cdde-46a1-a0b5-bec5e0ae2e2d",
        "cursor": {
          "ref": "3e351a07-6dd2-4422-8bd0-c18489342e6a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "84268e62-69a1-436d-97a2-a896c8f6ac43"
        },
        "item": {
          "id": "30cbd1b1-cdde-46a1-a0b5-bec5e0ae2e2d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7e7abc3-ec13-437a-98b8-fda99a0d1d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1ad256-46db-4d7e-8938-43d7ccf2da84",
        "cursor": {
          "ref": "5b381ff5-6ac2-425b-a248-eef00c874269",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2c8ab0f-7de0-4923-ae22-82f8f890ea7c"
        },
        "item": {
          "id": "5d1ad256-46db-4d7e-8938-43d7ccf2da84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c7c939e1-0e69-4435-a973-87c61ba6dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d2adb2-ca1c-4f83-aba3-8bc541ee69a4",
        "cursor": {
          "ref": "ada1816f-9f0f-4c13-a580-64e14b215ed9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "44535308-8f65-4f04-b553-bbb923ecc0ed"
        },
        "item": {
          "id": "43d2adb2-ca1c-4f83-aba3-8bc541ee69a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0b36658-6ff2-496d-946c-49847c311785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c9a2d8-de33-4ee4-9b55-eac0f140b0cb",
        "cursor": {
          "ref": "a13acf25-8830-400e-9665-acc4999a2e6d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ba294ada-915b-41be-9cd5-49adb4d9fb18"
        },
        "item": {
          "id": "00c9a2d8-de33-4ee4-9b55-eac0f140b0cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "30c64b2c-5e31-406d-8fe0-15d1eff4d994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90d2888-2f39-4a44-a77d-e4b59e023469",
        "cursor": {
          "ref": "16946a72-286f-43c2-8298-710d29d8008b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c63ef5a6-cad1-4b8d-9cf6-cfbda2297295"
        },
        "item": {
          "id": "e90d2888-2f39-4a44-a77d-e4b59e023469",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96b59d2b-1eec-44da-b564-657d582d2d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1a872b-6c65-47d7-8976-1bbaa1f552e3",
        "cursor": {
          "ref": "a9722b6a-7943-47aa-ba19-d6a9438123c6",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2bc3e88d-8075-4857-9c29-4c73e76dac38"
        },
        "item": {
          "id": "7e1a872b-6c65-47d7-8976-1bbaa1f552e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74f94867-0a4e-4def-996d-eebcfa243c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de41f12-f340-4220-86b1-0e52fea1cd70",
        "cursor": {
          "ref": "c2e851d0-01ce-48a9-a032-049c7be489b2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6edce5bb-cb74-42fc-b882-27fed3054496"
        },
        "item": {
          "id": "0de41f12-f340-4220-86b1-0e52fea1cd70",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "84f6eb99-6fd0-4f27-9963-f5bfff7c644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb5527f-96a5-4ae0-9778-957d79321324",
        "cursor": {
          "ref": "cef27303-ef12-45bb-91e9-6cf17208b69d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "34b1e41d-5f4a-4d86-a188-af46f125acc3"
        },
        "item": {
          "id": "2eb5527f-96a5-4ae0-9778-957d79321324",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e224a3c9-41fc-4caf-b0ba-07e0c158384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6397a8d9-687f-4eef-8bbf-710e12e04c41",
        "cursor": {
          "ref": "3eeea040-410d-4bd3-bc38-e6a4bbd975a4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "706464a6-ce08-4de6-87fb-a9b06c459f7f"
        },
        "item": {
          "id": "6397a8d9-687f-4eef-8bbf-710e12e04c41",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e831472b-911e-4e59-9586-c34d2fb811f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d68cb8-c8e0-4508-92dc-18e39724a83c",
        "cursor": {
          "ref": "a5b89e10-fefc-4294-8ccd-4caf2be4f645",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "35491d4d-6f27-4816-9b09-61322ac81acf"
        },
        "item": {
          "id": "e1d68cb8-c8e0-4508-92dc-18e39724a83c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a69fd07b-7809-43fa-81f3-9158a631edcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c7d52e-b5de-440a-a51a-6c9713d61e34",
        "cursor": {
          "ref": "bf34e4fe-f209-4255-8eee-7f78d834db42",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "19428c9c-a914-42e8-895c-86ba72d2ccfe"
        },
        "item": {
          "id": "52c7d52e-b5de-440a-a51a-6c9713d61e34",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0cc739e0-017b-4dff-8327-fdfe08a273d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb0a8cd-30cc-41c5-bbaf-8e176bf93f80",
        "cursor": {
          "ref": "2b8fc2f8-e811-4ab7-becc-17dc47aa319d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bf0151ef-de3a-42cc-a873-451a465c771c"
        },
        "item": {
          "id": "1eb0a8cd-30cc-41c5-bbaf-8e176bf93f80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "421bea9f-f1ea-41d8-95f9-0ed6019d8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63a5619-0ec1-4dcb-8e42-4c5b12652395",
        "cursor": {
          "ref": "3620a50e-c488-4077-ab62-1d4ce3c8e2de",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8d7bdca8-3a4e-4bb8-b7e2-f15360d70d9a"
        },
        "item": {
          "id": "b63a5619-0ec1-4dcb-8e42-4c5b12652395",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d3d94b26-25e2-4748-bf16-c9bea20708a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe959487-57ee-4ec8-b2a7-7dfab5a8d053",
        "cursor": {
          "ref": "1444f30c-ba62-40be-b54d-b796bfda6f56",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "90971b9e-15fd-4ec3-a843-add9ee5fe796"
        },
        "item": {
          "id": "fe959487-57ee-4ec8-b2a7-7dfab5a8d053",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "108f4b57-f299-45fd-ac3b-5a3d2b97c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652bbc2e-50ba-418b-81c9-3e8d3d1142cb",
        "cursor": {
          "ref": "f3192884-3a60-45a9-941a-f6145d05ef77",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e1607e8-798d-43a2-956b-87c2214b3ed2"
        },
        "item": {
          "id": "652bbc2e-50ba-418b-81c9-3e8d3d1142cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e3c0be2-6d24-46a0-9f8c-e325f9cc180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f71c8c-9359-4689-bfd4-371bbd619699",
        "cursor": {
          "ref": "eded5a4c-93a2-4c84-af18-6a4594fd8d7b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c7b7abfd-449d-44f6-97d5-37773d1b2668"
        },
        "item": {
          "id": "a1f71c8c-9359-4689-bfd4-371bbd619699",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5602ded2-0462-4f61-9da2-543abbd48a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8569f54-c37a-4e72-8a1c-1906045fd7d2",
        "cursor": {
          "ref": "858769e4-9961-4ab7-9943-a33d4b8f927e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6a24ce6e-a5d5-420a-86bc-4ba415193ade"
        },
        "item": {
          "id": "c8569f54-c37a-4e72-8a1c-1906045fd7d2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "013784dd-72e1-4bd3-88a8-a6cdcdf4ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d6b399-3cb6-4926-b812-e31234bb0ba2",
        "cursor": {
          "ref": "41dc8210-6c8d-4499-b90e-90c921ce95ec",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d5ee672f-e4af-4ee6-8d39-739948c945cf"
        },
        "item": {
          "id": "68d6b399-3cb6-4926-b812-e31234bb0ba2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "97b42e98-e7b6-402e-ba54-e151d3008376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f468de51-1917-4707-81c9-be45a455c324",
        "cursor": {
          "ref": "a237462d-f385-4c12-b639-c02292be81ca",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "268594a8-b3b0-4fba-860b-c300c63c3966"
        },
        "item": {
          "id": "f468de51-1917-4707-81c9-be45a455c324",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a28f7941-1f7e-4139-bdc0-0f6d96cffc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a90ef1b-5681-4491-8a46-03c0a3c66a07",
        "cursor": {
          "ref": "0fbbb204-c7d4-456d-a817-78a9a35f7aad",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c875e0be-1ad6-4055-9049-72d70a5d5d3d"
        },
        "item": {
          "id": "1a90ef1b-5681-4491-8a46-03c0a3c66a07",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec2653f2-8c1a-46f3-8654-25ee8ffd6769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434aa30e-9ee2-4223-a9f7-0ee192897cc7",
        "cursor": {
          "ref": "9dc69f9a-f15f-4a8f-bcc2-896dc42b701a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "49c3a8e2-0914-4090-842f-64ba42963ddd"
        },
        "item": {
          "id": "434aa30e-9ee2-4223-a9f7-0ee192897cc7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef18c2b7-231d-49b4-99ae-7af6dd6b664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc3bfe-9ba4-4526-9d20-b035a26245e2",
        "cursor": {
          "ref": "564479fb-dc7d-4abd-a3a2-e3359abb7f03",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f7f266d8-107e-4093-a89a-fb16d188a1f7"
        },
        "item": {
          "id": "45cc3bfe-9ba4-4526-9d20-b035a26245e2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c036223-9986-4ece-89f0-d02ca87929d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b3a14-f43d-47b6-90ce-89b0c382988a",
        "cursor": {
          "ref": "3baa6ab8-a45e-44f5-bce2-f3acc39a5ddc",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a9bdeaee-344f-4940-9bac-11cfade81a84"
        },
        "item": {
          "id": "f74b3a14-f43d-47b6-90ce-89b0c382988a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cc48bd19-49e7-4a64-ab5e-e475e4bf9a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4c30d2-8ccb-4d8d-91d8-741f4607ac4c",
        "cursor": {
          "ref": "0196a218-6350-4f08-8fc3-a83d550141a3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bb79e651-47c5-4153-b336-33df4be1a915"
        },
        "item": {
          "id": "fa4c30d2-8ccb-4d8d-91d8-741f4607ac4c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba2c2b88-2956-42d2-962b-b33695c04cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7885c76-beed-4b75-a274-1c0f5260e5e7",
        "cursor": {
          "ref": "4a4237ef-3a7f-4824-9a97-9160b9c33352",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da0dfd97-1a21-4eee-804b-a7e3e776ac31"
        },
        "item": {
          "id": "b7885c76-beed-4b75-a274-1c0f5260e5e7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7cbe84d1-ec96-4d9d-81fc-cb55a3cbf6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee0b238-3662-489a-b684-b2e7b444e1cf",
        "cursor": {
          "ref": "73b3887e-4f6a-42cd-ae89-5e944546fc72",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8bbd70f1-e19d-4cf1-8531-9fc93f27f2e6"
        },
        "item": {
          "id": "9ee0b238-3662-489a-b684-b2e7b444e1cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "417d4e91-6da9-4892-96e7-e425ebfeb134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97579b-baa8-454e-b90a-b18c4b201638",
        "cursor": {
          "ref": "122b5997-faff-485c-954e-46c83f0cce8e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5365856-f9f4-4592-ade6-84f6acf6d806"
        },
        "item": {
          "id": "2d97579b-baa8-454e-b90a-b18c4b201638",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "974db862-75f8-48af-a9dd-a49e6e0fb866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2823c4-04c6-47fb-8129-65e174791bb3",
        "cursor": {
          "ref": "a2485378-bbd1-443a-8d99-4aeaaca0f4eb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9eb43441-dae3-4894-a29e-4d100478452e"
        },
        "item": {
          "id": "eb2823c4-04c6-47fb-8129-65e174791bb3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "825248b4-e10b-44c9-88c3-60014649b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4607f744-6252-44ee-bef7-59f17f4e2732",
        "cursor": {
          "ref": "d2f05163-5222-4445-8e6a-cb316613ceb8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a1af965b-1d35-48b1-a32a-b377eb6f2bd0"
        },
        "item": {
          "id": "4607f744-6252-44ee-bef7-59f17f4e2732",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4f1f2fb-3cc0-4e9f-a178-1c33f93286cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300ef9c-48a3-48a4-b4d9-99f00a6d2ddf",
        "cursor": {
          "ref": "18aadc86-6b49-41ab-b790-f1ae8ea9e0e3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "55886f4c-fcc2-443e-993a-7dd4a35af86d"
        },
        "item": {
          "id": "9300ef9c-48a3-48a4-b4d9-99f00a6d2ddf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6664191c-4110-4ecc-b623-44d3e57cfe27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eab18c-d44d-4eb2-84db-bfbe30223c00",
        "cursor": {
          "ref": "5c6c03e9-7779-46f2-ada2-7750cc49a0ab",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b2e3a3fa-5209-4d36-b8e8-513108319a64"
        },
        "item": {
          "id": "61eab18c-d44d-4eb2-84db-bfbe30223c00",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dee89160-1dc4-4f92-b468-bba3fe19f214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f743b249-a318-4d48-a4dd-0d4e58f97fb7",
        "cursor": {
          "ref": "5b60095e-64e9-4a78-866c-752ee0b1b64b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "50fc59b0-bd7d-4241-840a-0b45c3dd5c11"
        },
        "item": {
          "id": "f743b249-a318-4d48-a4dd-0d4e58f97fb7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5157b6c8-5feb-4a44-9287-de472396181d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152947aa-a0d6-428d-91d0-28779839e63e",
        "cursor": {
          "ref": "873f02db-268a-4409-b383-142493f25db8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a63c53e9-0bb4-41d2-bb1f-3ddde05e71c6"
        },
        "item": {
          "id": "152947aa-a0d6-428d-91d0-28779839e63e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a397d22c-4cd1-4635-a3aa-a0b6b8748c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1e6058-e722-4b92-b1a5-8915493c38f6",
        "cursor": {
          "ref": "6c2c81fb-0417-4554-8f28-82330991ba56",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3a801068-3ac6-445f-b4b1-a5ccbf19d4f6"
        },
        "item": {
          "id": "0f1e6058-e722-4b92-b1a5-8915493c38f6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d0d646b1-d9b1-423a-a1d2-3cb77839023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d79787-5bff-4ba6-ab5c-1f38a394e0d0",
        "cursor": {
          "ref": "8cb0106b-1c6f-4126-bd7b-cd143f6e92a8",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8bedffef-1440-44e7-b6dc-ca80762b9670"
        },
        "item": {
          "id": "14d79787-5bff-4ba6-ab5c-1f38a394e0d0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e478af5f-2c53-4f8a-adf8-9a054ac84420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0baab32-ee4e-4d21-b96a-c3bfc62854f5",
        "cursor": {
          "ref": "888ed1e2-5533-4b86-a246-c7a284f4e762",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "819f4ab6-887e-42e4-99ca-23b35cff03b6"
        },
        "item": {
          "id": "e0baab32-ee4e-4d21-b96a-c3bfc62854f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bfb89151-5c31-4fd3-96b5-d371123be2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d9b3bd-d435-48e7-8066-615506756ef9",
        "cursor": {
          "ref": "5ea00d09-23fa-4959-899a-8e31fa9b287f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "21c77bc4-564d-47de-9e88-39bb1dc76626"
        },
        "item": {
          "id": "94d9b3bd-d435-48e7-8066-615506756ef9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "40e692a8-5489-4333-85af-bbddcef2feb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc57cb2-3791-4a3d-97dc-3a048992f776",
        "cursor": {
          "ref": "d310cc9b-f954-49c0-99fc-32f594734fb2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "22e0a166-5c27-4a38-8a55-4069e1f9cd83"
        },
        "item": {
          "id": "3dc57cb2-3791-4a3d-97dc-3a048992f776",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3076bfec-e0ee-45e8-8d19-28a007ae144d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd9ad9-d42d-498d-92d3-83887e7e22d8",
        "cursor": {
          "ref": "d1d1c43f-1be4-4de1-9d6b-e821eb5e3c7d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fce902d2-8739-4b65-b156-2460a11e2942"
        },
        "item": {
          "id": "27dd9ad9-d42d-498d-92d3-83887e7e22d8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c187ab60-8def-48d1-aa37-58b053020c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9163572-84c6-4524-9a4e-5e89fd6991bd",
        "cursor": {
          "ref": "4a6e94c9-1ab1-4d9e-a63b-5f5aeed35963",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ac9748ed-e960-4e57-b8a7-ca39a98367a8"
        },
        "item": {
          "id": "c9163572-84c6-4524-9a4e-5e89fd6991bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c041ce8f-8fda-437a-b50c-744db726f11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3b6f68-f5aa-475c-abe3-32d81e98f759",
        "cursor": {
          "ref": "7381bd17-3869-4e47-b4b1-75ecf52a90cc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e94c7b92-6333-4bcf-adf7-efb9fd4684f4"
        },
        "item": {
          "id": "ea3b6f68-f5aa-475c-abe3-32d81e98f759",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "648077fd-2c9b-435d-bf43-122194faaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39628801-52d9-4fcc-a6b2-f6469ee6064d",
        "cursor": {
          "ref": "51923db5-c605-4b00-b8ea-64fa5e1ae911",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93277cdf-bd77-4e91-908b-8ab954ff31fb"
        },
        "item": {
          "id": "39628801-52d9-4fcc-a6b2-f6469ee6064d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e3c592f5-c609-4a0d-8c74-96e3dc88ee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c1d976-0021-414b-8f3f-1eb1b48a816c",
        "cursor": {
          "ref": "0968d178-fa06-47cf-a194-497832f1dc1c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "56583eea-51a3-4b59-bbac-e401b5d213b1"
        },
        "item": {
          "id": "51c1d976-0021-414b-8f3f-1eb1b48a816c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "11636090-121d-4416-942d-6503d5163de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8da5da-e53f-45e2-acac-81c7f474df30",
        "cursor": {
          "ref": "14585000-ea9c-4fd6-bcf8-ca12505d2963",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36b4fb0b-69e7-4af2-b5e7-337ae0fd4d41"
        },
        "item": {
          "id": "8e8da5da-e53f-45e2-acac-81c7f474df30",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4af7cd3f-c007-45f3-8df2-e356aa2860d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7134694-7413-42cb-8a5c-81f3c6c6db9e",
        "cursor": {
          "ref": "c78c9e3d-72f1-47d1-bc8d-29d0451821ee",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2ef66f53-9cd7-4202-9f8e-87621fffee06"
        },
        "item": {
          "id": "b7134694-7413-42cb-8a5c-81f3c6c6db9e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c8fba300-67b6-4c25-a413-e68ba3707cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca66450-0db4-41eb-a719-62c921c5bcf6",
        "cursor": {
          "ref": "e24236d0-07b6-4ab5-b39e-ce094e0716cc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "83cdb406-562e-4392-9bb0-f0a7fb8aaf92"
        },
        "item": {
          "id": "4ca66450-0db4-41eb-a719-62c921c5bcf6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1c1d98d3-24dd-4664-b846-b759f4b2d48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c816c257-9e3f-458d-a0e2-bf9cf962f1cd",
        "cursor": {
          "ref": "f4c49209-0dc9-4fb4-b282-0faa74ca8dae",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d0e2fd7-0baa-4d90-b359-9ebd9e4435e2"
        },
        "item": {
          "id": "c816c257-9e3f-458d-a0e2-bf9cf962f1cd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1b00d79-3727-4116-8f43-c4b2305c2ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a5614-b1b0-45b2-a6c1-c3f29d63e4cf",
        "cursor": {
          "ref": "9b9e21ee-8113-493c-b1fd-e442a5bdc159",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e82f20b8-c5ed-4348-8bfc-7901d51de93d"
        },
        "item": {
          "id": "794a5614-b1b0-45b2-a6c1-c3f29d63e4cf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0c86b682-92d5-45a4-a753-203f9c24281e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4d2897-006d-436b-8038-ccda880e3374",
        "cursor": {
          "ref": "5896fdad-1e4e-42d6-94a6-abed4f7f5f4f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8042a3af-90c0-43df-ba2f-0876ef6c69ac"
        },
        "item": {
          "id": "fc4d2897-006d-436b-8038-ccda880e3374",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6454c259-3aa0-4ab1-9173-4daf32ba5668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7de8e-9c54-4d32-a4e6-a68f07d9b515",
        "cursor": {
          "ref": "3b1c2eff-7405-4268-809b-18dfdd841bd3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c3fe1ec3-517d-4c58-b28e-e9f39d888fc7"
        },
        "item": {
          "id": "8dc7de8e-9c54-4d32-a4e6-a68f07d9b515",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0240c5b2-7be3-4028-9f6d-d36a5c0bb802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db232581-1bc2-4b63-b702-5da8dda97ff2",
        "cursor": {
          "ref": "3316c360-a4f8-4b4f-8d13-72455e4c97aa",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36c5e27d-6774-4489-876a-f58068ece976"
        },
        "item": {
          "id": "db232581-1bc2-4b63-b702-5da8dda97ff2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5e34af7-9b8b-4943-a4b4-f67264603623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a37cf98-c322-403a-b7d9-cc335f2eb057",
        "cursor": {
          "ref": "71ef394d-3df9-4f20-a6b7-d1cf4e3d24a7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19149ea5-da28-4ccb-a641-536149ad65a3"
        },
        "item": {
          "id": "8a37cf98-c322-403a-b7d9-cc335f2eb057",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da87cd31-f97c-4d8b-83f5-82f8be26df57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfec1f6-1572-4293-86f8-ada71e81ca64",
        "cursor": {
          "ref": "4823e335-e8bd-4304-ace3-f513e318fdaa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "884d38b8-70bb-4427-bd12-de4570eae84a"
        },
        "item": {
          "id": "7bfec1f6-1572-4293-86f8-ada71e81ca64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eed85f7b-53fe-4255-83b3-f7c78a149eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32687fe-91c1-4096-9602-f7e645186b34",
        "cursor": {
          "ref": "ecdc1c3a-9d83-4d04-9b3e-8696e7d7c43e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ac1edbf-cea6-40dc-851a-64287292da12"
        },
        "item": {
          "id": "a32687fe-91c1-4096-9602-f7e645186b34",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57b0b497-e031-415d-be4c-75effb563743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbf0b5a-bb89-4caf-bba5-b32ec690dd6a",
        "cursor": {
          "ref": "da0ef8b2-75ea-4665-9a18-7c396acf5713",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "12ee6829-1e31-4c58-9cf0-a91c855656d5"
        },
        "item": {
          "id": "5fbf0b5a-bb89-4caf-bba5-b32ec690dd6a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ad950d73-50f0-4c2b-a868-fbbec5c873a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5527ece9-8255-42e5-8b2f-653a498a9dfe",
        "cursor": {
          "ref": "e0d77157-bcc5-42e0-a9e0-ba08b7781878",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "94fb8396-702c-4a83-a4e6-b02ddd09c9e0"
        },
        "item": {
          "id": "5527ece9-8255-42e5-8b2f-653a498a9dfe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "51004390-b0bb-4b91-b6d2-ab7ca7d00ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df1ffdc-7642-49fa-a4ae-e4a6535baf32",
        "cursor": {
          "ref": "37df6575-3844-4d23-9411-bc26e02dd40f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "af36ab63-e428-4dc7-be0f-1ab5f452f7b3"
        },
        "item": {
          "id": "1df1ffdc-7642-49fa-a4ae-e4a6535baf32",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87d948d8-51b6-4cca-9180-62d059af08e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0c484a-3a2b-4e9a-93b2-7e4aacadf94a",
        "cursor": {
          "ref": "cb1dbee7-28ec-491c-998d-3dff3ad2b73a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e90fac73-4ac8-41bf-a3eb-b1dbfe6a85f1"
        },
        "item": {
          "id": "cb0c484a-3a2b-4e9a-93b2-7e4aacadf94a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9d62196b-502f-4bd4-b5c2-d791bcf6a6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b9750e-eb6f-41be-9f62-0857e7346a26",
        "cursor": {
          "ref": "377112e7-c0d0-4c92-8133-6654695ba73d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "38e7ecba-c703-4101-809f-2d520f3b69da"
        },
        "item": {
          "id": "f8b9750e-eb6f-41be-9f62-0857e7346a26",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "edf24201-9dd6-43fd-88f9-b2d71b3921cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98cef7e-ee72-43a3-8459-946056a9e926",
        "cursor": {
          "ref": "fd88e8c1-f3a9-4ec4-abb1-4b53d397ae8e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "304a52df-73c5-4306-a34a-f19b53343c20"
        },
        "item": {
          "id": "f98cef7e-ee72-43a3-8459-946056a9e926",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24d637bf-3178-4247-953f-257ded7cece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a99d193-66b9-46bc-b077-36ce3d438014",
        "cursor": {
          "ref": "c207acce-1670-4c4d-bc2c-12957374b0e7",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ef589a03-95bc-4941-a88c-94723d04ea9c"
        },
        "item": {
          "id": "7a99d193-66b9-46bc-b077-36ce3d438014",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "187b68af-ab92-46a1-ae93-f8d07366dc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0b45f9-aae5-4b7a-99e1-2e8eaaceb4e8",
        "cursor": {
          "ref": "0f37fe56-80f7-402d-a2c9-6cccbcc64a3e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d6e95b87-20d7-4fc3-b38e-d43745bd9225"
        },
        "item": {
          "id": "0b0b45f9-aae5-4b7a-99e1-2e8eaaceb4e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f92b5f03-3b49-46ce-a6ec-92393a0ef06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda59c59-cf15-493a-9646-1cf61d37c15b",
        "cursor": {
          "ref": "9ec974d4-a1cb-42b8-b89a-4cfae501c1aa",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "16ffed5a-55fd-4604-bdd3-0d26c3bc12cf"
        },
        "item": {
          "id": "eda59c59-cf15-493a-9646-1cf61d37c15b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1d69fcd9-0f73-4872-b72c-08e4dbf3d2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131469ab-6570-4b97-8a7a-117e58c277a1",
        "cursor": {
          "ref": "3fee992b-6c54-40c7-b780-e231d0c5b715",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ec74b506-3c24-4065-b65e-fbe311a2c880"
        },
        "item": {
          "id": "131469ab-6570-4b97-8a7a-117e58c277a1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80ffac11-f6e8-4a64-820d-4e3710115388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5843a079-4928-4f80-b336-0fbef76dfa5c",
        "cursor": {
          "ref": "3c7f422f-7f66-4186-8231-e613a3bb10ad",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "36d9c7c1-2d88-4e83-bf42-b4071d6dbca6"
        },
        "item": {
          "id": "5843a079-4928-4f80-b336-0fbef76dfa5c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7e983035-092e-48fe-85e8-8ae645049df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd847fa8-d4d0-4f71-b7e7-623b1f352ae0",
        "cursor": {
          "ref": "661da3aa-9da7-46f1-8319-d19a06674219",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "87198f92-070e-4e51-a939-21f82ffedc72"
        },
        "item": {
          "id": "fd847fa8-d4d0-4f71-b7e7-623b1f352ae0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1da03a76-40e3-4ed5-be1c-82485b351df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d32e20-38e5-440e-b9eb-76c8d6773a89",
        "cursor": {
          "ref": "4c29f2a0-e2fc-402c-a7c1-ea88b4a525bb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "699ff169-b91d-4b15-8ee8-7555d54bc346"
        },
        "item": {
          "id": "f4d32e20-38e5-440e-b9eb-76c8d6773a89",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f482d0e1-5af4-4820-8dd2-199af2b9561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec32889-364a-414f-8c8d-1145040730e3",
        "cursor": {
          "ref": "7e771cc0-e0f9-4722-9c60-deadef93eb40",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0ae16a8e-76ac-4d94-880b-6403aa5943c0"
        },
        "item": {
          "id": "eec32889-364a-414f-8c8d-1145040730e3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f97fb053-0101-4259-a5c9-b29470305f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05dc4da-181a-4ad2-b36c-a464edcdad51",
        "cursor": {
          "ref": "a19b30ca-dcf2-4683-ad40-95bab9ef4af7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ae722fff-b484-4877-b75e-104cf8df8d57"
        },
        "item": {
          "id": "d05dc4da-181a-4ad2-b36c-a464edcdad51",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03b93c14-fa52-40eb-a3c0-b7560a37a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24752b14-5ffc-41ea-a68a-65078ea205b2",
        "cursor": {
          "ref": "e1244c5a-e5b6-4009-a1b8-d8eeb61e3777",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "addff681-b538-4731-9aa8-e81354b52727"
        },
        "item": {
          "id": "24752b14-5ffc-41ea-a68a-65078ea205b2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bf58e4a3-994f-446b-b33e-ccb51fb2095f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfde17e5-dac4-467e-9149-73cd2b4ccac2",
        "cursor": {
          "ref": "a4b92e03-d3e9-4eed-bfde-e4d5c29697d9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d51b3fad-4a79-40f8-ab4a-9438e68cd5f3"
        },
        "item": {
          "id": "cfde17e5-dac4-467e-9149-73cd2b4ccac2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c6067065-8b38-410c-9243-f4a87c9500ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7504d25-f73e-48c2-a193-cfc722b4a1a8",
        "cursor": {
          "ref": "3e5707eb-4d3d-47d5-a169-17465a1fcdb3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aee3d71a-9c58-4823-a44c-7ad7b841214e"
        },
        "item": {
          "id": "f7504d25-f73e-48c2-a193-cfc722b4a1a8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "af884bdd-69ce-402d-b5d8-c0fc1b091f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba84909d-2dcd-4839-915c-39ccbfee3d54",
        "cursor": {
          "ref": "b8ac382c-74e5-4e88-86f6-7f5fcaa59e3e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5864df20-f63c-4c9b-9d20-4b21a1301f86"
        },
        "item": {
          "id": "ba84909d-2dcd-4839-915c-39ccbfee3d54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0edf2c63-837f-447b-92e0-c84936d6ee2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a7ac79-5722-41f4-812d-9701dce4861b",
        "cursor": {
          "ref": "718a426d-fdf3-4327-b22d-b1ff7e5ac7b4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "41a01dac-9a18-4e53-a3e0-89f934ead367"
        },
        "item": {
          "id": "a7a7ac79-5722-41f4-812d-9701dce4861b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "558a9628-ebef-4d16-afe3-4898b07f99a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acb7a6b-fbdd-47d9-8fa7-6e4f4b4c4035",
        "cursor": {
          "ref": "3c493925-0d4d-4106-aebf-f407de1865b4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7cdfa104-2aa4-4ec0-913f-81d2418903d1"
        },
        "item": {
          "id": "9acb7a6b-fbdd-47d9-8fa7-6e4f4b4c4035",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bc46804c-51af-4d64-84c5-cc227a64d7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d882aca-cebb-40ce-96c8-0dd68bb86d1f",
        "cursor": {
          "ref": "3ba778a3-16e6-439b-adf2-02a94eadc810",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3538779b-3cf2-4499-9384-360a0ddd1968"
        },
        "item": {
          "id": "3d882aca-cebb-40ce-96c8-0dd68bb86d1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "95ce7ffe-33c9-4640-86c1-9096660b02b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3650b82-ab38-4b15-9cab-9e39efcb585c",
        "cursor": {
          "ref": "3b26f488-08f0-4db6-bac7-29de6ba4dca5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "49251f12-79b5-4862-9fa9-39122f1500f5"
        },
        "item": {
          "id": "e3650b82-ab38-4b15-9cab-9e39efcb585c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "61f488c1-befa-41ab-9c3b-f88e69d377b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b3647-7ca2-4874-8cf5-cd8901368b80",
        "cursor": {
          "ref": "fdbc5746-685c-4cc1-a502-e5f5c5043942",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "51699daa-3e0e-4074-bb32-6223f69859e7"
        },
        "item": {
          "id": "fe2b3647-7ca2-4874-8cf5-cd8901368b80",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a576c1a0-5769-4b7c-9964-58092072ac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886268e5-26e7-4d06-9d08-63edd2c10ad1",
        "cursor": {
          "ref": "7c5c03bf-1915-47ae-a627-d5d8ca2340d7",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "851a316d-c855-4157-9341-415c9bbd2e4e"
        },
        "item": {
          "id": "886268e5-26e7-4d06-9d08-63edd2c10ad1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "942949fd-9724-4e79-962a-ea589c79e4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d43ff9-53d3-4ba8-893f-9d88765accb2",
        "cursor": {
          "ref": "5907b167-59ee-49a8-8119-c1cb5a3ea4b4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "45fd7820-21ea-47eb-bd31-633fc4474759"
        },
        "item": {
          "id": "f2d43ff9-53d3-4ba8-893f-9d88765accb2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7dbda852-6ec9-4f74-8a13-07aa70ab08bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31929b6c-e315-416e-9d3a-e0786b4d7764",
        "cursor": {
          "ref": "977aaceb-f380-4dbf-aea5-fd1a848241db",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86ddced6-9d96-4fdc-9275-9900b48e04de"
        },
        "item": {
          "id": "31929b6c-e315-416e-9d3a-e0786b4d7764",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7acd0d4a-0959-4b55-af20-e0830fc257a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c3847a-96c8-4098-9461-8fddf129667d",
        "cursor": {
          "ref": "b79adf36-cc04-4d8f-b0a4-105860701bdc",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9ee61cb7-76a3-45b5-b3c2-e432266a0751"
        },
        "item": {
          "id": "e4c3847a-96c8-4098-9461-8fddf129667d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e91a89f9-389c-4b9b-b0c3-7b1609f7eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef107c7e-b1f6-4f77-9a2f-fddadf630166",
        "cursor": {
          "ref": "5aca7bef-0a38-44ae-90bf-d7d1cf20209b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1521b161-231c-4953-997a-47eb31c9de5e"
        },
        "item": {
          "id": "ef107c7e-b1f6-4f77-9a2f-fddadf630166",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37146ea6-ad89-42cb-afd8-569ecc85c8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4362fb52-dc44-48c1-bdf4-56b56f12e6a4",
        "cursor": {
          "ref": "9396fe38-76ed-4c58-b0f0-d0ba2f391469",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4228c1e9-0e1f-47ec-9a4a-824c783fb278"
        },
        "item": {
          "id": "4362fb52-dc44-48c1-bdf4-56b56f12e6a4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e226214-bc86-4961-8cb1-50b34f7182f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee5779-21c9-483d-87d7-779491752997",
        "cursor": {
          "ref": "4dd96a6e-5561-465f-bd34-bd7f61a05e51",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de7923ef-be80-4c7d-b155-36cc3e58cacf"
        },
        "item": {
          "id": "47ee5779-21c9-483d-87d7-779491752997",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "99cf645c-0d34-416e-8c82-43c4cdd5ab75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff7705c-9153-4ac6-9bba-6f149def83f8",
        "cursor": {
          "ref": "171cc084-162b-41f5-b55e-d86bd7335838",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d6c02ef-8c12-4a38-ae45-73f4abfdf11c"
        },
        "item": {
          "id": "cff7705c-9153-4ac6-9bba-6f149def83f8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dd244dfe-e056-4eb3-8b93-6797168e5b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a13b32-de26-4853-a95c-a3e5675b0b3e",
        "cursor": {
          "ref": "d4d93fe0-2bc1-4f25-b2dc-20b411f8488a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "72930809-e2bc-41db-acc5-e64b81710960"
        },
        "item": {
          "id": "33a13b32-de26-4853-a95c-a3e5675b0b3e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "500e34cd-3bcd-4053-83a4-7a2e474760cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5654bf-7086-461c-8d3e-60133dc76916",
        "cursor": {
          "ref": "81a12162-7f4e-4f1c-b216-5e39f940bd84",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4100772c-0681-4722-add6-d5a0b2321a9f"
        },
        "item": {
          "id": "ec5654bf-7086-461c-8d3e-60133dc76916",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34d5e0a4-099f-4211-8d00-6587716867ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5a987a-db86-4d34-a24f-ba806be36d98",
        "cursor": {
          "ref": "56322abb-a450-475f-b0c8-3c2c546a0ecf",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "96ce5dbf-f08d-4045-9f63-754e00cdd5fb"
        },
        "item": {
          "id": "de5a987a-db86-4d34-a24f-ba806be36d98",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42d8d2d0-3f99-4d5e-adce-0521656439bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e645ee64-bf36-42ef-8f22-a692ddf0d589",
        "cursor": {
          "ref": "63c8d877-b152-4ec5-8874-f8f5cc0814c0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "35761df5-d451-4ac0-8de9-27a0e2b8338c"
        },
        "item": {
          "id": "e645ee64-bf36-42ef-8f22-a692ddf0d589",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "21b16351-e7cc-4cf4-8211-3656774e749d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf0b5d-4a08-4a36-bdda-d106903a6c39",
        "cursor": {
          "ref": "0e6cc9fd-406f-4ed1-8422-5b0c6efb1084",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e7e507b6-1954-44e2-a0c1-0d2468e56d83"
        },
        "item": {
          "id": "5bbf0b5d-4a08-4a36-bdda-d106903a6c39",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d75f79e1-2c40-4106-a3b5-a744ecb44ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8299db72-0762-4c69-9837-b29eeaac273b",
        "cursor": {
          "ref": "24326b33-2d71-4b8e-b1be-b133757f1f1d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd9fda18-0129-4da5-a7ab-1dd755b296af"
        },
        "item": {
          "id": "8299db72-0762-4c69-9837-b29eeaac273b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d3ea730-fd22-487c-b7a5-f6eba466c0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da56e4f-ef62-4602-9b0d-b639ecf97777",
        "cursor": {
          "ref": "368ed9ef-aebe-48c9-9ee6-4d02fd8aaf54",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b3748ca7-b008-46a9-8122-2ab17462404c"
        },
        "item": {
          "id": "2da56e4f-ef62-4602-9b0d-b639ecf97777",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7f49ca0b-eed8-4ba5-9633-4337fcef24c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4384350c-d7ff-4800-b0be-9fba055db7e1",
        "cursor": {
          "ref": "660ab28b-95a3-465b-bc5b-5fff4949b8d7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b0cddb9b-62c1-4d5f-9357-2152358ae9e4"
        },
        "item": {
          "id": "4384350c-d7ff-4800-b0be-9fba055db7e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1be2031e-6e0e-42ee-8da2-928167b01b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4078464f-10d9-4c4e-9835-3075217b4d10",
        "cursor": {
          "ref": "02bda7fe-80c4-459b-9ee9-a54e95b674f6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc714544-c281-42af-8c8c-3bbe82fa0e31"
        },
        "item": {
          "id": "4078464f-10d9-4c4e-9835-3075217b4d10",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "03821f09-1873-40e4-b3c4-e5cbfecc89d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe3b68-c6d5-49e2-ad45-af2d8090468c",
        "cursor": {
          "ref": "05f4a46b-a43f-4b6e-9afa-59a7dc9abaaa",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0837ad8f-cee1-4512-b681-37b4a11b688e"
        },
        "item": {
          "id": "45fe3b68-c6d5-49e2-ad45-af2d8090468c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04ec0a6a-3457-4f9b-ae14-57d2b7686871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba5f74d-0f89-4fd9-833e-c78d43ca09ad",
        "cursor": {
          "ref": "189e2062-b065-4949-b227-47fe8e0343a7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e2dd04a4-fc51-4265-bb60-1181fccb3254"
        },
        "item": {
          "id": "fba5f74d-0f89-4fd9-833e-c78d43ca09ad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fa613f9b-f723-440f-a019-bd2896ef7d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b235b6ae-ffb3-4c42-8f6e-7d1e23c0f209",
        "cursor": {
          "ref": "42990af4-e4a8-4f34-9c60-f63809638b42",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "33c79ab8-4027-4ae9-be16-5fa38315d739"
        },
        "item": {
          "id": "b235b6ae-ffb3-4c42-8f6e-7d1e23c0f209",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "040a6c24-e658-47ec-a101-40cdb3eadd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6b57ea-7656-4703-904b-7ba11f763911",
        "cursor": {
          "ref": "204cb6b5-6310-47c1-9fe8-f7891be22bec",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a05071af-9899-43ef-a8a5-705246883e2c"
        },
        "item": {
          "id": "9b6b57ea-7656-4703-904b-7ba11f763911",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47e75e5c-a5e5-498d-8579-3fb8886de014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7995c364-2b1f-432e-b3c5-23b2bdf1f5b7",
        "cursor": {
          "ref": "5e6b6a7f-3050-4848-af30-f11efee0eab4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "75a64097-f2a8-4307-9ea8-6a85a2ef7876"
        },
        "item": {
          "id": "7995c364-2b1f-432e-b3c5-23b2bdf1f5b7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "12e3e531-676e-4513-827e-a4249cf0d3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e562be5b-cd30-412a-801d-70d16209226a",
        "cursor": {
          "ref": "1ae3460f-a974-4c7c-9eb2-279226e93a3a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d0531b90-fa0a-4167-a1bd-6f3c808d2a81"
        },
        "item": {
          "id": "e562be5b-cd30-412a-801d-70d16209226a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2214ed5d-b7f1-4db3-a373-708668d2e631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa83ea9-df06-4bbb-af0e-030801290276",
        "cursor": {
          "ref": "e8773bfb-c02f-4b2c-8c67-6f5b2af24fc4",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "827c6042-07ad-46ce-a3ff-4f16d70ad210"
        },
        "item": {
          "id": "5aa83ea9-df06-4bbb-af0e-030801290276",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e7f11306-bf05-4828-9207-786318ba55c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2c9924-1544-4147-9c94-f0da513137b9",
        "cursor": {
          "ref": "6b2b8442-ebb8-49ec-84c2-51bea1d73035",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef55f2fd-5723-4384-8ff5-03611751bf8f"
        },
        "item": {
          "id": "fa2c9924-1544-4147-9c94-f0da513137b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "247eb885-a0e1-428f-9e41-84a4713a4717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca0d7e0-89b8-4aa3-a16b-b3591b75c236",
        "cursor": {
          "ref": "ab9e9b98-01ff-480f-9ecc-3147c129de7a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9cd9d46-37b7-4097-8649-a228a225afbf"
        },
        "item": {
          "id": "aca0d7e0-89b8-4aa3-a16b-b3591b75c236",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4165c2eb-3f56-45bf-b958-978d146a73e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0b51e9-ff23-444c-87c2-1c788a6951b5",
        "cursor": {
          "ref": "6e863668-23c4-4341-8188-97b40f23d159",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a22cce6-f24f-4a9c-a325-a9dc0efff10c"
        },
        "item": {
          "id": "5a0b51e9-ff23-444c-87c2-1c788a6951b5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c1199a0-895c-47c6-8596-34dacae237d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf7cde6-3435-4c77-affd-87d35aacb1f7",
        "cursor": {
          "ref": "dd2b2d17-cecc-4471-93ac-4dbd146bda60",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f4a8cd4-022a-4180-94f4-5dd1feef1379"
        },
        "item": {
          "id": "faf7cde6-3435-4c77-affd-87d35aacb1f7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ae12a3ae-c744-4134-adcd-f65c48e037bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d371f5-aba3-4533-b200-21a701add41e",
        "cursor": {
          "ref": "ba7386fc-a0dc-480d-a3b7-b057965f3ab3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a94311c0-ec2e-40e9-8d5b-c7a6b4d05de6"
        },
        "item": {
          "id": "96d371f5-aba3-4533-b200-21a701add41e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8fd63f22-500b-4ec4-9d10-29f012ebc60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c678ae3a-3b9d-4a56-86e1-38d90137852a",
        "cursor": {
          "ref": "08293b18-0603-4f2c-9073-6fc6bd2f3526",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8c175e90-b027-45ab-8aad-0355b9ee38cc"
        },
        "item": {
          "id": "c678ae3a-3b9d-4a56-86e1-38d90137852a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66856a9a-06ce-4a32-bb23-57da5a4280c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a13141-f5fc-48fc-910f-86f45d14e724",
        "cursor": {
          "ref": "5f536149-e27c-4427-aefe-a99432f0e22b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "568a2568-c611-4794-a4df-d5789b746df2"
        },
        "item": {
          "id": "b4a13141-f5fc-48fc-910f-86f45d14e724",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "15fd0ee6-f47c-4e18-8334-af05209b6f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e717793-9572-4eec-9507-d8ba3a74ec3b",
        "cursor": {
          "ref": "a1ae5c17-a9f5-4be5-bb32-08b0eb870c7a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1216d232-cb26-4554-80ae-0ad098ede6b1"
        },
        "item": {
          "id": "3e717793-9572-4eec-9507-d8ba3a74ec3b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4fa02a66-3700-400c-9bae-71fc67db7f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde92b77-bcbf-47bc-931f-971d48915364",
        "cursor": {
          "ref": "23f6617f-21e3-4c20-b5d7-07d300bcfda9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "824c69c2-057a-4994-9c5e-cac6129d78e7"
        },
        "item": {
          "id": "fde92b77-bcbf-47bc-931f-971d48915364",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d841dace-819c-4f3e-9088-f430917b4343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3b5884-8dcf-4a91-b33e-b1845199e9a9",
        "cursor": {
          "ref": "7e2ac24f-d91b-4a54-9ef7-0f774b94f227",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e75d7281-cd18-4292-af26-b5070ae50555"
        },
        "item": {
          "id": "dc3b5884-8dcf-4a91-b33e-b1845199e9a9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "11a177db-4f1d-47ad-adae-b0c8b1c44d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b065b24-08e4-439e-b19a-adab0572632d",
        "cursor": {
          "ref": "7c8c76b1-09d1-4ef3-8871-b998afdc8f38",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f4e80025-fbc5-48b1-95a4-7e89b3e5845c"
        },
        "item": {
          "id": "8b065b24-08e4-439e-b19a-adab0572632d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e72d2bcc-a2fa-44b2-a5e5-ebb16e28c66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cd224b-39b9-484d-a23b-e98469737a75",
        "cursor": {
          "ref": "771e1e86-fbf8-4e42-9e18-29036214d9c1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d0fb3737-b70a-4b25-a3d0-475cf7b3d5eb"
        },
        "item": {
          "id": "c5cd224b-39b9-484d-a23b-e98469737a75",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5aa66154-377d-4245-b211-d80f3b9a555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadc49f6-ff2b-47a9-98fc-129e448005e5",
        "cursor": {
          "ref": "c8a0d727-d613-4616-b3b8-eff1b60637c6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2ef75ac-bdbd-447d-b504-8bfee0a0e418"
        },
        "item": {
          "id": "fadc49f6-ff2b-47a9-98fc-129e448005e5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3c90c4c0-4dd7-45b5-b968-991807e1bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8845e41-5547-4b2b-88cc-77dcc1b92dc4",
        "cursor": {
          "ref": "3779b160-eca2-4d58-97bf-8eaca3b088cd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8afa2bf7-a618-4c93-9c2f-dec70ab14776"
        },
        "item": {
          "id": "d8845e41-5547-4b2b-88cc-77dcc1b92dc4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "677f229a-9d88-4245-adf8-da468cee4ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402102a-6128-4ada-ae96-3d5ff3c4df98",
        "cursor": {
          "ref": "d7ad1e60-caf1-4bf7-8729-d4f7e52eb0ec",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4e90c5c3-2648-416b-b560-95fd13bc5e93"
        },
        "item": {
          "id": "8402102a-6128-4ada-ae96-3d5ff3c4df98",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e50a98c3-b805-4317-8ea8-1dbfa447f7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8e1291-5b94-47a6-80a1-2529cc9f46b1",
        "cursor": {
          "ref": "7eac9b2f-6ada-449e-9f2b-f7327c324410",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "da729730-990d-4e87-8470-a05f9570f7bb"
        },
        "item": {
          "id": "9f8e1291-5b94-47a6-80a1-2529cc9f46b1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46b552cf-30b6-4e96-a32d-e29364892122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a282fef3-bf4d-4d1d-8fa5-b2fb59ce9dd9",
        "cursor": {
          "ref": "50bfa6a1-4ab8-4a12-a3ff-75e4c3e1ad81",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "15f50ffc-31cc-4c74-8535-44c74e66a016"
        },
        "item": {
          "id": "a282fef3-bf4d-4d1d-8fa5-b2fb59ce9dd9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d7f65e15-3b51-427d-b831-fd99231f3d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77982cb3-51ba-4eb8-acb4-2a4f74ae427d",
        "cursor": {
          "ref": "d4e9505f-9969-4293-8fb9-2d2345d6830d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bed49a97-0199-411e-8526-ac460b0d990b"
        },
        "item": {
          "id": "77982cb3-51ba-4eb8-acb4-2a4f74ae427d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "83f8e27f-b04b-4e91-9ebe-4ae233daab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d8c852-b1d7-451a-8834-a4390c57e6b3",
        "cursor": {
          "ref": "dace7bcd-8bb9-48ee-8b3b-14c2e1a7ca54",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6451c9c0-1fb3-4afe-88e8-54a977cf09ce"
        },
        "item": {
          "id": "85d8c852-b1d7-451a-8834-a4390c57e6b3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b01f70eb-5c38-4afd-b786-805477e1437e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b447506f-e11c-4454-8aaf-9b50a1ba96d9",
        "cursor": {
          "ref": "0799db43-3e32-43cf-a88c-d4d405a73b15",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ff236a03-ac09-4f69-b1e1-af40dbb9c434"
        },
        "item": {
          "id": "b447506f-e11c-4454-8aaf-9b50a1ba96d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1dfc3954-fafe-40bf-9b98-fd50b84e339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794323c9-a07d-43ef-9b8e-4ff68e14d2e3",
        "cursor": {
          "ref": "f506155c-2f65-491c-a7a2-9c32ecb115e1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5659b5ab-c141-407a-b5d6-b31d6ff4c085"
        },
        "item": {
          "id": "794323c9-a07d-43ef-9b8e-4ff68e14d2e3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dbfc8e82-22ec-4c5b-9071-41d49bbe269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3e229-5e90-4129-b2a8-4a7ad2a493c2",
        "cursor": {
          "ref": "64b10496-0b42-420a-841e-2c1a2be302b9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "107ecd5b-3210-4318-9806-a5835121404d"
        },
        "item": {
          "id": "1fb3e229-5e90-4129-b2a8-4a7ad2a493c2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2e166c50-32b5-4d3d-b945-e8dd007a6a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3f27f7-dec8-40a9-99eb-56ea494661a1",
        "cursor": {
          "ref": "30caec98-38e3-4288-9dda-d83c1cac980f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "491e6709-bee4-421f-a666-ffe48ac549bf"
        },
        "item": {
          "id": "1e3f27f7-dec8-40a9-99eb-56ea494661a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8adcc1e9-4394-482c-9d60-9001d225ccf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8648e5-20ac-42ae-b2d6-6642d53f6807",
        "cursor": {
          "ref": "7b8ca5eb-cbf3-4b84-8a6e-93b49670f831",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9bf51121-8ff7-40c0-8dfb-053619f10403"
        },
        "item": {
          "id": "8c8648e5-20ac-42ae-b2d6-6642d53f6807",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "117b9210-77f2-4005-b0a2-e21ed7092673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00573176-784c-4c1d-8ce4-839bf12b7c0d",
        "cursor": {
          "ref": "d93e460b-42de-4764-8711-abb7178a47d7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "277d1015-a84b-40ca-8dce-74a1f3f5514a"
        },
        "item": {
          "id": "00573176-784c-4c1d-8ce4-839bf12b7c0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8e1aafd4-a5e2-4f7f-9bc1-8841353eca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2595eb99-bea1-4db9-8e8a-b9062fa7d0eb",
        "cursor": {
          "ref": "03d4c86a-0530-44d8-a77a-1861b8e744fe",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "253960a9-3d32-4eb4-8bf8-84f89f2f9f6d"
        },
        "item": {
          "id": "2595eb99-bea1-4db9-8e8a-b9062fa7d0eb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1747eb5a-b287-41a6-8c74-0c0fe979a6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8aee6f-4cb2-4bfa-8542-bcff67dcde61",
        "cursor": {
          "ref": "4f746015-32b4-47c7-9997-b4f091d07069",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d75bbc2d-f413-4c21-9f3c-a567b0219c3b"
        },
        "item": {
          "id": "0e8aee6f-4cb2-4bfa-8542-bcff67dcde61",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c04d6c2-7384-4717-987a-a8c5d04b1c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54743c7-6ed1-46e1-9fff-9d4dd7a2a168",
        "cursor": {
          "ref": "5c3ae294-bbbc-4c64-953f-b425deaf5440",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1860d29d-f97c-49f8-96de-8cb707cae917"
        },
        "item": {
          "id": "a54743c7-6ed1-46e1-9fff-9d4dd7a2a168",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e2b08bb5-f04a-424c-8642-8a32611aded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59dbae3-bc58-4525-a125-f263095408f0",
        "cursor": {
          "ref": "026b6565-cd5a-404e-82df-4427476cc2ef",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a76a6e05-d08e-4e2e-bf06-6a628d7351a5"
        },
        "item": {
          "id": "a59dbae3-bc58-4525-a125-f263095408f0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "828088b3-aede-4ce9-b1df-cb1f82826c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb3066-0cf0-4d47-aa82-87d0e55b4ed7",
        "cursor": {
          "ref": "aa5537d5-892e-4ea7-910e-3056432fa726",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ba8fa605-904e-4434-a284-70f9566c8d07"
        },
        "item": {
          "id": "a7cb3066-0cf0-4d47-aa82-87d0e55b4ed7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "604d87be-1852-4865-80ee-b1854989f0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359f7bb-480f-4c0c-bf63-92d5ce7a1830",
        "cursor": {
          "ref": "55d848f3-ebed-482e-a2a6-c24d64e27831",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "97da57d2-cecc-4ae3-a5a0-e94c022f5900"
        },
        "item": {
          "id": "b359f7bb-480f-4c0c-bf63-92d5ce7a1830",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9656eacb-1a74-48f9-9435-3540e51c1cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62342b01-2c36-44d7-90b7-b41c0de7ac36",
        "cursor": {
          "ref": "ba6e921d-2155-43fc-bec8-6a03829b40dc",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f67632ee-eebb-4b8e-84cb-30c32af7f57e"
        },
        "item": {
          "id": "62342b01-2c36-44d7-90b7-b41c0de7ac36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "decd6d3e-97fc-454c-8827-11cacdbced66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2d722f-14d4-4bd8-bddd-f79080b3a72a",
        "cursor": {
          "ref": "3591caa2-fa1c-4870-a843-1e78a1322545",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d1d4061-9914-4fde-9938-bddc68b4eeed"
        },
        "item": {
          "id": "bb2d722f-14d4-4bd8-bddd-f79080b3a72a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0f77b5e8-4cd2-483e-acc2-e74cd7c77882",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f484a95-e909-4f9d-a8e2-707e618ae893",
        "cursor": {
          "ref": "96dc7eeb-1f7f-4f8c-a9b0-ac3a3d504332",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6f3f7801-9eed-442b-881a-917bb4795e09"
        },
        "item": {
          "id": "4f484a95-e909-4f9d-a8e2-707e618ae893",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "622bc08e-3147-46aa-9d3e-bf0000379fb2",
          "status": "OK",
          "code": 200,
          "responseTime": 126,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0607a-68cb-4eee-97fd-6b54c0662f3b",
        "cursor": {
          "ref": "16e331a2-d307-4f9e-a5c5-ab719e626a51",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2538bb4a-91ed-4126-a9a3-3e17d0e62484"
        },
        "item": {
          "id": "87f0607a-68cb-4eee-97fd-6b54c0662f3b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "56b4544c-8a31-4bb9-917b-c6db86cf2a45",
          "status": "OK",
          "code": 200,
          "responseTime": 1633,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc529aef-8607-4c09-ac4e-f08212a3a976",
        "cursor": {
          "ref": "55d732ff-dd6c-4aeb-a1b4-c3345f38c9dc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "19265848-b1bb-41ab-a56a-13c87223661d"
        },
        "item": {
          "id": "dc529aef-8607-4c09-ac4e-f08212a3a976",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9edfb4c8-b886-421d-844a-d18d79da7e52",
          "status": "OK",
          "code": 200,
          "responseTime": 1342,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c973ea-309d-4b5a-baa8-45c46fa33a64",
        "cursor": {
          "ref": "fd53a39e-9b4b-4f93-9c50-8fe5a3bb80a3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a66b65a2-f46e-4f02-be04-b157c190078e"
        },
        "item": {
          "id": "d7c973ea-309d-4b5a-baa8-45c46fa33a64",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bbf4edd-cc76-443c-a2f2-280e05491c67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c973ea-309d-4b5a-baa8-45c46fa33a64",
        "cursor": {
          "ref": "fd53a39e-9b4b-4f93-9c50-8fe5a3bb80a3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a66b65a2-f46e-4f02-be04-b157c190078e"
        },
        "item": {
          "id": "d7c973ea-309d-4b5a-baa8-45c46fa33a64",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bbf4edd-cc76-443c-a2f2-280e05491c67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc3c462-f263-4ccf-abb8-c0482be994e2",
        "cursor": {
          "ref": "b6ce8f77-02cc-4c0b-8ae8-2ea0ee32d112",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8c56803b-1e60-4d74-bb46-38bfcb8c0e8b"
        },
        "item": {
          "id": "8cc3c462-f263-4ccf-abb8-c0482be994e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d0e4a2f-cb1f-4088-9cef-441fa52e39e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47f13d9-8bec-4a01-b163-e03e9f90e7ef",
        "cursor": {
          "ref": "cd8d181d-77a6-4c7e-8bef-050acaf06a87",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b23549f6-43b9-43ac-a991-abd114692913"
        },
        "item": {
          "id": "c47f13d9-8bec-4a01-b163-e03e9f90e7ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "37ab08ad-ba15-4faf-b44e-3714d668d013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}