{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f92f7e7b-a03d-4333-8654-ad430c1917ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "22296f83-08dd-4699-af73-31d2f93660f2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3d9aeb4-a3fc-4594-a2c2-f125dce589f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f03b598-0903-4952-b94b-eeadfefbd6be"
                }
              }
            ]
          },
          {
            "id": "cd63ff4b-19ac-4456-85f2-3fdf4d053160",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7891caf-ac87-4e0d-860b-63ccc64fac8c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4ef3cfff-17ab-4993-bfd7-507b516fe5c4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b57e5341-7fd3-403b-848c-7523e1bb14bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8983274b-5d31-4915-822d-410ebb3a8d13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff0662ef-2411-4416-9d21-a51529cd6510",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b479cc5b-be09-4889-bf3a-5d12a256ac75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d2d58a4-6c70-4d5b-ac14-a4dced6bb840"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2e68811-e5db-4140-9ebd-dfd16bf5bd1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e22d4ac-09db-445a-8f25-26c06c304ce7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53023267-469f-4af7-b92e-173518516dc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af36bc45-08e5-4873-af59-18e252e23488"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a9556f5-745a-404a-94f0-3958cbb4b1f6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dd4b313f-d4d1-495e-8704-467e986045ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cf37234-a586-408e-b853-0789d30c4f08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd13f409-53cd-4c2b-b2ee-ee13d4bf9c54"
            }
          }
        ]
      },
      {
        "id": "9c7bb8d9-c957-48ea-b3bb-df609aba9cfe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14762270-1080-45d9-8472-85a1b1624daf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18c78148-e307-4e6f-a960-115a4fbc0217",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d086d70-8a4b-49db-ad41-0c0f87684183",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b7b70-da6c-42c3-adae-9cd3eb6cb999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "229c2e5f-46fb-41b0-9a95-7747639e4c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc05601d-48a0-4ce0-ad9d-61cde646b860",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ed49d-ac9b-4239-a9b6-fe3dc9e8287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1964344a-8596-4ea5-9c00-5805c7a34a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e590a51-a36f-4d1e-a3b4-f2f5d14ef89a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7937d8ca-ff23-40f5-9b5f-463d36eab048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2f30260-564e-4aaf-b07f-5ddb7abda67a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "32eded14-fe3c-4d9f-91e5-ee26c6d45a60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eb8ecdd-7dfa-4002-b0b9-a3c4577bcf8e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363ee668-7612-4281-ab1c-9af3f1ac5b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f3e8a83-b950-4ed9-815c-97f51d4a98c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41380e42-8128-4606-a61e-52e1a92c36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621e1967-3321-4729-be91-c52711aa6495"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fb51d6d-eb4a-4541-be77-8418a87d3440",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22583650-ef21-4ca6-a8ef-c1e0ad90c636",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec24c2ae-4fd0-4079-910e-54c899762dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de70781f-2d71-4582-bb1d-bf1b0ade9083"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f289eed8-201a-4414-ac23-322ae30c97eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e7bee061-7085-4443-88fd-8e3a16d55eda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5af941f1-75fa-4f5a-bec1-d6f04f722322",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffda140a-7d12-46bd-81d7-76639259d21b"
            }
          }
        ]
      },
      {
        "id": "bc25ed2e-09dc-4407-aca2-62782063f73e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8819a8ac-864c-4bb9-b780-759e45933c30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "804ba941-5f5a-4607-93a6-9ee740ce657b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "32952117-0886-4b7e-92a1-a5b9608c8bf5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de739493-f437-4055-9c43-812acc9851e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc115ee-46ea-40b5-9267-6e89db1df2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fd06c6-447f-4027-b323-a7b13bba75c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b69f26-03aa-4cb9-8953-9d25383a312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ab63f7-4474-4a7a-98a2-b9d69e6b140f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890054b8-03cb-4e82-89de-7ccaa0dbad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd23e2a-8c0d-4aff-8d52-3f9e59523639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1db0995-69f2-4443-8c2d-39713e0679b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e9fab86-6cf1-43c5-9ee1-989503049f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd539f-a160-4302-afcd-44f606d25433",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdee5d1-bf00-4d91-b5ac-21754fce1512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c1d8ff-9864-43e3-b7ea-71469b077621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f562d4a-366f-432c-b04e-b005f844b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d1d4a12-a4a8-40aa-8bf7-d68e221341f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9cc6c6-d812-4c15-9936-fa48f9c6d3dc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ece1d4-85f4-4fa3-89f0-6c91ce5c349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a0b806-a941-420e-8afd-1167e9160486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dca0ef6-935b-4fec-954c-3cd989484410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847a3216-6a13-4637-bae5-b542ae22458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daece172-4c71-4f5e-976f-5f287b938578",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a913b4-4eed-4526-88bd-bd1cfd6c7ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1170a2b-260d-4b22-baf2-8e677ac3c0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683cdb45-7758-49e2-a30c-60d4c1cdfe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b429e4a-34ca-4142-b14c-caa3a02ed17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e08970-2612-479e-b3e6-70551ccb5ab7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0adb9f-4f6c-4590-95a3-fd1956582f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4057314f-4e3a-49c2-8b15-3456b5afa811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e2c30c-3815-498b-8f92-a0996b6c95ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be791c3a-57ec-44fa-8b52-79340906efcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1a7a9-1475-4671-ba93-ef1e3d023e92",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7a5dc-3bf8-4080-83c7-044447b6eae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c82f68b-bcd2-4277-8beb-540991c1cad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25892efe-d61c-47ed-82e3-df22bc776326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "992ec2df-dd45-4988-abac-9fc1561d12b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d765918d-9dbb-4337-a64e-6eb68a8aad92",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fe5a24-f8a7-44a9-8072-0de28460b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae7eee3-2cf3-42a7-8f64-aadc75d1ec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b403fc1-3b14-439b-a298-5c8527332cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069795c9-9e62-48e5-8dc9-746b7ac5d92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8d659a-5502-4288-aeab-d10999ae1c54",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd6ff8d-1e3c-4925-b496-d8795602b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041aca2e-ad24-4077-8817-1f04539748f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c7e4f4-19b3-4a36-852d-ea8e12fe53ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29879f5-0095-4a25-8fdd-75b4fb208e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59310329-de24-427a-9afd-1b0602a27cbe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e67680f-84ac-4069-9d30-ee8706249c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d51ac0-ecfa-486c-90ea-1a2014adc28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08851162-7ff3-40ee-982f-79df362edccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ebfbe95-6e22-4f4f-a54d-8c2acc0cf366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f438d721-80f4-4bbc-a69b-ccdb28e95d51",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659158e8-13ce-4894-a6da-30d430237505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6514b5b-0786-4297-bba5-dd0dd3cbf3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc278d1-e988-468c-85bf-4e911ec9034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7721601c-d2ea-4d91-a1f9-4380366e9b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af370080-8646-40a8-9c77-dc0439baa8df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea28129-42cb-4c30-b9e3-62c05f4f6900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf65690-58a7-472c-825c-78f61e4d6eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe7fe30-f746-4413-a283-4fd80048a4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2068f0-76bd-426a-80f2-65cf9b9b3b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eaa5fb-fc3c-4ff5-bc9b-b86cd2016654",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fed1c-06b8-4b95-b472-d166b67557c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bd320c-1f39-4f47-aba4-6a5f296cd8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951478f8-72b7-44b2-bffd-82a7e3c6a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfdc2b2c-5fc2-49cc-85ee-5dd86b25aebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eeda52-77ef-467a-b248-e7c358ed4a24",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529ba511-b15c-4cf2-a8dd-7e6465840415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae2e2df-1674-444b-9e5a-68c8934ba16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eede31cd-c03d-4153-898b-a808d7f8f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fcb3111-8ff4-498d-babb-4d29b8a59347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91683258-4b8e-4876-a2ab-65484e0dbe41",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a9b0d5-ba00-4618-b04a-400c3b4ffb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10976de6-7717-419b-b5ac-bd2dcdf8d5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d027450-0eb3-4ad7-a9d7-c64133bbc72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b66ec9a4-aa16-4d51-a9b1-bed63f677882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685b60da-bb12-43d5-8073-859e9ec42112",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1b0950-2f46-4740-a7c0-db2491352dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011094d5-9243-4877-8e7d-1378a36c47d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76edf0e3-cf93-4578-bf63-baf62e99a954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35054e98-0960-4881-8ad9-abced49d8a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe4d9d7-db8e-42f2-8e26-f256847db988",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa56b50-2f62-4537-856d-9b3fc77fb03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfff093-a29b-40c3-9232-81c369035c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0367f60-46a9-4201-aa1b-49e8dafc08e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c34422a5-0a28-4a31-8b5d-2bf6ccc45235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0994c76-e751-4382-8283-3b4696ad2025",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff285c9-028a-43c1-a5ed-0ccb1b9768ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ac907-9232-45a6-a32c-611f5ca6b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c979c1-097a-4945-bcd1-89363f08b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09404c81-f55c-42ae-8c9b-9e3d545a6a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16dbd5-4f64-4d76-9698-5a84c6580d45",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ba866f-8e8d-4db5-a881-c4bbf2d87fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8a3ac8-ede3-42cb-9587-31013b3d669c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f76560b-ede3-4e6e-a27d-b7fb5d63e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "804525f4-2c75-44e4-8fd0-958964d2c460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b69e26b-34b1-4d69-ac62-f353456259ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75116e1-97f9-430a-aee3-9d8ca6dd7fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f81bd31-4404-4cd7-a7f6-086b0c70c159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5635aea-19c5-4aa8-aa5a-b1a98cf81c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4fb95c-2090-4135-a101-bfbb262f7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02ed1d5-fda0-406d-94bf-aaa6aff69d8f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2125ef-efc6-4d4f-bce2-fd9ad2d12ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1cf982-570a-499a-b036-6da3c9e23b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69dc736-a76c-4a3b-8923-3e065f12ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e50283e-9ab2-4bb7-ab83-a943ba16e12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f00279-3547-46ec-9af1-3c2bd978f083",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43aa420-58fd-4e0e-91fc-2d2c350b3369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a992ce-ffb7-4cbe-a1d5-e47624693874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a2a68a-cd2d-4c5e-8565-25f96126cadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ef1e1d-f132-41b6-a7ca-c8d54d5e7371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cabe78e-00bd-4732-93b6-343d3878786f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03151e88-90c8-473f-8cad-bdbdb76af97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6838678-f5b5-4e8d-83a2-0a3ffedc06c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35df0b98-28e6-4dfd-bdb8-8d133f4816d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b74204-a3c8-4bb8-a8a1-782250c6c444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b2e53f-6eaa-411f-a941-96f057e90bd1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a090e3b6-b41b-4dd1-92e6-d4445f5688c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97db5412-affa-4c89-b6db-05e7a3f01dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece4d0f-b9d5-4b4b-9f5b-49c1ad9a8aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3a7b50-8b5e-4533-9736-b6a98c71a021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50e8e9-762a-4fd3-8dc5-8a25006e1caa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac769f9c-424a-4f55-bafc-fe912fb365ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e58256-8df5-449d-8d1c-ccd8154b902d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef63e4-4f54-4eb3-8cc4-2959a8ed81e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "206eee86-1f67-4e14-9517-50139de4091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552ebb2-c966-4c73-b6c2-8476b02b792d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af303bd8-b632-4e61-ae03-061d83456d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9848b5ad-a97d-4fe8-92b5-75a012123f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac3ed2e-a5ef-4c52-8f67-4753f3d034cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c661af6d-8261-41c0-9610-4e7712bde8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c13545-0862-42dd-9a1f-e76e8af357cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de65fd2-9e70-4133-8116-054a863da871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a217c41-267b-4cbf-928a-a24c402db679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429ecf32-5ebf-4e81-b0fc-157de2305564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0395f8f-862d-4281-a5eb-80e6cc3fffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42634b2c-484c-4ea0-bd7b-3b827864d59b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df03728d-f364-4bba-94f6-5feed808e15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8806df0f-63ac-45f6-be1d-94354c568cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cddcff1-ecf5-46fd-9cd8-e5172a90cb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13bc9071-fade-4c34-b0ec-95e041a28495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793a2641-e3e7-4ec9-8a66-62a3e1c3ba04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ebfe3f-7582-4979-8497-805ee122a383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d8bf4d-b2dc-4ff4-94f3-89f702f7dc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2244c123-05d0-4113-841c-7cbc15634c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc51246-2277-4813-98f8-344e1b83412e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c9f67b-0b43-4bf4-bd6c-9c1e2fa2ceb8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01620e20-0e89-48a1-8c74-33d79af2954b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31d9973-41ac-4c66-88e8-bae7652690f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a818add-0313-450d-bf14-17a3a412ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5232ad-bed9-43f5-b733-f96bb86e9acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b19f88-d47a-43b6-9e76-08039c3954c1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f095e2-84c8-4545-a061-c838b95363cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ba04b1-5aa1-40bf-8b40-e6f5cd8d0409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd059db8-5061-48b3-8fb4-7b5b37775425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03350572-2f9d-49c2-b1f2-1542c0f40c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b7ff77-524e-4c13-9262-d506d3329005",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebdb4bd-3116-4f9c-869f-a2065bc385fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ed3b45-7a14-4a2e-a475-12f32b1c07a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c6625b-130c-4018-a2a0-82a50b67179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3f0980-1184-4a8c-bfd6-82e6a9cfb830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c608c-a573-412d-b529-77d0bbded0eb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777f3ab-971e-48f7-9d7f-21b7f05dd72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abbcc19-5f20-4449-bb7a-101ce0bcbd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11084981-58c7-49e7-aefe-003defded2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba997d5-ae2e-4b6f-a550-a6fe5cd11cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d557d26-1311-4678-a451-97aec8d00fd8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402fdf3c-ccbc-4994-8756-f2aadfa36e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b6f507-a03a-45a7-94fa-66cc15ffe740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4a465b-1da2-4e35-9a45-78beea8bdf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd8ba02-b874-4456-b567-939a642cc2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c446fac7-ef80-46bc-a7c6-3e1fab88a81a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98e3e27-b229-4bf0-aa4f-1d5b93f5efe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7555e5-9c68-44fc-b952-1f593f9eea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c37d37-6abb-44c0-bbf5-6997cd1e9740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "51124e43-d7ac-4088-afe6-17bdddd95e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728ba166-8617-46ac-a80a-20411cba9b08",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c5a5a4-efc5-4848-aa6c-b45c7621ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7843abbd-4d2a-4a8e-a356-ac8a33989d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff7638-0f5a-4bf9-8057-c2da67b45896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68f3b4a1-bff9-4360-9e57-b68f6dacc795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b77ba0a-bf09-45ea-92c7-7526196ef1a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b4bcdf-58e2-4757-9975-7d5f8bc85edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d400b38-1afa-4103-940f-a63cd53f8be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f40b63-73e7-49f7-bc35-a5966e5623a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3edad0d-7e21-4a26-98d8-b1829eef4547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a874461f-0121-46c0-ad2b-b60c98f79bd1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d48b4d-4226-4375-b687-cd59e4fb413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333f1832-cbed-4ccf-bdfe-ba2388c0581c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff67242-57ac-40cf-9752-e45eeb5c6df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e11eb7-a8e0-46d3-96ba-05603a8523f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de23537-0684-49d4-bda9-062eed364904",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c8c795-1279-41b9-ba86-acd0f990c1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc47fe3-920a-42ea-ac3d-66dfb32fc5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d9ddc-561b-4c03-b5f4-bd0901fe7d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39608d04-f517-4b3d-8426-06781a918c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2919144-c097-4851-bcda-0fade3e4fbc6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7a7c14-7ff8-4940-96f7-db00abf1f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a24c68-3213-4d36-8f09-1b5c6174935e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607ec42e-ca6a-4dc4-af4d-06dbede4e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bea5f5-eb14-42c5-9185-7c43f767a149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b9943f-cd1e-4a0e-be25-ae595e337459",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f36860c-50c0-4d6c-bda1-6b9672251bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362e88a5-aa40-49fd-9557-796f2b0bb446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849add5a-7f9a-4d9f-beed-84257a3be6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81119679-f0d7-424d-bc39-0fd1f0a257cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002cb6b6-b9d2-4a88-8e34-c37725a48255",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b9e6c-3154-4a9f-9735-20d80acea87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bb08e0-5e2b-4af8-919f-202339f0cd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b383d686-b362-4fdc-bf4a-22c0faa456f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fc9f84-4dba-4eb7-93dc-dc6e595818ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86772e08-ab33-4ef1-baa5-635b60bbb774",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e4a54-2be5-4666-ae27-17d15528b2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27c6797-ee1c-4d8e-a0dd-984f55da703e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a96be32-3dd2-44ad-82c0-d0bdbcedb0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e22f3c4c-eb9d-41ec-a5af-5689dae86fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d53a3-aa99-4aec-a503-293c7b6c9302",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f29f11-d8fe-40b8-8efa-77e8c641a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8705fa0-1b8d-4ab2-91ac-6918c6f42eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6417f9d-a15c-4735-980f-0f726e56bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4af6b29-83b8-4fd6-984c-26c4341c8a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad565339-4e51-43d5-ade4-2d1ac331a44e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f0d1cc-9cab-46b0-93f1-4b49f4b70f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b369f34-28e2-4b52-a99f-c4a43e1dfb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b128f0d-4915-47ab-9903-337c8ae32dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8502af-5fbd-48c0-a959-0767de8abef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e780b3-20d2-4a23-b81a-b2814ef84746",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba43bb4-03e9-4404-a1ff-6e97d5999166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5394015e-da4b-4e8a-9a74-5c694779b08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b765a-846d-4077-94b6-68f305e0065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4296be95-5b4e-4ae8-8e55-48dcab5a0efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108e9b28-e7e3-4475-a90e-dd1886cca019",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ca2e4-f02f-4cca-af25-c355cb1ed79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754c0351-d85f-4b58-9247-ca6b8bb5b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de678535-78ca-4129-8ab7-dc2c30dd9244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb44ea8-9681-47ef-a5e2-86afc2bcd75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf366dd-c88b-4dfd-8187-fa56c0b42921",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf813df-47e0-459c-bc46-731aadb361b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0150151-aa8f-4418-9b86-605afa73dee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d142137-34ea-4dd1-b4f2-45b2fd8f04dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a99b573-f00d-4a55-924b-11abe73668e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e038c632-e034-457a-9ff5-aea5e5761131",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763379a9-9604-4393-876c-1db07370f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac84c796-deea-469e-89a3-e9ece4c96719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb920f90-30cb-4d45-a7a7-6dece5964685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "012af8b1-47bc-4d22-99f4-b670b1a0bc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c681af02-376d-4437-aebf-86c185e3fb5e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25130492-b551-4fb4-9609-e8aa808fee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4723508d-d1c3-4371-8878-b437e0ee899d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2989aec9-9298-4602-8c4c-ef779d961376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0784f301-d6bd-4d4b-a9cb-45748ccd1ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47223838-dd83-4bf1-a836-531d8dd23ec2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb103497-1005-4174-9b68-c1fc7018fac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3258a7-da7f-4b56-a79f-008ea8dfd081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a5be2-589d-4353-9697-77193c4a6a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d707d912-0c7b-435a-8ac0-f9925bc27872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4b1c0e-5b2a-49ea-b335-d981a290b7ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbede487-8244-4fd9-84bd-138137093ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579f17aa-64de-4cba-a1af-a17e98e1066c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c490ec44-2529-4cca-af06-39caa557d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d77e617-44e0-4b26-9f35-cc069e4dc50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d8903-e5da-4c05-a2c7-266ca62329d2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2e495b-37d6-4b92-9aec-cb40793d5e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d166257b-9bfe-499c-9189-964e885551b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb727d0-8d09-49d8-856f-0490f4f9dfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc4c9ba-4023-4c93-85a4-9a3665d884cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7278cbf6-00dc-4d8b-b967-ca31869b6ab9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0429e6-e095-48a8-9639-101e546ea377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a7f1c2-d528-42be-872c-a08504065b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7222d-8385-43eb-97ec-52e05a9545f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60e9d2e-ebe0-41fe-bb60-bf21f236b8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e7d3d3-2cb8-46f2-a461-fab953a72e16",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badeb22d-ad17-4192-92c5-2658956688ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa4ea6a-3188-4e76-88b5-f92db99f579a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6371673-83c0-4ea9-8684-e6219023ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7d9814-fe03-44de-8929-2ec420fb5ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c972875-1d72-42c4-8a89-f1bd1fc6da67",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08268f-535b-4384-9a18-30122aeb5edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5b3a9b-0181-457c-9a81-3878839fe1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667a2c0f-4c20-4a20-a9e2-cc3970bb2f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bf6c47-1e33-436c-a473-1219af53f7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b185d699-9971-4460-8514-d44af675c0a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faa4978-082b-4822-b84f-a2eec2544165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d289b46-ae59-4593-8968-06009d091079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ea382c-24f7-44fe-b615-17507447b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6414bf33-0c60-4db6-a7c1-4dcc1d0fa2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a515c-159b-4f64-97a3-02a5ed965da2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6b0db-895c-4cb4-82d5-ff064b27a791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36138c5f-c7c6-45e2-a18e-c8c1bb26cc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3c7d3-5ad1-4162-a79b-607883a1a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aee0ed9-ec2b-47ed-8231-5eee5294165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bcb54c-3c2e-4fee-b744-b7100bb335e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04849e3-b6c1-40a8-93e9-4a94b22433a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116fa3f4-2df6-40d9-b63c-9c8053a1b3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec93f08-6a37-4829-91e9-7080248397cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8240db9c-467b-4423-ba70-01c71b9a4fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9487acca-6304-4c51-9d2f-6e3d4490ae4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0501ed32-10c3-4b55-9c56-f58073c8b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf35e2b-459d-4490-8c57-cbdd9e5bc2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34efc266-a176-4c0a-884a-2d675e8609b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4970ae-e380-4667-a2ef-4c66bf5e4429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f34f654-8cfc-4eeb-a82b-5549c22b4ecb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc2990e-f5e3-4c05-bcd6-341bd935af07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274acfdf-83ec-4bb3-a324-da77633ad081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a649d214-1550-43d6-9415-b6c3a1377480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8e8af7-5915-492c-af4a-f6709b79fe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141a216-06df-4bba-b936-2a47f3fae4a1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df71cde8-0c14-4b65-81e6-1b978ba126d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bcd444-5707-4c56-85f3-ee1ab1a550eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d2cc66-ce7e-4d7b-a50d-11dd32f5f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b2b762-b567-4393-9fc4-31011bfec9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe32c2a-1924-449d-bd85-812778fce5c0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f611a-091e-4614-807c-c919b2061261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a224fefb-8c80-4c83-90ea-e961df5955e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf4f63e-ef98-4116-9da6-60c132e52df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc9ca7d-950b-4812-8d1e-23efcac3f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35412e81-ad46-4905-8f83-fb28e46c2e29",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb2c186-382a-440b-827a-cc34104b3828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b6091d-ea12-49b3-be5f-1652bef2521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d88aea3-a5c4-4483-a9ef-330607dc3f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14340cf1-0b0a-4625-ba6a-5dc75a31c7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b849b2-2dd5-443b-ae38-e912df7ce98b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d99104-d0f5-491d-b9c7-192a4f5104e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bd1588-5df6-4322-8310-9fd1214374d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ed026a-3e96-4f40-bdb5-48a7fbbedd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f562ab9-cc6b-48c0-b2c4-d7709a01b080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e652af5-6342-4973-86db-7d0f2e64efce",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aafee96-3288-4311-8f30-cb121d0abee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cf4091-772c-479c-af30-26a2d10db2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3799727b-a8c2-4081-9549-48c511a84ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4dbd74-b932-44d9-9f10-4c9dc9d25766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f9b923-a09f-4909-8a47-c7bfbe11853c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c66e81-9dc6-4c08-872e-74879cdb71e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54fac57-ce7d-4b04-a972-d243b7ab4e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75756f3f-3435-4474-8693-a66901b100a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df7b32de-9225-4a03-9797-57a5e045fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77665d72-f9dd-4bf4-a4c2-fbc638337efd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cc887d-e932-42e6-b397-f0ee14c95977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ae9c43-4feb-4ed3-a002-98907e8f7626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97544bb-ce98-4189-84a5-eb007a5a250e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f46f7a-5715-4a75-a2ad-908cbcea722e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b74cc-79a0-4850-bc89-6bbda4601be9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77230023-44ae-4b41-8f6c-f44519c018bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787e71cf-2743-48dd-9e0e-a6e386b44543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6c871-8783-4dd3-b72e-58f4c237ef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a896c318-d4f5-4f2c-bf12-982e5263ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ff8829-58b0-4a66-a43e-030fd7e0ef24",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36b0392-ce4a-4b19-9fbe-35aeb7bc0ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c5260c-4234-4635-abbf-b354bf78d3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f45ae7-82cf-45cf-a59f-9fbb9cad1391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48ae041-2dde-4b6e-9605-33958ba6c451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eca7ca-7dbf-4f12-b91e-c782e6fc118e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c73b8e-5b08-403f-a471-ab79cc682ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2dec6c-dc6f-4b10-86fd-b0888e5bf790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3f3b12-6303-4cb1-aca2-dcb5a4091f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b2aa59-96f6-4861-88f4-7a9d2001ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d79fd33-ef8c-40ff-8a64-ae1931218104",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b840c7e-5a49-489b-880b-1ae10fe0f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adba3af-4196-4e86-9640-c48c8ff02696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926cf788-3d9b-4d53-95a6-f8996fd285e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f49db7-ddb0-4659-b392-9e293a1d191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bf0f25-1cd0-443b-b746-d35a8383d1cd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd8dc79-550e-47d4-baab-14f40e0bb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d2e2b7-ae82-4e1e-a8e1-f451d6ad1721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb341ebe-6b99-4a0e-a315-1c03f7e492d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4c5a41-9df1-4920-ab54-a8ed5964c5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95ccf9a-3eaa-4680-b5f9-579ae4a254f1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58efbe-536d-413d-8b81-76d0036f1bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba233ae-5ca0-4b94-97ae-d06b8e031e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb82a40-9759-4ad2-b4a2-f4cf7a7fd942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c60eae-078b-4612-8d7b-d5d0fbcf7145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fe1f3b-0270-4361-a15e-f777f4ce26b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3341e0-caf7-4664-95c6-4ca1e36b10d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fcaec8-e7be-4add-8297-71c35b9100f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689bbfee-ec08-4fe5-a8d0-3de0dfcc1ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cc83c3-e81a-4401-9550-c08f0a699ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb33b4c-eacd-4b41-9184-ce5b88a2f65b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9596678d-f27c-4c3c-8107-2b9a347e65ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dcbc57-5ee8-499b-9a88-efd83021da86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ae2085-3162-439c-9347-53a7ee47217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "819d9377-faad-4ba3-bcb7-54d4a17ece96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1280dea-208d-4d23-8b18-20fc0f0cffb6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe2fdb-eb73-4ba2-9dda-ff9c0ccbfdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdd369b-33cf-420d-9dd5-29f7b6c48cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0490002-ba84-4d9d-8bec-e8fdae3604a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7eea2c-5889-4ebe-97aa-88d44b83b312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737fa861-a5b7-43a6-bacc-989cd73dd355",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a470980-6f78-4f14-96f3-ce41dae8de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7189bc5-9503-4846-a4a2-d2cf03bcb157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3a2298-03b1-4e9f-9259-b96786c40aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c464f7-711a-48f4-a8f1-5805e95145cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b64976-8002-41f9-a8f8-fcf3a12a7502",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219376ad-bf2c-4d1b-98fa-f9a45ad8966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1d7690-0f70-4baa-b6e5-28ddeb922049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c876084-8928-42c1-a51e-c107bca81164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3210dd3f-e60f-4776-a551-4960efdda6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c3ed0c-0f7a-44f7-92d8-1d5ad16ef513",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dcb05e-12f7-43ef-a092-52a94dc54a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f145fbb-a84e-4f92-99ae-7f94d15bbb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2b4dce-1748-4acb-8831-16e8fd18f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8217dd3-5418-412e-bd12-19213ba6182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d46f7e9-d937-4a12-ae89-9fb62fae023b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29748368-290d-4591-9e0b-3bdb1386a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781918da-fa6b-491d-9ee6-d9cf54179371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f948abf-51f4-41d2-bffa-35f1e8342861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5cb0e1-3edf-46bb-81a4-b3ad16ef2cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c762b17-0339-4bda-b422-8e6a6bfb16ef",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81078add-3723-4981-8398-cadd42bb73a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5b8773-99f4-48f1-8501-17d093985ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a2dd47-694c-4610-9929-ab252525630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6652280-1955-45e9-95a9-32a646cf2b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d315f-0ec1-40bb-8f72-82c15ae867f0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1598d4f-9b9c-49d7-b3f5-3b126777717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d89198-fc25-4aa0-86fa-c923e05cb4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10e6219-ac98-4d0a-8941-26a55009988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "154ba9f3-3543-4c4e-9330-9ddd0543b0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae61de30-85b1-48c8-a497-0a2e2694d7f3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f25ccdc-c13e-4c21-b25a-545029cad753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5625fd-ff66-4c99-94e3-6ee949df2b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0488e4dd-5595-47ba-a8af-114ec31f8c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4bb755-1077-416c-ba54-4e2919c743bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbad24a9-16d0-42d4-beef-0866634cf8f6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5a7209-2dd8-4b97-9d53-6e9a9b160701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28f1243-e0d2-4a46-a451-d4db2935b7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f596c7-7c12-4772-add7-e004c8efa952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "004cdec4-cd3b-4ee1-91a2-3222ae5f4a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9ddbf4-63c3-43d3-a681-c2e05dfab52c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8afb47-359b-4355-a6c2-b679a35aa833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbcb59e-96ba-40ca-92f7-4882b301cafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22af3661-9e32-4b19-9dfa-3dc7179c8b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e3fa5d-b3c4-4d1c-9e97-2cb6acd1e3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdc49b1-82ef-48bc-87e0-77574bf2c1a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2554b26a-184a-4ea1-bd26-078dc91f9399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10a99b8-c72c-4fe5-8ffa-fce0822da022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39642ed-74b6-49bb-a8c8-7018b2b0004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0694d41-3229-4431-9225-a06f5c2c3c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17622f3f-1f04-4142-b8b0-062b3adff15f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10718a1-5ddf-4ef2-a3e8-074f37002cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29a27be-e9e2-43f0-8994-459e4709e84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe97c4e-ce0b-44ba-89b5-b00d46cb784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15866285-0369-4df6-911c-46d05024e7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a165f802-6400-474d-ac84-1ee12c56836c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0a0f7a-dcc7-4b5d-bacc-043720ad711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd1f5c9-9056-47dd-bd71-2a775c3262f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0d3ef5-4504-47ea-b93e-691b1d2d2711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a857c5-4314-4817-a4bd-ef07f42b0270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfb8259-b4fc-49bf-9edb-10b721307913",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32b711-d729-4cb7-9204-793099bb5a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76a734a-45db-482d-afbd-5abe875d25ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb5acec-b635-4e5f-841c-88094543e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4b7e79-8a5c-4dd1-ab24-e328ccae1939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a80547-bdf0-421b-8cf1-bc53b9b0ee8f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd5550-feaf-433f-935c-6d8d3737173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9482b731-b650-4e13-8372-239e6196de56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e635ec77-7adf-4fbd-86d0-46c5ddd96caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4697349-8af5-4887-a762-f466823fad1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5ac5e0-0c49-495e-b207-819a9c59392a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d5bba2-cfab-4fb8-946d-929ce32bfc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f23c026-fccc-4928-8c1d-9f30e483b0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d0fa33-b0e9-4bc2-bb6b-1512e61171ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc9ccb7-da43-49b4-a0f6-d0d37b99733f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b61022e-fc1d-4765-82f2-eec39a76f136",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5233cf9-4458-465b-b743-7d880b31cedc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05097ec-bebd-47b4-ab00-ab26507873f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90900539-264e-4016-9f33-e0e213028a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cea938-29ce-4e12-a154-f4df817fe381",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2393aab-21cb-4825-8230-d72fb056f214"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7477a11f-0a07-4717-adef-774096613c3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64ff89a-4dc8-47ba-a809-cd9e06558e62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80621061-e4bd-41c7-896f-5beb89617f2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35a58d23-c31c-4b84-9661-70ed42591084"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8990503-0ddf-4b16-b0cf-506abe2b565d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66f10641-75f3-4889-a45f-2e9c51019317"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05be976e-34d7-41ce-9397-d634f10fb495",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb824eea-83f3-46a4-a4a0-273bd18ff442"
                }
              }
            ]
          },
          {
            "id": "b2156496-65d1-4044-8d71-ce6e3d433cff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15fa66c4-76e1-4ac7-a447-18e1974d3481",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06788525-8e66-4f2f-a2a1-042df5952702",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3a30692-52d3-44eb-89df-9baa394ec31c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc6ac60d-f083-4d4a-945b-e845adcf4fba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2ef40c1-beaf-4b92-935e-7523b680c35a"
                    }
                  }
                ]
              },
              {
                "id": "4f1c1652-7d8b-459f-ab6a-6173c592ab2e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6358a5d3-8721-4f8f-af5e-ed11c7161d42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcd08197-d4d6-43f7-8d32-4414d6f1303c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288fa03b-3561-4dd4-9ff7-7db50879162d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56833d5f-e3d0-46d2-b1c7-87f11d32ab25"
                    }
                  }
                ]
              },
              {
                "id": "1e71f387-069a-48f2-b6be-ee7c7acb5ac2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53bcb0b5-94bf-4620-b2ed-5fdb186498f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da95a112-78a0-4764-a485-66562c6d2c83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e727f422-6e5e-4d11-9e23-37491501ac52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbeb5d23-2f9d-415f-81cc-a74f7c0fa700"
                    }
                  }
                ]
              },
              {
                "id": "30019f49-3b9a-4086-895f-3f3d00aa8938",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8442750-bef1-40bb-8271-9a358dcc970d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51f713ad-5a0e-40df-a338-762cdafcecf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6616affa-c1cd-4b33-be31-fa9f2fc551f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2bee60e9-137f-4ffd-b4f0-bf3a824b1fd0"
                    }
                  }
                ]
              },
              {
                "id": "efb22bd6-2f70-464d-aedd-4b80084ed556",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ca43e88-dd55-4476-86f0-32db75550bec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68d1a129-a2f0-4e2e-bf1e-14cd715843b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e39cd2c9-1f6b-4278-98c4-18065bb8da88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0895394-2de1-43d3-92d7-438251ddba25"
                    }
                  }
                ]
              },
              {
                "id": "404503dc-204a-4c96-bb84-a0a58b6e3e81",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ac4570-0a27-45d2-81c0-4521ff864087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3aa42cb5-64ba-4e58-985b-2fe662a7d007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2358d277-ba11-4a30-a834-1a5d81bf7366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01a1398a-e8de-4af8-8ca4-bb0080af909d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3faab91-1a2b-4ca1-ae6a-b3734da8fce8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ee4cc7f-4f4e-4789-a0b5-bdbd6b79f007"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "701e9c35-7bed-4b7d-b33a-4a443c3e400e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f86175d7-3fb7-4739-8580-8f34b197dccc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cea83597-dd80-4b32-b222-8d9556bb8597",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "23d21922-29f0-4845-a08f-cb6bf1cd3701"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f37ed23d-42d2-46ee-9580-1e14309e24c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d6e89fe-1ec3-4c6f-84b3-fd04cf410394"
            }
          }
        ]
      },
      {
        "id": "27f1124e-9585-460d-ac53-790213ba2d70",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f3b7ed31-6c3b-4ca2-bdf3-acfab157ffaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9744e25-6e1c-4a2d-b6ac-c6dd91ccffcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c9a907d-bc31-403c-8175-71156b8338b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c55402-df60-4a2e-9d2a-d72b75df17b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4807cd-078c-423e-9822-8270e3bc88c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d10d5a-a6ca-4fe4-982f-e6dfe9a94b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c414228-082b-47da-867d-1cb172d93f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2818a935-0b72-4aba-acb3-a1939df28d82",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f220bc91-cde0-4ed5-98e2-a6742964ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af75a85d-f180-49ff-9213-107651ba7166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b60d2e-f649-41f6-8965-656bbdae25fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db1c856-ce9d-40b7-812f-1ae9fca77882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec46e33-1eda-48c7-8b64-d187dc4b1d83",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9f9f38-8676-40e7-b7e9-f9a8c5b6d405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379f9eea-934b-4750-8b2f-59d6a0318d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5d53db-0bb3-4a93-9eaf-4329e02e66e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93dbe687-1e14-45bf-a948-4187bbf42edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac639844-0da7-4e4e-b46b-d8d2a908de41",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20130a66-a169-4a6b-a74d-6b4680e3c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af85dc3c-e2c6-497a-9451-67160e8c831e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d214e1-ad75-4d03-8138-6fcf6d411317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea25dc4-52f4-4e92-901a-2e7961b2f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb6575-ffd8-49a7-9dc5-0921f09f4b6f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8055c21e-2e56-4afa-9386-624fc769d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266b0505-600a-4ba6-a09f-0ff53d77b535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e9758-c7cc-4aa1-9ca2-014dbe259943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db3ae19-69f6-437d-8712-cc2d4b3a8a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ab317a-529e-44b9-97fd-5e132f7ec6c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a9c6a-680f-4ac9-b6d6-7534e9a8aa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29afa7a9-0174-4ff0-8898-d4756dc0486b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768d7e4d-5415-4aab-9c3c-0ccc8dd9b576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b86010f-c70d-4b75-a7ee-11243cfc8ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d325e223-f6f1-49b9-8f00-031928b08568",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab655130-4088-472c-bce3-94cb3a370b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e546c4-4227-4b70-9224-26dc2c33c323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3c6d0-cf02-4577-a5bc-e8fd9f886beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f232760-2b79-4f23-b8d2-49c53f45e11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e85d8-4274-4e83-80b6-3cf0d9d99351",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a49ab62-4f19-4085-94ef-854e5df90905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66cfa35-4504-4c74-8c97-9a9918463ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048ebc66-439d-44cf-b03b-dccaf843b127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5395499d-4c0c-4661-bdf6-8a50971d454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b525c-1f30-4101-9303-364e47a75ccc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803658ac-6b7b-491e-83b7-515e9e9438ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8821a8-e94f-46c4-a3d5-8a9437dadd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d620c94d-280e-423d-9faf-914163c5f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a83c3e-c5b3-4371-bf65-069f4979b4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd97ba3d-4917-472c-bb8a-b1679bf5ea4a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdbd8e9-0dbc-4381-a873-b51b5b471537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9b4d38-b2e3-43fe-a03c-1b08481459b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7208adf-237f-4976-aac4-9be5c4e0dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fcc383-6492-4104-b151-e82cd3736fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a201240-881b-4478-b790-2d87ba014de4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3bc689-49cd-4bef-b8d3-e9ea01a69c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d9a95d-95ea-4ddb-b5fd-f6c9ac3feabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17087131-0e0b-43f7-9cd1-453751183b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4fc544-92bb-40b7-90d2-c681fcb007d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bee882-7b30-4fb9-92be-85ee3efb85d0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9379059-40df-40a3-a653-94f287e1586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0486c156-5f66-45a3-9a9d-de4cc9662fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9091d5ee-6a5e-47d4-9166-71eca1e9434b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c2e197-874e-42d3-bec6-0dfdc93b36e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13ce046-780f-4523-b3a3-e4000fb47f69",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf2aa7a-b681-4684-84d2-2b07513626ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288ce533-1789-4d90-b7f4-0dc3b2a5c785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cbeb3-5e7f-413a-9053-eab9a4f5049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5943f644-58a1-4b90-b434-10d9d16d2e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bcf916-e8b4-4238-88cb-4c873a374367",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f333738-23b7-45dc-a14c-a64d8fe3974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafcd58a-ba7a-4ff4-8a43-eab3b78d922b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ff45c5-9810-4de8-988f-33cae2ae0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99397a71-d591-4700-840c-81ca64cdfd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccc6b87-a62a-486e-9a3f-e93e7b52643d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3795982-d4dc-4969-ac74-62f7b0144c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4caaa0-d624-427d-af27-a1cc538c70b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433be68f-3161-4648-9b98-53538b2abff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5205293-4b3a-4525-a315-60b134a793fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0809e30f-2459-4414-b45b-21d3e65f08b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2f46a-3526-4a66-8961-0809d07015b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240bc376-c04d-4fc6-9053-46c0cd8d0f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65774ac5-9e45-4173-bb3e-52a015d06d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00ec326-1d76-458a-aa03-46afe8529849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b9b25-a708-455d-91a2-f0191b6b0e8f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a901fb29-9ef5-441d-9c79-11c0805a3b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd95e1d-a425-4668-8700-20d44d324fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8b147a-df6e-46b5-a5ff-9c068841a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "60dd07b2-931d-405b-94bf-25342159bf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78314488-9fc7-4f51-9d28-1ecc3b9f3357",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1e5a79-30d8-425a-a2ab-919530518534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09dcd4c-795a-423f-af24-c16005d5ac2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fb3f5-bea9-4bad-91ad-976e87f94c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6034ba79-cd3e-4c93-b939-ff47b0e61b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddebaf0a-4d7a-4504-ba40-2051ad839463",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa32e9a-573c-4fe4-86d1-95d0f713b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5482f8f9-771e-4088-b9f2-f8d90e5a7e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a6fa53-dc77-4b4f-b4de-c2e5e1ae54c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103bd695-1df8-418d-b2ba-b0ef50d9126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935bd4b5-b49d-4862-b842-8975f30cf420",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a25caf7-8cae-4553-84f8-f00e9959003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7218551-634a-452d-8e4c-73f94566c453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7a9595-8ddf-49d1-a198-3abc6ba957e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b81ef4f-baf8-40e0-88b8-0f012ab523d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a74f4-1e32-43cd-864b-166249869ebb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4806d55-745b-453c-b32f-0b5c979728fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e871de07-efbd-4755-a6d1-a5ea3ec99d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db3cb21-fbea-401e-b457-53815256b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4092d0d-1663-4e69-99f9-4226c7742555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9165f7-6239-4ca8-9fcf-b1af92b8efe7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cef972d-b61f-4b9b-b731-de82c917e7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9beb8e-074f-4e20-bb69-66a94fb74da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f5ce64-9f3c-4438-9253-691c3fdaf165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1883bfb2-f554-4980-b852-92970be0dda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03df5ad4-60de-48aa-b1bc-5b42a9a15055",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239dcaed-ceec-4e0a-94e8-3b109299b95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04a1c4a-91bb-4ab2-9f6c-5ed921d48f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c5379a-c36e-4322-b5ba-a53fc60a4ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74337b7f-acee-429d-8837-b30cfce5c1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a148d16-0202-4ef2-acf4-b6d049231dc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1defcf6-8a28-4722-91d9-81adc58d8029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccd1a22-0ca8-4e53-86e7-d7a454d25331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564268f3-63b7-4afe-a9bd-8c6e58bb360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a06170-17de-451d-8679-519365035a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e970b32a-e903-4ecc-92ed-1234d0bb9859",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c41b5-1e88-4cfe-a91c-26e96693ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10ee9eb-c76d-4421-95c0-dff40e687eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4854275-5075-4194-a85b-a1e9ab762bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5403ce-909a-4512-873b-c10b1985df7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7c5b3-1f7c-48af-b424-41b8fa674840",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b73e07-b7d6-42c0-8dc3-cfac1feb66cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3287e5e2-85ab-45b4-8ec4-6295da3b9484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669390b1-3e34-49ca-bc9e-b20bbadf9648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbf0fa2-372e-47fc-91ad-dd4241cfa83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93af2189-49b0-4127-9752-b3a26cbec4fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8515a34-94eb-421a-924c-f0f375eab526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e73964c-4037-4d3f-b167-d7613d716486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39e59cf-5756-480f-9599-73ff86fe106a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd3fab1-c334-46b5-86df-e1193fcb842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaccde9-2f8e-499a-b457-aa37354c419c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2139074-e7f7-4fae-a44c-4ba45c389f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2270e1d0-555d-404f-814d-008af6a98919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4257f31b-dd81-469a-8eb7-e19a0eba6a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9824d5-d06f-4b29-b178-b37985d72f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2844cc76-fa29-4027-9a2c-2747180bbfae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da550c8e-d15c-4125-a3ca-bfb4401b2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52661aa7-bc19-4406-adee-412918cf414f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efb63e-bfcb-4520-83e1-6f64fb173838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ec1911-5f6e-4ff2-befb-816f1427aaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f4d145-1628-4d5d-96a2-43ab18d68511",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8a991d-ecef-4ba0-9815-5e4492dd723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e43f760-e63d-4814-ad1e-fd7f038c381c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64734123-6399-45b5-a6b0-ce662cce8ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03050bc-c652-49fe-90e8-9b68a50a5f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5eb436-0fbc-4003-adb4-c8fe1b922a2e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed186b54-456a-474a-bb4e-4953daad5dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe65cce1-12a6-42c9-aeef-b0a7698c95d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93afcd38-9594-4bc3-b057-5a4fbd919638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2db6c3-1d4f-433b-a0d9-f47954d92964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b7398d-1b54-4603-8a0e-33ee14ab170e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a7af9a-2438-4cd0-8f37-e6eae494da9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d68661-0266-487a-897c-9532db677df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69615763-b7d3-4a31-aad0-fa15b0286097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5645faf6-48a0-4e4b-8e1c-7755040b076c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "658df9cb-113c-40cc-8dc4-640819d0b562",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00a25aff-7576-4f42-8b0b-35cc5b203b52",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c48076-6269-43eb-9a2d-60c8afc651ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47413c68-198c-4d4b-9cf7-25c9f7e4dc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493271e1-63dd-4212-999c-4171efd3734a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bcfd56c-f76e-4eba-925d-93972df2afc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d99d06e-77b6-4fbf-b4ad-8c675d20c190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee96ea6b-7489-46e4-931f-975cd3aab2fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9180c6ff-2e2c-4257-8cc7-76370469139c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b4e380-48d2-420a-ba4e-9f5bfe3a8d13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecc637aa-bb67-486d-a3cc-ffe4000d7b2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29d4746f-3ea5-4ab8-a3cd-41f23fb7f0ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de2574f3-4f72-4c22-a6a9-8b5bd9f34e58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d183749-e302-4be7-9ead-7a060d5088e4"
            }
          }
        ]
      },
      {
        "id": "a123df8c-853a-47ed-bb6d-6fdc4dbfa4ab",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "689420db-7d92-4b26-854e-bc28f369a0e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c82081-edaf-4420-9ed4-d18c3b6dde58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aed42a50-992c-4f59-ba7a-f89bd010bea4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9a13aa-567c-4fb1-bc78-7d2d6d6138bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1ed0d9-559d-4051-aa21-3f13af692e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a329952e-acae-42fc-ad20-aa511329b62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7cc99e-b172-4871-9679-1af17eedf45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a2654c-7c8e-4f87-813b-7520b63f217c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb01e38-629d-4c63-a294-24397cdb3ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c259649-94e3-452b-a152-cf12f6998aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4241ad0c-bc35-4b99-8160-e96007e9acf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb69ebb-d928-4f19-a5da-1d07e82d7be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d757a-d141-4de5-a790-88dcae03f56f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb8f058-2eea-4f82-8ba6-84392451c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77856f7-ccbf-4b36-82ea-e59f45e366bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d25731a-5ab8-4d3d-8a08-4e326fc72190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c01071-72e1-41e2-a830-1b9f9373d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5a836-14ba-4c9a-814b-3d257ba2e07a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdc6136-436c-4b13-afe1-f5bd5803abca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de498a9a-3933-4a55-9ed0-e9e89c5e209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b81f5b6-0b70-485c-a025-581b3fdb5223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7bcd97-7c69-4fa9-9845-23490740d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8427961-fde8-46b2-9ea9-16f047158fe6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52025e1-b295-4a00-8eff-07af25d4481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab63600-5202-4f01-af6c-61f14b093711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1571acb4-9664-4250-81e0-590e26abfd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1077b5-4507-4549-a3c4-842d23519f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9547b5b1-387d-4890-838a-8464d196aa57",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9bbefb-352d-4667-94c3-c92c7582d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71469b27-a7d2-406e-a476-bc3a8904a715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ee407-d11a-43e2-b3f9-653e2adbfe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c64adcf-ae8a-473c-bd96-225cfc43d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b136f7f8-fc22-4348-8884-2d1ca8956470",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf4321f-f9aa-4469-b47a-dfe128445655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b1a63a-4cbc-4052-aae7-40ae3affb5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b846fe2-a938-4870-b449-dc5d27c75338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba77171c-9e2c-4ed5-892a-bb070ea39e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcce55db-95fc-4951-95fc-7d9e35948e7c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20007d8-e671-4141-a6ba-7dda8dc7ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d53787-06d8-488a-b332-bf15277597c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0c7f19-12fa-48bb-8a9e-c167263df9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d461c5-0350-4478-a6ca-c5a5e62838b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf70301-6bbf-4243-9cf9-c29914c5ef8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f3817-16f0-4311-9757-127a378962b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a510a82-a3ab-4eeb-8499-9b9191fa6c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb5f16-39b6-4d45-968f-add502c9a120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d95b119-26cf-4ad1-acae-f813a1a882af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a092da36-94cf-40ab-8c70-d997b713c4c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed795f-76c4-49e1-af90-fa080ef2fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107b1ed3-e9f2-4e15-9af4-8f19afc6a0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54c3155-ca2c-4524-9ac0-475805eb864b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffc35dc-3481-4989-ba4d-f1fdd5adf5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160543c1-e853-41cc-b442-af4f314eb796",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13f53f-9728-40cc-81cf-0e139fa17270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb5b618-fd56-41e5-ae8c-6054c472eef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a80ba5-1b42-4013-b3af-505ffa16c116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a59724a9-2f79-43fb-99f1-95667337812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09d904f-18fe-4d57-85bb-93475a05791b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61166d67-d438-42e3-86e0-fbde64f747a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0a855f-ad83-41ca-8a3d-24888f1c3d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f679a2-86d9-4d84-be7c-7590307ec25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61b1ae33-afb1-486c-ba46-afafe33b95a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90762124-0557-480c-b659-e336824c02a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0458c844-f0cc-4e7e-8c17-651de3a3dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b5579b-4704-40e4-8142-f5611461b997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f414f81-74cf-46f1-bb2d-ad2d4213a13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0b9951-bc18-495f-8ccd-5f32bf33100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc235d0b-46a3-4d08-a276-327a26a43186",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54e245a-346b-4c93-bd0c-2d5812b29013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391ef2d4-0ef9-4384-a7e0-8fc129128a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf84922-6bc5-4167-9784-04eaf65386ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd3119c-9ac7-4e30-a9a4-f13f845d2e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51954e54-ad6d-4094-8ac9-296b8336502b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb51f9c-21b8-4744-bb11-473a9a98594d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d37643-af29-4c74-8027-48a776634581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2021cf64-f2f8-42de-b1a5-db55b48855a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab01727-e8cc-4b92-b7df-dbb11a4c0ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bede509-cf77-4534-87db-2b8d13865338",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67617f72-119f-44b8-b662-b9a1d3ad00ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac58f7a-2654-4973-a488-13fe75bce86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f5c79-c7e3-4e68-ae8f-66968211a5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5db2787-a7d8-4593-9ba4-d573faf7c18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc09d5b-cdae-444a-8436-ec750350bbb9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5db46d-b644-46b3-b21e-e380e0cfb184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4538cba-1c75-4b19-9480-796fc8a00c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddf5eb9-1e55-4349-aad5-11f7aa2c5f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "338516f7-daff-4c7b-a0d8-260fb52b86c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7559466e-d176-40d6-bf63-c4c72cc7c024",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af0554-ac24-47ec-9b73-7a3f3d667b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e544d058-69f4-452b-9f9e-ec55930b6f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7fd3a6-4308-4836-a3a1-1c58a2c23066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c493dbb9-d2b1-4c35-b163-bec8cd1a96b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81c4793-bcdf-4112-a23b-006bec896de9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a0be8-9f82-4c4d-88e0-3780bbf0796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ff7e94-2232-4cc6-8c77-1e66d7e63211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0de7843-60fb-4352-b215-00794293c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "696b714c-f6d6-41e7-8866-203b1a1b351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a754f84d-c9b2-4b66-98aa-f46f07ff3258",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee717ed-9144-439f-8f15-6da8f26b2520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18373f14-4083-4763-a5aa-ff2bcb6fc4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bce0c2c-a545-4f52-b8cb-eca4b90ddf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3ec952-e236-4853-9b0a-0f92021f4859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cabc8b8-732b-4447-b321-83c231034b41",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3c161d-488a-4203-b0bf-54b8a20d23b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f774ca3-9f15-4b62-b685-5b996f5a61b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fdf6ae-4d95-4990-bc30-ac88a50e91c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdc4b94-658a-4fcb-8029-dbb72e0954cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32b5da3-a4c7-4c3e-b743-56f7f9789ef1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f48fabd-a98c-42f1-abd1-37b8a29842ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5b2fad-988b-47d1-a6e1-ecd334837395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff6141e-81ce-44fe-a23c-8a967fe957a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d44092-7ae7-4b15-a204-cfdbdc03c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e75de56-9c21-48ce-a299-c7527674e97e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d8cbd8-e39f-4404-9223-4a6078375358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bfa755-557e-40ae-9970-7f14bdd1fe73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264cf780-39fa-4be1-bb7b-9f30c05161f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5109f2c-3f40-46fa-9d1d-82e5d9dec632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0802ed-b968-4135-9d06-3f04e729ee38",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c64d4d8-5016-4f89-9909-676f37bcf083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cd18bc-a026-464f-9bf6-4ff7e5628d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d49d3fa-80fc-4e6b-8cca-e9c0ba08ca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce19d3df-4ce7-462a-8e06-4efea1b2feab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861fad3-28c5-4c0f-bdde-bafe4ef294c1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d1e436-9245-4bc7-8eb9-d65fbf8f903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9f1d82-4a39-43a7-8990-acb51b5649d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fb6531-1b29-4d7a-9f41-5c3c832138f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a517c2-d191-4f48-8ad1-09802341d502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21a4395-8441-41a1-91ec-d81bfe16576a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d45b98-332f-4cda-8577-137d978441fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb9c029-d70e-4fcc-9c03-c7d17304959c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6da7a2a-cdae-468e-a730-708b7474a966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b75f48a4-7c3c-43c9-b7c8-fc967e45c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4ec863-ca8b-4aab-9d6f-50a7e0c2844e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81133854-2c5b-4327-b5bc-aa6bcfb8ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73b667a-0bd4-4321-ad96-93ebcdf16cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48b156a-f972-49eb-9ef2-fda2da0cab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2d37c4-fd82-47d2-af8b-c814e534575a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fde2c87-fca6-4e84-a4eb-fa2ff3bfbaba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98640a6c-ddfc-4948-b3c8-52f5e540afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a86db8-270a-4683-9beb-bbef06c6893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ee6973-ac0d-4689-97e5-8cb232e97e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28357824-a7c0-40dd-ae14-b87a64cb1b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247ad20-eee9-4e11-a0d7-33b017cc1dfd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6aeca6-b989-4949-8b21-b1745c2292cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c42626-bdb8-476b-b659-9ec631493848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be4f1ea-6ada-47fb-8f37-fafd91fe41d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eed24f5-a2e2-478a-8122-e1e53bf1165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ba725a-3a46-4f1b-8e0e-d1394303e159",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df248e5a-7ae3-46a9-91a6-98d727342025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e9afca-6ed0-4b10-8113-37a0258fd2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d437f0-0b68-4fac-9b90-fba5a439a162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "276fe809-fde8-4e2d-b637-5b2c9d741202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d06901-052f-40b4-9119-e850905c85b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e42039-b11d-4fd7-ae79-e22c450f46b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481eeed5-2fee-4a2e-94e3-26a7cd6d2223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac0e1cc-fa20-41b6-9cc7-d7f751a42a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64126ef3-b8f8-4524-bdbc-20be86b6c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc80ff5d-9786-4ae8-b0aa-b0edef522ef9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ffdaf-01f1-461a-a5ec-6a84cac13406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb83af7-9f04-4b14-95de-a7c824257e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c993b2ee-6ce7-481c-b08a-810df8d11bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9710b2cb-98d1-45ee-96df-450ef8ad52a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8dfbfc-909a-44d4-8ce3-92a55ea7fa09",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb841a8-cf28-4263-9ff6-009e07da0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9222941a-48f7-426c-933d-222703dc2829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ae5195-28cc-438d-a8c6-5fafe7b59df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786beeeb-4e97-416a-a49c-56c630417242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023935fa-8074-494a-9e5c-82055e638727",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a12a2-b087-41b0-a951-ead9c6592b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f3f52d-df98-416f-a628-2534168121de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dbe085-46f9-4e92-bb68-d0c5f9a0f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ee3062-5401-4b9a-b1c3-9d678e81c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a2e8b7-df8e-477f-a54a-deb82d9b5344",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8d8a5d-1eb9-49ec-ab6c-aefc6d347dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33bda8a-2ea8-4ed3-8f9f-e983cc832f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d02969-7148-4a96-8824-dba68722acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a819e9-b487-48d2-a75e-ae7a1c3ebb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40841d07-a32e-4453-ae42-ca745c03b5a0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c75a831-e7d1-4803-aeb1-3aec9075e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3038ab-49d8-4c49-ab30-f6442585bd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4416762d-1ec4-4f5f-9589-9bba4ef6ae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00cb1705-d283-407d-a536-82f39f333e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9735c090-a298-41d2-9dab-add2b88f032d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc22f0e-1c66-4dbb-b077-f43f08f12e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e537368a-2a23-4ee1-bd0c-0248a9645e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39104dee-0326-4834-b0e2-eb54fbf24130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6355f7d6-a1a6-4329-bff6-8bdfa0f8965f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bad9e45d-e7a7-4bef-9160-590608715984",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eed6ffe9-2a7f-4c12-8ab2-533861725ae6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60430a5e-ddb2-4296-832c-c5e2c61b3080",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29735d18-eb28-43eb-9264-7d7dfddcb255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c12bd45-78fd-4b23-88ff-4a83fc2bae5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d23e31f-fccb-467a-a953-f4f5e87d083e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bca34be-935b-466f-bdc1-8b9057355382",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0d9957-7e0b-4af0-b97d-53128725a662"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db90bf73-82d7-42b0-98e4-fed4d41a3367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e92a277-d50c-4538-b14a-4fb5553541b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e482c7e-304a-40eb-b6ec-2667d969dff2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93425240-f400-4fd6-b1f1-14e8cf58cd9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7be1b59-e331-4d0b-b3c9-6f8a1ecc596e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49bec383-573e-439e-a072-975e0fced5a8"
            }
          }
        ]
      },
      {
        "id": "73fa5964-8ddd-48a5-9efd-c072164ca296",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "95e765f2-0e03-4f4d-9be4-616ab6e2a51d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "430c5787-8866-4730-9388-0e1b3c83be34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11660555-9143-4da1-9adf-5302e4b462fc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2712919-6556-4870-b9aa-33d63b4a518f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71496546-0e89-4941-8338-ab8801f7046e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed398f7d-dee3-41d5-8d8b-6a3145812008",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed9947e-fb18-4855-bb0f-3da543735af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cfe72c-09d7-4613-a7d4-8be1948f194d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7cac6f-4966-49b5-9ace-82246a49305a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c138e7-88d6-49f2-8ae7-ff2816da63ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c85185-09f3-4180-a4f0-09c7bc1728b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb639d5-1f3f-426e-9022-ed6ecbccb524",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43be8092-c8aa-45cc-a8af-b39851991f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354f7dc7-4f69-4750-bb1b-2699be33fa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4500de71-b518-4e01-8df8-0ac91c77e92e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a65c06-f140-4700-8d52-ff43eed76754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b10416-eab9-4554-8318-62d3232b6290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611da430-3985-4e1b-abc8-44ed6e310609",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b23a0e-adca-408c-8e3d-879832801746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993ef6fc-7c9a-4016-8d78-c8a5c810523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017091ea-8911-4ea9-b438-a0fdfd520e86",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1898cd8-bb2c-4c6d-83bf-9bed2821bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f0033a-9a33-4eaa-ad38-8a391df72139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d3075d-dd94-413b-b142-042687b912a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268862ca-0455-483f-8de4-3252b6ce1aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa88688-748e-4106-bb3f-fd01d05249e3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f3dcd1-5fc7-40d1-a6e0-15ae04a0a1a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761167d8-6edc-4e14-9472-b0ca9db82751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3131adc3-ad23-4ce5-ad9b-b0b71b15273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b22367-21cb-43d9-8c47-8daf7c9a4a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048ec41f-d583-4c92-a0b0-892611adfc51",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d97d4c-994a-46dc-b36d-e09bb8ac336d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2242abeb-204b-412e-b2f7-cd7a111659ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777f775e-cbc4-49d5-9afe-193506087af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cb9624-f4bc-4dd9-985c-793953f5e3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df82a553-a8f2-4712-aab6-4c9566115d56",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf26ce15-9880-490e-9f72-46211124d951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e66487b-a8c9-4716-960e-498466149714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c14b5-a3cc-4f12-ba70-16307a89da2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302dc58d-ea1a-4833-ab6a-8f8c81ec9674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0dcdef-c1b6-4332-b89d-a83b18fcbc9b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095f794-3e9c-4075-b786-113128d35964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d48b01-8859-4a5c-ace1-35912605e823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fa5050-672c-48e6-830d-fb889921a21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa700bda-f729-4658-af1c-1b0804da2c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9961fd5e-8d83-4965-8f10-56c380a14a68",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc2088-4018-48e7-a215-da9700d83dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ff28fa-4f19-4092-884e-6d0449f98c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d667f0-ddb2-48e2-8796-d55411586ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c95c141-3698-49ff-bcec-5dedb7c4bdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c52d85b-7b43-4925-aed0-3997c0afa803",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a8e2af-32cf-47b6-9102-165c87cf759a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7139f3cd-e094-499f-bc96-66412344a5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff2f022-2113-4602-9813-1378a66e7848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659535f9-de83-4e81-8d78-166dfef686a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd2a0e9-ff9b-44ea-8ba5-fe10c6b394cc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ed61b9-b36d-48c9-9ede-a1d6be7f8a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadeb407-2d79-42c8-8042-ef1b087f5f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284ab29-2fbd-43e0-9be6-83fd5d108386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1944275-bd89-488b-9809-00b76f1e3e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8c85f-dc0a-4189-896b-7f787d39fa8d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ce0177-e807-4d29-89bb-8806d615843f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d25450-211d-4f6c-a863-95f0017191a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f61baa-9abe-42be-bd2f-fdc3034193a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47bf4e6-78d3-4d5c-add4-6ea437c6a78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac0a1a4-7132-4b68-ae64-bc9e48ddd8db",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238e7f75-c2eb-49bd-a7c5-704ba75da1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fc3b18-9013-4b1b-8647-cd4365c28e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de569ceb-1100-4d07-b834-1c647a4df34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01f2d93-798a-4445-be16-4c9e17e373d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae2bd6-b756-46ea-8a42-3541294aa125",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50785e82-c5de-4c49-899b-9137860995db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a95bec-56c4-420b-a1bc-64fbc4920187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bb0015-d196-4da0-a502-d9798b577269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3902e8-318b-4890-9af4-eff08a701e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626edd6-9417-4480-acac-013639ff3cc6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f306ec-49f3-4cb1-b61a-276e56e88c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f394764-3390-4c30-b32c-2386f50e6205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd494b1-06bc-48a1-9f6b-8a5ac2281149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6fc578-2809-461c-9fb7-425e1fd1e32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d1f3c9-94f0-4a8e-89ba-53278659546a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9a26c4-8c85-4c82-a805-c81c088bbbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd01289f-a139-491b-be13-cbaea39a9b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e9ea7-75c6-41ea-bbbe-4db7dd4fe853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e042d858-bb8f-4cb2-bc05-7e2938bba20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08100f8c-5892-4c46-a4c7-1a9cbc668ea8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fb4bb5-734e-4e47-923d-c97363372f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fe5279-3321-4435-b12b-ef8c2fb5a06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc7983-95a5-45b4-bfcf-89c5035d5973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f241c9-f6af-4deb-a02c-32f523df9f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ee64d4-f943-41fc-b4de-64a54bc39aac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d974d0e1-4c99-4f7d-a396-a49f6df7a068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ba8d38-6806-4765-8ee6-351b9e5908dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8ac8b0-0bdc-4435-8c9c-6a0e91e83615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732b6c35-5d50-4e04-9c4d-3b2666b85615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffd1f68-b27b-4bba-957d-89e2d5cd14eb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148b35f1-9616-46df-878d-0e1421b8aee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1238a44b-4a08-4b3e-87ac-bce504a56d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421df9fc-a7bf-4c51-8c32-e28342d5caf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33453813-921b-46d7-8502-1a475e8d6ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e534279-0960-4ee0-9f47-5d8739829157",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd3ab2d-0017-43d8-bec9-f966e7755f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f9b009-db08-4569-8ce1-52e96c9d4b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19652a3d-148e-4115-bbf6-c1d91d6557a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e553cad8-6f6e-4cab-862c-705871d005f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896e07a5-df4e-4456-a7cc-ae1d2a64978b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b3ea48-d07f-499d-93fa-4839c0eea427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aab5d29-86f5-4d93-a5c4-6906020fc0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5867a4f-5922-4e83-9349-06c24097e29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b870dc-5ea2-472b-bcf0-885d7ce72407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e75fab-7885-499f-b2ed-1fa98fdf500c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b320df-45aa-423e-b0dd-6aafc993ee97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f7725f-6a53-4a44-937a-931a0d2a3752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa4bbb-2c32-4644-b348-7b7f960df39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07d8ddb-449f-49f6-9d43-50d66f9766ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5374b8-86b9-47bf-9eb9-973f2ebb97a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34905b0-5a6b-466c-b6f9-e158679e33ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3ea7ef-35d9-4fbe-b213-2d119e1c2fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdac84b-8c65-4ac9-895b-ea9da2bb71f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c004d381-f0f4-4e85-9754-6c93233062f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ce508b-59a3-4e9d-9c7b-b40a55b9738c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0ebd7d-9d7b-4a12-b306-27c8562d96f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9166e7a-d0b6-4ff6-9e0e-7011bbce24b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a160a913-526b-45e5-aa8c-7b3b928c0c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f29a16-e370-4c74-9314-e6fe265829be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f85dd69-f4ce-403e-a86a-1fbb7532cd4c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ccf184-dc72-413e-860e-23d7eaa4ea9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbf2e4e-1ea4-4eb4-8c79-3d1a96598d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195bdc0-ce2c-4550-8d7f-efff7b072a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48eb614c-c308-4109-aefc-14eff28e24f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac5cdde-f158-422e-a148-9695cae3ee27",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe6961c-a307-4441-94ab-94843d41db42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0049b8-f6d2-4a59-be32-b2c575b7020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a6f1b4-e652-41af-9bcc-acf37481e092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad18dc06-03c4-4cdd-86a1-8d960ccd4e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea838fdb-6328-4653-af37-92b13668504c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb34c18-4957-46df-a215-25d0ef57e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2922303-4d10-429d-adf0-2d7d83eba7a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4e83d3-8419-48f3-81d2-a2e0331da51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7dd717-552a-4845-a882-19034d6c45cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be56c3ab-7652-4175-acfa-8c5f51acfd8e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf255bd-20b9-4354-a77f-18547427ac1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9d1a2f-53bc-4259-af1a-299359b713f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7597981-9ed0-4ea3-a2b6-6f1d0ee29ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb39555-4c0a-45a5-a874-a4899800d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b8d57-3f50-4623-a697-aa337b0973fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3830d52-b687-401c-8a08-1bd6b0131a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb49a290-31c3-4142-833e-b528e4676344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424dac9-50d1-4594-bdec-438a149d8560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd6f36e-2de0-4433-af1f-1f354a846af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09baccc-b9af-423c-a34a-67c89521c68e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad0c541-3dd9-4f21-922c-a2a14d1d2b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c054c792-78de-43a2-9d1e-61ffaec8b8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9f6542-4f04-4f75-99ab-7f72c9bb8688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccc02b8-585c-4399-a729-a9a64c94cafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f41169-8a4e-4c8c-a85c-a430b1f19346",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc22521-664f-4325-9745-8f9ad038aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1546fea-f1cc-47b5-9faa-6c2825f574fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83863a64-6be9-42c6-8617-e4c63b985491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ef9ce4-12e8-43e7-a22b-bf613223441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3bbb1d-b09f-48da-b60e-3c7b4b7213ee",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d7f0c8-2d91-490a-b89d-acc0a18f689c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af940a0-6e6e-4a57-a936-dbe54beccfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d258a2b-d849-42ae-9929-10e1d7ee224a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd0139e-e30e-4ae7-8dab-74678577091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bb5a80-da5f-4d6f-802a-6ad572b746a3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f890fe39-0f52-4cdd-9fbd-7cb47a631014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c0b1a5-62fb-40fd-b7a3-93c647b8a4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b1014-e5b9-4655-82df-13460bdb8cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712dd5b8-ba56-467a-b48f-5b7af74ca5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a70b70-c90d-4cad-85e5-45cda6a0f1d7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd38a0f4-3a13-4dc5-ac0c-94a18c38eb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e1f08c-a535-4469-9bf5-26df8a26f976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3d0927-1064-40e6-a41d-3f2f089f83f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac86cf70-0eba-4cba-9fad-fbee60aeda73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2ae2c1-06a9-4900-a75f-09700cc1d2da",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8723e7f5-a2db-4fee-a225-d0d0e6e1653b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5228e9-ffcb-480a-820c-2c139952d5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf55258-fce0-4667-b5f7-ace1f8039491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beebf911-7330-4c42-871a-28a24d3ed5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb99629-435d-404f-a4b7-168e6796b083",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501409bf-0124-4053-9f4d-8531576ad390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ec6644-275b-4ae3-9ab9-8ab5ae7041fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceacdfdc-9c50-4383-8b70-1d1fbc3e2c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c0f4cb-e1ae-4639-b96f-96bcc68ea54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95093441-2613-43d4-a769-481e86fb5b9b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82353f14-385e-4f9f-85f7-74b7d5cfa280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b324a02e-0a93-4a1a-b25f-5ade3ac5d45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa6d618-7f2d-42e1-a3c2-a718e88e6d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb29c69-034a-4e37-a389-62b6f460a418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f445726b-3d49-49ba-bb7e-60917174b000",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc5309-367f-43df-a07b-c82fdff82f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470d5f84-71dc-45f9-b27c-4d42991be2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f96b511-ab9a-4b6e-83af-bbafcbfeb287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abcc924-2f6e-4347-9927-09c9b23ea40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3196c004-992a-484f-b086-be3fc979f7f1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d71aaa0-f97c-46fa-8d71-ef828a15828f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d37e49-f0db-41be-9c88-30a847ed9616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0a9996-b9ec-4dda-af4c-29cff9ddcfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00054a2d-e8b6-4e34-9176-bebf8afcd6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27abd50f-7463-408f-afe2-5274b548703d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc90b2df-01fe-48d7-8234-56e41eb20c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecbb2e5-492a-465b-948c-38de4cf4a304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a697c66-2816-4895-b15b-92401de739d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1640593e-4f98-47c7-9243-df5a41271575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce396dfc-9576-4201-a1ae-8e1c992c48b9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9975b5f-06f8-40c4-be1d-5c5f09e705a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bdd39d-0eda-499b-9271-99fd6b9b5709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0eba02-fd2d-4cb8-9a6f-990f2fe155f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bbb45f-8679-4496-b596-df62ab4b6b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571c6221-77cb-445c-b865-89b2ab6793ea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfbf860-fb36-4f44-8179-a0ef0f9744ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e84878-890d-4a74-8435-0bb3c5857d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae0008-69e8-42d6-a29d-2fac828b6918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2b8577-ce16-4991-b324-b408f2253753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b50a1e5-0e28-4e86-b9fe-d3f632622202",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89778c2d-1503-4417-a271-b17b52fdec79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effaef99-d5d8-4e93-8250-42b2de0c87a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970837b5-2c64-46fc-b8d5-9e76258617ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca789e6-4252-497c-9cc3-ab2d298125c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f8590e-21ce-4f77-ac51-ae9bd530e256",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc49ce-c23b-420e-a302-ed2fa3922a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c3c8c4-81f2-4eed-9389-e0d7a9ce5aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51674b3-0678-472b-a33b-d588b92abdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b762319-d678-45a4-9a1f-7f601ced25fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b91bc3f-5e00-4f12-9513-949304a49d6a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffec583-a741-4421-816a-71c45a240059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec7cf12-3673-4b08-9e3b-741485a9f42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efdeda6-d076-4ad4-aff0-dfe855115e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7939c050-692b-4ca7-a1a3-a4f977272673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b70c79-9700-4ae2-aaa4-f0eb35cf272c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1a7818-dc93-4ced-adbf-6d775fe2525d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14286aa3-0bc1-437d-b9b1-feabc36fe275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab268a-4f3e-4d8f-8a72-aef69a0b5f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fd8560-e8b3-4b80-9fa5-ddf03951d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da78abf1-c0d7-4c9b-b253-93e2a17fb532",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755cca28-dc74-4a58-b917-2a0b2b346904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee3d6e9-5f55-40c5-b8fd-fae20df3ee3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d32c3f6-9c88-4262-a47e-aa6237dd42c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339d9d5e-76af-4394-9c2d-28f13c5ce69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51ced11-ea1d-4572-8388-e703b0b47be8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca63dfe3-8637-48cf-8a97-c4cba5fae299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184abbb5-7326-4df9-a664-4f66506d704c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecb173c-6bb1-4804-a940-d2a201a16a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f457c00f-5f1c-4483-b483-1e1afa874528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b31157e-21c2-47f4-be4d-cfca31bbbb72",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b864e766-2d79-47f8-8258-92fabf24cc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b4afbc-327d-482e-aba1-e5c9771f41d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0566e41-d313-48d9-b541-0ef5bdbd685d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547035c0-2ca3-4cd2-b484-0bae1afbc253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c827613-7428-400f-8068-2c105af2cd29",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafdf258-3157-4188-b3bc-66b2908b60df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfad261-ac26-4dff-904b-39a06ede5cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4267422a-ee2f-43ce-9299-740b9327b7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a116bed-5b03-4b52-a414-9f1257ea09e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f945639-d194-460d-8955-4a5a31911d3a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745801a3-09e3-4d6a-8bb0-c63e1e91d755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb52b31-ee1c-49e1-b517-8049c3ba03f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7059fb-933a-4e3a-9649-7580434810c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35692d7-ccf8-476f-8ba0-5251ffcbe66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ea159-aaa3-480d-9890-645bfc95acf5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff15774-0917-4a05-8d87-47b03e95386b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4549c222-507b-471e-b55a-96cd866f1d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652f2bda-e2eb-4d32-9f4d-9084ef72ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68ea635-47ed-4173-a834-a939cfee9cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaa1c52-4e3d-4767-bc04-f7295c244ddc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879be221-bcec-411a-af99-fad0b60fe8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cab1e2-3bf4-4815-bbcc-f998c9c7f81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ed925-3e7e-4262-a13e-280429f82022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baa31f0-05c9-4bca-9659-1890f063ff91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcca3f81-bb92-4645-afc6-87a91f658b5c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71784bd5-7b6e-4e67-96f8-b962ec38cf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9ec3f9-1541-4026-899f-3c114c6809e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c6761-b063-4ca2-855d-a371a56f3c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d027b5d-afab-4472-9590-0e93c30d9a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaf7356-262a-4fa6-a2e9-b53a551082a5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fefeb41-ccc6-4f11-81ac-ff3c58da674f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ef474d-64be-4f9e-adac-ea24815d192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224fe0ed-ea9b-4f6b-9edd-5e273588bb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3405172b-db6b-4938-85a4-9015796e979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdf58b1-5ac2-49e1-8a04-fc39bcea54a1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1662ad77-d7f0-4e0d-bf6d-7d4a5d3b7430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc39c60-46b6-4905-a020-345e29c498eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572ec140-b84a-4ade-83ab-e4889539eacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a90cf53-bf9e-4fe6-9804-ba435ac7848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2994a058-c983-4a01-869b-23df2ff07262",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc45995-fc70-49ff-813d-c5888742b0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20de25bc-3a92-4f88-8514-0f19ee67e2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67a73d7-cf15-4d63-9b59-4b134218c884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a963c6-d6bb-4ae0-a3e3-d50f4fae58e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042bc83f-e39e-4f4a-b9d9-c89dee0e9162",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db648489-67b9-47ef-a9fe-fa8f35e1410e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d6f1d7-796b-4294-8f7f-791babd40bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baaec61-74f5-4195-baed-28947da40a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1eb3c2-a469-4347-906e-49aaf747d83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceda330a-e3cb-4f43-acca-7150cc665b1e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf0b25-9ff2-4b84-8dac-a78f017b28f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1fbb65-2099-485e-9edf-dc8a11f9968a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9088a2a-6cca-4991-ae96-6ede179e2bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85c9736-340b-4bf9-ab07-3b8a61b034cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c2afe-30fe-4d44-93ec-43fe95a93c41",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6b3c04-4ce2-4d17-b7e1-014e83855834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3b8e75-4eb6-49f2-aad8-3fcedbf12a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05fd3d3-5563-4a3d-9581-c6c8bfccb1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e664fd-4d13-4554-8aee-c9c277f76db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b367aa49-3fe1-431a-b235-21097f4c788e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b572a7c9-c26f-48a9-9e95-b19e97b56f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc7d461-138e-49fc-a6fd-29bf8fe38824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e8a1a0-9437-4e74-b932-a34c899b974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6414b84-6b21-4ad1-8ff6-60f7f1efc3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f84d7f-2ba2-4638-a082-4a0dc16159c1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e260bf3-7a46-414f-ac50-da16c325a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b64cff5-40be-4591-8e46-e77e5bf5cf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753f3a8-7971-4a3e-b484-43fdb00ab7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe113bd-c5c4-45a2-8d4a-33ac9b6b9d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2c03e7-eb52-47ed-b55c-dc1a4a9a86c5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69053ed0-5bd6-47aa-9e7d-ef48a716d494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8b674d-df84-47ec-81e7-31839b4acf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f4de8-4ffc-431f-ab51-368e3fd1516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403d963b-df7a-4636-83c5-68368231a33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2321cf-33b1-41ec-8bea-3a2bc4726d68",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd535de0-964f-4e17-8ae2-b362a963a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80da909b-6668-405f-a882-897422d64c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2bdce-7c18-4e89-932a-f123512cdf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c374ff6-2d61-40c2-bf11-1f495fb3c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da298733-2d28-440f-ae4d-dae1e66c8acd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2283ceb3-beee-4147-8b09-0e1780772e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7aa193d-1ed0-4e7e-8a85-dfd46e499ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5337747d-f367-4680-9abf-97401c7ce2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac475406-8770-4955-8094-53c65315157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b91483-8966-4130-a43d-80bdb0acda3f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9def33d1-9eda-422d-92d6-e3e2d7a5fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed98ff7-7527-413d-b8c3-ec229fdcac03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3a86b6-05c9-4de8-bde9-54094c097584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc07e43-7ad8-4677-a194-e10711a599ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df585a1-a151-4e93-980f-243ddf2cfcbb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ede6430-4797-4827-8636-8c53c8692f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c566200-f224-40a0-8b81-2124c8445a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53add2c4-2d6f-4012-879b-a2648d7c8a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcc2bd0-1330-4cd4-b1a7-0f184193476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fcdcb6-6539-42f3-a592-a9e52a4edf99",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b67cda1-c3f3-404c-9774-cfcd5dc2c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea678e63-f17a-4957-8170-867773a48a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2239ef4f-316c-4756-aa9c-b7410016e58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e00b429-084b-4758-a8ac-4bd62fc77b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff783096-cf9b-41e1-8ace-ed3a25a79d4b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80959ca4-0964-495b-a745-43cf575fe6b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56792045-5237-4606-b784-f8fd67f251c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6090186a-f1a0-43f8-8022-3c3adb726936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cedcf1b-8401-4b79-8870-f4a855e03b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482a5796-9a9b-4e09-98ec-cc2564cbba0b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361ae825-f25f-4e6b-8ae6-6897022b5aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa4f32d-3bbc-447a-8e83-c46d6af0e4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb5c8c4-3fce-4c03-9512-018eaeedf7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6da2177-75bc-43c9-be84-7205e1e1fae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d0914e-4800-4a2c-ad54-e75f09a4a930",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c7037-cca1-4dc8-83de-7441c41ba7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef270f5-b417-4d54-8761-b4df26e41517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a08c2db-fa2e-4303-b96d-f8889e18d6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfeb33a-98dd-4030-ad98-c6afd87d2e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e201638d-c31d-4082-8920-c518cdd67a99",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531aa36-701d-49d4-8763-1b2563d586e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59679f4-01d9-4285-a924-5515068baf74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313bc4ba-c45b-422d-b46f-9870d895e8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be05322-afbd-4099-ab63-ee2914acaa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae2b85-c460-484b-84d7-8371e50a5ccc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc7859-7c0f-4c88-8092-0ee6972b9ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b91c9f-42ed-4a2e-9644-c801050eafba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37dce30-dd2e-40e3-b462-4599b68dc5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3239ec-d681-4ec1-b7b4-ac8b6f6dddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3ac890-8709-405f-aebe-6baa66143c5a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef32ca1-bbf7-45b8-a917-1f138ade0f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e938460-414a-48e7-8ad4-6091b6a26a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fa86bb-f37c-4fa7-bf38-1945e6b1239d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f7b426-387a-4de7-a7e9-7a2e048eb0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209360a7-2763-4deb-8637-b17b6f1586da",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bcc2c1-c039-4cef-b443-c117af2122b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe3a1de-02b3-43f3-b95d-5a81b370f3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b852123-a103-4494-9a0c-25d0a3743cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82eb740-fe68-4300-828a-7c5227d47047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae18322d-fa85-4da6-b9bd-638d85664e04",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0863bae2-25b2-4e56-84a0-e6c58feea821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2c7738-a174-478e-be98-4e64a8eef762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e131cef-e82a-491a-87e9-963548c48716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f80bab-7943-48b8-b2e2-081bc9eb58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c385b44-4d76-4a02-ad8f-d68768cf7eb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27ce91-052f-42b5-bfa4-cdae52317e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab87041-d7d9-4fd9-b469-c26e21dd2e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712537f-5f51-422e-b018-cd0b72c22e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d696f91-ea2c-4d66-832b-38eeb6003adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f4be99-26a9-450c-95a8-5f89edd35b5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6db37-9a3c-4e06-af84-a958f7e31227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f78e76d-98e5-49c2-854c-d92dda08f6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca105bab-4b32-41d2-bba6-bcb10d97accc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b12a2be-c680-4fb7-83c8-9f18d3cd612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0159fa26-fa63-4814-9746-29183fdfdb98",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fb9c82-74cd-4086-b484-7e24d3d9adbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400c11ee-07d8-419b-a902-696dc4b8bbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb80188-df67-45f0-a45b-d45cb633b857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2539cf5-f845-4c41-a6e6-cf97919c1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3786ae6f-4bf9-42c9-bfea-b1d5a94a5961",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79064fa9-188f-4b62-91d8-7afa22107c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b3c994b-2af0-4019-9a19-aa8639d5fc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38f89b-f117-4572-adf2-858c2feaae08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37b0f34-a49b-4442-9fe5-1b916f8a26ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d538ae-dd4a-48d3-87e6-28e76f04719f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508e2fb0-ed0d-46c1-8431-c6c2d32e166d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fd7f8e-61dd-434d-81f8-26fda381d106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade89a41-df84-40cb-adcb-110af4038ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9cc8e6-6724-4b85-a807-7dbb29f9c556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6e2093-e74b-4b25-a31d-6040bdb52c85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f208508-8063-4be9-8420-125f498bdfcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4870dfb-6829-4310-a860-8dcac07f3696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe411eb7-b863-41b7-a9d7-4466844e2cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55a1dda-6044-44b6-880e-f4a077becc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e160761-0cd8-4a12-bfc5-1db40b36ae8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34db3ea5-cf94-478d-8374-88c732923970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3cf0f3d-bdec-460b-9030-8fca71c97612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea0fe26-706f-421b-bcb5-24b3a6d7c1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9e3da0-78b2-45a2-ab68-fc7d9288723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e1c2f1-3a7f-43c9-98a8-4ba0eacf28fa",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5096389b-8c29-4ea3-8711-517e33bf27df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890654f9-4b72-4cbc-8929-d45975885e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3ae252-cc5f-43bb-8a50-e5be8cdd3567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3be9f9-f171-42ad-8cea-d799024b54d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bf19e5-bd20-4332-9791-aee3440e3b75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be38ea5-819e-48f0-8ccd-e2ce3e19f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ffd111-1d87-4471-a6cc-5cc1c5400f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192f69e6-2706-40ed-9745-07c22e7a867c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65401a8-f8fb-4b8c-ab6f-f5fc71d63767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30780992-cc05-45f4-81f8-7dd8c13ffcdc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a328640-9140-4e72-af6b-471565f591b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1719b959-2ddb-45bf-b197-e8f688f217f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e100eba-65fc-418c-b2de-5e2bc3f1140f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28354288-97cd-42de-971d-296b15987c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5918b1-a608-419e-844a-094876a63075",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c53587a-01ac-4526-a332-54de575e0f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e65407-0b07-49c2-a5a0-5d08f54ccc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da777aa5-5f51-40c5-86a2-442ae1440126",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e35fda-bf79-46f5-b95e-641d1b4b3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7a20d1-2d8a-409d-b8ff-0496261394ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81187ae6-dfa5-4189-928d-695e60c93d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71374e41-c539-43f8-ab5e-de10cb751255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d628efae-4c37-4d5a-84ae-2da1e7826000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c854e3d8-9841-4493-b8a6-c4e2c64a5c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddcc202-9299-49a9-ac18-fbd7b85a9e47",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59781b85-0215-4c95-b7ee-c0aedced595d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e0cfe0-3580-4fec-8288-544220e9a9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab959720-5f63-4739-aa98-5bc79ab643b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9516b24-3dd8-46c1-86e8-75706c4dafbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38961543-7b2d-4eff-86be-cda72e3fbde6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8478e2-ff2d-4055-8c89-6e81038c20d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901d5cb8-9d07-4e19-8c5c-5f9544df931b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f92126-2547-4901-9433-10ec7fe036c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6371f8-521e-479c-843e-a27ae7f45828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4af3b4f-0aab-4443-8b57-ba4a0c4f67b6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba367473-8ee3-4799-aa3d-4adc4ec81e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da89c26-285a-4f72-b73c-29120d93a455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233cd94e-32d5-45f4-bc8f-bfec5df0177d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2319f62d-44bd-4671-a5cf-96abf58192f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a04026a-26e9-4cbd-83a5-90ae340901d8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db85cb3-447d-4b81-9f75-2352c71812a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebfeed9e-e4a6-4070-84c1-98bcf80dc97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0261c955-ecb6-42c1-95bf-3c673069de30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdeb0640-3691-42c1-a852-df2b2c0d31c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c21b0b2-f706-45e3-9303-23a1d02121bd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad30246a-f845-4ab8-a496-1c630c9be95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b969c6-37a5-45ff-a14f-ae5b3dd051cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19835cb6-b16d-47aa-b712-fba828258b46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233b8146-4315-4891-99de-64180567269b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26b3399-2f78-4cab-af32-268f84e69b44",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b432ecdb-c73e-4fff-a40c-6aaddf522f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a76da46-9b72-4250-b961-dddf95ca89e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7866858-3c15-4b20-ab7f-1ceb89e6845a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92625a0a-e878-4ced-a008-86b8eb1b8854"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "061b78cd-dc48-4979-bc09-93010b757d38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db858d9c-81e0-457b-8eb3-d9f5dc44e2f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83956b5e-d6fb-4ce0-a3f0-c403830bde8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad73f23d-47de-405e-8a27-ed61f972fab5"
                    }
                  }
                ]
              },
              {
                "id": "c230717f-6ad2-4c5f-b16b-c34d1d1e1e2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7174726a-75e8-47aa-b293-3947927efd44",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f79c6b-b26c-4be9-b0b4-936c81315faa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "568b5274-e6bc-4b4b-8f91-30d357d32019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c606f7d-ea3f-4610-9b21-406c9d032638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95d6adb-74d3-4ce7-aea4-13bcc6516ef6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf04c2b9-4bcf-402d-adf8-12a366cc8295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efcd7630-ac5f-49d7-be14-c9c3400a6b46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0726b60e-68f7-4b69-ad54-1c1d519f1e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e4e8934-0d83-4965-9f94-c6a96b0178e5"
                    }
                  }
                ]
              },
              {
                "id": "2eac1b69-2d06-4e6d-9bc1-de90644c2602",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f64a7cb-225b-4728-8226-a41567b0ba38",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd41da-ebdc-4f59-aed4-9926b59a8117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4bd274dd-1566-4eeb-8fbf-69641f8381e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad72b31-2e82-4714-9c41-b095db645390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649f3b8c-eb18-4a7b-884b-37df7bfb95fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e43371c-57fc-4502-9a4d-7e5749604524",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b71d857-029a-4c9a-9706-fd34b6403703",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ecf8c48-e6c1-42f7-89c5-61c717006ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22119c29-300d-412c-aa53-f478f11e5d5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85096a97-b600-42d7-b41c-bad303db4937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d39620-d68f-4ddf-9193-cce3848052d5"
                    }
                  }
                ]
              },
              {
                "id": "e5d62257-301f-4047-8448-2bcad617cd7e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b6bc689-f244-4d99-8578-7c1a91da8e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0f67566-849f-46ce-a9b2-11c988c94ede"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "220a9a71-e5c9-4dac-b31c-ae707ae11e75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304bf29c-0f9d-4f6f-b132-8b566f2cc069"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59eaf7c6-ce78-4495-a02e-b757c815547b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "76a7f403-96cc-46b2-aeee-9799c4cf0099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c900de10-0c1b-424b-bc11-17e9d1d6dc26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "638a0634-263a-4b13-abe7-b953d88f3121"
            }
          }
        ]
      },
      {
        "id": "aeb304e8-28ec-4f1e-93f3-430e09a4daf4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e6316f3e-1dd8-476b-9fa6-d40887055741",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ab15b3-5aa8-4fe0-a92f-b62477445b92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f14d5c33-18c7-4bc5-b0ca-19b1e617902d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ad3080-4380-45fe-89c7-fcd885f08a38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7feed21b-4a76-4368-a84f-633fd382c93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce2e94-382c-445d-88c5-261908fb4962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eee193c3-ee5c-4be5-a27f-9f1d6eba9a6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f09b78b7-a64a-45ff-abd2-e6dbdb4b090c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a8dbc6-93f2-463f-a794-675945d9e549"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4573535a-5204-4365-b81d-bc5f4d33764a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9c4cf25-6fea-46bb-b398-1f4e1ac84a0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae1cb6b5-d9cf-405d-a24a-b8b665fe3811",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "90756c60-7b2a-4f4b-b9e4-55dcecc0560f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb1ff020-0d4b-4ed7-aded-c5f8a738289a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6a3a6f1-b2e7-4a6b-9027-ca3fa7f1a58f"
            }
          }
        ]
      },
      {
        "id": "7fb44024-46f1-4c58-b41c-ac302023fc40",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "908e8255-e354-4583-bd72-b83f14ad924f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f02a9bf9-810b-4b8b-8c2b-e94d5458ebc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e56697b-0c49-4db3-91d4-e5cce944052d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c948e8-823a-4dc5-853b-725a36f4d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0425ef7a-f93f-4d0e-a981-e93d5868061f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e8741-7bc4-4fab-95cb-54ee003942c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f7f6b19-4a5c-427f-b36f-b8959af84446"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84a934b7-6eda-49aa-a050-9e2a361c0eb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d87fb2e-42ea-4de8-b135-6b7898d9cd51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f38efc55-7b15-43cb-8b28-25d3d318eb8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f2861d4-d545-4e73-8454-3dbb92d708cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2472775-ec77-43f9-9a0f-566aa763957b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ca6569e-0740-421e-9cf5-b9a498061ae1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0da7180-938c-4c2d-a8fb-3b26c59b40f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a361cb57-0d27-4219-a019-fe457824991a"
            }
          }
        ]
      },
      {
        "id": "7e3ba2ba-48f7-439c-8fb6-ab78fbf63509",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b00830ca-fdb3-44ba-8ffd-fd3e0de5dad4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "661e0557-4361-42e6-859c-887514ce0033",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40d06b41-6391-4ad9-b5d2-ca3900bc11b0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf323d4-1ac6-4ef4-b7c5-69edb4591925",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9992b183-32c8-4115-a3f6-3f646ae276fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b3868-c918-4004-8902-0cb6c9613ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22e47036-a732-4351-b277-0923449e7ff6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29e49ab-615b-44f9-9e95-04211591d313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "053892e0-b9c2-4e09-9c7a-03ed5bb920ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95dc5da9-89ca-4450-b239-ea25d79fbda6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0691d5-d3bc-4380-bbd6-96a71cdc66d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46bf8636-9443-4c67-a18f-a65299a9442e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f093a05-6bea-4c2d-a40e-3dcb5f1f981c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fda2d94-99ff-480c-9812-86fcd51a759f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b19a706-790c-4f49-84f8-35fe0355fc7d"
            }
          }
        ]
      },
      {
        "id": "c754dff1-529b-4a75-8f29-3be8b12f5a0f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef258928-d371-4b48-8959-8e0eb37b38c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b32c16aa-7c8d-4c51-ae50-63e9fa155805",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "28459812-7922-464d-b79f-efc760c0bd77",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc5b3749-89f3-4e06-85f9-33b60e70e780",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42dd3951-1ea9-4da0-b87b-f8880881cf55",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 688.5950704225353,
      "responseMin": 7,
      "responseMax": 6589,
      "responseSd": 767.2626082220486,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688604586281,
      "completed": 1688604797682
    },
    "executions": [
      {
        "id": "22296f83-08dd-4699-af73-31d2f93660f2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a11cb1ff-03c6-4848-9f92-f78cc8798a6f",
          "httpRequestId": "1f710612-771c-408f-ba41-26d03032f998"
        },
        "item": {
          "id": "22296f83-08dd-4699-af73-31d2f93660f2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0382bd79-0799-4d00-97ac-37be25040e05",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "cd63ff4b-19ac-4456-85f2-3fdf4d053160",
        "cursor": {
          "ref": "0351c1cd-bca1-4ddd-9753-3d63171fb87d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "46a437cb-7d2e-4403-a66d-60ce485d7803"
        },
        "item": {
          "id": "cd63ff4b-19ac-4456-85f2-3fdf4d053160",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6558d963-a579-4f34-9543-ba9bc12d37ad",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ff0662ef-2411-4416-9d21-a51529cd6510",
        "cursor": {
          "ref": "6f9f2d5d-ff45-4813-b846-745a6be37542",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed2bed30-f2ef-4209-8a37-8e06bab49bf3"
        },
        "item": {
          "id": "ff0662ef-2411-4416-9d21-a51529cd6510",
          "name": "did_json"
        },
        "response": {
          "id": "2fe19a60-0fda-4cb1-bed1-effa2a4848f4",
          "status": "OK",
          "code": 200,
          "responseTime": 1001,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d086d70-8a4b-49db-ad41-0c0f87684183",
        "cursor": {
          "ref": "526b18c3-091c-4f6c-929e-bc7c265c7e83",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25340cdc-11a0-4e07-bb3d-7f0a71b05323"
        },
        "item": {
          "id": "9d086d70-8a4b-49db-ad41-0c0f87684183",
          "name": "did:invalid"
        },
        "response": {
          "id": "28000342-4fb4-4fdc-b14a-e844412a352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d086d70-8a4b-49db-ad41-0c0f87684183",
        "cursor": {
          "ref": "526b18c3-091c-4f6c-929e-bc7c265c7e83",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25340cdc-11a0-4e07-bb3d-7f0a71b05323"
        },
        "item": {
          "id": "9d086d70-8a4b-49db-ad41-0c0f87684183",
          "name": "did:invalid"
        },
        "response": {
          "id": "28000342-4fb4-4fdc-b14a-e844412a352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc05601d-48a0-4ce0-ad9d-61cde646b860",
        "cursor": {
          "ref": "b3f0aa93-c8b7-478b-8a57-05e1fb98acbd",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ca71bd61-4ab5-46ee-baea-93f559a098ca"
        },
        "item": {
          "id": "dc05601d-48a0-4ce0-ad9d-61cde646b860",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "51a1111c-2c10-42c6-bd9f-2b3830201af6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 709,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e590a51-a36f-4d1e-a3b4-f2f5d14ef89a",
        "cursor": {
          "ref": "ba4a272d-6d0e-437c-8812-38bd739335c2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e94e99ab-0d9a-4932-bd1b-bc01b0e9cbda"
        },
        "item": {
          "id": "5e590a51-a36f-4d1e-a3b4-f2f5d14ef89a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b4201743-bc31-48de-850b-f71467b17215",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb8ecdd-7dfa-4002-b0b9-a3c4577bcf8e",
        "cursor": {
          "ref": "01539ec2-f631-4edf-97db-753162aa6fe3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "de055dca-cd1a-4774-ae16-4268eb79d82b"
        },
        "item": {
          "id": "9eb8ecdd-7dfa-4002-b0b9-a3c4577bcf8e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "454bb7e5-b2aa-4f92-ae54-348eb909179f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22583650-ef21-4ca6-a8ef-c1e0ad90c636",
        "cursor": {
          "ref": "4fbd8437-9e90-4a48-8b0a-71b9b682da18",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85977c90-787c-48a6-89fc-7c07b255aea7"
        },
        "item": {
          "id": "22583650-ef21-4ca6-a8ef-c1e0ad90c636",
          "name": "identifiers"
        },
        "response": {
          "id": "fb74712b-9d72-4e6b-aee2-c6c1207faff4",
          "status": "OK",
          "code": 200,
          "responseTime": 1330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32952117-0886-4b7e-92a1-a5b9608c8bf5",
        "cursor": {
          "ref": "1df0f18a-e8b6-42a4-ba1d-2592053e6b96",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ede1b70a-d13a-4404-862c-256af11720b7"
        },
        "item": {
          "id": "32952117-0886-4b7e-92a1-a5b9608c8bf5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d8ca4b4a-4796-4e1f-a649-ad4dc694dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ab63f7-4474-4a7a-98a2-b9d69e6b140f",
        "cursor": {
          "ref": "be2c50ff-08f1-4d5c-b672-bd3efdee359a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3c0feb65-03c6-4d0c-8b04-2cb871fe29d7"
        },
        "item": {
          "id": "52ab63f7-4474-4a7a-98a2-b9d69e6b140f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d87882f7-4b90-45b4-93f2-efa01f5799d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd539f-a160-4302-afcd-44f606d25433",
        "cursor": {
          "ref": "d293ae1c-9bb8-4125-9394-669d4a2869f8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d3674a65-1c8d-46b3-b7a0-c50b17e083eb"
        },
        "item": {
          "id": "aecd539f-a160-4302-afcd-44f606d25433",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a95dbeb7-4cf1-44a0-a91f-bce97a75ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9cc6c6-d812-4c15-9936-fa48f9c6d3dc",
        "cursor": {
          "ref": "98c43092-3f56-4550-bd65-d47176ca7a38",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "92c4d3b1-47ed-4e16-b6b6-73abe522900f"
        },
        "item": {
          "id": "3a9cc6c6-d812-4c15-9936-fa48f9c6d3dc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5c7585c9-a142-44b5-91f0-3842178537df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daece172-4c71-4f5e-976f-5f287b938578",
        "cursor": {
          "ref": "dfe69352-1b13-42b7-b780-8efdc1130008",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9630f8ce-829d-4e71-bc09-1b2e79942513"
        },
        "item": {
          "id": "daece172-4c71-4f5e-976f-5f287b938578",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90249acc-7b28-43bb-b6d3-7b2efbf97c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e08970-2612-479e-b3e6-70551ccb5ab7",
        "cursor": {
          "ref": "05790848-df1c-4ba3-8641-a15ae0f486aa",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "51fe9f62-aa14-4a21-94b1-d9e9a4e2bc83"
        },
        "item": {
          "id": "f8e08970-2612-479e-b3e6-70551ccb5ab7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b71e632d-884c-4fa4-ba7a-3f3be6a796e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1a7a9-1475-4671-ba93-ef1e3d023e92",
        "cursor": {
          "ref": "e352a636-47be-4f22-ad67-a2538ab870df",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1f676114-4968-4e6b-8fa5-3e78c5774222"
        },
        "item": {
          "id": "d3f1a7a9-1475-4671-ba93-ef1e3d023e92",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8036707a-b70a-4d3b-8564-8714ad561e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d765918d-9dbb-4337-a64e-6eb68a8aad92",
        "cursor": {
          "ref": "1472d086-1c01-4388-948b-54b408ebd9c2",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0dee5d72-2bb1-4096-a4c7-ea86cb528748"
        },
        "item": {
          "id": "d765918d-9dbb-4337-a64e-6eb68a8aad92",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fbfe6cf4-5b44-4dda-a84d-50108ec111c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8d659a-5502-4288-aeab-d10999ae1c54",
        "cursor": {
          "ref": "1ca5fed9-5940-4cea-a70a-f1404b88a69a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "52b2a622-dacf-4481-aa6a-34e59bfb1f2e"
        },
        "item": {
          "id": "5f8d659a-5502-4288-aeab-d10999ae1c54",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a155772f-8659-4b2d-9318-f936ac2d4950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59310329-de24-427a-9afd-1b0602a27cbe",
        "cursor": {
          "ref": "95634e57-1b19-4ce0-a1e0-8c57761190b6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1577cd2e-870d-4b5d-aaac-88d83d954ebe"
        },
        "item": {
          "id": "59310329-de24-427a-9afd-1b0602a27cbe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3c6e32b4-35e4-46f8-beb9-f7181b3730de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f438d721-80f4-4bbc-a69b-ccdb28e95d51",
        "cursor": {
          "ref": "dfe24b1c-31c6-4ef2-aee6-e93995cbd411",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5a7a8732-d92c-4598-8860-cb36d07ce5c5"
        },
        "item": {
          "id": "f438d721-80f4-4bbc-a69b-ccdb28e95d51",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8a4f74bf-d0b1-4ad1-b019-15acd05094a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af370080-8646-40a8-9c77-dc0439baa8df",
        "cursor": {
          "ref": "99967083-bd32-42cd-b67b-e7c060a27988",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "73c89fda-0d03-4849-b82d-4efe725ca646"
        },
        "item": {
          "id": "af370080-8646-40a8-9c77-dc0439baa8df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a823e042-fe70-4522-8888-0c3a881c28c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eaa5fb-fc3c-4ff5-bc9b-b86cd2016654",
        "cursor": {
          "ref": "8a31e2ea-f972-4b7c-991e-82dd0f0a8f1e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3303a168-579a-4b92-9877-a3d7063097ec"
        },
        "item": {
          "id": "74eaa5fb-fc3c-4ff5-bc9b-b86cd2016654",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "00dbd2bf-c549-44b9-8c6a-5b6b3768aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eeda52-77ef-467a-b248-e7c358ed4a24",
        "cursor": {
          "ref": "6e1d5797-6932-4372-8502-30e8b9dd9eb3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b268539-3725-480e-b5ae-09d23bfd21d2"
        },
        "item": {
          "id": "08eeda52-77ef-467a-b248-e7c358ed4a24",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f003dd27-3f2f-4f21-8290-0b883bb092b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91683258-4b8e-4876-a2ab-65484e0dbe41",
        "cursor": {
          "ref": "3ebcd5bc-cf84-4ca2-95bf-12d7c875f344",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0fad31bb-e834-4ca0-b8db-2240179a037e"
        },
        "item": {
          "id": "91683258-4b8e-4876-a2ab-65484e0dbe41",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0ce58182-ba5d-4573-9e56-5feeee66ea2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b60da-bb12-43d5-8073-859e9ec42112",
        "cursor": {
          "ref": "8b3a3c95-9f4c-4395-9210-5f1f1f69e99e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6393b495-a7da-4b65-894e-610b819e0083"
        },
        "item": {
          "id": "685b60da-bb12-43d5-8073-859e9ec42112",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d3d356b6-92c4-4a6a-99c2-590b8b77b221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe4d9d7-db8e-42f2-8e26-f256847db988",
        "cursor": {
          "ref": "66204ae4-933f-40c5-8b1a-fe51b4d03fdb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f25804d0-7bce-43b0-a22a-cea6302c8f84"
        },
        "item": {
          "id": "bfe4d9d7-db8e-42f2-8e26-f256847db988",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d8ac57d0-f94c-410c-a4b5-d9a38e854c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0994c76-e751-4382-8283-3b4696ad2025",
        "cursor": {
          "ref": "55f16f0b-dd52-46f0-a372-5762b5a955d3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b224d48e-719a-4947-bac3-ee7839ea4641"
        },
        "item": {
          "id": "e0994c76-e751-4382-8283-3b4696ad2025",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9cc83525-3b76-4abf-8b6c-ee6d139f0991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16dbd5-4f64-4d76-9698-5a84c6580d45",
        "cursor": {
          "ref": "c4e462d9-aa22-4938-9355-a40f23b37eea",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "26eb8f3a-8261-45af-b432-28a57378726a"
        },
        "item": {
          "id": "6a16dbd5-4f64-4d76-9698-5a84c6580d45",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "817ce0ee-cd26-4ec3-8c7f-2a222c00132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b69e26b-34b1-4d69-ac62-f353456259ce",
        "cursor": {
          "ref": "79c4be2f-8638-4a8e-b487-e83bff6eb9c3",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6d3b496c-5918-419d-a069-dbb31a4dc024"
        },
        "item": {
          "id": "7b69e26b-34b1-4d69-ac62-f353456259ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7ff7018-46fd-44d2-88b7-f9c4bd5c3c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02ed1d5-fda0-406d-94bf-aaa6aff69d8f",
        "cursor": {
          "ref": "d476dc54-2d54-49d6-b371-a0e41fd66f6b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aa771340-4216-452c-b96f-d0902e6f63cf"
        },
        "item": {
          "id": "d02ed1d5-fda0-406d-94bf-aaa6aff69d8f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c0b2ab13-5525-4401-b5f6-8284743bce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f00279-3547-46ec-9af1-3c2bd978f083",
        "cursor": {
          "ref": "78ea37eb-bc5a-487b-b26b-e8f6ffef8fe9",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1471f983-e490-48b5-9d9f-bc9ebc51f712"
        },
        "item": {
          "id": "09f00279-3547-46ec-9af1-3c2bd978f083",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f89d84a5-ae49-46c4-9612-843cebbd625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cabe78e-00bd-4732-93b6-343d3878786f",
        "cursor": {
          "ref": "2c23a1bd-fd9a-4869-a66f-d44e24f059a4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e058ba6a-5100-4297-bc13-1cdf0cd8d8e2"
        },
        "item": {
          "id": "0cabe78e-00bd-4732-93b6-343d3878786f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "258a16bf-1cdc-4ba0-9cae-4709c59eddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b2e53f-6eaa-411f-a941-96f057e90bd1",
        "cursor": {
          "ref": "d436342e-8452-4d85-a42e-f8db43bdc3ae",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7d545292-f08f-4718-a0d5-192f67f804bf"
        },
        "item": {
          "id": "c6b2e53f-6eaa-411f-a941-96f057e90bd1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f56c49c-8e4a-405f-8900-9b564e9d4755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50e8e9-762a-4fd3-8dc5-8a25006e1caa",
        "cursor": {
          "ref": "129e1a9a-03e0-4c27-87ed-a0c6fa9c1de1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0ca4e746-4017-4523-98c4-a009749791ee"
        },
        "item": {
          "id": "da50e8e9-762a-4fd3-8dc5-8a25006e1caa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "59bfa09f-97c0-4dee-9c0e-885459f97a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552ebb2-c966-4c73-b6c2-8476b02b792d",
        "cursor": {
          "ref": "ecfa4052-b67d-4f07-ab22-4cc43e2dad0c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "19590677-26ee-46b4-8391-09fb71c80ac2"
        },
        "item": {
          "id": "7552ebb2-c966-4c73-b6c2-8476b02b792d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a69160a4-5c0d-464b-b187-1248d081370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c13545-0862-42dd-9a1f-e76e8af357cc",
        "cursor": {
          "ref": "d37682f2-4a3a-4279-8d94-13261d09b73f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5a87f3f-9f3c-429e-9a46-5e81cc975577"
        },
        "item": {
          "id": "17c13545-0862-42dd-9a1f-e76e8af357cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "83849724-86de-417b-babf-112b1c36169b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42634b2c-484c-4ea0-bd7b-3b827864d59b",
        "cursor": {
          "ref": "5ceabbdd-88f4-4dc6-a530-c9c93fcfade7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a3c2113d-e347-4d3b-8810-d47b94c18f3f"
        },
        "item": {
          "id": "42634b2c-484c-4ea0-bd7b-3b827864d59b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aed69a47-5a9c-49c4-861b-d889c7e27c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793a2641-e3e7-4ec9-8a66-62a3e1c3ba04",
        "cursor": {
          "ref": "234db518-e9aa-4c3a-b539-cb10fddefaf7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73924c19-d294-4f4a-ad72-0b4f80b7bfdf"
        },
        "item": {
          "id": "793a2641-e3e7-4ec9-8a66-62a3e1c3ba04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dc7dd1e5-8cdc-44f1-a379-4b2f99931cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c9f67b-0b43-4bf4-bd6c-9c1e2fa2ceb8",
        "cursor": {
          "ref": "58d56279-591d-49ef-b985-cb84fd2d8fc0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a1f65db-15cc-47eb-b1f7-0c77ef224cfb"
        },
        "item": {
          "id": "67c9f67b-0b43-4bf4-bd6c-9c1e2fa2ceb8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "16bbf8b8-9630-4b2f-9fed-cfffa68a0a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b19f88-d47a-43b6-9e76-08039c3954c1",
        "cursor": {
          "ref": "03e9d6f3-5e38-4471-ae1d-0e464faa26be",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "73ad2239-2df4-43ce-a815-ef057ef8942e"
        },
        "item": {
          "id": "17b19f88-d47a-43b6-9e76-08039c3954c1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "acd4f7f1-8aef-462a-881b-c528bdc549a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b7ff77-524e-4c13-9262-d506d3329005",
        "cursor": {
          "ref": "9732f07c-c83f-4a7c-b0c4-87a555f82eee",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29c95f78-0da0-4c89-b1be-edc40b1139c2"
        },
        "item": {
          "id": "49b7ff77-524e-4c13-9262-d506d3329005",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bfc23fcf-dfc5-4464-9572-cbc37f3fbe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c608c-a573-412d-b529-77d0bbded0eb",
        "cursor": {
          "ref": "bbf8269f-214c-46b3-b151-849575f64f6e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "498c46b6-8e57-4c58-88a8-4d466f8075ea"
        },
        "item": {
          "id": "573c608c-a573-412d-b529-77d0bbded0eb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e9315441-aabe-4cb9-94eb-fef8522e93c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d557d26-1311-4678-a451-97aec8d00fd8",
        "cursor": {
          "ref": "a997839c-cfe0-44c9-8afe-61185b8e7615",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2a41bee0-bf5e-401a-bcfd-6a7f70d6d72a"
        },
        "item": {
          "id": "0d557d26-1311-4678-a451-97aec8d00fd8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a98aaff0-dee2-479c-b174-c04656f8fe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c446fac7-ef80-46bc-a7c6-3e1fab88a81a",
        "cursor": {
          "ref": "ecbf2c90-bfef-4430-9ca0-3af1b1dd7411",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "caf7f351-a140-4fde-8b04-6895a3763ffc"
        },
        "item": {
          "id": "c446fac7-ef80-46bc-a7c6-3e1fab88a81a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "341f8bc7-49be-4ffc-84a5-380d26b1168b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728ba166-8617-46ac-a80a-20411cba9b08",
        "cursor": {
          "ref": "42130921-531e-4377-a571-58085b3231d0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4af07d28-9e65-4693-959e-37840ef4e6df"
        },
        "item": {
          "id": "728ba166-8617-46ac-a80a-20411cba9b08",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cb1a693a-9bb1-49b8-80b7-a43883a5b283",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 882,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b77ba0a-bf09-45ea-92c7-7526196ef1a5",
        "cursor": {
          "ref": "1fbd418b-14b7-4292-9178-353ee7b479c5",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "704ed5d7-9401-4370-8ecf-bf07d1b1a108"
        },
        "item": {
          "id": "6b77ba0a-bf09-45ea-92c7-7526196ef1a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3bf9b089-83e0-4e86-aecf-d6c499b7e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874461f-0121-46c0-ad2b-b60c98f79bd1",
        "cursor": {
          "ref": "698b9db0-574e-4132-a45c-b1c3195ad268",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "894d461c-4013-4bff-be5c-3948d402b72f"
        },
        "item": {
          "id": "a874461f-0121-46c0-ad2b-b60c98f79bd1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7aebabd3-b458-4775-bfbe-e437b3e4a5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de23537-0684-49d4-bda9-062eed364904",
        "cursor": {
          "ref": "7d385659-138d-42e5-9848-a4fcc244342c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "338ef75b-65a8-4c4b-99bd-fe423bcf472b"
        },
        "item": {
          "id": "7de23537-0684-49d4-bda9-062eed364904",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5562ffb7-2fe3-4155-951a-7ee63f500366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2919144-c097-4851-bcda-0fade3e4fbc6",
        "cursor": {
          "ref": "d0c08bfd-3615-44b2-a076-2a5d9c24efcf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c974e45-1f25-42a9-ac79-530df8788db8"
        },
        "item": {
          "id": "f2919144-c097-4851-bcda-0fade3e4fbc6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "07943f48-eb2f-4b9b-8951-408ce32617c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b9943f-cd1e-4a0e-be25-ae595e337459",
        "cursor": {
          "ref": "0513dffa-e10d-42cb-b489-e5ae9b2957e0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "133c012e-dd99-45b5-acf4-8d05a0a62150"
        },
        "item": {
          "id": "d2b9943f-cd1e-4a0e-be25-ae595e337459",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1dd3d359-39b9-49e2-8081-329118565af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002cb6b6-b9d2-4a88-8e34-c37725a48255",
        "cursor": {
          "ref": "6285b292-4ee7-4abf-9ec6-3af2e3438980",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8ee7f26b-9263-4b94-ba5a-3a4c54c91b32"
        },
        "item": {
          "id": "002cb6b6-b9d2-4a88-8e34-c37725a48255",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4af681c9-5378-4428-8dd2-0a35a66c2cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86772e08-ab33-4ef1-baa5-635b60bbb774",
        "cursor": {
          "ref": "1694b603-e4ae-4d11-a6ef-a2ee96c1e6ac",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "38769eec-f990-44c4-9e7b-d3a054c94308"
        },
        "item": {
          "id": "86772e08-ab33-4ef1-baa5-635b60bbb774",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a74285f-8d08-4f3d-b07b-db8aa69ccc89",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 777,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d53a3-aa99-4aec-a503-293c7b6c9302",
        "cursor": {
          "ref": "f11c59b9-f3ae-4b4a-89c2-199401699dd9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0582fc88-b742-475c-a249-624f7870471e"
        },
        "item": {
          "id": "b45d53a3-aa99-4aec-a503-293c7b6c9302",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0ff5c2b3-78f8-410e-9ab6-1154533f4fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad565339-4e51-43d5-ade4-2d1ac331a44e",
        "cursor": {
          "ref": "c3b320f7-cb12-40a6-9381-90a68ad89479",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a869098f-2e6a-48d3-a12e-0c799fe18b0f"
        },
        "item": {
          "id": "ad565339-4e51-43d5-ade4-2d1ac331a44e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea1a78f1-e869-4607-8841-129bc34690c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e780b3-20d2-4a23-b81a-b2814ef84746",
        "cursor": {
          "ref": "21ea935f-78e4-490a-95f7-10f508cfbed4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7993bca5-afea-4da8-8f59-85e8344704a2"
        },
        "item": {
          "id": "b9e780b3-20d2-4a23-b81a-b2814ef84746",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f5e9b26a-9d90-4079-b181-0b0e49232587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108e9b28-e7e3-4475-a90e-dd1886cca019",
        "cursor": {
          "ref": "7093e91b-0c56-48fd-8cae-9388ba0185f8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b409c3cb-4b54-47ee-b4db-2c1afa0bebcb"
        },
        "item": {
          "id": "108e9b28-e7e3-4475-a90e-dd1886cca019",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47e5f9f2-6cc4-46f2-b503-450659277376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf366dd-c88b-4dfd-8187-fa56c0b42921",
        "cursor": {
          "ref": "abdd8771-bc17-493f-9d49-730b9d116e91",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c8f6cd58-b743-4877-ac17-45ec7bcf3d3e"
        },
        "item": {
          "id": "abf366dd-c88b-4dfd-8187-fa56c0b42921",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e319f0a0-944f-45f3-b4f0-a3804f969a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e038c632-e034-457a-9ff5-aea5e5761131",
        "cursor": {
          "ref": "72779e5b-e506-49de-bfeb-00b4e287a68e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "49156be0-4058-4713-995f-35c0f21d0b87"
        },
        "item": {
          "id": "e038c632-e034-457a-9ff5-aea5e5761131",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0fe0b0ba-4068-4fb2-a436-9ae11ed5a9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c681af02-376d-4437-aebf-86c185e3fb5e",
        "cursor": {
          "ref": "260006b0-2d0d-4519-935e-b73024ebca75",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b58a7674-d50b-4917-9d18-adf63c98e63b"
        },
        "item": {
          "id": "c681af02-376d-4437-aebf-86c185e3fb5e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "686fbe55-60da-431a-adeb-f26ada494d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47223838-dd83-4bf1-a836-531d8dd23ec2",
        "cursor": {
          "ref": "2b19bdd3-db0a-449e-a9e5-dfb9ac4ab9d0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfaed500-a6fe-4d72-b6ce-c30cd39cd5d2"
        },
        "item": {
          "id": "47223838-dd83-4bf1-a836-531d8dd23ec2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e2a01030-81a2-4762-80bb-8dae194c3b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4b1c0e-5b2a-49ea-b335-d981a290b7ff",
        "cursor": {
          "ref": "ceea9a93-e1fb-4981-ba00-3c6a73a1ef82",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7e7fb3d3-81e4-4a36-a3d0-72f23cc9e72f"
        },
        "item": {
          "id": "8c4b1c0e-5b2a-49ea-b335-d981a290b7ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f74eeca5-cdb0-4cb3-9383-37a88451ab24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d8903-e5da-4c05-a2c7-266ca62329d2",
        "cursor": {
          "ref": "3551de30-4df3-4c84-b120-6c662248dc3e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e151e91c-0f70-4054-a62f-3ac452aebb40"
        },
        "item": {
          "id": "670d8903-e5da-4c05-a2c7-266ca62329d2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "809d0d05-d929-4711-a4b5-66804c288461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7278cbf6-00dc-4d8b-b967-ca31869b6ab9",
        "cursor": {
          "ref": "6f008ead-023b-4182-8d62-5e4e159c9ea6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "59b3471f-398b-45a8-808e-1f59dce73dcd"
        },
        "item": {
          "id": "7278cbf6-00dc-4d8b-b967-ca31869b6ab9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7613dda-6395-4a9c-a063-4e4d441c4404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e7d3d3-2cb8-46f2-a461-fab953a72e16",
        "cursor": {
          "ref": "f048dc44-3e58-4661-9d5b-89b90db35daf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "05033183-09ec-479f-8c13-cae66bc6aa3c"
        },
        "item": {
          "id": "f3e7d3d3-2cb8-46f2-a461-fab953a72e16",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5f8aad8b-1dc2-49b6-b017-374d43df4aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c972875-1d72-42c4-8a89-f1bd1fc6da67",
        "cursor": {
          "ref": "687b2969-975d-48fb-b454-eb23ad58a910",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "49134ec0-31cc-4ebf-8039-f017621a646f"
        },
        "item": {
          "id": "8c972875-1d72-42c4-8a89-f1bd1fc6da67",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "149342ed-1a16-4b6d-ad8f-0cd7c88f01e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b185d699-9971-4460-8514-d44af675c0a5",
        "cursor": {
          "ref": "4cba5f89-47c3-48f4-b077-639f89040207",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "58464fa1-ae45-4e67-93ab-baf746dc498a"
        },
        "item": {
          "id": "b185d699-9971-4460-8514-d44af675c0a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b2b62594-3061-4df8-9826-3e07a96a0592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a515c-159b-4f64-97a3-02a5ed965da2",
        "cursor": {
          "ref": "e4e5de79-488a-4367-8732-aa925fd605c7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b4a6d4b5-ade4-4989-aedc-18f5ddbeea3d"
        },
        "item": {
          "id": "650a515c-159b-4f64-97a3-02a5ed965da2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5a0d05fc-c185-4f6a-bdff-8746a12062d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bcb54c-3c2e-4fee-b744-b7100bb335e9",
        "cursor": {
          "ref": "df484b5a-b060-4416-94b9-e539e0f403cc",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "535e1bbb-0764-4245-9850-122bb95b6530"
        },
        "item": {
          "id": "63bcb54c-3c2e-4fee-b744-b7100bb335e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b0701651-aa86-470c-b330-47ba6f96072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9487acca-6304-4c51-9d2f-6e3d4490ae4a",
        "cursor": {
          "ref": "58d484b3-4b01-45c2-a0b8-d72310e04a18",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8f54a84-c3bc-45d9-abeb-8d5a8ee20ee3"
        },
        "item": {
          "id": "9487acca-6304-4c51-9d2f-6e3d4490ae4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "518f507f-3c18-4e64-8292-6b135734336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f34f654-8cfc-4eeb-a82b-5549c22b4ecb",
        "cursor": {
          "ref": "c024eef7-547d-4428-a2ce-a4ad0f231bdf",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a23ed651-e76a-427a-9d2c-a31fd95c3a5e"
        },
        "item": {
          "id": "8f34f654-8cfc-4eeb-a82b-5549c22b4ecb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b5c377d3-4f7b-4639-b1c3-89db585d9b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141a216-06df-4bba-b936-2a47f3fae4a1",
        "cursor": {
          "ref": "ed6d8271-0885-4fc0-97a6-b4c6436d6cbd",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c17b43cd-9df1-41e1-9499-8785b00d0ada"
        },
        "item": {
          "id": "9141a216-06df-4bba-b936-2a47f3fae4a1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c13f682-c17c-44d7-ae35-8bbb2ce3d4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe32c2a-1924-449d-bd85-812778fce5c0",
        "cursor": {
          "ref": "d104853f-1331-48e2-bc75-87b35854da43",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "21a0fc97-ba57-4b56-ad4c-efc117a2175d"
        },
        "item": {
          "id": "abe32c2a-1924-449d-bd85-812778fce5c0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b874ddf-9f15-4a26-8d2c-b2cc9d371668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35412e81-ad46-4905-8f83-fb28e46c2e29",
        "cursor": {
          "ref": "19742b20-20b0-449b-a6a7-d04ddfd3ab61",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8c12f435-d86b-4c2c-8617-175dc3e6a206"
        },
        "item": {
          "id": "35412e81-ad46-4905-8f83-fb28e46c2e29",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f02bca04-91b6-4b06-b849-48b618702455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b849b2-2dd5-443b-ae38-e912df7ce98b",
        "cursor": {
          "ref": "1bcbf2d4-fbe5-4e47-9618-1250017e5056",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a72a0829-9773-4d08-b528-bd7b224f2859"
        },
        "item": {
          "id": "d8b849b2-2dd5-443b-ae38-e912df7ce98b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6c5923a1-a5dc-4eeb-9346-2b375b1d7c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e652af5-6342-4973-86db-7d0f2e64efce",
        "cursor": {
          "ref": "a93d29a0-b399-4e9f-ac92-64d842853e73",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5a0077fd-15fc-4711-8edc-b2ead4dfa95d"
        },
        "item": {
          "id": "2e652af5-6342-4973-86db-7d0f2e64efce",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be00a3c8-ae1d-45a5-8a86-26b3e5069c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f9b923-a09f-4909-8a47-c7bfbe11853c",
        "cursor": {
          "ref": "9b4f2072-1140-471b-862b-bcdec9e07591",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ec04c322-2acd-46f2-8d3c-1da26f38ab2f"
        },
        "item": {
          "id": "20f9b923-a09f-4909-8a47-c7bfbe11853c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "921fc546-3c43-44e2-a6a0-6fc60dc8e9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77665d72-f9dd-4bf4-a4c2-fbc638337efd",
        "cursor": {
          "ref": "ba41250c-a9ec-43eb-b277-da16ad876364",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2a658fce-de71-42c2-bfe3-588e092ee817"
        },
        "item": {
          "id": "77665d72-f9dd-4bf4-a4c2-fbc638337efd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a639a427-ee05-4b02-a245-98b1426cfefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b74cc-79a0-4850-bc89-6bbda4601be9",
        "cursor": {
          "ref": "85f253d0-0483-4b04-842a-6d2603d96ac5",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9f647af8-341a-445d-a271-2ceb604185a7"
        },
        "item": {
          "id": "1e4b74cc-79a0-4850-bc89-6bbda4601be9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab4df63a-ecde-401e-8bf4-5429c9c1b71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ff8829-58b0-4a66-a43e-030fd7e0ef24",
        "cursor": {
          "ref": "dea79519-2db7-4b24-b1e0-21494a19128c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e2e9dc19-23a4-4e31-bd53-af04a5809bec"
        },
        "item": {
          "id": "21ff8829-58b0-4a66-a43e-030fd7e0ef24",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "10a59d64-e624-45b9-9878-35594788e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eca7ca-7dbf-4f12-b91e-c782e6fc118e",
        "cursor": {
          "ref": "62ae5108-4174-4fed-9ecc-4826cea3cc6d",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc95accc-f728-4be5-9494-77314c0d1278"
        },
        "item": {
          "id": "25eca7ca-7dbf-4f12-b91e-c782e6fc118e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5244a61b-6f55-4742-8ecc-8e76ce0af456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d79fd33-ef8c-40ff-8a64-ae1931218104",
        "cursor": {
          "ref": "c54bd959-a7e4-484b-8c76-aed8b04f530f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fca31c5d-ac06-4912-96f0-104015da48e7"
        },
        "item": {
          "id": "2d79fd33-ef8c-40ff-8a64-ae1931218104",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28595296-f672-45cb-8a7e-41111c2760d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bf0f25-1cd0-443b-b746-d35a8383d1cd",
        "cursor": {
          "ref": "aa08962b-8dfc-4c6e-a7af-e22be7b5bc12",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9e0d9796-c8cb-4ef6-8b02-f918fb9917c0"
        },
        "item": {
          "id": "86bf0f25-1cd0-443b-b746-d35a8383d1cd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a916bbe2-6ca7-447f-bbdc-a6afccc1b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95ccf9a-3eaa-4680-b5f9-579ae4a254f1",
        "cursor": {
          "ref": "6098c76d-dc95-4f7e-872c-9d18a3dc4b59",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "db0b7301-50eb-47de-a7b7-bc06d250f701"
        },
        "item": {
          "id": "f95ccf9a-3eaa-4680-b5f9-579ae4a254f1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5116cd5f-8589-4ebe-b488-e91e7b73e173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fe1f3b-0270-4361-a15e-f777f4ce26b2",
        "cursor": {
          "ref": "52acf2c5-4028-4fe2-9a36-dcbf800475b8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40d5b1ba-ae76-40eb-b362-9453be156ecf"
        },
        "item": {
          "id": "c3fe1f3b-0270-4361-a15e-f777f4ce26b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cbf13256-c60d-4c49-aae2-dca4740e00eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb33b4c-eacd-4b41-9184-ce5b88a2f65b",
        "cursor": {
          "ref": "e416de96-b2cc-4151-8879-cb547ab55cea",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "656f4ef0-805d-4476-8841-df8843afa9e7"
        },
        "item": {
          "id": "bdb33b4c-eacd-4b41-9184-ce5b88a2f65b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c86920a3-b101-4dfd-8d9a-6d1d958b3c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1280dea-208d-4d23-8b18-20fc0f0cffb6",
        "cursor": {
          "ref": "216be1fb-89a7-4c46-8c97-3803ad100b80",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb07a43e-a551-4120-b8db-6ac98b0ad11d"
        },
        "item": {
          "id": "c1280dea-208d-4d23-8b18-20fc0f0cffb6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7259c527-6bca-4763-80c4-a28988943c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737fa861-a5b7-43a6-bacc-989cd73dd355",
        "cursor": {
          "ref": "9ce37d57-7b2b-442d-a8bd-29ffeecb5540",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "249099af-0e12-4e75-a4eb-3e76fed4604b"
        },
        "item": {
          "id": "737fa861-a5b7-43a6-bacc-989cd73dd355",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ebb61db6-4e00-4408-9b39-afa0be4781ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b64976-8002-41f9-a8f8-fcf3a12a7502",
        "cursor": {
          "ref": "841b94e3-5532-4b5e-ac34-a1fa2c25627e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c2af3ac8-181b-4625-977f-ae507530e221"
        },
        "item": {
          "id": "71b64976-8002-41f9-a8f8-fcf3a12a7502",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "90082d70-55d5-4e3f-bc99-06a59c805758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c3ed0c-0f7a-44f7-92d8-1d5ad16ef513",
        "cursor": {
          "ref": "bdfcda5e-4bc6-406f-b2bb-59e55671deda",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8ee18084-2aca-4c9f-9498-bb8518812b90"
        },
        "item": {
          "id": "a4c3ed0c-0f7a-44f7-92d8-1d5ad16ef513",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c684a8cf-34ba-4781-a997-e5dfafb01d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d46f7e9-d937-4a12-ae89-9fb62fae023b",
        "cursor": {
          "ref": "6afdfa6c-818a-44d2-ab9c-f5d31faa5621",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc692c78-e641-4cba-91f3-2e0f8ff06013"
        },
        "item": {
          "id": "2d46f7e9-d937-4a12-ae89-9fb62fae023b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4d97517d-4286-4a6c-9e43-a02b85c54a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c762b17-0339-4bda-b422-8e6a6bfb16ef",
        "cursor": {
          "ref": "451ca4fc-ca85-4863-b780-53c336fd3a7d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "830ef798-6c4b-4c13-9a99-cf3450b9397b"
        },
        "item": {
          "id": "4c762b17-0339-4bda-b422-8e6a6bfb16ef",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "35095aaa-5d8f-4de1-9c1d-8f0a6012ff8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1d315f-0ec1-40bb-8f72-82c15ae867f0",
        "cursor": {
          "ref": "df607089-5071-4ef1-84c2-d1f319794783",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a452f4ec-851d-4151-9020-f5e3eb388f50"
        },
        "item": {
          "id": "fb1d315f-0ec1-40bb-8f72-82c15ae867f0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "22f5d642-e873-4d08-b7a5-bddc8b43ad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61de30-85b1-48c8-a497-0a2e2694d7f3",
        "cursor": {
          "ref": "75486099-1cf5-46d1-9402-f836f7d5017c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad34089e-6010-435a-b8f5-cf7f0de835e7"
        },
        "item": {
          "id": "ae61de30-85b1-48c8-a497-0a2e2694d7f3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "09b83e1e-01e4-430a-978f-d34520dec739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbad24a9-16d0-42d4-beef-0866634cf8f6",
        "cursor": {
          "ref": "75273c69-dade-45ad-a930-9fa549210146",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "72e6cf3b-f6e6-4970-b8ec-4ebfadd39249"
        },
        "item": {
          "id": "fbad24a9-16d0-42d4-beef-0866634cf8f6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0e36605f-d8b6-45d8-a997-f7df4987d34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9ddbf4-63c3-43d3-a681-c2e05dfab52c",
        "cursor": {
          "ref": "6b932fd0-2804-419f-a9b5-eb9a952cdbb0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8fc2bee3-d27c-478b-b371-f10d8e788932"
        },
        "item": {
          "id": "fb9ddbf4-63c3-43d3-a681-c2e05dfab52c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "06efd71c-fed1-4d86-93a1-debc1709f581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdc49b1-82ef-48bc-87e0-77574bf2c1a2",
        "cursor": {
          "ref": "7c5df20e-419a-42c6-bd90-da52d3bb9bba",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18717332-7ff5-4a6b-8fa8-0ad9a055f0ed"
        },
        "item": {
          "id": "5fdc49b1-82ef-48bc-87e0-77574bf2c1a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "151ad570-fe04-4aff-a55a-0b97b5c5bb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17622f3f-1f04-4142-b8b0-062b3adff15f",
        "cursor": {
          "ref": "bd149abc-7187-48db-b784-e0752c9f5ef7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2c60e3f0-678f-46e5-8adb-31d0027ddfcc"
        },
        "item": {
          "id": "17622f3f-1f04-4142-b8b0-062b3adff15f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "62297507-ee6f-4d1b-b55b-43c791d99753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a165f802-6400-474d-ac84-1ee12c56836c",
        "cursor": {
          "ref": "a2783078-0487-4a49-9dee-f756336b09be",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ac509199-7720-414e-8a93-1d6134aceab9"
        },
        "item": {
          "id": "a165f802-6400-474d-ac84-1ee12c56836c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8da15b4f-b0c7-458e-8257-0da2040d946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfb8259-b4fc-49bf-9edb-10b721307913",
        "cursor": {
          "ref": "69d3c89b-1590-4c82-a5f1-fb2ebd40651a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd5fdfdd-2cea-4959-942d-ce6584ef8947"
        },
        "item": {
          "id": "fbfb8259-b4fc-49bf-9edb-10b721307913",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6b2c0f0d-9aeb-46a6-9d19-e39ab250bdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a80547-bdf0-421b-8cf1-bc53b9b0ee8f",
        "cursor": {
          "ref": "3357605e-88cb-497a-aab7-6ff19d724483",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b1da8a22-6633-4942-adf6-751280bdac62"
        },
        "item": {
          "id": "b3a80547-bdf0-421b-8cf1-bc53b9b0ee8f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "460d6fcc-5239-491b-8f90-78ae0ff997cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5ac5e0-0c49-495e-b207-819a9c59392a",
        "cursor": {
          "ref": "7bdeb401-7d41-448e-9cd6-58ad20a02045",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe1dfd0c-3390-494e-a832-bcf53ee194f3"
        },
        "item": {
          "id": "4b5ac5e0-0c49-495e-b207-819a9c59392a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "da61afe0-1bcb-4c59-aa3c-ec21a42db8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5233cf9-4458-465b-b743-7d880b31cedc",
        "cursor": {
          "ref": "478480fa-d7c0-42ec-a62e-aa4a82148f41",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7e3e1b3c-31a2-4684-b67b-efc2a6a9d59a"
        },
        "item": {
          "id": "c5233cf9-4458-465b-b743-7d880b31cedc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a87065b-8232-4e0f-8e79-36d9787a1c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fa66c4-76e1-4ac7-a447-18e1974d3481",
        "cursor": {
          "ref": "a5b51d48-17aa-4fa9-89c4-fca16097403b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1b29b887-e09c-4497-bc9f-ce03112b5418"
        },
        "item": {
          "id": "15fa66c4-76e1-4ac7-a447-18e1974d3481",
          "name": "credentials_issue"
        },
        "response": {
          "id": "235c4fd6-21d3-4331-97fd-6f686d4336d5",
          "status": "Created",
          "code": 201,
          "responseTime": 6589,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c1652-7d8b-459f-ab6a-6173c592ab2e",
        "cursor": {
          "ref": "2a5b1ef4-55f8-4972-bf4c-ae6914d14629",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3193115c-97dd-401d-a02c-4f09fc65b984"
        },
        "item": {
          "id": "4f1c1652-7d8b-459f-ab6a-6173c592ab2e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "72193e0c-9c9c-4856-ba4d-77771d9434e9",
          "status": "Created",
          "code": 201,
          "responseTime": 6510,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e71f387-069a-48f2-b6be-ee7c7acb5ac2",
        "cursor": {
          "ref": "1729d721-48aa-42a1-9b09-87894411d08e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "77a233bb-83e7-4d4a-b48c-5d0fbded5b1d"
        },
        "item": {
          "id": "1e71f387-069a-48f2-b6be-ee7c7acb5ac2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b314c28-28fe-4332-8707-15bd8654be08",
          "status": "Created",
          "code": 201,
          "responseTime": 5958,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30019f49-3b9a-4086-895f-3f3d00aa8938",
        "cursor": {
          "ref": "d57cb414-b7ae-4171-90c6-2d676121a6b2",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b77330c4-4a8b-4e57-b296-63998c930f6a"
        },
        "item": {
          "id": "30019f49-3b9a-4086-895f-3f3d00aa8938",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3672892e-d658-4ade-93d1-1e4ae384c1bf",
          "status": "Created",
          "code": 201,
          "responseTime": 5887,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb22bd6-2f70-464d-aedd-4b80084ed556",
        "cursor": {
          "ref": "178df59a-a26c-440b-82fb-539e863b0495",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c9c577f5-cde8-425f-8886-29213dd280c5"
        },
        "item": {
          "id": "efb22bd6-2f70-464d-aedd-4b80084ed556",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "66d3c7e8-8e01-48df-80aa-d22cab00d33c",
          "status": "Created",
          "code": 201,
          "responseTime": 6201,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "404503dc-204a-4c96-bb84-a0a58b6e3e81",
        "cursor": {
          "ref": "87090d05-1b03-48e5-ba2e-b569539ccea5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50f70179-35df-446e-b0da-5ff320f2e2be"
        },
        "item": {
          "id": "404503dc-204a-4c96-bb84-a0a58b6e3e81",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "012acb29-84bb-45e4-a8c7-6b8342cf52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1c9a907d-bc31-403c-8175-71156b8338b3",
        "cursor": {
          "ref": "0cb60250-803a-46d8-8169-4985959ca1d8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69342185-0c98-4d8e-81ab-d07561c525b5"
        },
        "item": {
          "id": "1c9a907d-bc31-403c-8175-71156b8338b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c76b701d-55c6-412f-9ae2-4a599f2bafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2818a935-0b72-4aba-acb3-a1939df28d82",
        "cursor": {
          "ref": "7efe64a4-7015-4b96-acc7-de53e73c2d32",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8f4bf9e0-4c4c-4ae9-8a6d-7c62c462b398"
        },
        "item": {
          "id": "2818a935-0b72-4aba-acb3-a1939df28d82",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "49102c55-88da-42e5-9094-518983ee13f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec46e33-1eda-48c7-8b64-d187dc4b1d83",
        "cursor": {
          "ref": "05727935-7e2c-49cf-8c85-4b094660af81",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a7d170c3-00bd-4d37-905b-fe4d9bfd0e15"
        },
        "item": {
          "id": "4ec46e33-1eda-48c7-8b64-d187dc4b1d83",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6c3b0965-f554-4f2d-a118-dd431d3633d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac639844-0da7-4e4e-b46b-d8d2a908de41",
        "cursor": {
          "ref": "6519fcfc-442b-48bc-a7a2-93714354a563",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fcdb2159-3f13-4bf4-a8a5-8c437e33a53f"
        },
        "item": {
          "id": "ac639844-0da7-4e4e-b46b-d8d2a908de41",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "069eaac8-c677-4e1d-88a0-8d6d58207b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb6575-ffd8-49a7-9dc5-0921f09f4b6f",
        "cursor": {
          "ref": "5dae1cc9-e9ee-499d-b944-09ea24e79cdf",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed990a64-1c53-44cd-8112-edbc184047c3"
        },
        "item": {
          "id": "8bcb6575-ffd8-49a7-9dc5-0921f09f4b6f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c2600a76-c10b-41d3-a8de-4aee6db35c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ab317a-529e-44b9-97fd-5e132f7ec6c7",
        "cursor": {
          "ref": "0e1789e4-bc3c-47cb-b371-0187422c72a8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d48691a2-bd23-4009-987d-9f2e96c80c1a"
        },
        "item": {
          "id": "55ab317a-529e-44b9-97fd-5e132f7ec6c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee79d02b-49fd-49bd-88f0-967a1c030ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d325e223-f6f1-49b9-8f00-031928b08568",
        "cursor": {
          "ref": "f9f59068-c743-4b5a-95be-64ec982c31c0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b9381b29-841d-43a4-a5cd-92649db526ba"
        },
        "item": {
          "id": "d325e223-f6f1-49b9-8f00-031928b08568",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ece7df83-5c43-4fb7-98fa-d2e6d13d4a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e85d8-4274-4e83-80b6-3cf0d9d99351",
        "cursor": {
          "ref": "74ef52bb-1eca-4ccc-a755-1454660a7983",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7fb6ac77-d3c1-4e0e-b43f-fa313ba1c6eb"
        },
        "item": {
          "id": "3d7e85d8-4274-4e83-80b6-3cf0d9d99351",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4fe52a59-838b-4c75-a48c-913147700332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b525c-1f30-4101-9303-364e47a75ccc",
        "cursor": {
          "ref": "2410cfc8-bda3-4813-ab1f-16ba34941cb1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "241dd811-bc66-4d93-b55b-03fa2c94e80a"
        },
        "item": {
          "id": "dc8b525c-1f30-4101-9303-364e47a75ccc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8db5c5b-6007-4bbe-a36f-c558697ca8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd97ba3d-4917-472c-bb8a-b1679bf5ea4a",
        "cursor": {
          "ref": "c462a924-0bbb-469e-a533-e7ea1b816578",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecb2330c-c709-45b2-889d-2431921ff308"
        },
        "item": {
          "id": "bd97ba3d-4917-472c-bb8a-b1679bf5ea4a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ca430835-1946-4eb5-8669-cdae1ee14f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a201240-881b-4478-b790-2d87ba014de4",
        "cursor": {
          "ref": "0b48aafa-5575-430f-9809-38634e391ffd",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "827ac147-dd21-4b9b-9e19-f44ddae084a1"
        },
        "item": {
          "id": "7a201240-881b-4478-b790-2d87ba014de4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fee138cc-8f69-4726-860a-6045166ab785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bee882-7b30-4fb9-92be-85ee3efb85d0",
        "cursor": {
          "ref": "322c6cc7-60b8-46ad-9570-fa07a759edc9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "696a3c44-c470-4ef5-9b44-e9569fa975b8"
        },
        "item": {
          "id": "c6bee882-7b30-4fb9-92be-85ee3efb85d0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6b0023e-782d-4475-b631-8eb2811264f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13ce046-780f-4523-b3a3-e4000fb47f69",
        "cursor": {
          "ref": "ba03fbe3-dbe4-4ecf-9c8a-eeada17f4bd0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb0325f0-fdb5-4701-83ef-f47544618034"
        },
        "item": {
          "id": "d13ce046-780f-4523-b3a3-e4000fb47f69",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5025036d-0be0-4c48-8089-6346c3d15a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bcf916-e8b4-4238-88cb-4c873a374367",
        "cursor": {
          "ref": "488f5f8f-07e6-49de-8d16-0eb01e84f46b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "40d26aea-ae59-42cc-8e19-d0df59f4f5a5"
        },
        "item": {
          "id": "c6bcf916-e8b4-4238-88cb-4c873a374367",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd28fa6e-fad4-449f-9b77-3dc3658b0505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccc6b87-a62a-486e-9a3f-e93e7b52643d",
        "cursor": {
          "ref": "03b86665-57f3-49de-8afc-132ab8c61723",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "df0add50-a0a0-48ca-8675-44e08ae280ff"
        },
        "item": {
          "id": "fccc6b87-a62a-486e-9a3f-e93e7b52643d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e666620-8e9e-475c-898f-577723947de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0809e30f-2459-4414-b45b-21d3e65f08b0",
        "cursor": {
          "ref": "6ec02590-e694-4718-8348-2bf1fac14aa9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f5dd772-3299-4098-b3cb-c1498166aacb"
        },
        "item": {
          "id": "0809e30f-2459-4414-b45b-21d3e65f08b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9637e548-43ef-4bd6-9b17-fa3f59aace08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b9b25-a708-455d-91a2-f0191b6b0e8f",
        "cursor": {
          "ref": "433186a4-e686-4405-bcbf-279dc489c27f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af5023cb-f34b-4a2d-930c-791d8293c874"
        },
        "item": {
          "id": "f97b9b25-a708-455d-91a2-f0191b6b0e8f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3f5b3ba-9f88-4951-a121-fe0950cdcb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78314488-9fc7-4f51-9d28-1ecc3b9f3357",
        "cursor": {
          "ref": "7b8af583-9704-4c73-a70e-e1de6ad9c441",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57644228-7690-4405-9553-7344b7a3fc27"
        },
        "item": {
          "id": "78314488-9fc7-4f51-9d28-1ecc3b9f3357",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9bbe83c2-38fc-4e0c-824a-ff08f7e61907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddebaf0a-4d7a-4504-ba40-2051ad839463",
        "cursor": {
          "ref": "7f186e92-44b1-43a9-b574-e97aa25621a3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "53264608-683e-489d-9498-7be999acb1ea"
        },
        "item": {
          "id": "ddebaf0a-4d7a-4504-ba40-2051ad839463",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b9dba2da-6777-42dc-a8bf-f726875505e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935bd4b5-b49d-4862-b842-8975f30cf420",
        "cursor": {
          "ref": "5b0eeb60-2152-41eb-bfec-f5b079304bef",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a8377686-fa67-498d-8dec-1b48a6d8e26d"
        },
        "item": {
          "id": "935bd4b5-b49d-4862-b842-8975f30cf420",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f2b1a16d-ac81-49be-a31e-bbc371bc0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a74f4-1e32-43cd-864b-166249869ebb",
        "cursor": {
          "ref": "30dce4df-27e1-40a6-8b0a-e41809ae771f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8c201b7a-3094-40de-956c-f315511bceb9"
        },
        "item": {
          "id": "f73a74f4-1e32-43cd-864b-166249869ebb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf2f93f1-5929-4534-8f0c-c4ab61b5b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9165f7-6239-4ca8-9fcf-b1af92b8efe7",
        "cursor": {
          "ref": "e3eec26e-42a6-4423-adb1-4b3d109447b2",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d5384048-97a5-435d-a471-230c7e420dfd"
        },
        "item": {
          "id": "ba9165f7-6239-4ca8-9fcf-b1af92b8efe7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c544d41b-fbc4-4d5f-9900-e11188176dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03df5ad4-60de-48aa-b1bc-5b42a9a15055",
        "cursor": {
          "ref": "0c5970f4-011e-42f7-b424-0cc07a315148",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8fbb11e0-dbc2-4b12-af5d-744b9bd971aa"
        },
        "item": {
          "id": "03df5ad4-60de-48aa-b1bc-5b42a9a15055",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "16d7c3f3-1f2c-488f-8a0e-df24e3f66c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a148d16-0202-4ef2-acf4-b6d049231dc1",
        "cursor": {
          "ref": "28cad24e-0f21-4f9b-94b4-01520ddceb1c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2d454f1d-8224-473a-a98b-92b33d3c4078"
        },
        "item": {
          "id": "6a148d16-0202-4ef2-acf4-b6d049231dc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e828662d-4847-452d-919d-2917628ffc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970b32a-e903-4ecc-92ed-1234d0bb9859",
        "cursor": {
          "ref": "db728b11-91f1-4491-8ab0-7538c778a073",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "42220e44-cc7a-46da-9153-e66d7dd540c4"
        },
        "item": {
          "id": "e970b32a-e903-4ecc-92ed-1234d0bb9859",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ecd9674-dcd9-4a33-bf14-f628dcfc2660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7c5b3-1f7c-48af-b424-41b8fa674840",
        "cursor": {
          "ref": "054548b7-5068-4ebc-a433-7fb10ff4fd8b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e4b09d43-fb2b-4816-bc57-90f8a2890595"
        },
        "item": {
          "id": "e9e7c5b3-1f7c-48af-b424-41b8fa674840",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "65e10b97-8003-4331-859f-f08805bd4dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93af2189-49b0-4127-9752-b3a26cbec4fb",
        "cursor": {
          "ref": "af74c89a-7fc1-4251-a6ad-2e3852a55810",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4f5b3ca-8fb0-4d90-9fd4-22f5aa2f7c39"
        },
        "item": {
          "id": "93af2189-49b0-4127-9752-b3a26cbec4fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7520d39-3ce3-4383-a910-8d8c9d65f38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaccde9-2f8e-499a-b457-aa37354c419c",
        "cursor": {
          "ref": "4249c4c3-ce3d-4d25-98c4-a0926243056f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0e0e6223-ad17-432a-89dc-ed83ee1768f6"
        },
        "item": {
          "id": "3eaccde9-2f8e-499a-b457-aa37354c419c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "22aa1da7-4f0f-4012-928f-a297fbfc34f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2844cc76-fa29-4027-9a2c-2747180bbfae",
        "cursor": {
          "ref": "e3d7c1d8-b6cd-491d-8e58-059f848c94be",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24324469-0bdc-4283-abb7-1629f611243f"
        },
        "item": {
          "id": "2844cc76-fa29-4027-9a2c-2747180bbfae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4ec4dc37-d650-49a1-9f9e-e03aec258af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f4d145-1628-4d5d-96a2-43ab18d68511",
        "cursor": {
          "ref": "503560f9-c200-411d-83c8-45b6d2e4e028",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1cb4e97-e715-407c-b067-f574ac88e4fc"
        },
        "item": {
          "id": "c6f4d145-1628-4d5d-96a2-43ab18d68511",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c50825d-89aa-45f5-9d43-cf9a3cb81a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5eb436-0fbc-4003-adb4-c8fe1b922a2e",
        "cursor": {
          "ref": "c8f8627d-3b3c-48ca-a9ae-0d681f1565ef",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1fc0f868-14a6-49f7-9e14-6419e5b04b6f"
        },
        "item": {
          "id": "df5eb436-0fbc-4003-adb4-c8fe1b922a2e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "71d6cd97-2c6a-45b2-b004-9a338b62c71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b7398d-1b54-4603-8a0e-33ee14ab170e",
        "cursor": {
          "ref": "53dd0744-acf5-4cc8-b9de-b61d4be822fb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7de81473-652f-46db-af0c-79cd622cf2df"
        },
        "item": {
          "id": "17b7398d-1b54-4603-8a0e-33ee14ab170e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aad808ac-234f-42d2-82d2-a6ec3323c753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a25aff-7576-4f42-8b0b-35cc5b203b52",
        "cursor": {
          "ref": "6c14cb8b-e28b-4a7a-8e9f-4b997eaef92c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f14c9a59-9cf6-4e57-9a8c-47ffad31afce"
        },
        "item": {
          "id": "00a25aff-7576-4f42-8b0b-35cc5b203b52",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd924548-d4d0-44f0-b269-d0813555746c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed42a50-992c-4f59-ba7a-f89bd010bea4",
        "cursor": {
          "ref": "198e90b3-025a-4952-8c98-84b93dfe8055",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "865fb685-4610-40ef-a52d-443689470178"
        },
        "item": {
          "id": "aed42a50-992c-4f59-ba7a-f89bd010bea4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e692adc-e28b-47c5-b438-fef9389ad2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a2654c-7c8e-4f87-813b-7520b63f217c",
        "cursor": {
          "ref": "23a13936-663c-429c-9aaa-bcd367e0d9a3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d7672b89-ca9a-476d-a069-0ddf4ad3c144"
        },
        "item": {
          "id": "57a2654c-7c8e-4f87-813b-7520b63f217c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c312d42-32b2-4c90-a42a-e7c0246c7340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d757a-d141-4de5-a790-88dcae03f56f",
        "cursor": {
          "ref": "6a0dcb42-6653-4080-b115-6a1b5ce57df2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "807ec99f-54fa-47bf-80c3-b8457ece3de3"
        },
        "item": {
          "id": "b43d757a-d141-4de5-a790-88dcae03f56f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6dc4bfa7-5766-44d7-8683-b90eb437c9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5a836-14ba-4c9a-814b-3d257ba2e07a",
        "cursor": {
          "ref": "e6b20e26-aa52-4798-afaa-cefd967659e9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8be5aa2b-db1c-47c9-b694-71e73893b148"
        },
        "item": {
          "id": "48c5a836-14ba-4c9a-814b-3d257ba2e07a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da8ebfd5-ab1f-422b-978f-57b130beabba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8427961-fde8-46b2-9ea9-16f047158fe6",
        "cursor": {
          "ref": "64d93618-3108-48ae-b103-5e68f14d5af8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6ae3f79a-5e68-4ecd-85a1-690fcd2f7dac"
        },
        "item": {
          "id": "e8427961-fde8-46b2-9ea9-16f047158fe6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "11cd20f7-3fde-43ff-809c-082b4953128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9547b5b1-387d-4890-838a-8464d196aa57",
        "cursor": {
          "ref": "e41f9fcc-f400-4265-ab83-09cb9e36af13",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "01205c99-6137-4b2c-8c0e-868594a17017"
        },
        "item": {
          "id": "9547b5b1-387d-4890-838a-8464d196aa57",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d64eef8e-aa26-4c6d-a69e-4bbbe2db4b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b136f7f8-fc22-4348-8884-2d1ca8956470",
        "cursor": {
          "ref": "c5a452f5-f579-4203-939d-ec817f20c40b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d653f0ba-c2d1-4808-be54-f93a0dae31ea"
        },
        "item": {
          "id": "b136f7f8-fc22-4348-8884-2d1ca8956470",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee6ec136-24ab-4169-b76b-ddeb4ad4ff27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcce55db-95fc-4951-95fc-7d9e35948e7c",
        "cursor": {
          "ref": "2df68cfe-f272-4339-8082-c3d1baad0b55",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "54cd33e3-c794-47ab-9bce-d52b32f2d99e"
        },
        "item": {
          "id": "bcce55db-95fc-4951-95fc-7d9e35948e7c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f028b8b9-8439-4a6c-824c-8efe8a651056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf70301-6bbf-4243-9cf9-c29914c5ef8d",
        "cursor": {
          "ref": "4f22ea0e-3b5f-4cfb-a19d-4cb7a7d34075",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "93c93562-aa61-4270-9759-c046c8c212ae"
        },
        "item": {
          "id": "5bf70301-6bbf-4243-9cf9-c29914c5ef8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b8a7d9ae-a908-4435-9174-437f856bf5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a092da36-94cf-40ab-8c70-d997b713c4c5",
        "cursor": {
          "ref": "d4f88127-c043-4b36-8ece-19db6ef30968",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8540d2b2-7b16-40d0-a670-70996a1b682a"
        },
        "item": {
          "id": "a092da36-94cf-40ab-8c70-d997b713c4c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5bf46ed7-225e-40c3-b778-892a5ea56a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160543c1-e853-41cc-b442-af4f314eb796",
        "cursor": {
          "ref": "0bbf1c07-8f6c-4613-96bd-2e71bb059e96",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9ad7cd8f-100f-49a0-a45d-5fb682c695f3"
        },
        "item": {
          "id": "160543c1-e853-41cc-b442-af4f314eb796",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbd5674a-9cd7-4b92-8e6d-fa38fd270762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09d904f-18fe-4d57-85bb-93475a05791b",
        "cursor": {
          "ref": "19061b41-138e-475d-8813-309414b57c52",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e3ec9641-b3d6-46ad-b43b-b9e8c7d7bd64"
        },
        "item": {
          "id": "e09d904f-18fe-4d57-85bb-93475a05791b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f2a8954-5aa2-4409-9128-f363275590f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90762124-0557-480c-b659-e336824c02a6",
        "cursor": {
          "ref": "7d305fed-5fd0-4348-98cb-84d62804d35d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1fbdfce2-2ad1-4b2a-9d43-ecfc073d491a"
        },
        "item": {
          "id": "90762124-0557-480c-b659-e336824c02a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bd240968-d9f2-4661-9815-265309409c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc235d0b-46a3-4d08-a276-327a26a43186",
        "cursor": {
          "ref": "6f8be6e0-6f43-4e99-b416-3006e1a04c4b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f4f9e50a-1a49-48e6-bcfa-1912931fe7fd"
        },
        "item": {
          "id": "cc235d0b-46a3-4d08-a276-327a26a43186",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6bed61d-97be-429e-a998-dcca7977d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51954e54-ad6d-4094-8ac9-296b8336502b",
        "cursor": {
          "ref": "0e700f56-ffdf-4c6d-a2a7-9e298a78fc30",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69b93880-778c-4f78-a270-ac23a6ec173b"
        },
        "item": {
          "id": "51954e54-ad6d-4094-8ac9-296b8336502b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f58ad18c-9502-444e-81ad-9329942839a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bede509-cf77-4534-87db-2b8d13865338",
        "cursor": {
          "ref": "2b79f3ac-faf5-41e5-ab8d-3de62b2bc880",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "00d53cc0-d286-468b-9f42-6f5be9d3ad7a"
        },
        "item": {
          "id": "1bede509-cf77-4534-87db-2b8d13865338",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1b02f291-9657-407b-9b72-78d5dd685b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc09d5b-cdae-444a-8436-ec750350bbb9",
        "cursor": {
          "ref": "738459fc-0e5f-4b43-9dbb-f4aef6342514",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "20c95a4f-38cb-41d7-92c1-292fea7b8937"
        },
        "item": {
          "id": "5bc09d5b-cdae-444a-8436-ec750350bbb9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56ffc0bd-6180-4cc3-b5f9-eaf6b188a6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7559466e-d176-40d6-bf63-c4c72cc7c024",
        "cursor": {
          "ref": "ffb2e4d5-009d-4a76-9466-68be2d12223d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "648041d5-98a2-41d7-b1c2-94ce73deb436"
        },
        "item": {
          "id": "7559466e-d176-40d6-bf63-c4c72cc7c024",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b152d749-3eca-48aa-89b1-f01109c432c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81c4793-bcdf-4112-a23b-006bec896de9",
        "cursor": {
          "ref": "186ea8b8-4eab-451d-ad67-e3623df01cc1",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f60bedda-8624-4517-9790-4b73348f3c8a"
        },
        "item": {
          "id": "f81c4793-bcdf-4112-a23b-006bec896de9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd5ee078-0165-4b1e-8319-fd03b0d5f176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754f84d-c9b2-4b66-98aa-f46f07ff3258",
        "cursor": {
          "ref": "9805769f-93ed-4a3e-a68e-c4a32e343a87",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dd3f4c24-4b6b-4ccf-af27-62b9a091f824"
        },
        "item": {
          "id": "a754f84d-c9b2-4b66-98aa-f46f07ff3258",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7bac87ba-6995-4f03-a51f-0e4d109f7929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cabc8b8-732b-4447-b321-83c231034b41",
        "cursor": {
          "ref": "787795ce-31ab-4d11-9c3a-616d8ce61c3b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f771232-ec3d-4ae6-a6c3-7107a36c3606"
        },
        "item": {
          "id": "3cabc8b8-732b-4447-b321-83c231034b41",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df8c6671-8efe-4497-9c2a-7decc3435afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32b5da3-a4c7-4c3e-b743-56f7f9789ef1",
        "cursor": {
          "ref": "ce5466bc-be63-4f44-90e3-fe062d35d673",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b2445b3e-44d7-4da8-9422-9f7783b5f685"
        },
        "item": {
          "id": "c32b5da3-a4c7-4c3e-b743-56f7f9789ef1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "48a3c200-215f-40b3-b49d-2bddb90ac483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e75de56-9c21-48ce-a299-c7527674e97e",
        "cursor": {
          "ref": "9d12861f-9d53-4c27-93ac-61ab5943255c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cd97a27c-3a26-4cb5-81a6-248f9a936fd8"
        },
        "item": {
          "id": "0e75de56-9c21-48ce-a299-c7527674e97e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3721ccef-ae68-4df8-b61d-f5db14d21926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0802ed-b968-4135-9d06-3f04e729ee38",
        "cursor": {
          "ref": "d3cb8106-76d1-44c2-b53d-439ab8d94cc5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9522cfab-d6bd-4ef5-b1b8-605e0fe6e1fd"
        },
        "item": {
          "id": "5c0802ed-b968-4135-9d06-3f04e729ee38",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3af85f87-b686-4157-970f-ec42f4136edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861fad3-28c5-4c0f-bdde-bafe4ef294c1",
        "cursor": {
          "ref": "e5001785-feb7-41a7-a4dd-4b5276e958a8",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6eb2221e-c4f6-41b1-b32e-cabf4e0ddad0"
        },
        "item": {
          "id": "e861fad3-28c5-4c0f-bdde-bafe4ef294c1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c0d61c4-9154-4873-ac17-efa52b66c107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21a4395-8441-41a1-91ec-d81bfe16576a",
        "cursor": {
          "ref": "b856dee4-fa65-46be-8faa-4e178aec8e7c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "649d54bd-7dff-4c5f-bceb-c30cd6e0af8d"
        },
        "item": {
          "id": "e21a4395-8441-41a1-91ec-d81bfe16576a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d9dc3a64-846f-4a0d-bc93-7a0fa74a8e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4ec863-ca8b-4aab-9d6f-50a7e0c2844e",
        "cursor": {
          "ref": "aa45d392-58f2-4dc1-975e-1b457d726626",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "deaf5575-9784-42bb-96a3-4bec4baf862c"
        },
        "item": {
          "id": "2d4ec863-ca8b-4aab-9d6f-50a7e0c2844e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87ce4ee6-cbba-4a1e-bd64-aff6dcf41ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde2c87-fca6-4e84-a4eb-fa2ff3bfbaba",
        "cursor": {
          "ref": "486847aa-a622-4ded-855a-f5a9e2ebbe89",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1cc33777-b09f-46c0-969b-3167080cbdf1"
        },
        "item": {
          "id": "5fde2c87-fca6-4e84-a4eb-fa2ff3bfbaba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "22b9afda-72e3-4d55-895b-846e9b65ad5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247ad20-eee9-4e11-a0d7-33b017cc1dfd",
        "cursor": {
          "ref": "e1ddaa5f-dfd9-4bf0-82d4-3e3ef18244f3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8595337a-5d82-47f0-8387-075ed0fa25ae"
        },
        "item": {
          "id": "9247ad20-eee9-4e11-a0d7-33b017cc1dfd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac4c5243-f61f-4151-ae8f-543d9e67b367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ba725a-3a46-4f1b-8e0e-d1394303e159",
        "cursor": {
          "ref": "7f15fe23-376b-495c-bcde-41a75faf97b8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "75d50d30-c3f6-470f-9275-7a0ecf608192"
        },
        "item": {
          "id": "55ba725a-3a46-4f1b-8e0e-d1394303e159",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a187ffac-3675-44c9-9936-e79bc20751d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d06901-052f-40b4-9119-e850905c85b7",
        "cursor": {
          "ref": "8930ef9e-2e78-4a5b-bc79-4dd674f35f6b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aed865e0-6ab8-4adf-b607-b28b1b6652ad"
        },
        "item": {
          "id": "c0d06901-052f-40b4-9119-e850905c85b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "37138df3-414b-4146-b9e8-f80f9bc9fb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc80ff5d-9786-4ae8-b0aa-b0edef522ef9",
        "cursor": {
          "ref": "08d7d820-c54f-4cc8-beff-47829b506c52",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fdcc315f-b002-497d-99aa-9969398d0ed8"
        },
        "item": {
          "id": "dc80ff5d-9786-4ae8-b0aa-b0edef522ef9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "91626682-53f5-4114-9363-0893c88525ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8dfbfc-909a-44d4-8ce3-92a55ea7fa09",
        "cursor": {
          "ref": "6472652d-ec40-4a5c-8479-fd2f9c86a4e3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e8fb85b6-5f61-4ee2-9a01-f5c77f19e69b"
        },
        "item": {
          "id": "bc8dfbfc-909a-44d4-8ce3-92a55ea7fa09",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf40ae3e-a6bc-4b04-b842-9fb9ffe0833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023935fa-8074-494a-9e5c-82055e638727",
        "cursor": {
          "ref": "294c2f50-0374-42cb-ba0f-96394e656cc3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c48144fd-7116-4bbf-9ad7-586080876ed0"
        },
        "item": {
          "id": "023935fa-8074-494a-9e5c-82055e638727",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e49e904-9a88-4038-8eaa-069c4f22b77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a2e8b7-df8e-477f-a54a-deb82d9b5344",
        "cursor": {
          "ref": "857be62d-35e7-4f6a-a008-dd3bc59bf850",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f8dfaec8-cd88-4c03-959b-61a25f3da938"
        },
        "item": {
          "id": "f5a2e8b7-df8e-477f-a54a-deb82d9b5344",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "95378033-50a3-45d8-b316-91f4837a5fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40841d07-a32e-4453-ae42-ca745c03b5a0",
        "cursor": {
          "ref": "17a0ed0e-16f2-468e-8d2d-7a41707ea437",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4cc82388-1388-4819-b52e-abe47a97c475"
        },
        "item": {
          "id": "40841d07-a32e-4453-ae42-ca745c03b5a0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03c25bca-d165-4043-ba0a-638ad20599db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9735c090-a298-41d2-9dab-add2b88f032d",
        "cursor": {
          "ref": "a1450fd3-ac70-45fd-8d2f-44339106da08",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29d5065f-e273-4ea4-817c-439bf0e9c52d"
        },
        "item": {
          "id": "9735c090-a298-41d2-9dab-add2b88f032d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "363b0a7d-acf7-4907-97f1-2177a5b8f625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed6ffe9-2a7f-4c12-8ab2-533861725ae6",
        "cursor": {
          "ref": "10643eaa-f947-4496-b7e1-358cb976c103",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "60ef2af6-69ae-4821-a237-c5422ac2caf5"
        },
        "item": {
          "id": "eed6ffe9-2a7f-4c12-8ab2-533861725ae6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c58d5dde-95b5-4b99-a41c-3cbcb19d6f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11660555-9143-4da1-9adf-5302e4b462fc",
        "cursor": {
          "ref": "ee2afdd1-40f3-4fa3-8f49-e6843f8dfbf9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "43738c5e-87b6-4bc7-bc27-95835b411f0e"
        },
        "item": {
          "id": "11660555-9143-4da1-9adf-5302e4b462fc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f0decb4a-2525-46d8-b579-65c27390a927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed398f7d-dee3-41d5-8d8b-6a3145812008",
        "cursor": {
          "ref": "a4bf3d43-3e99-457c-b2f8-7dc7669ad2ae",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95619d76-bede-4691-9dab-294c821009ff"
        },
        "item": {
          "id": "ed398f7d-dee3-41d5-8d8b-6a3145812008",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "43d5efa8-3816-4259-adec-87581f764660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7cac6f-4966-49b5-9ace-82246a49305a",
        "cursor": {
          "ref": "02098df7-470e-4f40-b0a5-c69a608ade07",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "790ac800-a3ff-447a-a67c-776b3888d666"
        },
        "item": {
          "id": "8c7cac6f-4966-49b5-9ace-82246a49305a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "44d7c597-f1e5-4b10-9029-cb7399710ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb639d5-1f3f-426e-9022-ed6ecbccb524",
        "cursor": {
          "ref": "db7e053e-ec88-4944-b868-7c1c5b8ba64f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ea32e520-ae7a-4d4a-9fad-3b393b98b29f"
        },
        "item": {
          "id": "1eb639d5-1f3f-426e-9022-ed6ecbccb524",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc48069d-6a76-4b43-a686-b11aa4f303e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4500de71-b518-4e01-8df8-0ac91c77e92e",
        "cursor": {
          "ref": "7dbeedf6-56a5-4fdc-893c-7bc57e3f6512",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "932dae11-1101-4815-97a0-70505d527e4b"
        },
        "item": {
          "id": "4500de71-b518-4e01-8df8-0ac91c77e92e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee9b7980-e38a-417d-8c0d-aca6e717cec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611da430-3985-4e1b-abc8-44ed6e310609",
        "cursor": {
          "ref": "c3c7507e-2a8c-4e88-bdd0-acc88cd40780",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b0cb5302-c527-4a43-8981-1d92a303db13"
        },
        "item": {
          "id": "611da430-3985-4e1b-abc8-44ed6e310609",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "061dd734-fabf-4a13-9608-ad18356a2bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017091ea-8911-4ea9-b438-a0fdfd520e86",
        "cursor": {
          "ref": "e78055c1-9afe-4e1f-a52f-a88d7dd44eaf",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "059feac9-ddaa-479f-97f1-561ef5fd1e7d"
        },
        "item": {
          "id": "017091ea-8911-4ea9-b438-a0fdfd520e86",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "66a6a5df-6fdc-47a7-b2e8-a362bb7f672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa88688-748e-4106-bb3f-fd01d05249e3",
        "cursor": {
          "ref": "6a276343-7a48-4a07-8c41-b6c51d0f1cba",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "15ff952b-8d93-404a-8432-9a9d0884ab58"
        },
        "item": {
          "id": "3aa88688-748e-4106-bb3f-fd01d05249e3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b1a3e53-f2ba-451a-81ca-a5f00775e055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048ec41f-d583-4c92-a0b0-892611adfc51",
        "cursor": {
          "ref": "d3c8b5de-7414-4e4e-bcbb-e02c8b835617",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "015b95ac-0e35-4f87-a572-1c30a92f011a"
        },
        "item": {
          "id": "048ec41f-d583-4c92-a0b0-892611adfc51",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a591086f-6ebb-465c-9281-391bc0267cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df82a553-a8f2-4712-aab6-4c9566115d56",
        "cursor": {
          "ref": "bf048849-f965-48f5-82b0-9d950eae3c2a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "619d8549-b547-4c70-a46d-ee92672a2ad3"
        },
        "item": {
          "id": "df82a553-a8f2-4712-aab6-4c9566115d56",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "812310a1-bbeb-4e37-bfc5-fc3bedfbb8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0dcdef-c1b6-4332-b89d-a83b18fcbc9b",
        "cursor": {
          "ref": "1d9966e9-064a-4385-8fd0-41148a40a4a2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b52ad92-8778-482b-bd0d-540e36dea6fd"
        },
        "item": {
          "id": "7f0dcdef-c1b6-4332-b89d-a83b18fcbc9b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "027dd1f8-d800-4264-b2b9-bf1c046e6242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9961fd5e-8d83-4965-8f10-56c380a14a68",
        "cursor": {
          "ref": "d4d32bc1-2f82-4b68-8968-70ec2815cafa",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "01d8e6df-0264-4059-b76c-16403123c277"
        },
        "item": {
          "id": "9961fd5e-8d83-4965-8f10-56c380a14a68",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d5ae70bc-1566-486a-a265-4b9e2828d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c52d85b-7b43-4925-aed0-3997c0afa803",
        "cursor": {
          "ref": "7ee98bd6-73b3-43a2-b1db-d322427e7f69",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "93e57a8a-b2f9-4ee7-9a42-abf3b0c1e4df"
        },
        "item": {
          "id": "7c52d85b-7b43-4925-aed0-3997c0afa803",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3bad98c8-1a62-4061-b1b8-82db08f3e4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd2a0e9-ff9b-44ea-8ba5-fe10c6b394cc",
        "cursor": {
          "ref": "c69ba368-cbd2-41fb-99ed-0d980ba216c2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "92d6be84-2e52-4f17-a03f-c539930186eb"
        },
        "item": {
          "id": "9dd2a0e9-ff9b-44ea-8ba5-fe10c6b394cc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b5039e18-c5c4-4b5e-a0be-88a7d5a78801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8c85f-dc0a-4189-896b-7f787d39fa8d",
        "cursor": {
          "ref": "ff422556-a926-445e-ae23-e5def6947bd7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19e4bbb7-dfef-40fa-96cd-a45a6d1f909d"
        },
        "item": {
          "id": "7bb8c85f-dc0a-4189-896b-7f787d39fa8d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e81d8b59-5a3e-4815-89ae-357efde8da62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac0a1a4-7132-4b68-ae64-bc9e48ddd8db",
        "cursor": {
          "ref": "40ca11b1-732f-4735-acd7-b04a2bb48c64",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b57d2b0b-ee57-41c7-957d-ec6dde01ca8a"
        },
        "item": {
          "id": "aac0a1a4-7132-4b68-ae64-bc9e48ddd8db",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6a2d8373-eecd-4476-910d-0165b98a69fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae2bd6-b756-46ea-8a42-3541294aa125",
        "cursor": {
          "ref": "e2a1f8c8-279e-4d3e-8a54-cf88a149f766",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "87043f68-3f7a-46b1-bc19-d9ea88e0acd9"
        },
        "item": {
          "id": "c3ae2bd6-b756-46ea-8a42-3541294aa125",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "29f94486-8cb2-4217-a306-1687b44006ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626edd6-9417-4480-acac-013639ff3cc6",
        "cursor": {
          "ref": "742a7eed-044d-4a8c-8dfe-e5ac12be9f1d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "564ae5b5-18a3-460f-a29d-e3be9dde404d"
        },
        "item": {
          "id": "5626edd6-9417-4480-acac-013639ff3cc6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7645837f-c5fa-4805-9d76-8088ab28ec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d1f3c9-94f0-4a8e-89ba-53278659546a",
        "cursor": {
          "ref": "2bdfbec8-c942-44dc-8593-2364e0b2c583",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7b5d4b00-85da-4eba-9ae0-d93fd2114e18"
        },
        "item": {
          "id": "32d1f3c9-94f0-4a8e-89ba-53278659546a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "30666e64-29bc-4cb0-bf28-679b82334ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08100f8c-5892-4c46-a4c7-1a9cbc668ea8",
        "cursor": {
          "ref": "f32fa784-2f63-4ce8-b1c7-5672162263ee",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "91ee9842-adf5-4ba8-be94-1ef3eb15e09b"
        },
        "item": {
          "id": "08100f8c-5892-4c46-a4c7-1a9cbc668ea8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "036436df-5d5f-4030-be65-b3fc90895bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ee64d4-f943-41fc-b4de-64a54bc39aac",
        "cursor": {
          "ref": "384761c1-0769-4a0c-8fe2-360fc34b3231",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e9ca90b8-096c-4365-85d3-d95a17580ed9"
        },
        "item": {
          "id": "21ee64d4-f943-41fc-b4de-64a54bc39aac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3b14899e-8c7e-4c15-847b-b3952e6d935a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffd1f68-b27b-4bba-957d-89e2d5cd14eb",
        "cursor": {
          "ref": "72207042-d961-4d09-8e7c-3a4e8c55f9a4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77813b5d-96a3-4da1-a535-5a5b743d5d07"
        },
        "item": {
          "id": "1ffd1f68-b27b-4bba-957d-89e2d5cd14eb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d239b0ee-3b49-4636-95bd-409130a86256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e534279-0960-4ee0-9f47-5d8739829157",
        "cursor": {
          "ref": "ef31f02e-cfa4-4593-ae1c-98c4a8a26158",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b17d4a31-cb5f-43eb-b707-631aa60d9937"
        },
        "item": {
          "id": "6e534279-0960-4ee0-9f47-5d8739829157",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a0f14304-98b1-4f22-a9db-76158f0b1799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896e07a5-df4e-4456-a7cc-ae1d2a64978b",
        "cursor": {
          "ref": "2f24bf31-f710-4856-8463-dbb6cd8c5787",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "62d7c188-8c28-4938-8e37-7fe473510279"
        },
        "item": {
          "id": "896e07a5-df4e-4456-a7cc-ae1d2a64978b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f845b1db-83fe-40e9-8158-8f66efca5cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e75fab-7885-499f-b2ed-1fa98fdf500c",
        "cursor": {
          "ref": "bdfff199-6686-4d07-b6ce-9e4c0ba3b279",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "94e9e309-edc0-4066-bd96-30d6828b9f3d"
        },
        "item": {
          "id": "15e75fab-7885-499f-b2ed-1fa98fdf500c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bd0df17d-9443-41c3-bfd5-93e4715ed9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5374b8-86b9-47bf-9eb9-973f2ebb97a5",
        "cursor": {
          "ref": "b4afb9b8-6f55-4d87-8d23-256b4d5dd884",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1327128b-e381-4236-b668-3fcf865254ef"
        },
        "item": {
          "id": "2f5374b8-86b9-47bf-9eb9-973f2ebb97a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ce9cc7e-eea4-4f27-8d11-b8b644890684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ce508b-59a3-4e9d-9c7b-b40a55b9738c",
        "cursor": {
          "ref": "ab6c0415-4ecc-4937-a0f9-3d5123745fc5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8314a173-ba88-4a84-868f-6d4c53ec0ba2"
        },
        "item": {
          "id": "f4ce508b-59a3-4e9d-9c7b-b40a55b9738c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a8123d11-8ca4-48ed-b64b-0c1025cb4fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f85dd69-f4ce-403e-a86a-1fbb7532cd4c",
        "cursor": {
          "ref": "2c727c21-d219-4791-836c-3126c9241de0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d2b37ad3-d280-429e-be2a-d899c36ed263"
        },
        "item": {
          "id": "2f85dd69-f4ce-403e-a86a-1fbb7532cd4c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4de9eff0-4466-4606-85aa-9bf98975c72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac5cdde-f158-422e-a148-9695cae3ee27",
        "cursor": {
          "ref": "2b9909dd-3581-45df-b648-1cb5eaa697ad",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d191a468-4913-4a47-b414-aaa58224c9ea"
        },
        "item": {
          "id": "0ac5cdde-f158-422e-a148-9695cae3ee27",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a5d0b0e9-e597-4700-8b69-3a161d151421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea838fdb-6328-4653-af37-92b13668504c",
        "cursor": {
          "ref": "14aafbc5-56fb-4fcc-b55e-3ba5fc87b100",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3c137cc6-8f0c-495a-ad3a-c73169b36172"
        },
        "item": {
          "id": "ea838fdb-6328-4653-af37-92b13668504c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6430bfdf-16e2-4a20-bed3-51c8d6f8cebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be56c3ab-7652-4175-acfa-8c5f51acfd8e",
        "cursor": {
          "ref": "b2135b66-8136-4b83-a72f-f3458f7d4e5d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "537ed6cd-38ec-46f4-bb9f-536b936f6d11"
        },
        "item": {
          "id": "be56c3ab-7652-4175-acfa-8c5f51acfd8e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "329d9d6b-2da7-4734-88f3-549b4f774061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b8d57-3f50-4623-a697-aa337b0973fd",
        "cursor": {
          "ref": "73868f23-5efa-4836-aadf-07d0663e8a78",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0b047d5a-0314-4eb2-af10-f71e352ee5db"
        },
        "item": {
          "id": "338b8d57-3f50-4623-a697-aa337b0973fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "25479de2-3b39-49d6-b425-961b239154a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09baccc-b9af-423c-a34a-67c89521c68e",
        "cursor": {
          "ref": "11a0591d-4b52-4955-b11d-bd21f3161542",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "95da5510-9729-4659-993b-1d2403aeed3d"
        },
        "item": {
          "id": "f09baccc-b9af-423c-a34a-67c89521c68e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3981ffaf-1dd0-4c19-bac8-3d4a59fd0768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f41169-8a4e-4c8c-a85c-a430b1f19346",
        "cursor": {
          "ref": "ac8ddfec-09d1-42ee-bab0-3a6ac28f973d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bd73757a-3af6-43c2-9441-171ec93a1fd9"
        },
        "item": {
          "id": "97f41169-8a4e-4c8c-a85c-a430b1f19346",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f21a5512-f8ed-4d62-9c7d-b7a6e736a7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3bbb1d-b09f-48da-b60e-3c7b4b7213ee",
        "cursor": {
          "ref": "13d7d41d-a4c3-4726-a26e-5f6d94f89f5c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "389d3c32-b752-4734-8b88-25b268440707"
        },
        "item": {
          "id": "bf3bbb1d-b09f-48da-b60e-3c7b4b7213ee",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d78deb5e-e537-4bce-8ca1-3b2f2dd20215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bb5a80-da5f-4d6f-802a-6ad572b746a3",
        "cursor": {
          "ref": "1134e6ba-06bf-482c-8805-c1b3833e3b12",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d60dab73-e40e-48d1-bdce-6fc0efd48323"
        },
        "item": {
          "id": "c0bb5a80-da5f-4d6f-802a-6ad572b746a3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "57699199-ff7b-4f7c-98d2-1c895bb401a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a70b70-c90d-4cad-85e5-45cda6a0f1d7",
        "cursor": {
          "ref": "f1382ec4-46a9-4339-894b-e27c4efaa0f7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c78e0de9-f4f8-4fb5-9849-8f77fa2ddc30"
        },
        "item": {
          "id": "43a70b70-c90d-4cad-85e5-45cda6a0f1d7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e007cc13-04fe-4282-839e-8b6e715aeb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2ae2c1-06a9-4900-a75f-09700cc1d2da",
        "cursor": {
          "ref": "d8505745-8b0e-4c6a-a953-c9ddcd5d7d9d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d2e53be0-6072-4051-91b8-3a481079826b"
        },
        "item": {
          "id": "9e2ae2c1-06a9-4900-a75f-09700cc1d2da",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0ee62499-d6a9-45aa-926e-3c58a8017d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb99629-435d-404f-a4b7-168e6796b083",
        "cursor": {
          "ref": "ba488f56-1210-450a-8a2d-b96e68d80f49",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2053a108-ff88-47f3-a0a1-729922bc55d0"
        },
        "item": {
          "id": "6fb99629-435d-404f-a4b7-168e6796b083",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6dececd2-6909-4268-a924-87824a40ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95093441-2613-43d4-a769-481e86fb5b9b",
        "cursor": {
          "ref": "4032ab43-7d56-4c66-9cd1-d8a4edd15570",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b29ab786-9a25-4481-ad91-e76a1e3a811e"
        },
        "item": {
          "id": "95093441-2613-43d4-a769-481e86fb5b9b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b47f4998-1cf7-436a-bf4c-f7225d70252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f445726b-3d49-49ba-bb7e-60917174b000",
        "cursor": {
          "ref": "ea48c0a2-084d-4f1b-8243-6499e4708702",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c4f66f4-aa76-45ce-9f5e-be445edb847b"
        },
        "item": {
          "id": "f445726b-3d49-49ba-bb7e-60917174b000",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ff67c832-0217-48f3-a681-254d440523b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3196c004-992a-484f-b086-be3fc979f7f1",
        "cursor": {
          "ref": "575285d7-eb66-4b8c-8c13-a4cce3395674",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3ce64af3-5adc-43c3-8e97-b6b1aa498ea8"
        },
        "item": {
          "id": "3196c004-992a-484f-b086-be3fc979f7f1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b09214aa-9320-472e-95c8-089e9a16c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27abd50f-7463-408f-afe2-5274b548703d",
        "cursor": {
          "ref": "d55c8f52-71bb-4acc-81d1-66d917d1992a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "66b63755-a408-42ed-8d19-496d935db360"
        },
        "item": {
          "id": "27abd50f-7463-408f-afe2-5274b548703d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8b7ff2fc-1aaf-4070-b411-c5386f1a00c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce396dfc-9576-4201-a1ae-8e1c992c48b9",
        "cursor": {
          "ref": "699e7f1b-fe75-44e8-a2a7-8833be774579",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "559078f5-3ebe-4bf9-90ed-7fa525dd2f8e"
        },
        "item": {
          "id": "ce396dfc-9576-4201-a1ae-8e1c992c48b9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "84d34f0f-8689-4d80-8cef-d797195bc117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571c6221-77cb-445c-b865-89b2ab6793ea",
        "cursor": {
          "ref": "5a893fcc-706a-4bdb-ba5f-caf70dc1256d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0b0fb6e8-1624-4f49-bff1-fae93be37550"
        },
        "item": {
          "id": "571c6221-77cb-445c-b865-89b2ab6793ea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22a60a9b-440e-4057-8ba6-f5b4eb2c3c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b50a1e5-0e28-4e86-b9fe-d3f632622202",
        "cursor": {
          "ref": "b16e5626-af9d-43a4-b2d2-fdae99a05814",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4864d7e5-c61e-4a80-a333-5bb90538f1de"
        },
        "item": {
          "id": "6b50a1e5-0e28-4e86-b9fe-d3f632622202",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e1eabb76-c2b2-4bc3-af29-129e18006f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f8590e-21ce-4f77-ac51-ae9bd530e256",
        "cursor": {
          "ref": "05eb502a-e3e1-4f50-88c4-ed612dbb9ce9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "165e5460-3c00-4cb5-aed7-9e2b880dc5f6"
        },
        "item": {
          "id": "d2f8590e-21ce-4f77-ac51-ae9bd530e256",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0a3721e3-bd6f-4759-a645-c0581210f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91bc3f-5e00-4f12-9513-949304a49d6a",
        "cursor": {
          "ref": "5f292d82-a935-47dc-8219-224ce477a0cf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cdafdea6-0324-4147-a371-490a76fe7bb1"
        },
        "item": {
          "id": "7b91bc3f-5e00-4f12-9513-949304a49d6a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f6705e97-b12d-410d-b1ca-137d97bd95b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b70c79-9700-4ae2-aaa4-f0eb35cf272c",
        "cursor": {
          "ref": "d015f58d-9219-45d0-bb41-7d3ca20c111c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "45119240-3c2a-4071-9477-6aef43bc70cc"
        },
        "item": {
          "id": "e9b70c79-9700-4ae2-aaa4-f0eb35cf272c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a22e1891-46ec-447e-9fd2-6f4a3b0869cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da78abf1-c0d7-4c9b-b253-93e2a17fb532",
        "cursor": {
          "ref": "bfb59b58-d011-404b-9729-5c7d2367157e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f0c97d32-5ca5-47b0-ba63-3b52f7d1a082"
        },
        "item": {
          "id": "da78abf1-c0d7-4c9b-b253-93e2a17fb532",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2ceca2e4-f912-474a-9c1c-7fbf24e8912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51ced11-ea1d-4572-8388-e703b0b47be8",
        "cursor": {
          "ref": "fb96d3d7-62c4-497f-9f88-c8423fe17490",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f25a723d-b8dd-46cb-9d29-68d79769271d"
        },
        "item": {
          "id": "c51ced11-ea1d-4572-8388-e703b0b47be8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f75e3e06-dfad-40e8-a0a8-ef704f2bdb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b31157e-21c2-47f4-be4d-cfca31bbbb72",
        "cursor": {
          "ref": "9d812c71-a280-4dfa-82d9-bc5b70920d88",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e50b9e4f-e699-4764-aa79-89d65a41c7c3"
        },
        "item": {
          "id": "6b31157e-21c2-47f4-be4d-cfca31bbbb72",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea4de64c-f635-4a45-8158-57e451f4b545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c827613-7428-400f-8068-2c105af2cd29",
        "cursor": {
          "ref": "3e537b79-597b-4bc7-8d62-5b3cf9e7dbb1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ec7e7518-c85a-4402-9abf-cdbee27eaccc"
        },
        "item": {
          "id": "0c827613-7428-400f-8068-2c105af2cd29",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "32e3878c-5d6f-459a-a744-f7e47184ea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f945639-d194-460d-8955-4a5a31911d3a",
        "cursor": {
          "ref": "65533b50-8545-4f11-ac4f-c0f512faae0c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a1e87d4-cc73-43cc-85be-bed74d7758f2"
        },
        "item": {
          "id": "5f945639-d194-460d-8955-4a5a31911d3a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3c849efb-2425-4f5b-a586-8f24164a9e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ea159-aaa3-480d-9890-645bfc95acf5",
        "cursor": {
          "ref": "e655361b-0745-4f11-8f63-b326e0ab0e6c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "df574911-5199-4d3b-9e06-b3a7aacec5e3"
        },
        "item": {
          "id": "0f7ea159-aaa3-480d-9890-645bfc95acf5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ca767ae-7bdd-4d7b-b9e0-3985b35e8f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaa1c52-4e3d-4767-bc04-f7295c244ddc",
        "cursor": {
          "ref": "b7bacadc-3206-49e7-a09f-a9a867b89140",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b5d6c680-6ad6-4802-930a-8c9c47144c58"
        },
        "item": {
          "id": "3aaa1c52-4e3d-4767-bc04-f7295c244ddc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "66debbb4-e902-40bb-82d0-2cc6d9ddbbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcca3f81-bb92-4645-afc6-87a91f658b5c",
        "cursor": {
          "ref": "71fef25a-37a9-4c1f-8fcf-9747a0ce523b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6227993-d3de-4361-8052-f81472c56076"
        },
        "item": {
          "id": "bcca3f81-bb92-4645-afc6-87a91f658b5c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c3248f2-7da0-49fa-9f4a-09aa3d190ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaf7356-262a-4fa6-a2e9-b53a551082a5",
        "cursor": {
          "ref": "99ff2bcd-8e1a-4264-8f39-066a1a29c26c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "efa2ea86-9281-4ec2-b313-6383bf6f9451"
        },
        "item": {
          "id": "dbaf7356-262a-4fa6-a2e9-b53a551082a5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "417726e7-8afc-46bf-904a-7a47c2900e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdf58b1-5ac2-49e1-8a04-fc39bcea54a1",
        "cursor": {
          "ref": "4ec3a735-e969-49fb-8cef-6b85cd00c0a5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef5f2bf3-d719-4423-8998-0348a39ea378"
        },
        "item": {
          "id": "2fdf58b1-5ac2-49e1-8a04-fc39bcea54a1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d340f429-fee1-49d4-aefb-ad01bb73d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2994a058-c983-4a01-869b-23df2ff07262",
        "cursor": {
          "ref": "42815e5b-aef4-4cb5-a4c3-c96336f66ee6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "90a8a555-3294-4d43-bd63-968d34846560"
        },
        "item": {
          "id": "2994a058-c983-4a01-869b-23df2ff07262",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9c2a435c-b1dc-4791-831b-bdc57ce71439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042bc83f-e39e-4f4a-b9d9-c89dee0e9162",
        "cursor": {
          "ref": "c8c8e2e2-edc0-44b4-b949-207ceaa18d36",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "143c9aba-107c-4610-b35a-e5f4b2179e3b"
        },
        "item": {
          "id": "042bc83f-e39e-4f4a-b9d9-c89dee0e9162",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e96a36f2-8f64-46c3-b4f2-80256af41243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceda330a-e3cb-4f43-acca-7150cc665b1e",
        "cursor": {
          "ref": "c9991138-6a11-4398-a7ef-fc70c97a17f5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13721423-8081-44a7-a8e1-0c4c44e6400a"
        },
        "item": {
          "id": "ceda330a-e3cb-4f43-acca-7150cc665b1e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "043dafc2-cf95-484f-ba17-d40822ea323f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c2afe-30fe-4d44-93ec-43fe95a93c41",
        "cursor": {
          "ref": "db770442-d47c-481d-815f-800825df88c1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d9a6f223-6a55-468b-98e1-47956a93cc7d"
        },
        "item": {
          "id": "9c0c2afe-30fe-4d44-93ec-43fe95a93c41",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "522b7e02-63b6-44fa-bde0-2811a04143ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b367aa49-3fe1-431a-b235-21097f4c788e",
        "cursor": {
          "ref": "7ada1117-3403-4c66-a47c-b627ec8a0c38",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7231cce0-999d-41d0-99b1-d211aca2507b"
        },
        "item": {
          "id": "b367aa49-3fe1-431a-b235-21097f4c788e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fded5f2a-7cf4-477b-9608-9dfca5f40d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f84d7f-2ba2-4638-a082-4a0dc16159c1",
        "cursor": {
          "ref": "7e0c918d-d3c2-41e0-a189-656c882bdb72",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "754fa1d8-473f-49ec-8c24-3cc2e0b27f03"
        },
        "item": {
          "id": "87f84d7f-2ba2-4638-a082-4a0dc16159c1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f6b5430-e44e-43bb-83e8-b4c6330af008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2c03e7-eb52-47ed-b55c-dc1a4a9a86c5",
        "cursor": {
          "ref": "626c4e58-ed2e-4fe3-8b60-606cbf39110d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9dcc761b-049c-45c4-b95b-c80f749ab7e8"
        },
        "item": {
          "id": "cb2c03e7-eb52-47ed-b55c-dc1a4a9a86c5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "004b4154-fba4-471d-9727-306544a1a16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2321cf-33b1-41ec-8bea-3a2bc4726d68",
        "cursor": {
          "ref": "09d94bce-b336-4df8-9b38-081ae2fbdd74",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "01bea24f-b2b0-4c3f-90fd-6a7a8224c71f"
        },
        "item": {
          "id": "8a2321cf-33b1-41ec-8bea-3a2bc4726d68",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5414a3d6-d611-40ee-979b-7acf98f11106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da298733-2d28-440f-ae4d-dae1e66c8acd",
        "cursor": {
          "ref": "79b2483f-20f5-4a86-96ac-c17a74751212",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c835da7-9483-444b-947f-2fbfd749c80c"
        },
        "item": {
          "id": "da298733-2d28-440f-ae4d-dae1e66c8acd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1dec109a-d73a-4672-a842-f1a945e4c3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b91483-8966-4130-a43d-80bdb0acda3f",
        "cursor": {
          "ref": "60b3d1d1-68b0-424c-90d4-6ef2cd15e7c3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aeb7e8c2-134b-4379-b2b4-ba5dd9669182"
        },
        "item": {
          "id": "f7b91483-8966-4130-a43d-80bdb0acda3f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f042cfe9-cf00-454e-aab1-d74934b2d2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df585a1-a151-4e93-980f-243ddf2cfcbb",
        "cursor": {
          "ref": "aa258ce5-2d40-4831-8f99-1d3bf7810ebe",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad0b330b-4f97-47e9-872b-c4c253c8d9f1"
        },
        "item": {
          "id": "5df585a1-a151-4e93-980f-243ddf2cfcbb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "30ab3ab3-8655-43cc-a0c4-403df604a599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fcdcb6-6539-42f3-a592-a9e52a4edf99",
        "cursor": {
          "ref": "8d5b29e9-be18-4b39-8cdc-a281fdb03c62",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b32337b9-cb22-4208-80ef-3d07c26dd360"
        },
        "item": {
          "id": "51fcdcb6-6539-42f3-a592-a9e52a4edf99",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "648f631e-54ff-4258-8694-6fc953c889d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff783096-cf9b-41e1-8ace-ed3a25a79d4b",
        "cursor": {
          "ref": "f42d0a10-b9b9-4238-9701-3f575db7e125",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8fad29c3-1cd7-40d1-aa0b-a5ad55dad6a8"
        },
        "item": {
          "id": "ff783096-cf9b-41e1-8ace-ed3a25a79d4b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a0d21637-7d1a-43a1-a504-670989c5a596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482a5796-9a9b-4e09-98ec-cc2564cbba0b",
        "cursor": {
          "ref": "575784e0-d58b-4210-aa3e-bdcd71b8fe07",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c22b3a98-13ca-4d62-850e-d00a697898a6"
        },
        "item": {
          "id": "482a5796-9a9b-4e09-98ec-cc2564cbba0b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5a0da10e-68e5-4f3e-91f4-204433c40a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d0914e-4800-4a2c-ad54-e75f09a4a930",
        "cursor": {
          "ref": "9448b910-7258-4d6c-a85f-de404171e8e8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dbb8ba7b-6d36-420d-8ff1-ff3de7661ca8"
        },
        "item": {
          "id": "28d0914e-4800-4a2c-ad54-e75f09a4a930",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8ee842d3-d93c-4c9c-83c6-ae5a2e4eea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201638d-c31d-4082-8920-c518cdd67a99",
        "cursor": {
          "ref": "b92e5bf2-369e-4fcd-93ba-5c218bb7500a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2df45ed8-3876-467c-a236-9ae7702ebedb"
        },
        "item": {
          "id": "e201638d-c31d-4082-8920-c518cdd67a99",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "803276bb-6163-4582-9e40-4d08fd85d781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae2b85-c460-484b-84d7-8371e50a5ccc",
        "cursor": {
          "ref": "cc59d8a5-6746-4db5-af4c-3c5d7ea02e6a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e5405e0f-e912-48a6-96d1-3637999b5aba"
        },
        "item": {
          "id": "d4ae2b85-c460-484b-84d7-8371e50a5ccc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d5a6425-d55a-49d2-b9d6-02e1a87b6130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3ac890-8709-405f-aebe-6baa66143c5a",
        "cursor": {
          "ref": "b76effcd-5357-4a43-b57c-ba1bc2fae18f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2e16d0fd-26cf-49e9-ba4a-9be29953c7f4"
        },
        "item": {
          "id": "ec3ac890-8709-405f-aebe-6baa66143c5a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6868c465-407f-4927-9c16-6ea09c78365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209360a7-2763-4deb-8637-b17b6f1586da",
        "cursor": {
          "ref": "25ec1425-d73c-40d3-be86-2fd9afc3e9fb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "31e26f13-fa73-46ca-9cf9-9e0c73b33287"
        },
        "item": {
          "id": "209360a7-2763-4deb-8637-b17b6f1586da",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "17183a02-9cb2-4651-a912-79edf5cf6b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae18322d-fa85-4da6-b9bd-638d85664e04",
        "cursor": {
          "ref": "20088b9b-ca99-45a8-98e1-dd9eada6b27e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "89f2c422-3357-4d72-a67d-6c00284a1b6b"
        },
        "item": {
          "id": "ae18322d-fa85-4da6-b9bd-638d85664e04",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "016b3ca6-897d-40b4-803a-9b213e39e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c385b44-4d76-4a02-ad8f-d68768cf7eb9",
        "cursor": {
          "ref": "f25ba701-49e6-4a5c-9d83-e1b6d4c3c2bb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b19f9efe-1432-48a6-acee-3410e10aeb7f"
        },
        "item": {
          "id": "0c385b44-4d76-4a02-ad8f-d68768cf7eb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "16475bb5-ce94-4b49-8b76-fedcda2323c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f4be99-26a9-450c-95a8-5f89edd35b5e",
        "cursor": {
          "ref": "89ffb686-5ba2-43e1-ad8d-dbe0158d5ebc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2ec04af7-ce7c-423e-a42f-68e9d5db8314"
        },
        "item": {
          "id": "49f4be99-26a9-450c-95a8-5f89edd35b5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "66521913-fbf3-4845-8ee9-3c897f278406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0159fa26-fa63-4814-9746-29183fdfdb98",
        "cursor": {
          "ref": "2ed8647e-51cc-41d2-afa5-28dd3102f608",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "32d772f3-64a5-41a9-9716-0962232ca9f9"
        },
        "item": {
          "id": "0159fa26-fa63-4814-9746-29183fdfdb98",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1190c248-6812-44c7-883e-e721c23e2465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3786ae6f-4bf9-42c9-bfea-b1d5a94a5961",
        "cursor": {
          "ref": "cee2b257-a60f-43fe-8a2c-caea4c92c1cb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "424ed90e-9b74-448a-9fa2-e728efdd56d7"
        },
        "item": {
          "id": "3786ae6f-4bf9-42c9-bfea-b1d5a94a5961",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e7c83b5-a34b-4efc-86f6-3e3cbab2d5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d538ae-dd4a-48d3-87e6-28e76f04719f",
        "cursor": {
          "ref": "f56982c3-8e70-4c02-9181-e09acd5728d5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "943f8b2f-dd64-43d3-ba9c-dc3849440945"
        },
        "item": {
          "id": "37d538ae-dd4a-48d3-87e6-28e76f04719f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d8cf4ecd-e1c2-4504-803e-4841b119d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6e2093-e74b-4b25-a31d-6040bdb52c85",
        "cursor": {
          "ref": "3aeb3be4-a245-4635-abd2-29a9054d162c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ec0fbe04-9f48-4156-81d5-b1d82ccbc65a"
        },
        "item": {
          "id": "8c6e2093-e74b-4b25-a31d-6040bdb52c85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2a4ed995-fcc9-4ff9-bc01-042c0238f759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e160761-0cd8-4a12-bfc5-1db40b36ae8f",
        "cursor": {
          "ref": "fa1b2cbf-871b-42fe-bf49-bb4d79cca4b1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4bda2851-fa54-4584-a672-34eb99381f6b"
        },
        "item": {
          "id": "8e160761-0cd8-4a12-bfc5-1db40b36ae8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1e0ef35c-50cb-403f-946c-62a1f25d0b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e1c2f1-3a7f-43c9-98a8-4ba0eacf28fa",
        "cursor": {
          "ref": "65e41d3f-19a1-416f-bbf7-e6d564a556aa",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d4c033b1-29c5-45ba-ad50-14beede77f3c"
        },
        "item": {
          "id": "79e1c2f1-3a7f-43c9-98a8-4ba0eacf28fa",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c86701a5-aef3-4acb-a23b-05ddddfa39e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bf19e5-bd20-4332-9791-aee3440e3b75",
        "cursor": {
          "ref": "83b90bf3-797f-4348-a28c-bf1690036244",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fbdacaaf-2b9d-49cb-872c-3c9066626309"
        },
        "item": {
          "id": "e2bf19e5-bd20-4332-9791-aee3440e3b75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4826f116-8069-477d-acf8-49998938ad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30780992-cc05-45f4-81f8-7dd8c13ffcdc",
        "cursor": {
          "ref": "ec55e229-20a9-411c-98c4-aa4bdae84a62",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f7317d30-5c47-4f6d-bbf4-6c1b79dbb399"
        },
        "item": {
          "id": "30780992-cc05-45f4-81f8-7dd8c13ffcdc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0e54dda5-e6e2-4905-a138-110d396259bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5918b1-a608-419e-844a-094876a63075",
        "cursor": {
          "ref": "3aebb604-6969-48e6-b8a1-562ca8ee1bb6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "45e098c2-4b73-4eb4-b1a4-887a641503bb"
        },
        "item": {
          "id": "8a5918b1-a608-419e-844a-094876a63075",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55ebd713-935d-4fdf-9c5e-a558378b0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7a20d1-2d8a-409d-b8ff-0496261394ee",
        "cursor": {
          "ref": "7795509f-c424-4d00-9c06-5759664f9ad6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a45db8d6-f3d9-4e65-933e-fc97c9c80a1b"
        },
        "item": {
          "id": "aa7a20d1-2d8a-409d-b8ff-0496261394ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ca6648a2-f539-473b-914a-188864bb0147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddcc202-9299-49a9-ac18-fbd7b85a9e47",
        "cursor": {
          "ref": "3fae148a-fe45-44d0-8553-f0888ce151bd",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "791fa977-8fee-4c9e-b086-ed59cdb6aa72"
        },
        "item": {
          "id": "6ddcc202-9299-49a9-ac18-fbd7b85a9e47",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2c92fe29-d7da-4074-8f37-8781753f3d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38961543-7b2d-4eff-86be-cda72e3fbde6",
        "cursor": {
          "ref": "799beac0-032e-45cc-849b-195d0d05f228",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9e5fa0c1-75fc-4947-b7bb-3523218e28a9"
        },
        "item": {
          "id": "38961543-7b2d-4eff-86be-cda72e3fbde6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d764c8d-844e-4359-9fe0-6e8229f88d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4af3b4f-0aab-4443-8b57-ba4a0c4f67b6",
        "cursor": {
          "ref": "79700daf-9e6b-416a-89dd-f38016c1e932",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a68ca7a6-d15d-4e18-8f95-5c62d0c07e23"
        },
        "item": {
          "id": "e4af3b4f-0aab-4443-8b57-ba4a0c4f67b6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68f209e7-2bbf-4eba-8099-7e7097ff22fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a04026a-26e9-4cbd-83a5-90ae340901d8",
        "cursor": {
          "ref": "eab830d4-f053-48e0-897c-eb7c33620026",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0ae3def0-6b15-46d8-84d5-997632cbbcec"
        },
        "item": {
          "id": "9a04026a-26e9-4cbd-83a5-90ae340901d8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "349d3721-c7ca-4f36-82ba-e027c52ed242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c21b0b2-f706-45e3-9303-23a1d02121bd",
        "cursor": {
          "ref": "1d6b6de8-2ff0-4ea9-97b1-96b4ad293d3d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "87efab81-972f-4f66-946f-76aee94b5f85"
        },
        "item": {
          "id": "2c21b0b2-f706-45e3-9303-23a1d02121bd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f4cab8b-47bc-447e-830f-e7ccf1ef3a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b3399-2f78-4cab-af32-268f84e69b44",
        "cursor": {
          "ref": "4fe18994-d196-4b59-bd82-5410f8f911e2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e1d713a3-7e41-4f95-bf40-08bd46bd6578"
        },
        "item": {
          "id": "f26b3399-2f78-4cab-af32-268f84e69b44",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6e34e326-c606-46fb-9dbb-fd250223bb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7174726a-75e8-47aa-b293-3947927efd44",
        "cursor": {
          "ref": "6c734972-fa04-4fd7-a285-b9e211e4ec17",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "29db3518-a4d4-4944-af14-179b413bd077"
        },
        "item": {
          "id": "7174726a-75e8-47aa-b293-3947927efd44",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bd794193-e7b9-4661-a192-e97fb27c0197",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f64a7cb-225b-4728-8226-a41567b0ba38",
        "cursor": {
          "ref": "b889e7fd-e590-49a8-8ff0-8ab6e385a25f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "59503c6b-b03b-44ef-9cde-29fba7cd16e6"
        },
        "item": {
          "id": "4f64a7cb-225b-4728-8226-a41567b0ba38",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "766e3596-c10b-460e-add2-ab83a49fc73f",
          "status": "OK",
          "code": 200,
          "responseTime": 536,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b71d857-029a-4c9a-9706-fd34b6403703",
        "cursor": {
          "ref": "983dbfe6-9911-41b4-8a35-7eca0966213a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7f0a0845-e678-4924-9a95-3bab915a7e4c"
        },
        "item": {
          "id": "2b71d857-029a-4c9a-9706-fd34b6403703",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37e5463c-56f8-418e-a942-a47b2bb8f0b4",
          "status": "OK",
          "code": 200,
          "responseTime": 1742,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d62257-301f-4047-8448-2bcad617cd7e",
        "cursor": {
          "ref": "80bf3803-5285-4d84-aa55-029f7b41958b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "baa516cc-97c9-4055-aa4a-a55a2788c7ef"
        },
        "item": {
          "id": "e5d62257-301f-4047-8448-2bcad617cd7e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "55f877bc-aad4-4195-97fd-729a7cca1c4b",
          "status": "OK",
          "code": 200,
          "responseTime": 1623,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14d5c33-18c7-4bc5-b0ca-19b1e617902d",
        "cursor": {
          "ref": "94f3de12-ab1c-47f1-bbaa-0f629702be31",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8e93640a-e35c-4047-a285-ca9475944073"
        },
        "item": {
          "id": "f14d5c33-18c7-4bc5-b0ca-19b1e617902d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cd93e3d5-5bcf-491c-b217-b629fa0788c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14d5c33-18c7-4bc5-b0ca-19b1e617902d",
        "cursor": {
          "ref": "94f3de12-ab1c-47f1-bbaa-0f629702be31",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8e93640a-e35c-4047-a285-ca9475944073"
        },
        "item": {
          "id": "f14d5c33-18c7-4bc5-b0ca-19b1e617902d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cd93e3d5-5bcf-491c-b217-b629fa0788c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e56697b-0c49-4db3-91d4-e5cce944052d",
        "cursor": {
          "ref": "78261eff-40e5-48f4-bc77-5b628787e275",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07e7bcb0-32c3-480a-a99f-84c541592741"
        },
        "item": {
          "id": "3e56697b-0c49-4db3-91d4-e5cce944052d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5699dc3a-6fd8-4585-a88d-d2a5f4b5a378",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d06b41-6391-4ad9-b5d2-ca3900bc11b0",
        "cursor": {
          "ref": "825552b2-bbab-4050-8cfd-284e2acfb1fc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6e2849cf-9f52-435f-94f3-019601db2712"
        },
        "item": {
          "id": "40d06b41-6391-4ad9-b5d2-ca3900bc11b0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9fbf07de-cca1-4446-9ba9-efe25eaf88fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}