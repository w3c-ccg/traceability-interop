{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f7244ded-dbae-480d-a2ba-ab1baeb8e0f0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "519d6780-78d3-4d61-99dd-a909b838b5cc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bce32d6d-3130-411a-8f13-28196e6d34c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5bea9f7a-5c87-4a2e-98d5-9c724dbcdfa3"
                }
              }
            ]
          },
          {
            "id": "17c0169d-fdde-42e5-9b2c-d82a900b285e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f40c15ab-6a90-4c0d-a67b-5033aab49474",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5fb86ad-5235-493a-b037-8f6710e8cc0a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "04b80204-8fec-4e02-a872-54727c2671f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49ff69bf-d51d-4168-bc3f-6f5068f51796",
            "name": "Positive Testing",
            "item": [
              {
                "id": "014ff609-859e-49c2-ba2b-74992b6c30a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1069891b-15ae-4771-9166-25f10b2487b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f8011f6-18fb-47bc-9203-f69d95856fba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ac4a7ad-027a-425d-85a6-179b85860387",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24a6c27c-da3b-4796-8723-32ca078e653c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "364a806d-d233-41b7-994d-e79015112137",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32f31460-e8db-4458-95a6-b15cecf5698c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "073f3916-d42e-4a28-8c5f-aa66f47d6e39",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4978d511-4a37-4d89-9cf8-13927ec928f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81fb190e-430d-422b-a88e-40689937b382",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f59b958f-90b2-4335-b1bb-cd672f5d26ee"
            }
          }
        ]
      },
      {
        "id": "88d5a008-5f5b-4204-9776-dcb824236ffc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "562f4cf0-e58d-4b58-b406-ec4152acec73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3acfd71-5752-4fc0-99b6-6e96174cd91a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d9d6d85-1c45-4a60-bf75-f559d5b16c0b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fed3832-7647-4d0c-8a9b-b83a65958631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ded22094-e65f-4d32-add0-014a357ccc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9ead92-3e5e-47fd-949e-53b67610d469",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fd0188-5407-473e-90d6-5e75505dde16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "962be559-560f-44a0-877d-c84f3a2fafbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b36f6c-29ab-4034-9df4-03fd5c51a827",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9aff3b-b2c5-46aa-83cb-478948db87cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10b131a-a2fb-4420-afc5-39d727efb5f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef37e02d-de0b-4f33-971d-de04366ed44f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "135150f7-b364-4573-8949-551897d286c8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603e8f42-f970-4079-bb03-dcd3e86a446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f296a2a-5420-4898-97fa-9469b0603dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fbb535-df1f-486c-b222-66f9bc734f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f1e533-2613-487a-a0a5-f8328e3bd876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76566913-0d0c-4ca9-aceb-d60e12422f9c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a6308-e619-44c2-9700-7169e942805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "010a8894-517f-4f3a-8332-b91b081071cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d333b82-30ec-436b-b6fa-5ab2bf2f8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1d842982-9cdf-4321-896a-3d8bb91f7436"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90a2fe3d-ad20-4f75-ac23-bdb59b03217e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05907530-7cda-43b0-8f40-481432945515",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2805b81-d335-4e63-aedd-c4b4013d983e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c0cb887c-c0fb-4f53-8544-0a84a1fcb813"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f80df4f4-a8f4-43b3-af31-f613ff3383c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "13e7c615-8f66-44df-add3-0cb6b4e13013"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0b6158f-d0fa-46c2-8d26-c8d11f1cb005",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ec78e4c-74d4-4d3e-9900-d427b9fda3ce"
            }
          }
        ]
      },
      {
        "id": "2f0ec7e7-576b-4132-9894-6ed41672bc94",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e42a06d5-c707-47b0-af31-ae7111aed4c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ff3e63c-2bd8-4920-a220-04985dc86184",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "02318b53-94b8-45e5-9920-d6a897244f7d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3518d968-99c6-42ab-8af4-ce37c4e4f819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aee615-3ebb-4cce-8dc6-6c0801671b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8a7ba9-c5e0-41cb-8f60-bd89b73ec072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c0edfa7-b50b-4f7d-ae79-efcfe5910c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b69a528-da55-4a95-bc39-dfe6416801d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaadd84-5f8e-40c2-9fb9-86a6e6c1351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0b931d-8d85-4d0f-a1cb-ccfc59df3bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90206b-eaba-43a0-9ceb-cfeadc6a44b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3dc7e74-906c-4938-96a4-acb01d62267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6350156-2c11-4702-95dd-93984fd2a3f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf08601-177a-4e0a-aaaf-26e85984eddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbac14d-3777-410e-8a90-21d06d776112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ec6296-7eec-4a6c-a009-92133fa4a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f7b2a6-28a0-4e77-bab7-1015dfd21355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0a276c-af2a-456f-96b4-a8e1b6bba551",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c12e6-c431-45f1-87c2-c7f8aa7609c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cac377-510f-473f-bd54-1e2e8bbf411b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b19436-9e18-45e8-b651-d4011442173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af0cb78a-d634-46fa-8b66-ca4b154a1cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f94029a-6b82-41ba-a3e2-72eb9ef95d38",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc29a7-bb8b-4a34-b7a5-b1d1f878ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a40f2d1-e53d-4bf8-a22b-75c58b1e6d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d153edc8-f186-41c3-ab7b-4f6c275a9219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eacf0381-f11b-4cfe-b03b-2f93f568a56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f9011f-c0e2-4dc6-8816-a3c720ffa2f2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64af5edd-7f7b-4f7b-b7e4-ef95bf059b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc586897-e52d-4f1a-8327-3c87f29211d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6053585d-8be2-4c3c-9c9d-34df1d22177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a49ff2a-7bf7-4984-a608-bd98a4750ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ce01f0-db1c-4e51-825d-b75dfbb1a462",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9c2282-73e6-4537-8ddf-024dba5cdb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f1fc74-01c2-42a6-9ba3-81a07647f6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cc878f-220f-4953-b30c-351a1a020dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e600396-cd66-4b95-8716-b55066eb97a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73959b3b-3f49-4c1c-a496-5390590c3051",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c98b948-96e0-42f6-9f92-f5f1b3e79435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5686acf0-7082-4b60-b3c8-8c283e20f02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b9dcc-59b8-43b2-a684-acf25296788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd1a47f1-5211-4564-8099-a34a17292add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57db90d-8169-4b97-8245-39a1ed4ba592",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e07d7a4-4793-4821-abe2-4a0664353f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a07304-339b-4eda-bf5c-0235433d11da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15076162-50c1-4b59-be83-48122177145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461a3a81-ac3d-4be2-b77c-4634d33ec582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dd2b5b-4a2b-4d8e-81aa-b3d105592383",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aefd77-fb0a-433b-99f8-c2cdb731b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49601d7-6008-417c-ad26-3a1cc162a609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f7649b-5498-471c-ad65-5053a223d91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "896b3610-6d06-40fc-bd30-e66d3ffd7414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd161ce-c1f8-48a7-b247-046b85b8dc85",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fab089-7fc9-4a84-8e84-d18e8b2d4b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5850101f-3a11-4064-a1cf-a7cd81c8f508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6888b96c-2af0-4674-8735-aefa1a000221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50dbc717-07b6-4480-a21f-1f6725f0004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2f3573-fb6c-4649-b9c2-99354f224c5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f61ee1e-838a-4727-86c3-10aa76a62869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009d26bc-987e-4bfa-a399-e8376a02e4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b55da70-d0b9-4967-8d28-3df329493e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb253ca3-8b74-4bcd-8cdb-608fe2d18155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1730e606-21ee-46ad-b847-d82b25beaf52",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd1ebbf-ba9d-444e-8b04-c85ae02b338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4cf4fc-08d9-44aa-b9af-58d4b1bfc354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e6fda0-8f82-4e7e-9383-d02f0dc52401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8faaf12-642a-4eef-9f1a-a740f7a9a13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f9356-0576-4a53-8abb-4d7f46edb4a1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501a4198-9d2f-4af4-8c5c-107a1b5e6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2679f0-643b-4756-a4ed-db3851b21c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec8053-ac96-48f3-9a53-7e6678d3f336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a87afc8-db0d-4bf9-814f-80ee460968f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e863ecd0-723f-4ed6-a87d-dbc59e251cc1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f43ed9-9f26-4411-b0fe-5951a7bad75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450ba661-3c7b-4e86-b475-c157b8037160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f89b676-9d87-444b-abd3-93204530d7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f691b82-455a-47d8-8ebd-f120143ce13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f448ba-0c66-4de9-a076-4f4ca2715b3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbed64d-2d08-402e-a538-8d09d91a4be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a7be27-51db-459c-b4d2-b3b34d710280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fbfe89-50b0-45a6-b25f-e20f17a9d3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ec1a98-9c4b-4d21-8dc0-abf235762246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc3f66-06c2-4c2d-bd76-6d57ce3b5390",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3579cd-b123-44fb-a23b-cd381b3facf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55f7530-0585-48b3-871d-9e2e25590d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90dcdb-099b-4bea-bf5e-d82862350fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ecafde5-9fa0-4247-8501-a7344f05d195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e67359-17f1-4ca2-8812-c667e2722d6d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e37925-cf51-4ef6-aac0-f91bc7ac8197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82893dd-7921-4e10-b7be-89e92667047c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703cad07-04b1-4a44-bc2c-843112ae1ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee8bfb0-4661-4c2b-b812-2340384f8c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b4fbda-5270-4f91-83b9-88a0878de527",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2f3b44-a335-4ded-8035-baa8317dda77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7186b134-165c-4df4-8d5b-749ea0b5bd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02921798-df48-4f86-8ef1-26ad3310b3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe4d245-077c-4dd1-a78b-89b16448bb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe19e251-e86e-449c-ae88-a50099a70040",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3c9a9e-5c69-4df7-af53-02feceeee047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e656aee8-5b5e-4370-815a-f9658db2149c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3904f859-18a5-4495-8ae1-754a109c7b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76603f4-82aa-4976-a512-f86bc7390eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab89f02-9e08-45bc-973f-93b6be657573",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496ba68-47e6-4e20-811b-c3db748748fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76344005-74f8-43e5-aae1-5e8c792dd201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafef7e0-b44b-41ee-94ab-8cb366b7cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "997d86ee-a25c-4be7-9309-c132aee7bb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c48a27b-b3ed-42ee-914e-6c822872ab4a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c63c00a-8e42-4291-86f3-82283823b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe02ae9d-0e1c-41e6-bc87-cc67a43f0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1dbd01-1eca-4609-a89c-b6c6cabe4050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf87720-a0ac-4d15-aca1-7e4ba311b682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80c81a5-07e7-4ad4-a6be-902c7f6c40ae",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91210e0-e549-4f17-bb19-fe17765c9a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cb7370-a86a-4afb-ad93-91f69e8eb9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4434e070-fd07-4d8a-9bed-0d4b7d77dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eab9552-cb06-4d57-909f-f45fbad97371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1b4f40-0230-4687-86d6-b60d66f111ba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba45be-2ea6-415a-907d-37f6dd1e8871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629ffbb8-dde8-4ec3-b513-2c9547e88193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a40de-71ab-4480-8f15-88c3070cdba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0497240a-ab91-49f8-8b03-5c6c27df3349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4a5c1b-cf7f-42af-90b6-77a57808230f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f91587f-0da7-4b81-b313-d5ab912ba91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94a4d6a-36e5-4653-bf6c-d22cb89cc943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7481f7e-228e-4b2b-a49f-85a3e52cfc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08995fe0-25b0-4544-9099-7012c827f4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e8e019-f69a-4093-baac-290749678af9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb91e4-9f48-4082-a595-ded07a66841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a168aec3-e0fd-40a3-a3b8-04551e25e983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dca7751-1f17-4fdd-a7ba-fb8a418e814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5348cfe4-5080-440e-8e3a-d49ec1e1a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c280093-3a91-4f1c-80b6-57f2a400aa6f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6f847c-756e-43ac-97b9-784f3017df20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731b2a6b-0689-479f-8942-c7daa9362879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863e925-9b1a-4ebd-9396-35a192ecf0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d300bd-5724-4c72-87ea-ea47ef1166c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdebdbd1-7e67-4c7c-bcba-0e0684b162e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad194bc-b7e1-4948-b380-b21ade287a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6457eefb-9204-491e-8064-cad2b4882e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bcf191-a1bc-44c9-8af5-b2cd88c883f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "251c0106-febd-42c4-a99b-247db826aa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fde3408-1a59-4a20-bba6-e453e1762d71",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eba4c5-0bb1-4f6c-b319-04f9b1b21377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40c2990-5851-4ac7-82ee-2c1b3fa2a70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69caeda0-9740-49dd-8198-ca43db0ac906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "354b8b21-25c8-4510-9a1d-0ce23bb26f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a723e9-9cec-4885-8cf5-a3d874f77a83",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07d0e96-f37c-42c5-b5b3-e9b77eb4cb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482891ed-c155-4f27-8c27-5211521b1ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b15a172-b5bf-4f46-bbbe-32bbdfdd9af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "583818e8-380f-409d-918b-922a6f2fc70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5053a2e1-6eec-412d-96a3-0072a96993dc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1936cb3-7c95-4c5b-8f68-ca69ba16cf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba06ea5-e6e3-417a-b17c-0004e0e62b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b877d0-aec8-47dd-83d3-bf69d497a759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd705c81-3f42-47ae-bfd8-ab377c09133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c7ff2c-99ff-4bc1-957a-5b224e065247",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7706fc1-9601-4cb6-ae6e-ca50a2d202c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5655b1dd-3c23-431a-a6ee-7bb8551df8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8450c68-f49b-431c-baca-d7dc3e2e6b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83871d99-f082-4e1a-b058-65761d3d2e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a75abc-2074-4641-ab88-ff8a70c90a37",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b11276-b202-4520-b3de-284a0b83d03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ada428-2c01-4bfb-866a-563d538e5867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ba0a42-57b1-4a25-b1c1-de5ea1e12a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cab1668-e802-4409-bf54-861e5a7b6810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74f413-0f24-4d12-8d93-55f6b1d8ce83",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50285521-dbb1-4d37-828d-f5c1b0976929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64380c80-98a6-4cf8-9d9c-7f13ab87fe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf9c515-ab99-4e7b-ba43-023fc8928629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4421856-dd4b-48e0-8d56-95169f7537dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db39c512-ed7c-45a4-8661-4ba34c86ae16",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fc9f49-69d8-4f44-88c5-f792dc842b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dbb326-f500-4d98-95ef-d7dce8303ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3afac9-7fe2-4767-867c-10732bd17429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9d23709d-6177-4666-9562-8047ab4a9724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ef4159-4e84-463c-b365-11bf279ded04",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfaa8bf-cbee-4ddd-96a8-80a2c8ffe79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db547c5d-37d2-42f9-b517-a180fe2db906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d93b8-bda9-4734-b93c-e092a73dd8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15324ca4-d0a7-42be-931c-04eae8338c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df795400-eae9-4198-b8b3-2245d22d68e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bb3fac-f8f2-4f6e-9365-a9be420d3348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdc8d52-5bd0-4f0d-a648-4983c4343c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466be8d2-b9b5-4943-8d49-810537748ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd950381-7144-425c-be26-299a27ea2a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b1d73-8dd9-42a0-8e95-32741d653821",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f34268e-8e2f-4ed0-a159-bcdb24d67961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c63c3f1-b8c9-4e33-b22f-e89598aced3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706982c-8af9-4e81-881e-8743c11d9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e487e9-3bd6-401f-ad1f-3526c10ee1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d4a866-5e0a-4564-9769-92916275d414",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c86368-dd26-4cdd-91c8-b39c1d126e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647afa7b-64fb-489f-9ef9-8e50914d8867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f4e979-6b83-4203-9f71-eb87ed4ec360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfc0635-72ef-48d5-b3d1-fa242edba8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0776bf-112a-49df-a9ad-67aa7695c028",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433bec5b-24ac-47ae-a2a2-f46acb5e7d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9b7265-565b-4e37-bdec-eb276995f8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2693b2f-9345-47d9-82ca-71173d1ced0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68090a94-1614-4735-b442-9a78750777dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a20e1e-296f-4d67-925f-49b4c7212892",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bded21f-f479-4049-aac5-81c77bb3637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8a22a2-384f-4f79-b582-c709e085829e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198d843-448e-4d9a-9efe-1ee7f717797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a9d97b-c2f9-47b0-8b78-657df2640213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57446060-afe5-4fbd-ba32-8c1f076394d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd25863-9616-410f-b1d0-8335ce704b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5069321c-f823-4fb8-b300-7ff3389cc7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08897e9-c9d2-43bf-8e38-91b2d3704edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3eb0a0-2974-4a17-a856-4c729d7daa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc068f7-73d5-418c-a247-11921d202ff1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a657fcfe-041b-4e96-aa4d-8ca42c189012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48072cc-70c9-4063-a1fb-2f9275275b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2538ede2-0dde-4d16-9d62-9fc071c2d769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f142ec0b-2792-4ba9-9e8f-7c9e860a2c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7088b256-264b-4c68-bd9b-99f62215498a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce1d8c9-4b3e-4e64-b717-015279879999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a9772b-6361-41fb-a17c-5963cb8e0796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4040ac9e-8f96-4bc5-8720-e28dd4c4ddb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "00466f5a-a8d2-4246-9e62-3a9a0dfb8eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c42031-2aeb-40e6-9e37-1364c4b171b1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae97f00-54ef-4269-892f-5c0fa02c8136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fcb66f-a149-4755-9715-941f751399b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf12b2f-6c8b-425e-9cfd-a78fc2f49509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0db71-b20f-40d1-99fb-0fa801c9a8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a3485-015b-40f4-a449-d1097f29de59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85585d2b-44cf-4ee5-9615-64a23cb82a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00af19b-7e9e-49c9-aa24-9e0f16b0761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708e5f00-860d-478c-beeb-6f241be86bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7a80e9-f561-483d-b283-21a75e270a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e06ac-2b63-4a75-b456-1a3a8c8dd1c2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b859b80-c298-4074-beef-3e7c6cd44a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d49aec-351b-45be-b840-ecbb7562efda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35ed0be-555c-47ec-a391-a15f7e20bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b3a59a-8418-4e51-839e-190d85199246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6bd1e4-cbbc-467a-aaa2-721e75909764",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25ac3b0-629b-4ff9-a720-fa2d3a9ef1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e10a5d-a3c5-4629-81d4-fa52e824f3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb92ebc-1451-41bb-a274-99f7d4ef2b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fb02b4-955d-46dd-b330-58db8597d72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fc7587-17b6-46fa-bb7f-bf7d15fb4eeb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a5b7a7-7cc6-4f69-abb3-85fe4c3573c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651b7b2f-81a6-4f1f-9f6c-be98e4512917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a45908-54be-49f7-b73b-2701b7ea6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02529dc3-3fdf-4ceb-b846-895f2d146697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8838146-ec6a-463b-a639-7fc78650e5de",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382790cf-532c-44dc-8956-a031659af323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269636d6-5f51-4d20-85e0-57b1d089450e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85310253-701c-477f-8a12-55db534aa257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "424ccfc9-294b-45bd-a8e1-ab5703306e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c719e5c-266c-49e2-a67c-db4b36287d71",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b2a18c-07f5-46d2-ad15-63b99e1d7c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa753ef-ea60-4e3d-8485-aad0cddfc36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c13dcbd-85af-45ab-87e8-5966d6b0da9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67a2d0f-f239-4199-9e05-cdb1fc6ed68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc2d728-265f-4477-9979-e4180ba346ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1488ed3-4fa5-4895-bcc8-c6c7b99694bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72883533-0c4e-4dc2-a9d5-173055098c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2cc96a-f91e-4545-8e3f-c39526f7322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3814343a-e43b-414a-9274-22d61201dca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5955d62b-f7f3-4e39-a8e5-f96251b66309",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739c2a23-b280-449d-9864-6301d0da6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448d287f-2cba-4ef2-9117-37709cfb3b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2b13c9-2a6b-45c1-b3a7-656a762ea797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74150855-33bb-43e8-84ee-cecef630c371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ce2880-8aae-4724-8cda-bd8f5005077f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9211d4c5-183e-4583-908b-68d67fe35a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6a536e-1599-4e5b-90c5-cede86c6d679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89630be9-c77b-4102-9485-bc7f873fcb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e4574b-c045-42ae-9dbc-334f626dffea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66394dba-a373-493a-9fc7-9653b45718de",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ac7512-d4d6-4110-a230-9e2f3f670a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a598b05-14b0-47bc-bce9-5170955c7386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee22c9a-605f-4200-85f0-3ab256faed9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe52b231-31d5-4838-bc3d-382f2f7d8dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b43d4b6-e6ab-4642-b2eb-41f81ef104a0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3189e9ee-141b-41f2-8dbb-bb72d6e91b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdca4c3-22d2-460d-8dae-616565ab55f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5d5e5-10a7-449b-b22e-fd01fde3d992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3b88f92c-493e-45c4-b9d1-5e7aa8681803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66927e88-b84c-4245-bdf8-da60f6263e0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286f5a20-2071-4bb6-9086-8122c5128b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b11e922-2033-47e7-8f16-4b37c99e2acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37f0196-12fe-434a-b20a-682ad8192a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bc7544-34fd-4bda-a768-7c965dca5a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4424c4-9a0a-45bb-81a8-aac6366cd9d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038db140-76d6-4d8c-bb45-2a306c1f0d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9a24d0-73d7-440f-b870-8ffe95f435be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec308b5-80a3-4972-b76a-383f1b685c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b81d345-9554-4c02-ae6d-da1b71cf804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28343b4-1860-4f39-8e88-5ec4f374ea53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7228893b-bd96-41ab-9f8a-675562bd0482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce88856-cb67-4e34-ac02-424cd520787c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755b2a6-b979-4aa2-a67d-2571901722aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca96c0e-ee95-49e9-bd35-d19f785be7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462b19a2-d8ad-4da2-8814-a7f5863788d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6204134-c5da-48fc-a506-cab99fe8a51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78163b61-0057-4d84-add0-bae1173fae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5f9aca-97c7-4f1f-bf66-238c23093fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3a669e-32a2-47a2-9e32-3518c5cfe576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a020a7d3-84d8-447c-8174-978dc91eca34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2531c0c4-9da0-4c4c-95fd-e6b5281c311e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ba29bd-4774-4969-aec8-a66861664c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d536a776-b0e7-418b-813b-29c24f14df88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "283036c2-4fbb-4609-87a9-00b68c9a66cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0230d40a-2d1d-4435-b096-96f4ec306712",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638b9b90-5826-40f2-be6e-6137e380d009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66d5dce-888b-4804-82b5-2b0f80be7b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12fd659-2c23-460f-afa2-1e8f1e9d8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af2371b0-f9b3-46bf-9e77-4347e317434a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945ce92a-d62c-4396-91b9-fa75e4589eac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a3dfd2-19be-4eda-91f0-0a25e01b6b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec9ee4b-e4ff-4cc5-8724-a5565efe7ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713e556-8613-4fdb-a0e4-5593d3bd3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbf1809-7e6d-4049-876f-fd936eaa4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab23edf2-c8e3-44bb-adc2-fc017b39c02e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96800fa0-14c3-4474-940e-ae936c409fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18efb542-d726-4565-ae8d-b64a7d2d9122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46480378-c456-4af0-a99e-b1a0fc935366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75eefb54-9c86-411f-9364-9e127f88bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2383f067-b368-43f6-ba34-206c8e1da6de",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62493de6-dd0c-4f36-a0bd-e668c16d3950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5380c3e4-bf9a-4576-8728-e10935bd16f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e64692-c84d-48f4-9575-0e2e5546c850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19a17cc-8c60-4237-97d0-6f8ef935aa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c97c34-f169-4a2f-ba5f-86faf266f1b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa6a08e-4253-49f8-99e9-e476b0fa4b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af670195-3b67-4407-b5b1-788dd40f0628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3645c5a-237a-4a6b-94ad-1b7e3781aee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "358afb84-d202-4072-ae73-93898289b74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46d18cd-5fab-445c-a3da-6f0a4b17f2ff",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7863357-bf4a-496d-85a9-ae4b2f788ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ace2c0-08ca-4c2e-8d87-444a46e1ab6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe5bead-37bc-4905-8aef-dfb5796b843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9372c6f7-1718-428f-8d0e-b0debc4c70e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd0ab09-0fef-4b51-ab40-fdfe3e6a8200",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79f8cad-8206-46e9-bb9b-567fdd0de84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2042e7c5-e3ca-4053-8e9b-94598e5c1d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b186c7-85cb-426c-8f6e-e88dd1294ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e06aa3-b465-4283-9a3f-afd802f57913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe8ad55-8ab5-4e8a-9780-eb60ce0b8199",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3cea58-9a2a-4470-89f2-32b73d4b29eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21963b91-a139-41f7-8286-b135e04094eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d754a0-f09c-4012-b253-f6302b6c0133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a86269-bf39-46fa-ac0d-536d8b1264b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8590e169-a040-4f8d-8f46-570ecd38c9f0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adfb5d5-1533-4878-b504-3b31e7744833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e20b4d3-5786-4fef-9576-50cb93a47d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b06ad71-f9e5-4cc8-bce1-970f45228f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60528360-9b31-44c1-815f-19b1fc2178a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16438f92-ce7a-404a-983b-b97bb96e1046",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5f995b-aac1-4ec9-b212-8050cb291c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d8e8a4-6792-40ac-a5ec-05c134eaf066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819bd6fa-a06a-4f9c-a6e6-a1e48079c711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "252b15b3-0a68-4754-8fe4-84fad8a2a64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b884d4c1-03dd-4054-b0b1-79cced5d7c27",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a994f50a-f5ba-4fa8-b13a-be3d8add5d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5622c26-6137-494a-a34b-5e13437f1cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aece8f0c-2322-4809-ba90-74e40435b829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8060db69-d2ba-4f59-9c15-514adc74029c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0604c42-d578-4a32-bd48-414834fc8a6f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f7c4d2-740d-44aa-a13c-fde6980fcc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf29c73-800e-4ce1-89f6-080392e438dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b2ff8-4317-4d96-9528-294385a73829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b7b61f-bfa3-4a80-aba1-93fd0fc2069d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690a8eb-cc02-4b85-8baa-117fd2eeb8c0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18151f6-9ec9-4d55-b334-23418ad511c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f8b1f6-d27f-463d-af02-1bf2ad17f5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fc2b4-baae-4373-adf2-8c7ee375765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99057ce7-1f7b-4363-a464-732a3135a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa1ab00-33ef-4f1b-9027-20bf6a0af368",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8ff624-598b-4806-accc-b268fa5acaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e2ebc5-6cdf-431e-9d75-46b51c55a828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2419d9-25a9-4458-9760-398583fbb730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e635b868-bf79-4285-ae75-37e60e1e97cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ffe2a8-441c-4d94-9447-465cdb6a2e10",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3c0517-e5e6-4088-bb82-c3d292a04b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f639e91-a697-4fb0-ab7a-294fb9735369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f8542a-cbbb-415c-866d-3eb757c23c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b3cd72-1d1f-4361-9d3a-1e7b40126576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0258e8f6-7dc7-4b97-a702-ecdeb490dda1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f14f6a-f0e1-4130-93af-29fc1783775a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1261b6e-f617-436b-9454-b8dda84b94bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5cccee-a5b9-49c2-81fc-39249bf5b9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "562dbda6-9dec-4ae6-933c-fc4840e5b45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3ca06e-debe-4ad8-9b7a-1c9bde85a4fc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b251a8aa-dd2d-4ed9-a814-a46cdb5dff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c4802-a2e2-4b3d-82cc-54124ca6fdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ab25e-b504-4490-a7e8-ecb32ce02f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bb0647-6f86-4bce-ba12-c50f9f4282d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db2e66b-da9b-4d18-b21a-6cf6020c7aba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2402682-16b5-43a6-993c-948d6d21678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da400872-4838-4614-b95f-c15b2020d3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0308747e-1b6c-4b1f-9cc7-cd7f8c211a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d78c35fc-827d-4c3d-ab87-f51a67c898bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a00e5ba-2f80-4493-b443-08b7e8d1f200",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cfdce4-41e6-47a7-a924-aa61606df7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21f34cc-2e9e-4663-b00b-6cb8c959399d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7410b02-b18d-4950-8944-6b57d4edefc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b185718d-3b7e-4e89-8d59-b35e334a4320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa9af8-5f3a-48e6-9eec-629fd0085624",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f36be3-458b-495b-97b8-374971a7a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8043917-b78e-42f0-b9b1-7e695e3b608d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7585edb-929e-4b46-9ef7-6aa82e2aac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3221845e-38bd-44ec-9295-d302bddb4882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2501ad-7207-4600-87c3-0431b4d7a9d3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85a37ff-ab6e-480b-95b1-88f59ba03c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9d9a07-28ed-4eeb-9aa8-1802640c2fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db8820f-5605-436f-b7ca-ac9f6d24e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7f999c-0ffb-43ef-9a83-adfe2bf7075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e56339f-2b5c-42c6-9520-fba149651aea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfc6916-ca18-4b23-9caf-3ac1466e5f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10d4e24-1cd7-460d-99a5-613e6dce3c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c8b366-9b0c-4f17-8f1b-caa171af8be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab636747-0f59-4330-9dd8-8f7b1a2300b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96ccb5-4b4f-4a3d-b4af-1fa18c5180f2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fa38e2-b18d-41bb-bc28-a8cfad846411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a808fe3e-d850-4be8-b038-c3796db177d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c467977f-29f6-425c-bbbe-de86ba823de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f03750-7e63-44d5-b965-d3fd06382ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba13fa2-cf21-417f-8467-1be65606b43c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb68a2-2fdc-4e44-b9b2-d8a6b24e3bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73911792-55e8-44bd-b755-b274397841cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412442b-1565-44c1-9c62-c983e5be80f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58ed83d7-bf3d-4165-b81f-14d77c7d3ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68403f-e3e4-4031-b453-a15bfe46276a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d72480-78fd-46ea-b2fa-7dffdaa31337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17831a43-76dd-4756-874f-1fe66e818dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a17d432-d33b-4fc3-b8a2-2d29d45f076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e2dc17-9899-45b6-b5c2-292f264612b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce31256-fee5-40da-a909-0eced10287a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375264d-4d16-459a-880f-395817d274f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9070793-ceeb-42fd-8970-cce5724dc510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fde1491-b5db-456b-83fb-e947ad0f4ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17d26657-d4a2-4c35-b796-c3f4e3bd12e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373eefe0-2e64-4526-acd1-944926a52e7c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ccb6c3-32bd-4799-96c0-cf534b0ac133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7741e684-c20a-4225-8d0d-c535967d61d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3db1e58-76f7-42e2-b8cb-7ea1be09aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c35f69ad-65e2-4431-b810-a9b0acf1a2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30104502-3321-4cb1-aa0b-72dd833a4312",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01e20cd-53de-4674-8501-2010459155ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5aed22-af04-4848-86a8-1abf1bf8f2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87627b90-ee1c-4e2e-8265-a2c80caa9509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19cd3e9b-17a6-4e7e-9fd1-943a1b1d7a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd67a00e-4549-40b0-84b3-4c5215442f47",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22137f38-08ca-4bf7-920c-da35d0be906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436bbfde-7d7d-4391-b9bd-07a489721ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c326f54a-487b-4d4f-84a7-1ed0742a639a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad078fc-cfb0-4e87-8f74-65f554334921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc7da44-dd4d-4c64-b101-464d96ec603a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd90c318-0b04-4e91-b85f-71f5100bb118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f338be47-b617-4145-9b4d-a62fb666a56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895c53ce-8376-4491-8621-939d5546cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8099245-8d2e-42e1-b6c6-d30ce7721469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78993bd4-c5fb-40f8-9831-395991be7d55",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee0e6b8-9efc-4fe2-8b8e-401164dbe4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8db5622-1363-4edb-98bd-7740166e17e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b217f036-e91e-4677-b55a-63a155ff2a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b55ddf4-20df-42a9-8b64-f7db1c9ab725"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26bf8a08-a81e-4ee1-b779-2e06c4310f94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41aae1a5-8ad2-48d0-b8a2-416c85f927c8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830ffde7-0850-44cd-b18d-48635e50669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76b5abf8-b6d3-4ff9-8edc-b07db031d5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be657af-14f7-42fb-9790-31dbffca7614",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fab43f33-8b00-41f2-9b8b-e568a62572d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1878755-0749-485f-93db-3fe5717dd434",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15352742-a907-4ceb-a6a8-d434be95ebfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc638f27-afc4-424f-8999-fbc4200dcbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a7cc4-0df6-45f1-9f79-8922210b1ecf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f41349cd-700a-4c6f-9062-da3c22ca05dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b632e09-a8b8-42d5-8c4f-d1fc2229862c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "462c045a-a6d5-4ef7-8f0a-b78c185b35c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de4b8dd-13f3-49a5-833c-0fc987891e6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "056ca5cf-39e5-4a07-979f-795a59bcf1ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f32daf04-ecd4-4e3e-ab3d-30846414602a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52a73c64-b501-4ab4-af4f-5962ec768899"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93b87653-1fe8-4f74-954e-9f6fe2ec1792",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cefb7c12-1654-4239-ac02-cbb3263e7a0b"
                }
              }
            ]
          },
          {
            "id": "721011a1-a9de-4fe7-a778-f5b9bb141324",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e64808a3-5ee5-48d2-8c05-c438216bec58",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65acc18-f7e8-400b-82c2-0d8c13652dc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fec6caa-f27a-456b-b958-18c19e197058"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b227968-44b3-4a97-99bb-5348a5ff8854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13ada5a5-bee0-4bba-a39c-85d61df7c0e5"
                    }
                  }
                ]
              },
              {
                "id": "b4a444b5-2846-4b00-b625-9ad54288c26a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcf0ef92-e6bf-4e03-89a7-1df035efa1ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fda56829-a0c3-4dcd-b7aa-3022f1120bc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdf71e77-04a0-4965-bde6-4ffbbe13723a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ca9cc26-8621-4fc3-aa89-c5b773fb1b2c"
                    }
                  }
                ]
              },
              {
                "id": "1d056a1f-e8c2-40e2-a8b8-99f3d6c1382f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93cb3644-c626-4ff7-9177-9fef46d100f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64b03796-05b7-44ba-b894-59512c01ce31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22b3af48-fb19-4784-bc9f-9d627fe30d6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bebf783-5dcd-474c-8290-5dcd5b9f0d78"
                    }
                  }
                ]
              },
              {
                "id": "ddf017f9-8409-4ac4-8c8f-e47f71ed8a1c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "494b1baf-eae6-495c-90b6-6e205319e577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2599137c-fd38-4cbc-9a18-5851e62ed565"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6561df6e-6946-495b-85f0-0dad13500453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eea4319a-7308-41d1-8a38-ba3fa4934de4"
                    }
                  }
                ]
              },
              {
                "id": "bc2b340c-f2bc-4686-9384-6867214e91bf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f7f2880-8d39-4f69-b8f5-0fd037389390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e1ed2b0-473d-4ea3-9adf-80cefa4d88f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56aadbd6-de93-4e86-96b1-5843fac9e249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "32b9a8de-af7c-4c7e-84fd-97b07543ec71"
                    }
                  }
                ]
              },
              {
                "id": "cb732ce5-cf0a-4fab-8156-0f530d396d78",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59c459dd-ec14-4f43-8e06-236eea3c5b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aff259c-fedb-4ef2-ab98-c51a7dff95f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4155fcb2-61bc-4dc7-a8da-39c9e653a5f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d752ac9-32e9-4ac1-b6de-aa0d4100a686"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6393d7ba-f08b-4a84-9d94-b9819994a4f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5958f80-84a6-4d63-8dc8-3d72abccb86c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3cda5710-cd0c-41c7-a0ee-e9f760259484",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97558214-f985-480e-9d11-49e9e3a0987d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a140b6c0-f2d4-44d5-bc0c-96a76a2e1e28",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e161344f-92ab-481c-81b9-ece41c97302b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76eb9f30-4a9f-4d2c-ae31-09793bc77434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7af4f535-eb6f-4945-b949-3477aa02a514"
            }
          }
        ]
      },
      {
        "id": "6ba971b0-5965-4fa9-9fd7-b5fa0694dc06",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45d72c7b-509a-4683-a43b-d8ff106ebdf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd8aac5e-c800-4d0d-8776-1aa3c0c71495",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bdb789a-61c1-4474-b4d0-054247c6a823",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b108a482-f853-4f32-8df4-b1ee392dbcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abbbc56-fe25-4419-906a-6b16f74a9e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d02cfc-4e8a-4c28-9263-24b4f6e2e012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "275bb316-355a-4b3e-b791-6e11cb99fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54932105-39c9-42a2-b8a9-92395ea31806",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd6e0f-e5be-479d-812b-63af7f1e0e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08899f4a-dbc8-4946-935e-c59a979d35cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b66ca5-4bd1-46ac-a5d0-faa4c5a3254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1975ba9-9d01-4ad0-af41-794f491ad513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2197ff68-b622-41ca-a244-0fd40dbb6c9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41d7a8c-7c0e-4dae-9b5a-625883ffb86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9898fe-3602-4092-823d-78f82e123fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97d6584-b4ce-40d9-b80c-34ada6200e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "947d81d5-f313-40b8-89b1-df959bcb7694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a3e2a1-bf3d-4dd2-b3ef-2092c849eedc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d6f33d-e12f-45f8-9197-14d1851eef81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8452adf9-b1df-4ba1-82f1-9ca8653c83ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23af20ae-b428-4d5c-8014-3828b084b859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "391a7310-3c49-41ba-b051-f0bde1fe97bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f79ed70-fab7-4f7e-b85f-5902faddd612",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df70f071-b982-4f1f-adb4-ac19c1ae8abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90a75fe-a3ff-49d1-9b66-c09fdacc33df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2480cf5-5cc5-4c59-926f-a50faf085973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6341da04-9882-4e4e-bc50-af01add02f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50864f-8835-40c4-b4e0-71f29c822063",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f18c26-b785-4015-9bae-14486e246070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21eb3a6-f2f2-40c8-936c-21a14fa10b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69b5983-1533-4928-868e-e7cf2520c6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96acaee6-35e1-4994-ba99-46da70268494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcffc5b-4b82-4e26-a348-f99c03f3e391",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243be449-491e-4bfa-ae3b-284a9b67f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc8b94c-8e36-4252-9f67-a9ddbcc01a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038394bf-5134-4dff-a6f6-65230270f24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ab5bef-eb99-4f09-bf79-7dafa1c7fb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c90224-3a19-4666-9fbc-2ed47c00a557",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbb6e39-dab9-4db6-b85c-f9c030878d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d3453b-0845-4570-a3cc-830bd24b7b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c95cb5f-428e-4bb2-baf9-7a2872734ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89b4381-49df-45f4-8b4e-da819f7bee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8394b74a-c24b-428d-8fac-af4cbeb0edd9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bde5a22-6150-4d19-a11f-a1aa0bfb09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c372978c-6945-41ba-b0eb-f100f9ad563a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aacf13d-fb50-4e4c-b4bf-9df9655a1be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85635056-fb74-4127-9321-c3ef262bcb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7f7552-d5ab-4330-b2f8-70f909ba7fd6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aa85c5-a079-4d64-a965-bab6f17d221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67646097-437d-44db-a436-9d1bb15dd1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a202159e-7b80-47f7-bd3f-8d028cb2dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60bb0be-c4f0-4544-942e-8cdb94d902c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98267145-30cb-47f1-8832-4e5fae142fde",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33179d1-bdac-4506-82a5-c45100f532fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df64aeee-8240-4695-953e-277aae880b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa96e6-6c1f-4648-929d-5dbf84bf223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "32467496-2eb6-4302-b670-78fa536e451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b4e0aa-9224-4399-8906-877e3f4235a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4eac67-35d4-483e-86ce-ee9c3c45ee53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a68027f-5d19-4f4e-b5e6-8eade21faf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6141ea-f2ce-4e8b-85d9-e5c83f5dddee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24309c89-6f58-42aa-816d-2e7509b40b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d8f9fe-b1bd-4db7-a3d7-07e5eb67eb88",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d46749f-4361-42ff-a24d-b9a45f47f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb764cc-9891-4524-b45b-b4a9ea7ed1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c571d9c-2f16-44d3-8f49-b4016a2266fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b65ead-ed36-4a4e-9b17-d59017c4c752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b729f6-10a8-4035-a73b-dad9b3d66750",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4c78c-a87e-43a7-9bda-4c4be2bc5710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347f593f-e0da-456e-9dc1-52f1865f6291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd687c-55e7-4103-9e2a-64205601d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7030cc-0062-4695-a1fa-668058000dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a367d6-7af1-4709-8cd2-5dcfa5113fff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2bfa07-6510-4661-a218-f17d98bc62d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea12b34-6380-4492-b61d-2b0a4f023bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71884f2f-ce91-4b14-9e18-0a8601c7f3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05062d7-4f7e-402e-a7ab-29e4be574b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f57a65-2bfa-4396-bcd3-cc599be4e6bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe019580-af1a-44a6-a384-c840c5823d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6f1b28-f5ff-4759-9942-d94adaba28d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0abac2-a702-4bd8-ac7c-ae2f99cc6275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f632bc9-056b-49b9-a062-d5d2844b1998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f44f6d3-2423-40b3-bad0-a2a3e29126f8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73be708-9fa8-4f22-97c5-6781a0d02938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e604cc2-41ba-43bf-bdef-621ac1016615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d98d12-6e52-4de7-aecf-66611ce01b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ce24d3-eb34-4692-ae75-4f16a21ee149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473c9661-26b3-4bb4-848f-8b8630004f6f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce39f917-432c-42ab-815c-92e4c3e40253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c4e65-1807-414f-97d4-a030fe776bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d28026-e62a-4221-abc3-a463e399bbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07602f0d-5d94-4d93-9103-c339da765124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd0985e-81b1-4196-bb61-b363b514ee50",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6010bb-1b33-4fc3-aeab-9b7e8d95ac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43df6d05-f0c5-4348-b38e-548f04bbf11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4285fe1-93fd-4461-ab1b-916b2f135ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92997c09-bab1-4d97-a9f3-a2c6b5d9a97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a5b2bb-f220-485b-9dec-a038de7ce74c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef95b95-0ec5-4347-bbd1-242a8d659536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db4c1ca-5dcb-4a57-8ef0-d236c1e9aa00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049ca2c0-7ec8-4a1a-a028-39824e171608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29b9005-b950-43fe-96a0-6784d58273ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25243b1-bc48-4038-973c-1a07ff82978b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6359489-d8df-4bd8-9184-4230c44171b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015c6802-2457-4d8c-9073-9641cb9e4dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e40ea3-58fc-4c4a-b5eb-ad9f5572cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78772f6a-6096-4944-afc4-8df7a0ba8272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96045662-9ab4-4919-8da3-b867a5e28fb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f97cbcd-c7b0-4948-a72e-40b3412893fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865d6f6f-ab07-430a-bf85-14a330803fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746b6ba3-62a8-4af0-b19c-1d400c4156ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3176a328-2f36-4ec7-97a5-bd5d00e5de21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac71b80-5002-4d89-acea-701cadc7702c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe23a74-cc65-41e3-948a-2b2b412bb330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a907490c-7d51-46ee-8278-695987153b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db6c15f-8b47-48cc-94ba-0862bc432769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5688e52d-c384-4235-abb0-eefe3e19e194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94afc99e-8b40-4ffb-a0b9-f926376f98c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0871d918-f16a-4d6d-b70b-65817a4e21f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b556c8b2-625e-4f67-a079-b01561bd2275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ce5931-8d16-4cd3-bfc6-94cbe39699d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d17d681-3202-40e6-842b-83a13ba4341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f09c4-b79a-4089-8652-4faf4bfdf8fa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a0ae62-5eb8-4e79-a310-ee8a01cfc5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aaf459-fd33-437f-a55c-7de0c53f9528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118b86ac-0302-4284-bcf6-284b1c1ab087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab35179a-ca69-4fb4-8933-e21b88c86e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021ebeb0-6cc1-432b-bcf5-9665a4ead44f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8945c3a8-47c1-42f9-9e7f-6e946b8923e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007a6a99-b374-4a80-927e-67413e56ee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eded9ac0-f609-4ecc-a45b-c1825673ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f920bf8-42ff-4db3-9f1d-13b205c9312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd51886-b338-40b3-a241-d1b34f3c76e1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54efe345-de73-49c3-9255-13b7ff3dcba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f540d8d8-1d4d-4fa3-b71e-572e4c73deab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21dad77-1254-4c38-9bb6-f51006ce1f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c11b761-8a10-41ad-8fb0-c185afe71674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb3682d-c9f3-4592-8a04-09f893299079",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4e604a-d1a7-4952-9e93-14ce14ff01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c888db3-273b-4a34-a767-7955829e5060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874de38-821a-412a-a10e-19bd84078560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c006e5-952b-4ec7-b6ff-026a6ef4fa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30c1db5-53bc-4d88-84af-095fc69ff295",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f112d6-57c1-4709-baea-419b845612a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c1b55a-3da2-40d3-83d9-425b5066afe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88c99f0-8554-436d-b2c1-d066b255850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a52ae2-88fe-4bfe-9c68-86f0f894f5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435ceb95-a265-403b-bc0d-4663eb7b18db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017e46c-990a-419a-adcd-5c232551108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f3f2aa-8eb2-44aa-aec9-9923eebb8f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7025a8-96b4-41d6-afc2-ee80507cca29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7819a283-cfbe-4fcb-9cb8-188238639a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a7a19e-1341-4921-b0e1-d1658913c4f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af07bfd-6732-46af-90bf-d082adec911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2e408a-9717-46b7-8ec0-0042484e12da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd51906f-62f5-43d0-90f6-2957a495d6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7cf185-07ca-4257-aed4-84dd87c0f16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fb9343-63e6-4a33-b93c-95d5268c1ad2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a29477f-69fe-4322-9474-cff8d6ddaa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b10416-d561-41c9-8caf-94a4d3eeb8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e430174a-8bfa-4cf8-a331-09c6a35011fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df3e7a24-d633-4d13-bd88-3845563a7c27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b51decfc-2b3a-4bc2-975a-617c2d8b817b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6198e461-9cf2-4802-97ca-3484fe52a3f0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a44f1c1-98c4-4327-a4da-7913a64e920b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9085f4e8-a16f-47e5-8fe4-2b1562bfe927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81b1434-e2b7-4a66-9f27-cd946af4c7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d284e294-ff6d-4920-b51b-dbf2a1d0bfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f249be9-f79b-4b55-8873-73cb2b01ee56",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5926567d-0f36-4633-b3b4-6c0f828cbea6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7335aa58-53c0-4cea-86fa-ed45003eb6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6389b2d9-61c1-4cc3-b894-72f68660ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9775acd6-7318-41de-8056-d53812a50bb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1f677bd-018d-4d25-a836-10b3cc0f185e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bf5c5fe-d425-40cb-a8af-0ecf2d8e1678"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1fa3ee3-1134-41c4-b2ef-e8eefc55765d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6aab2bf-e3e1-483e-9f15-f93e7ead2787"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beb1fe83-f88e-4653-adc9-6e6ffdefa5bf",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31163a7b-cc25-4c06-96c7-029656b9925e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34272752-3ec7-4d16-a2c8-7d91af02334f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b4d6ca0-cfc4-4dba-b70b-43f38e7916db"
            }
          }
        ]
      },
      {
        "id": "190cd6b7-2cc4-4d68-a50f-e73abd9d8253",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6073b044-0e89-41e3-b7e6-2c4f5c6c7f75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa9a087c-417b-4794-ac0a-b7fbf261979d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18b2d9a3-2c3e-4393-89bd-2c2e091589eb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b2593-0a80-4157-a0a6-4cbd76f0489d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea9f8b3-d071-422c-807a-cb8847a43a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993fb325-408d-4c30-ab01-b9bdb84a1e07",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb322ef-9236-4743-9d52-874d22c3ce45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6643bb-44fb-4219-a317-f4ad52b61365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2394fefe-d70a-4e22-95a2-e2852097dc2f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373ddfb8-0b4c-4912-ae73-d40775f5d598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3613c943-8ad3-46e7-b8bf-a3fa9d2bac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f4cc3d-28a6-48ee-823e-85ca3e26e958",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4c320-a7e1-42c5-adb6-a9f095ccd4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcf6eb0-85ee-4464-9c53-4f3cdb5ff6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be272b82-8d93-4e0c-87cc-8ceaa2bbe24e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df63ff0-e7c4-4fb1-8dc7-bc3f3ee4a98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac75b4f-b017-4787-9c9d-8b136b31ced1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0e8eae-80f3-49ad-9d3d-91cb95ce0613",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c500a1d-7fc5-4a0a-be6c-396ec887522f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc2489b-16d7-4696-952e-ba14d9b41f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8837fa6f-2840-4657-97f0-52260ae568c7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab6ed5f-b6cb-46c6-add7-86801de8d7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594bcd8d-9a69-4ed1-8ee8-9868ecdb7497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be358a4-27e6-4619-893b-80e814d0c335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1e745-f85c-4808-91b1-3587967bb489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88db698e-a055-4517-876c-ac82d284a6ba",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ca7a57-9769-4b88-85e9-751bea0de725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d26fd04-7345-42c5-881d-311e2db8b2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe996a45-3d8b-4f30-af4b-379e2c7caaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f04bc4-ba6d-46c0-bde6-b8fd53e0e8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee01364-f9c3-45bc-be8d-bdd78f796740",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3304b48-f114-4c37-9ccc-698a309a3325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39dba86-8c45-4ef5-b5c0-58731e564d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a47a32-ac6a-4dea-a1ba-33ceeba236de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741f8fff-7ecd-453f-8973-fd6487f07e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1e6c79-4ee3-4319-b360-cbc23f79190b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0508d4-563c-446f-811e-07456e47b199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52551a79-fc59-4816-9127-8fa7fd15b31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4b364f-b6a1-4c5d-a610-5d7e972eaed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ceda39-4bf5-4ea0-98b8-f226ac0efb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854146b-56fe-4ff1-bf49-4d5c80f7809c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee21a826-e1bc-4f90-afc8-c8f9d891f8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192c4042-ff68-4c3a-93a8-234a8cfda7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618eeb6e-d103-4a5c-bf9e-4b461202c852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a8908a-167e-4e94-b0d1-97778f67598c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e8d6e-2325-4fa9-b57a-30d2f2ef325d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1418e19-33ac-4e4e-a8f1-1c5e70d2dc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316ae4ae-5bd8-4b78-b337-b9d00026e512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c447d-27a0-4f64-b756-6cd9386404ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b0363a-ddfe-4533-9cdc-20d12efea92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c613f8-93eb-48f4-8650-7388af5bf97c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449cc1c-4f18-40de-8889-a9358c93cf42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535dee87-7392-43e1-866d-8c57cf53485b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4096ac1f-262e-4e7e-99b1-6cb09c0297f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3808ac-d17a-4aa1-b80b-14c7205a3fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79598da-89ca-473c-8a95-1b7d1177dc3e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddc0f52-d780-4804-86de-16b48c5f24e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f788991-002e-4246-b138-49c790f3a48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28540461-0bc3-412c-bf81-ae9e6787ae2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d814f85a-15e3-41f8-8e1c-cd123cb2391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280b4d92-6d9a-4a9f-84cc-1ac8e3662ae9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bfa5c9-ac8f-4736-a575-0f3f0cf75d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4922a8a1-21c0-4f2a-ad63-f10e6229643c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b043f916-76b1-45ca-bc17-4f1a7e3a31c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77872d8e-da34-487f-ab80-eff53949dcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a06bd1-b786-4108-b577-cc8bc17aaa8d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c992997f-0d5c-4a77-8047-f0ac8ed8bd19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a033aae6-0437-4d54-b2fb-e1dceb4c72c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfb91bd-6e3e-4d78-81c4-c79e978870a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f1b19c-53e7-47e8-9352-7fabfa314d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df38b3d2-c473-4f9f-954c-8f5c9894a7aa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf83f2cb-cdf3-4cf2-b7f3-1143dde246df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f839cdb-ca5a-4b0e-9fc0-18141f3ee4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36655bd7-41f8-4211-98a2-2009978028ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598ed0af-9c35-4833-92ea-9985b3315101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f161a6-682a-45b3-a552-9d1d269da21b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52616e1-8d9d-4668-a13b-0b6bbca6b458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7efd8f-b61d-4775-8f6c-98bf04bfcb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c455a02-26c0-407c-8e7c-68f2b0124ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a50adb8-ca03-4cda-930a-4d710baefb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aaf3f4-f1d3-4d17-bf80-2d10cdcd48b5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde4dae-bada-48a6-a394-3c2b8dd55f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d85440-6546-4b0d-b485-13304cb01bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b344ed2-0ae7-413b-96e0-a1c5d6cb0b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc1d700-575d-49be-94bd-c0281b684a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9453f3d8-b1ae-4948-b93e-c13ace60d1e0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae809cc-b13c-4a3a-b5ef-59d6f438b418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7c89ab-e0f2-460c-bf2b-58066d607e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cf0ee8-ca5b-4e9f-ac14-cf689a160874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2258f411-865f-4555-8b02-dc3008075d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca20c2cd-c309-445b-95b1-475338d44874",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523d4ec1-ea92-4404-a925-56ef7c6ecd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45210b73-bb2a-4a10-9f18-86862c31a01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995c429-aa79-4c9b-a66b-f5eecd41e2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e494cf7c-e3f3-418d-b298-a2e514b27321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3049eee-c513-45ba-94de-f26470bacbdb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382b98c5-86c0-4080-835f-c3a2852836a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c6f3fe-9de0-4073-b005-94fa885fbc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee7518-8ddd-4b0f-86fd-47a1c41f00a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a3a8a3-8a4a-418d-81e4-6fedc655b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac0332a-3e10-44cc-b452-eeeb74721745",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4915297-6957-411c-aa5a-5e1900708ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3030eb58-411b-4a1e-8c43-3172007990a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39e3538-4c82-4f76-9ae0-1f31c6f90f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5844e71e-dfb4-4609-a8ed-3f5d7523283e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9452fb69-ad6c-4e95-9823-d694286c6d92",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10722ba5-9abe-42c6-bac9-ebd42adb7291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b652d654-2af6-4026-8c36-d3132af2fc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8042d3-b9a2-4845-a444-65a4587b6d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6598dd-b986-4173-8c89-f3104499eb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6536e8-5ac7-4924-9459-3be69811dc7e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf6209-4cb1-4f89-b005-c2286b52a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11aa41c4-3b99-4c21-9fe8-ea2f05803fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e57750-55f5-4c28-bd35-93606a9336ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230c20dd-356b-4081-8bde-3c8d8149a20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db59b9d5-7e90-441e-b607-e0ca25decc1f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b422e7-890d-4a40-9d88-2aae3339538d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2fc2a0-a549-4535-933a-1ba9b14b1ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd4c18c-879e-429d-a461-560218909097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fee6034-fb30-45a8-946a-bd3c0fabba7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbdf5f3-7762-4351-84c5-07f4cebd1408",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0ea94b-63c1-47ca-ad43-677815cb097a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2734006e-355a-4829-939d-84ddc9879b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3970d-ced4-4c5a-b00b-e3ac4521c820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1432d8-1d4e-43fc-8c26-8287b46e2d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eecb73-eca4-4736-82d0-c62af02406e0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d8f1c4-e667-422e-be45-ac8239820c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35fcfe5-8f8e-407c-884b-d8063fe820d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8bf36-8391-4e7e-814b-fdd4117bd6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b4a230-c8f3-43b6-8563-4bb89e048075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e09f2a-db02-4553-be1b-ae6e583ee839",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357871cb-b225-424c-af7c-7c5ab12b5453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa01b17a-d1f9-49dc-afb7-97eacd81ff53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426a96e0-92d7-4c05-a810-2c6fad4723e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960c1f36-629f-46b3-8daf-71dc26a3619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06f51b7-2552-4b9a-a7f5-9a3b148e2f67",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58507bc2-2bf6-40c0-be2c-db737e851967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48179d4e-630f-409c-8b12-19cec84ec3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca0d70e-db7e-4e07-adbc-6414be879843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b042c3c-8356-44af-a882-404efbb2a13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2bc86-5c21-43db-ae78-06ea9812c8c8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b4876f-e4ea-4ac0-b852-6efda2a44db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d99bb4-a255-4e0d-80d4-b2c72ce86b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db11f75-dcd4-4249-a51d-09a71d3694a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0648e17f-8206-4059-9d01-bccddf9dc1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857ff4c7-839f-498e-a3e0-f87461237ff5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26368b0-96ee-4e5f-834b-b9b7f6e5dd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3910092-98cd-433e-90f0-f3e1157fb567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e80ef81-1ff1-4002-90fe-79c23df777a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118645fa-9667-4e1f-be53-4443ea92e3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8f040c-9251-4ac5-b94f-f045f5340417",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e017cf-f43d-45d5-b4d7-98b5f7c49418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187aeeb8-9319-48c5-af52-e6cf26cea0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88425c8-62df-4e97-8f72-629a4fd74a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88773b83-7841-47b4-b85f-f05f06e83cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768eb2d2-aa6b-4564-b657-90055624fca2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f0bef4-9b74-48dd-a763-279d1f7b5608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07412ca-18a1-414f-af88-aea89653ba02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7d1ec4-c8ac-471b-9fca-315a6190e929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac4eeb4-5555-40ce-af15-b2b7eec11438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda8205d-1e82-46a7-9ac2-83e32a21d953",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910c4eb8-2666-4726-a616-6c22659ba06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcfad4b-c0ee-4ae4-b660-0915e7a09120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8343d5c-5de0-45e7-8fc9-da12bb8ab5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2540006-2c87-4eb5-a097-06204cceef80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db49e244-9034-4302-ac90-1779a8be99fe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66ab499-3d3f-4b5c-92d2-f1d2504dfb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5e2b57-00ff-4469-8113-64c871f19c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b92564-d3dc-4992-a467-945b0e6673be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9a40f7-db27-4c9e-9122-2e2f1847ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b0508a-127c-4a78-a48a-8de84eedd565",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f3dda5-a2e7-4f76-a1ce-f28f90db78eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf20c703-f19f-44b1-9087-545699231cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0831c51e-fd9c-43e1-8765-580804ba4f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744e1826-cbda-4d3f-8722-c083d8b48092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9e6071-c98c-4373-a103-38a76f69c44a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c65a5-0cdb-463c-87fe-4b889897fa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0a2c4c-10f2-40f6-888d-8b8e8f7db8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6303fe-ecdb-4cf4-9522-ea51c65f1d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e734327-62d5-4141-b470-5fb9bb4a03be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1880c87c-a797-4321-903e-ba5c070570d3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5434eb46-b243-45ce-8ecb-4cf0ac5479d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8578503-9138-427e-b251-f49287f8a89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf3996-feec-416a-929a-729dc3410bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce04c92-cc95-428b-baed-79d98fa0949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfde2a5c-8dbd-417e-b4bd-3ddb58ca117f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a412c78-fa31-4b0b-9c96-d67afed5a32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d4302e-4299-4ce2-9701-55b0687940b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64bfce8-c2db-4bfc-8fc3-50968510c0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f7a48b-639c-4f81-9a6b-5fbda189d7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d4f699-3fee-41d3-bf1e-3d4d8fe954dc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5992bb4-9825-45ae-9b1d-6d8fd172d32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a128b6d2-b50e-4bff-ac81-cb5c568a31b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64063c3-2d3b-42e6-8c78-ba83ebff848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176dd9a4-7bf3-46da-86cd-8571bc45fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d006f98b-4ba7-4195-9fda-b780719feca5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c54a3a-73d9-4d00-8aab-848442789164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4907b54d-4254-403a-a218-2dc77e6b13d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566baa85-6363-43dc-bb34-b5fa440072a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f0105d-4f49-4dea-8b5b-f08d4e489c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b48392-282e-40ba-b103-4b4fe8b2199d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33852e8e-6edd-4ea8-9bc9-29d506b8a172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7e6e08-e377-4569-b7c0-0b133fa1fdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2debed2c-512a-41e5-828f-2f1b3e28a375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d304a-fabd-41df-ac2f-f2a0f0501893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c246544-9c2b-4618-8440-bad0bc2cbcb0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5346fbe-428c-4f28-846c-3b9ae986d034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcd5add-043f-4141-b2ce-26ab47050bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69869988-fadf-482b-a2ab-8172948f7890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47cd5c4-b3ae-4223-a3c0-6af6713a13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae58d32f-d940-48fa-b13c-227947439aca",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8452caf-5799-4a3b-97f2-1165a6c4a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9047c1-4a29-47fb-ae85-c62017fcfccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03ee456-1f3a-49a6-beee-1c521665ee9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4828a79c-bb4e-41fe-ba29-841d748bb4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f8a13a-7bb4-412d-a9e9-d80f29d84f78",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e713a9f-68ae-433f-95a0-61fa03469efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdc08b6-0fb7-4db2-af39-40471ad8a6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5739ad29-7ff3-49cb-9329-e558b2f0276b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a287d7-aa58-483b-a80c-e91762668fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889429c0-f7b8-4c09-9d6d-06af891d7763",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06d56d6-e0e1-4d01-96a3-8313b0edc3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf20376-c00f-4784-8dd7-d03e88c7dd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2d1ebf-9543-4c7a-93bd-21355d0f3257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb0f9f6-8f13-4cc8-bc10-d085a3d3cec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48dea52-f2a8-4781-a105-37ef128b9906",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f93e497-7921-4cb1-a746-bd8433700e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26090d2d-9c01-4df1-bf70-1f1b96c90011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b12472-9906-4bb9-b09f-841fbee35cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7f872f-0549-476a-bd9e-549bb824c5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f9259-6c4e-4bcf-a8dd-e5bdbc098f28",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6477a6-0ead-4c87-a904-d8e343e398ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9907bc-78b0-4682-b558-13b533984d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17a909-a09e-43fc-90e7-55aab939c5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f05c4a-2b79-4074-9a43-00d0cefb2feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678778ea-5c4f-4221-81d6-4e7dfb4673d5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bb1b14-9927-4e5b-b90a-2dba36ff0b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4064a686-de5f-494e-af83-bb3ee12ae3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b9a6ea-1846-4203-b975-83702199ad57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083be592-da26-427f-8913-7d49384990f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f002c31c-24c9-4338-820c-8ccab1129ae9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685bd290-031a-4fe1-801b-fa7d97be1223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71093b7-ded7-4e4a-98c5-21d72ee4add7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d99f72-2a47-4041-8bea-4212f26f917a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c671f45-a998-4d37-be7e-e58371b81d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcc4b40-5335-4ede-b0a3-29e3d4b542c6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bbb025-2e12-495e-a49e-e8e5a93c7278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e398165d-15a4-4baf-82da-ea3da56544c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfa262f-b0b1-4f90-aa62-407ef2712bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144d0fa0-b19d-41c3-8b2f-e5be38d8cd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa524218-7e4c-42bb-b876-1291146172f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63ebae3-7c35-479c-9113-c87de40e4a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e154c-64f6-497e-b5a1-6854f870abb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e399c5e7-473f-4f7e-aa4d-9e0a1a67f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68726f3-90bb-4700-be3c-bb53ced912e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d91538c-2f5e-41a5-a383-0510af0b8eb2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f3012f-d829-46c9-8df4-c9f47729f998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7aff529-00c1-4a8d-a2f1-d45bbede45ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1506bbfd-5d63-4b8b-9eb1-9b934e205383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208a026d-bdee-4910-a200-291e772254e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae54150-2561-4737-8f3f-e7a1296e2f92",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb91677-0056-436b-8cb8-1856b2b8a58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b96aa47-e89e-4167-8c7c-14de716cd063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd4cdcf-2dd1-450e-a887-748e95140eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194bff79-bb38-4f00-9513-f2949043618e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac4ce9-3495-4254-9c6c-a5b9fce1890d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b7c611-7553-44dc-b8b9-b160a4f5df67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad9490c-4c06-49c5-a5f1-101133ae0e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465294e3-64bd-4372-aa22-1faf5f900ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cbb189-29fc-427f-9c95-f2a856fb7f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8a35b6-9aff-4fd8-ba91-45a3ab069f15",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758babde-1dd3-44f5-8b71-87e41c08bfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad995e-2169-4a02-975d-78602aec2abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2af5a-66bf-4947-86f2-5781120b3451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1be68a-884d-4b9f-9338-5f13efcfcd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45fba04-a7be-4994-8ab6-48edf1add559",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf86d014-360a-421d-8427-d7d20203b100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7314f1a-7e17-49cc-ab05-b32fc4573a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565a2af1-24bf-4018-bcb5-fa7cae589e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648f2b96-72ea-4a43-b0e0-f1ec7504e69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db885eec-5b0f-42fb-97aa-1e9c2f328f29",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a75f47e-f8e3-4cb0-8982-46ef3bb118d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4496cf6-70c6-4621-a7a4-0bdef2d84f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea539e6a-f91e-4a4b-ae34-8560c0dbd8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb4938a-bfaf-4117-b385-5740d16af8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50412208-66ba-415a-a9fb-f9624775b88e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4466dedd-da67-4542-a113-57b01837c167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c9e2de-f215-4792-8c38-ac6b4aecb0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a48269-cce9-4525-ae11-4f6690cdffd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bba720-972b-4aa6-91a2-0baaea57930a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124bb24f-876f-4100-9c45-e0b928e37b7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4e07f3-6b7a-43d7-8c13-49e57ce743ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e682a81-1fbf-4370-a453-570052822b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6687004-7fe2-457e-a7b1-d4430ec7aab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98e835b-6f33-4553-ad5a-2619f8fc3870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65706544-3b3f-4663-a5d6-e49c7c4fea6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe0986f-9552-4dc9-a6d8-672e09dc650d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19745866-8bbf-48d2-9029-ee976b118c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29773cb2-4740-4404-b074-bf6747331bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dce14d1-faf5-4f03-a48f-8ce763f5cbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa5b19-2555-4bb7-886c-27e03d79649c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75f5662-592e-4b43-8f50-e7ba7c75a72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0023d4e-1418-471f-bd0f-da0e5e5f2d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a89d58-e456-45c5-a852-ead9b8d2c4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17ec287-52dd-483d-ab93-f1c099484500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e5e02a-af3b-46b6-a414-4ee1e719c833",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c51c8-da83-4c76-a5e8-c1b7f51d7fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f25502e-afcb-4786-b9f9-bef7baa99cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853fb5b-d824-435a-a221-c4cccf6a194d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bafda04-3076-41c4-bda2-e0540f2f1e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114d162b-39c7-4e52-930f-232744f6117d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faab6470-a179-4e67-873d-32556d0cfae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7a4b6a-fc71-4afb-96bb-9538ab81cf53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc83354-9780-40fc-9083-804f821d9034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd7d651-1852-4af1-927c-f35495517a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa958dc8-ce49-4151-8906-259d60fcff88",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbae0f2-19ec-48f2-be03-2eebc2e9869d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2322aeb2-04d5-48f7-80ca-52df00f1dddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc91489e-edd4-48da-9836-271d91ffab48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ab8704-ab1d-4016-8cc2-575da4475535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2dde6f-9b6d-4c30-9b5e-a673f34b6673",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4a1d6f-33fd-4141-9599-e9cc33fe667a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4374d98-14a2-4203-91cb-d143155858ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff548c-5dc8-4089-8c0d-2369338ac458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb83777-6034-47d8-9674-09ec81d37702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b96d0b-71f2-4d6a-850f-17ad4ebe0c58",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85006ed3-3e4d-4b8d-9cd3-8978b5bc10f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae0736-cefe-4bed-8953-100ad4d0a636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428c9989-6483-4a7c-9100-e83a5765d949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a8925a-7f26-4250-856e-109a4e34e7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3a456b-75ba-47ad-b150-3493d5a6c0ca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1685f39-0484-4bd9-b03a-1e3c46e0b454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102f4050-9b6f-4cad-933d-fec375aa824b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f63ebb7-228a-4ec0-b61e-a58f10efc190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cd8cac-be92-4bd0-8f99-5197386fbba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261f9026-7b7d-4492-ba0c-fabc14d63a6c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953e9ee1-8a48-4c68-a0b2-de066df3eda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4f6e6a-7a8c-4528-a98f-cc6249f1eee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f826d312-3807-4e99-aacd-213515f75a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7523caa4-7a47-45d7-b08a-e96c1b5c6d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445664e-b37a-43ef-a3fe-a474e1948e3d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5917e1e-c9aa-4828-ab85-6059c2c1fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe1eea3-4639-4796-b518-5220e7ebae06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc68dd-81c8-4dc6-8d6c-7ca0b7dcf7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e279393-0df1-4225-a613-148e194df3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c079e850-527d-4a0c-b235-5c968a06822f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6800e084-1553-42f9-984a-2bf0a1bc6453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f636992-e1a1-413b-8e52-06efad9fccfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31050b1a-8560-462d-85c2-2a4d91d7af19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fd217f-8334-47c5-afbe-cff09efac1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fae9f9-b151-4595-bd43-a551c962baed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7ea1ca-49e7-4c86-b1dd-592731e0c9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55808636-0892-499d-9492-85b8ddc71509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27507d11-6204-408c-97fd-09040d71a41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b56e7a-788b-41e7-9af6-40da6f3337a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8de974-4e71-49a3-9a35-fc8c9d994f37",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4b7db5-dddf-4692-9993-867b0405f3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3de96b-9923-427b-bdad-35fb8680c5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f065a52f-5144-4899-b9b0-ee08bb855c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e5e606-ac92-479e-bf52-d16e6d9cd39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d848057b-a790-46d8-9e30-4de994bbbb7a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92367f85-a568-4ba7-a059-427471295e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a2b91e-9308-4a4b-aac1-ab9359f18306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f02e82-8336-43e3-8723-25eace172b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a195ff-f602-4b64-979b-a3cd4958f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5dff47-9ad6-43a7-8ade-9310c032ec98",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb014e6-740a-4961-a68a-19f5daa5d143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b9b4b2-305b-4eb6-961a-87d7d2b3755a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d70299-960b-4115-ae4d-e3d886954bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c67ac3-9412-496c-ab3d-85e4bca46c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b006a-9026-44a3-9e44-4ed3d3343358",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256e23aa-b60d-41ff-a3ef-badf21c1ae8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cdcad0-17f9-442d-a92d-c35bd68a3986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8417b01-7de9-4557-a780-d2d95ab62f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7ee67d-7bd7-4732-bd0e-ae11dced5fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55a1f99-6bc9-47c4-a016-d2db71cbd0e7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76dc90a-c2ae-4cda-bdcb-a52e352e5d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ccbe4d-3cc8-4108-88fa-c14da65cf0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14247075-0933-4eb4-94ea-3240bf49b11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ce96ad-f0be-45ce-946a-71009ac04c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e596952c-d04b-46e5-8160-32edf0e06fd3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391010b7-9347-4959-97da-ad20ecfea5af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3c69a0-bbde-4847-ba54-35c3c00155d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722fa554-bb12-4479-8f20-71749fdfa1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a08ff23-22c6-4ca2-91ab-4b6db0e6af48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93938f9b-ed35-4117-94d8-d3ffff806618",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfdfdaa-67d8-4a52-9b01-8dcadbadc1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c8f184-6dab-4087-8176-f0c77298893f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b461fbcd-6a5e-4f83-b9c3-8a48f7e1faec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bdfdd8-05ce-4268-be7f-230bbf9bd25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064491c1-053a-4152-8b2b-01980220ebdf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b262f-b3fd-4718-8871-739e7bdbbe3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29549d13-1dd7-4dfb-9208-533ca07a3417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a2c99-d70b-4883-a394-a4d5191fd0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fdde82-97c4-480e-9799-17e209e73378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7e00d1-f0b6-442f-81c4-b2f823aa8b7b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fdfb16-7386-4802-8b1c-4ccb573544fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180c4650-d538-4224-b3f1-e67e701bbe6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbaac6f-8580-467b-b0f6-2bab8150d19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae4644f-7c4f-47b2-9414-936df151088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece94684-e2bf-4134-9fc1-f5b5138233d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a72890a-d4e3-43cc-9ef6-9f404588148c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5e2e12-c9c0-4021-99d5-4423e7813ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f070efba-4b87-429c-ba5d-81a0d959cb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f5594e-080f-4d64-a0d3-c3fb6125b92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c29c07-b534-4b8d-b653-5936be2314e3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fa16aa-0eb5-41db-be95-5e65938cdfd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2f9b84-2c2f-4b3f-8dc0-2fdddda42fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f07a6d-5529-497b-92f7-4d16ae448229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb6cbf1-5ab5-4f19-abef-ffe6dbe14a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00d7ee2-62d7-4fbb-a346-6ba9a438625b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15f848-808f-4df4-8a09-c33ebef0d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5935db28-60ff-4880-8d53-bb79d4ea163a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292d9539-3927-46f9-be72-eec85829662f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0806f9fb-1d87-4d0c-9941-3a6c33d1e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0d3b5b-7bb7-46f8-b638-0ba7ea146850",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a942530-41f6-4e1f-9e84-641b7fac10c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9903650-d0df-442f-8bbf-bc196d253481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85791fb4-907d-4a4a-bb1a-af8542de40da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b67e917-a36d-422c-bb10-c801e53818a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61341bc-cace-4172-8b99-2f95fcaa3e52",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed1d596-40c2-434c-a859-c8b964032eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a4a7fe-f234-4780-af7f-3b32c4fdf9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e453625-6f62-4f07-ac5e-52be43fe4fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2ca896-7553-42c6-886b-b7f6b32beb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def121ab-eced-4919-bddb-2bc4f919c438",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efefe8aa-b2b0-4bc1-bb93-1d9a0445864d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65015631-4ea9-4363-97c3-bddca2ef2386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc27466-d333-43b8-bbb3-ac655228c624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a53dcb-8dc5-494e-9add-fbc6dc48e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dadb68-54a3-4027-9bb2-bbe05f88974a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fbb926-daf4-43d4-a043-9c990e565f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e77fa5c-e269-4f6b-af25-689a8b0147fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14822bd-2700-48ca-a17d-3af0b5ba1724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12d3bf0-45fc-41d0-b16f-8f8b947da905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4cd445-1218-41f6-aeb7-783e8b243b58",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af82caa-a3eb-4cd0-afd5-b79d4555d76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4f094a-9e9c-43be-94d9-0b9010207ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f020d1-dc0a-420d-8c43-b1ac7a9ed9e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053fedea-e3b0-40b4-a7b5-aa62ea9535e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8361cf28-aa6c-45b8-87da-474508b5075f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ed0e1-008c-44cd-a717-ea103365fe96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801514d6-8aea-4659-bdee-c48d28ea8fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230b1b23-4038-4a07-84bf-6dddaf244d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a31713b-ca37-411b-86f6-a35333a3e0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580dbf28-35ea-48e4-925b-84805d0879a5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a2ceb0-8f7d-4327-a60e-9a30dc601ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef81ead4-86ae-451f-aa70-ab139026fcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dbafac-3467-4c8d-be1d-3ce0c8dea7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582b8530-8e24-476d-8c15-6cd69fa59915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092a7a32-5191-4f00-92e0-816cf453e35e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7797b607-87db-4db4-9147-b1a6b691dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff539ce-019b-4407-82be-171c2325ffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a460087-e233-4581-a862-a98adb24d554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6b09a5-3fa8-4dd2-b7c7-af8f8ffe8799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd518c65-b8a9-4167-936a-0f5753956234",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dcd81b-23d1-40ec-92bc-a4681040cb1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4ed35a-e60d-415b-ae90-f5bfd5f2ef8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa4888e-3201-49da-8f87-85f675911aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c69d964-8575-48d4-8559-8997cff939f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79286946-a342-4cc5-94cc-2e58722180dc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74341ddf-eb70-488a-8915-b2368c2d45b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c37314-991a-41e5-9b2a-aa585877ba46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80a5dc-5a79-4cb3-8089-26471a38587f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1e1a3d-c4e3-470b-ba4a-afc44823af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574ef68b-2095-46a3-becd-97e4fe42526f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0c0421-3ec2-440a-9dd5-6130cc14eec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a6cb3b-7aa2-4e09-a777-caeb2774251c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007706e6-6461-4a8f-a18a-4d3541d55091",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc28c0d-2098-4eeb-a171-cdfae43846c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c47f52-deb3-4974-9d5b-ae08ef0e651d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3583fc-1bd2-4451-80f7-217165f3b0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414b853a-c12d-4599-94ea-7c19ffe62a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ce72d-cf6d-4d8c-abfd-227c7bea34d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bece5cb-1b0d-4df1-ad29-1b0c9767fc49"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0b823e8-c98b-4fe8-8dc9-7d795a781839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "482a9b2d-0c9e-4a3f-8f57-a02fe2f194c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48ce4b72-c5c3-445b-9aaf-d3cb6b67d016",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a3e8719-a055-4401-9f5e-72cb3857ce6e"
                    }
                  }
                ]
              },
              {
                "id": "464ca7b6-d4f7-4dc7-b8fd-1b1a90b52805",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e807b861-a68e-4cbb-a551-f33191c8f8e2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b2c53d-b870-4baf-adec-3d4c55684ad0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30025f33-1ca6-4f34-84bc-78d8a2698ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf574e4-21f6-4b14-9d87-479e317107bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5713cb5c-b575-433c-9cf8-49d0fa768adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4734f7c7-e51a-4b9d-9d46-8cb9c0ce4f55",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf93cca4-784e-4f47-9c63-045094a9dc74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48f93e1d-5abb-43b7-aba8-167d9f62c7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eec96cb-8c5f-493f-9be6-b89a16e1045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6319d03-02d7-4bcb-a730-3e5b742a2de9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbc4593-4945-4cd0-89e3-54b27579c994",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edc574d0-42d8-4d4a-9657-91fc04ab704e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "009b4a1c-5035-4cc8-9e95-ed5862767c75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72b5483a-f31e-445d-b5d6-8d3be1b21520"
                    }
                  }
                ]
              },
              {
                "id": "5e7abe7c-51d9-414e-b8cc-bb34f4b2c2b7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b3712da5-857a-4932-895b-79b81c20fed7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f564c6-7f40-4c69-840a-1f5d1a8e5c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0f4eb181-170c-4d1c-8921-665fb61bfb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ea5556-4845-49cd-a579-7d94fa3c6161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ab9265-2f89-4242-88a7-ded107b94bef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d59b5e8b-1d39-49c3-b76b-689fb1f3a4cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d45e300b-9efa-4977-928a-aba5d206d738",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "272c70e1-80d2-4ad6-8702-7f90fdb8ab38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "608565f3-18ae-43e8-8565-4136ef8c26d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b75bdfd2-0fca-4302-b025-0d9eaf153bfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aab3ba8d-37fd-4351-9657-d0a671b0481e"
                    }
                  }
                ]
              },
              {
                "id": "789d6f59-89ae-43dc-b1df-d50abe21609e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2669980a-cfb0-4b19-8d13-99595f410a61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c1599e9-de28-45d2-a2a2-e2cef7778f69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbca3a5f-fd27-4691-9f7e-972bd3c90889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6524ed7-ec22-4eae-aad9-d7362e8eb01f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe09dbc4-a05a-4f1b-9851-e2f9c5f7c4d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ff5f662-d571-4683-9288-538f26d5cb75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62ee6da4-b47d-472b-9c2d-5381a9069fac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf89604d-438b-4d97-a8a0-ff41440ba42f"
            }
          }
        ]
      },
      {
        "id": "e720d003-9318-449c-a635-a99b5fc0c732",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "70492bf8-6562-48b0-b405-fb3131138323",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66548ed0-17ff-4a60-91eb-ab2cacac3f2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d98d155-c721-4ff2-b8b4-897a99bfb53b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "65cac89e-d4c2-4f73-b021-d5183421b170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd1a211-d342-480e-b435-94644a6fa54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "935dd6a9-5937-42ef-94fb-030329370f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e8b900-2337-46d2-902e-5affe6ac0d6a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783ad223-da15-45cb-9fc0-1fd276d6fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1571687f-f656-4a5e-840a-ba16244691c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3baafa-43a7-4ee6-a76d-709337f8f0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cccf679-2de6-4451-bddb-b742a14929a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90027eba-fdfd-4f84-83c5-767bf18c1201",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19ee834d-293d-4179-ab7e-66ee6e7f90f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73c5ca48-cd08-43bc-8983-bf731588aefa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a36d1b2e-fac7-4c2b-bcc2-e28a3c966f49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a41e8851-f2a0-4f81-8f33-9b71685ddb6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "70ee1af1-0936-4823-9cdb-70ba2dbd1ceb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6d411be-e73f-43ab-babf-89ae91d82dfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c20ccfe3-57f9-486a-b310-4f325d746349"
            }
          }
        ]
      },
      {
        "id": "d097895b-b42a-45d8-b70b-364e40e235d0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9dad04f4-4b43-4ccf-91df-18de2d82c6d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a50ea569-7e39-484c-8c5c-ee7f55a9b193",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9afcf2dc-6fe6-4215-8fd2-8decd663499e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ba906-2ee2-4d08-ac5c-5d7cac6f3090",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e00bb77-384c-4bb1-8da8-177e42c13072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e6fd89-22c9-4543-b36f-2145c8680c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46e6484e-8410-443c-a7ed-9b766e8ad852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4346b9b0-5dd2-4d0e-9482-dfefb0f40a45",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7ab93-127b-4c91-af6f-effde17b0316",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3042faf8-b901-4758-8251-540752832def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7caa30-d479-474d-b30b-2295498d859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cec5d4-e2b8-4b03-837c-d914e2514abb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d41b07a4-3238-4cfd-ba3c-6bacf317f009",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58bc6fd3-d260-4a92-8745-fd79087c072a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b369a8d9-e20e-432b-a2b5-12cf62d5bd9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0f850aa-259f-4f20-94d9-ed2d01c278bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbaac9c9-b39c-4f66-a568-aa41a64de158",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f949efc-6fbd-4d4e-9ba8-110aaa5b0ef1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e6b9cb7-da91-4faf-bc79-d2b460b12376",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f037e4d9-633d-4da5-bdd2-90e2a6cfbaf6"
            }
          }
        ]
      },
      {
        "id": "c02f0acf-6ab0-4141-b4dd-c3f79133d78e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eb73f32a-7758-4a33-b6af-a4edc806a60c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98c3e6ff-8ff0-4318-9204-933e036f2352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a5572ff-c810-4375-aa97-fb81572972f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfdd8d9-df2d-4d46-be03-28ddac296cf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd110e28-dcce-422f-914c-c1c4b13fc385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3044ad-a3e6-452e-bda3-8a093af3b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d19573b-985c-4fa6-812a-2da3bca7cc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb0ad25-5428-4926-a916-fe081a1a1130",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e1fd5-4a28-49f5-8c9b-3bcafb6f7053",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a15bb65-a55d-4734-b005-cc2846c4e206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591ab881-ea32-44c1-af5a-0a495f035a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "778acc07-b081-4e39-90ed-105798c7586b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "295b640b-96e5-491a-933a-1b42bced877c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "427080cf-bbcd-42a0-bc66-ec21e51cfefd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32daa353-1027-42b8-92ae-ccbdda8b88ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d444c04-b09b-4d47-84d4-f8121862e74f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66576661-471e-4dcb-b03f-2afe337f73f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc2a572c-8e5f-49f1-befa-0e4b870e0de2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9701da50-33b0-4924-90ac-9bad1950d26e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38fdbc6e-c394-41cb-b146-19cc6969116a"
            }
          }
        ]
      },
      {
        "id": "10695173-09d9-4b61-bbc7-86b53f5bd039",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e94cff12-7c9f-4d1d-acc4-5b6fb6a31217",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb1fb15-a318-43de-b117-f4c664541a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8abcdedc-ae4a-450e-a33c-b10077c067eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80c7c4e7-d546-49fb-b40f-a722625d74b1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fc3a279-bdea-42f4-8e5a-22231f743d2a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 878.2769230769236,
      "responseMin": 6,
      "responseMax": 14389,
      "responseSd": 1289.1990090176437,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681864683479,
      "completed": 1681864925211
    },
    "executions": [
      {
        "id": "519d6780-78d3-4d61-99dd-a909b838b5cc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "75b89ad1-df27-4a2b-9548-b8810167754c",
          "httpRequestId": "37e35857-ee35-4125-88ba-dbf6f072443b"
        },
        "item": {
          "id": "519d6780-78d3-4d61-99dd-a909b838b5cc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec403a84-e7bc-49fb-965d-d650fd9486ff",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "17c0169d-fdde-42e5-9b2c-d82a900b285e",
        "cursor": {
          "ref": "6857f1dd-e2b7-4676-aa35-e1c755fd807c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e37eff33-a896-4ba3-8985-5ee1903d29a9"
        },
        "item": {
          "id": "17c0169d-fdde-42e5-9b2c-d82a900b285e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b7ea8921-8735-4e99-8e7d-cad402919741",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "014ff609-859e-49c2-ba2b-74992b6c30a5",
        "cursor": {
          "ref": "71099c4d-4fb0-482e-a599-20aa77204825",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c21b3f11-fde6-400a-bf51-a085a734b3dc"
        },
        "item": {
          "id": "014ff609-859e-49c2-ba2b-74992b6c30a5",
          "name": "did_json"
        },
        "response": {
          "id": "82162fd0-fb43-4eec-bfee-26e3539fe2b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1570,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9d6d85-1c45-4a60-bf75-f559d5b16c0b",
        "cursor": {
          "ref": "40b7f2b5-623a-4d45-805b-4423549d6f76",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e1977e2-95d6-424a-b002-039e024b1353"
        },
        "item": {
          "id": "4d9d6d85-1c45-4a60-bf75-f559d5b16c0b",
          "name": "did:invalid"
        },
        "response": {
          "id": "528d48af-1e45-462f-92eb-1b91da3bdcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1915,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9d6d85-1c45-4a60-bf75-f559d5b16c0b",
        "cursor": {
          "ref": "40b7f2b5-623a-4d45-805b-4423549d6f76",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e1977e2-95d6-424a-b002-039e024b1353"
        },
        "item": {
          "id": "4d9d6d85-1c45-4a60-bf75-f559d5b16c0b",
          "name": "did:invalid"
        },
        "response": {
          "id": "528d48af-1e45-462f-92eb-1b91da3bdcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1915,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9ead92-3e5e-47fd-949e-53b67610d469",
        "cursor": {
          "ref": "7b1fc65d-68c6-45da-87c8-2d278bc2de7b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8dc4933a-0bd9-43a4-87b0-7a1507ef4e69"
        },
        "item": {
          "id": "6d9ead92-3e5e-47fd-949e-53b67610d469",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b484feac-b9c9-4713-acf6-bb41af84d22b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1142,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b36f6c-29ab-4034-9df4-03fd5c51a827",
        "cursor": {
          "ref": "4d09078f-ca05-4fc4-bc52-829699de5deb",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7de19a1f-a99a-481f-a3b3-cf071009a245"
        },
        "item": {
          "id": "f5b36f6c-29ab-4034-9df4-03fd5c51a827",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3842fdf7-57b1-4ee7-9422-9b3308e6a470",
          "status": "Not Found",
          "code": 404,
          "responseTime": 715,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135150f7-b364-4573-8949-551897d286c8",
        "cursor": {
          "ref": "17897736-60de-49a4-a546-f4ca4f4d3d1d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6410f89f-f12c-46d1-b9a5-ab9a54d9e190"
        },
        "item": {
          "id": "135150f7-b364-4573-8949-551897d286c8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "08854870-52e4-40e9-aa43-9153308c9534",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76566913-0d0c-4ca9-aceb-d60e12422f9c",
        "cursor": {
          "ref": "1bf67537-3e78-487a-b32a-ab15f63ac664",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eaef2409-1b47-4751-85d4-adaa9a82b39d"
        },
        "item": {
          "id": "76566913-0d0c-4ca9-aceb-d60e12422f9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "050176b2-2378-4fa4-979a-4ceaefc9295f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 950,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76566913-0d0c-4ca9-aceb-d60e12422f9c",
        "cursor": {
          "ref": "1bf67537-3e78-487a-b32a-ab15f63ac664",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eaef2409-1b47-4751-85d4-adaa9a82b39d"
        },
        "item": {
          "id": "76566913-0d0c-4ca9-aceb-d60e12422f9c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "050176b2-2378-4fa4-979a-4ceaefc9295f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 950,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05907530-7cda-43b0-8f40-481432945515",
        "cursor": {
          "ref": "d8c58b89-ce68-41bd-be87-35ed1b24db8c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ff093c2-61e7-4de0-aa69-3eb1e29cf685"
        },
        "item": {
          "id": "05907530-7cda-43b0-8f40-481432945515",
          "name": "identifiers"
        },
        "response": {
          "id": "6c774865-e112-4a16-a11f-54df2605bcb6",
          "status": "OK",
          "code": 200,
          "responseTime": 2146,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02318b53-94b8-45e5-9920-d6a897244f7d",
        "cursor": {
          "ref": "ab9cec02-58c2-4678-922b-e13e151a0317",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d01c3c58-1f64-4287-8d83-eb79d804612e"
        },
        "item": {
          "id": "02318b53-94b8-45e5-9920-d6a897244f7d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aadf406c-ffdd-4dc6-86e4-28d9351334e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1385,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02318b53-94b8-45e5-9920-d6a897244f7d",
        "cursor": {
          "ref": "ab9cec02-58c2-4678-922b-e13e151a0317",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d01c3c58-1f64-4287-8d83-eb79d804612e"
        },
        "item": {
          "id": "02318b53-94b8-45e5-9920-d6a897244f7d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aadf406c-ffdd-4dc6-86e4-28d9351334e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1385,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b69a528-da55-4a95-bc39-dfe6416801d1",
        "cursor": {
          "ref": "96d1dfed-315b-4022-ac15-22716a7f194e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fb221451-fa07-43bf-ad12-64495794edd9"
        },
        "item": {
          "id": "3b69a528-da55-4a95-bc39-dfe6416801d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "455a7523-b543-439a-a7ce-909df66c28d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6350156-2c11-4702-95dd-93984fd2a3f8",
        "cursor": {
          "ref": "8d0bb015-f7ce-423a-8549-9c2fd08a31f3",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6b60ae8-12e9-4805-baa1-90c0644769e6"
        },
        "item": {
          "id": "b6350156-2c11-4702-95dd-93984fd2a3f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "36dc7b4c-15cd-4e54-be9b-7459f82d3124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0a276c-af2a-456f-96b4-a8e1b6bba551",
        "cursor": {
          "ref": "6566e148-d004-4862-bd48-13a2b803ea63",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1fb0feef-925b-445b-b3ce-1d2f92a0ee43"
        },
        "item": {
          "id": "bc0a276c-af2a-456f-96b4-a8e1b6bba551",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b5281a9-8555-4553-964c-b8f7d3978997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f94029a-6b82-41ba-a3e2-72eb9ef95d38",
        "cursor": {
          "ref": "af51b98a-a636-4ad0-8a1a-f2c835dcc315",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c06ff4c-3b55-4f51-b7c0-e0076b27a62f"
        },
        "item": {
          "id": "6f94029a-6b82-41ba-a3e2-72eb9ef95d38",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ba325cd4-bdd3-4682-a1fc-8fb84c62cde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f9011f-c0e2-4dc6-8816-a3c720ffa2f2",
        "cursor": {
          "ref": "c850caf8-c7d1-4227-a9aa-70469a941007",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7ef253e-f5e7-4012-ba37-538c334643ea"
        },
        "item": {
          "id": "96f9011f-c0e2-4dc6-8816-a3c720ffa2f2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "10147197-0049-448a-8cee-826f697d7ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ce01f0-db1c-4e51-825d-b75dfbb1a462",
        "cursor": {
          "ref": "5a2cd405-2575-4387-9ae4-a28ced9b2cde",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8696e174-d87d-49a2-a353-c97bbc53377f"
        },
        "item": {
          "id": "97ce01f0-db1c-4e51-825d-b75dfbb1a462",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2a20a91e-9f77-40d0-a8c7-76c0db8fcb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73959b3b-3f49-4c1c-a496-5390590c3051",
        "cursor": {
          "ref": "d5fb6aaf-f8c5-4c37-95d3-1f13a53267a6",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ad448191-8d20-4680-92c7-190d731b8873"
        },
        "item": {
          "id": "73959b3b-3f49-4c1c-a496-5390590c3051",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "83ac6a2b-f191-4d73-af91-6c188ffbbddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57db90d-8169-4b97-8245-39a1ed4ba592",
        "cursor": {
          "ref": "89a7cfd8-85a3-4fb4-a38c-c974373e2f20",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1fb984d6-f585-4560-8707-811a7e0ca889"
        },
        "item": {
          "id": "f57db90d-8169-4b97-8245-39a1ed4ba592",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d5ded9d-10d3-4561-84a8-c4c4cd11e1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dd2b5b-4a2b-4d8e-81aa-b3d105592383",
        "cursor": {
          "ref": "d59697cc-6663-4fa5-9418-11ae714b1ed6",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f09f209c-9419-4742-95e9-c092530eddac"
        },
        "item": {
          "id": "e2dd2b5b-4a2b-4d8e-81aa-b3d105592383",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0ad6b6a-1329-40b1-8a1d-052039dbfdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd161ce-c1f8-48a7-b247-046b85b8dc85",
        "cursor": {
          "ref": "b5238af0-8e6a-4428-8202-7aea6286b5be",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0204dcbd-33e8-4fef-8769-2b32f0f9b281"
        },
        "item": {
          "id": "cfd161ce-c1f8-48a7-b247-046b85b8dc85",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a178011-b726-4d6b-b407-042c34e79b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2f3573-fb6c-4649-b9c2-99354f224c5b",
        "cursor": {
          "ref": "e99e08da-5187-42df-a960-7a627aab7548",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6c9b752a-9100-4922-a452-e2f69cf32ba5"
        },
        "item": {
          "id": "8d2f3573-fb6c-4649-b9c2-99354f224c5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b604e6ff-d87f-4e27-99c3-6895b7967cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1730e606-21ee-46ad-b847-d82b25beaf52",
        "cursor": {
          "ref": "af778eb9-585f-4524-9c39-208ee4cc9b1e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b52df39-43d4-4079-acd0-ee0fba71687c"
        },
        "item": {
          "id": "1730e606-21ee-46ad-b847-d82b25beaf52",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0f219cbd-c1e4-4370-a084-b5755e80682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638f9356-0576-4a53-8abb-4d7f46edb4a1",
        "cursor": {
          "ref": "d93af156-c0eb-4e89-8a95-8f6b216f1dce",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27d22488-92ca-4e8e-946b-9d5a97b2c5bd"
        },
        "item": {
          "id": "638f9356-0576-4a53-8abb-4d7f46edb4a1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "20ddcf9a-b7ae-47eb-9ae0-6534f3ffa588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e863ecd0-723f-4ed6-a87d-dbc59e251cc1",
        "cursor": {
          "ref": "10f50232-f444-4d5b-a29a-8d5f2227ca5a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c2a7361f-426f-4735-b61f-a1ab4be25ec6"
        },
        "item": {
          "id": "e863ecd0-723f-4ed6-a87d-dbc59e251cc1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "68a101c1-7c79-44d2-92af-f45c2fba12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f448ba-0c66-4de9-a076-4f4ca2715b3b",
        "cursor": {
          "ref": "5aa72da1-eeb8-413e-9d0b-b479443d134f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6d30cf25-b34e-4623-928e-2bde77ce9161"
        },
        "item": {
          "id": "88f448ba-0c66-4de9-a076-4f4ca2715b3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97d381bf-1696-4d97-a7f2-22f4536d58b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc3f66-06c2-4c2d-bd76-6d57ce3b5390",
        "cursor": {
          "ref": "1546e058-c1cd-4854-84c3-d8aee86e26b9",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1d91cdb7-c339-4051-9077-f3478b162c40"
        },
        "item": {
          "id": "debc3f66-06c2-4c2d-bd76-6d57ce3b5390",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1b216c8-a8fd-4c8e-9347-9817072a96cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1301,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e67359-17f1-4ca2-8812-c667e2722d6d",
        "cursor": {
          "ref": "a661da4d-3388-41e1-80cf-d4a99a25e9ce",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6bc357bb-a5c1-4685-b8b9-2da0ef908688"
        },
        "item": {
          "id": "02e67359-17f1-4ca2-8812-c667e2722d6d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e8432c94-0857-4495-bf5e-1fda25c85b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b4fbda-5270-4f91-83b9-88a0878de527",
        "cursor": {
          "ref": "e06d0918-0689-4611-8a6a-7e0e83b5ba16",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "afc22081-09ac-4d4c-b082-638f9b954a4a"
        },
        "item": {
          "id": "67b4fbda-5270-4f91-83b9-88a0878de527",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fd310edf-90fa-46b1-814b-f9eb34b74d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe19e251-e86e-449c-ae88-a50099a70040",
        "cursor": {
          "ref": "848cbca9-6e48-49fb-88e2-fa143eef6ad0",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f93540e-75ab-41b3-b862-c8b307f51bd7"
        },
        "item": {
          "id": "fe19e251-e86e-449c-ae88-a50099a70040",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b041ab3e-9399-4d63-8de9-5928b0504bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab89f02-9e08-45bc-973f-93b6be657573",
        "cursor": {
          "ref": "8ace269d-36f7-4865-abea-98b8089d2a33",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "de5c4d8c-45f5-4b37-b47f-dfe926bd0ed9"
        },
        "item": {
          "id": "eab89f02-9e08-45bc-973f-93b6be657573",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d48a57d-bdec-4d4e-b7d3-fb7f7638f189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c48a27b-b3ed-42ee-914e-6c822872ab4a",
        "cursor": {
          "ref": "9d08da66-b092-4430-97fc-e512dac76a99",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "32c1cd23-63dd-4d1c-81d8-d012209b46ea"
        },
        "item": {
          "id": "9c48a27b-b3ed-42ee-914e-6c822872ab4a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8e3f364c-5ee3-4056-9d89-a9967f6e9abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80c81a5-07e7-4ad4-a6be-902c7f6c40ae",
        "cursor": {
          "ref": "aafe5dd2-0b4d-45d3-ab97-86a3b2890795",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e0389daa-7587-4738-a718-0fc536608745"
        },
        "item": {
          "id": "b80c81a5-07e7-4ad4-a6be-902c7f6c40ae",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "814be079-9267-4f7c-8a70-5a99967a7654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1b4f40-0230-4687-86d6-b60d66f111ba",
        "cursor": {
          "ref": "7b0eaf9c-0a30-4205-942a-5244ddc21ec2",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "174bb355-ebdd-497f-a69c-a74ae1a16d7f"
        },
        "item": {
          "id": "ae1b4f40-0230-4687-86d6-b60d66f111ba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a23e65fc-cdb2-4467-96ac-a5fdc1b35da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4a5c1b-cf7f-42af-90b6-77a57808230f",
        "cursor": {
          "ref": "759f50c7-96ae-46a3-a197-3e78d650aba5",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f0ec042e-0a91-4e7c-8838-45e22719d944"
        },
        "item": {
          "id": "dd4a5c1b-cf7f-42af-90b6-77a57808230f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e81a6706-1ef4-473f-b9ce-c2a173ecec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e8e019-f69a-4093-baac-290749678af9",
        "cursor": {
          "ref": "84c27f6e-7aa8-4e09-b050-2585a1caaf35",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "76b16b0e-d651-4b09-a3be-3c033728331d"
        },
        "item": {
          "id": "06e8e019-f69a-4093-baac-290749678af9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e9e6afb7-5bb5-4865-bcd4-79ada4c8527d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c280093-3a91-4f1c-80b6-57f2a400aa6f",
        "cursor": {
          "ref": "fb146da5-b540-4ee7-aa55-cdf8813acab8",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f9d05bda-cb8d-4d6c-88df-0e1c99226df4"
        },
        "item": {
          "id": "7c280093-3a91-4f1c-80b6-57f2a400aa6f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e041cde7-2daf-4665-80c7-709c727e71bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdebdbd1-7e67-4c7c-bcba-0e0684b162e5",
        "cursor": {
          "ref": "2b45e26f-80ad-444a-8ba0-e221489f2dcb",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ea417b8a-496a-492b-b3fe-6945ad5baf68"
        },
        "item": {
          "id": "cdebdbd1-7e67-4c7c-bcba-0e0684b162e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c8fe9094-2d52-41b0-abc5-b6f77ce4410b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde3408-1a59-4a20-bba6-e453e1762d71",
        "cursor": {
          "ref": "4f0266e8-eb8f-418c-b9d8-7e95dbd27848",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a5e3d075-0ac9-4fec-a116-d3b5687342ce"
        },
        "item": {
          "id": "6fde3408-1a59-4a20-bba6-e453e1762d71",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a0bf98b0-16b4-4042-9528-8b1b72e4c832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a723e9-9cec-4885-8cf5-a3d874f77a83",
        "cursor": {
          "ref": "735723d3-cf6c-4bc9-b96b-f1e94f45d391",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "86488bd5-50fc-4b12-a1f9-f9b3d63b79e7"
        },
        "item": {
          "id": "b8a723e9-9cec-4885-8cf5-a3d874f77a83",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f2f6b9d-d907-427e-a411-365d119f3748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5053a2e1-6eec-412d-96a3-0072a96993dc",
        "cursor": {
          "ref": "78f79b4f-12cf-4309-9f8c-b6f9c84c85d3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ff64261e-49f9-4577-a8e4-cd1f8346c56d"
        },
        "item": {
          "id": "5053a2e1-6eec-412d-96a3-0072a96993dc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0c1045f0-f690-455c-9842-75af9e8818c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c7ff2c-99ff-4bc1-957a-5b224e065247",
        "cursor": {
          "ref": "aa0d6fa6-ff45-4d14-9ed8-848da88b29e7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0318c473-c00d-42fd-881f-cac6c6ded428"
        },
        "item": {
          "id": "64c7ff2c-99ff-4bc1-957a-5b224e065247",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fed07288-306d-42d3-aed2-13597030ecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a75abc-2074-4641-ab88-ff8a70c90a37",
        "cursor": {
          "ref": "24e38a4d-da78-443b-b26c-836f7f8e23cb",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c50e187f-2295-40be-8c6c-2b6129f364ca"
        },
        "item": {
          "id": "44a75abc-2074-4641-ab88-ff8a70c90a37",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5169d4a3-e7c0-43a8-a93f-da047dd16a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74f413-0f24-4d12-8d93-55f6b1d8ce83",
        "cursor": {
          "ref": "0e18b7d6-faaf-403c-ae70-7d309193c9cb",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e31cdc8-152f-4a18-bdb5-e84c7872f8d2"
        },
        "item": {
          "id": "bd74f413-0f24-4d12-8d93-55f6b1d8ce83",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "32f73574-592d-4ae5-afd3-6fffa458d7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db39c512-ed7c-45a4-8661-4ba34c86ae16",
        "cursor": {
          "ref": "597f2926-8a67-4508-8f89-a27cce46476d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f29d7326-a247-47cb-b499-400522935dc9"
        },
        "item": {
          "id": "db39c512-ed7c-45a4-8661-4ba34c86ae16",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "60ac2567-b0b0-4e56-9802-cb41e14cfe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ef4159-4e84-463c-b365-11bf279ded04",
        "cursor": {
          "ref": "43254db6-06a8-481b-bfa4-eb7f71d66f85",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "566e6b36-d462-4407-9847-daa6c27fcdde"
        },
        "item": {
          "id": "80ef4159-4e84-463c-b365-11bf279ded04",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4046947f-4743-47d1-9545-85b67ac7ad71",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1834,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df795400-eae9-4198-b8b3-2245d22d68e1",
        "cursor": {
          "ref": "e464e85b-7e9a-4632-bad7-83f6f1afa427",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec30bc64-ecce-44d7-95a8-4e09431a5151"
        },
        "item": {
          "id": "df795400-eae9-4198-b8b3-2245d22d68e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8a3c273f-8f90-4dbb-b139-6b8d37ff4612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1232,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b1d73-8dd9-42a0-8e95-32741d653821",
        "cursor": {
          "ref": "970a9639-43ba-49e0-927e-e413231e0acf",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c5402373-ca60-44ec-8fc8-57b1aecb9c82"
        },
        "item": {
          "id": "543b1d73-8dd9-42a0-8e95-32741d653821",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7cd60395-5bb2-480b-b4ab-b1f8720991ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d4a866-5e0a-4564-9769-92916275d414",
        "cursor": {
          "ref": "5a9cda10-7118-4143-82cb-682dd0a3d076",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a8c265d4-908e-41cb-9eb6-0d81ed6358ac"
        },
        "item": {
          "id": "52d4a866-5e0a-4564-9769-92916275d414",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e7568665-897c-4567-a894-3f57ad7b5460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0776bf-112a-49df-a9ad-67aa7695c028",
        "cursor": {
          "ref": "12936a13-ee4f-47c5-98c7-fea350db740c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "248dc606-0961-46ea-b8c6-5730baeebd3d"
        },
        "item": {
          "id": "9a0776bf-112a-49df-a9ad-67aa7695c028",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e60e7e05-53c4-4b5f-b65b-af1000340445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a20e1e-296f-4d67-925f-49b4c7212892",
        "cursor": {
          "ref": "a28e4254-33f8-4cc4-93c2-5f33af3501b5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88053ff6-814d-4bb7-ab3c-05f516559d81"
        },
        "item": {
          "id": "72a20e1e-296f-4d67-925f-49b4c7212892",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3b58e963-039f-4431-9f11-bbbb081af6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57446060-afe5-4fbd-ba32-8c1f076394d9",
        "cursor": {
          "ref": "77160406-1de7-4a64-9e00-f2cde2b92e22",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98939e36-6baf-4fea-ab04-98b8b099cbc8"
        },
        "item": {
          "id": "57446060-afe5-4fbd-ba32-8c1f076394d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fd8019f7-521c-46ba-b5ef-be76d7f47f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc068f7-73d5-418c-a247-11921d202ff1",
        "cursor": {
          "ref": "99ddca82-d363-4c4e-9553-06d5f8b62d22",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7bf5cd43-37ed-4f3a-aec5-ca3fa43b06ab"
        },
        "item": {
          "id": "2fc068f7-73d5-418c-a247-11921d202ff1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c6978737-48a1-4c40-b154-855d329c6202",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 812,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7088b256-264b-4c68-bd9b-99f62215498a",
        "cursor": {
          "ref": "656b764d-c2a8-45e2-8f25-6d8afc6c232e",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fb3a2a78-4430-4489-90d3-d24406cd0965"
        },
        "item": {
          "id": "7088b256-264b-4c68-bd9b-99f62215498a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cacc831c-c999-413f-95a5-bd27222324a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c42031-2aeb-40e6-9e37-1364c4b171b1",
        "cursor": {
          "ref": "35ee20f5-067f-4afb-98fb-7b74143bd603",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5aa7f3ea-84c9-437b-b83e-abc9a0388c95"
        },
        "item": {
          "id": "71c42031-2aeb-40e6-9e37-1364c4b171b1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aace5182-1901-4b33-b636-0eae54962582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a3485-015b-40f4-a449-d1097f29de59",
        "cursor": {
          "ref": "4df721d8-cfae-4995-bb5e-0a96259e2114",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bc55edc0-f2af-4665-8d1b-5d4c056f82e7"
        },
        "item": {
          "id": "923a3485-015b-40f4-a449-d1097f29de59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8d634390-12d5-4dd6-9ba6-87a7964a74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e06ac-2b63-4a75-b456-1a3a8c8dd1c2",
        "cursor": {
          "ref": "33a5691e-d336-4d84-a501-623f08c46238",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "291be03c-b599-4845-9960-df37cab7ca50"
        },
        "item": {
          "id": "467e06ac-2b63-4a75-b456-1a3a8c8dd1c2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "374d4fd3-acd1-4f31-9b87-aad075a42f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6bd1e4-cbbc-467a-aaa2-721e75909764",
        "cursor": {
          "ref": "9db599fb-426c-4381-9225-8991f7db89d8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0e3067e5-9b30-4675-82bf-a781ff45844a"
        },
        "item": {
          "id": "3b6bd1e4-cbbc-467a-aaa2-721e75909764",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a4c4c034-cd63-4103-abc3-aafb048df7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fc7587-17b6-46fa-bb7f-bf7d15fb4eeb",
        "cursor": {
          "ref": "b1a59079-f59a-4633-8a52-ffa7378e5652",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d8a0f213-be40-4310-903e-b65b370685d2"
        },
        "item": {
          "id": "45fc7587-17b6-46fa-bb7f-bf7d15fb4eeb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6ede211a-ad1b-440d-bb53-6ae2c562fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8838146-ec6a-463b-a639-7fc78650e5de",
        "cursor": {
          "ref": "71a1fa5c-74e9-4ab6-9014-01860700dade",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0a5ad57e-38cf-4da8-83fd-cf1003f62ad7"
        },
        "item": {
          "id": "f8838146-ec6a-463b-a639-7fc78650e5de",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "90b12b27-0b7c-4b50-b16f-19602abee278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c719e5c-266c-49e2-a67c-db4b36287d71",
        "cursor": {
          "ref": "0e9bb7b7-034f-4121-a968-fa16d9c08dfd",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f5ad2b77-3f3d-4a78-a516-b5a0ee358948"
        },
        "item": {
          "id": "3c719e5c-266c-49e2-a67c-db4b36287d71",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3d017cd9-c5a3-4838-8d14-0ee8cfd5bcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc2d728-265f-4477-9979-e4180ba346ff",
        "cursor": {
          "ref": "a8ef56f0-286d-400b-b88c-9ef606e75b66",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "df258b18-38c4-4969-88d5-0d70a33ce9c1"
        },
        "item": {
          "id": "ccc2d728-265f-4477-9979-e4180ba346ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cb5ba41d-92d1-41d2-b10b-2dcdefb3d2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5955d62b-f7f3-4e39-a8e5-f96251b66309",
        "cursor": {
          "ref": "2049b5a6-44f9-43b7-8301-2f09894059ad",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3b766759-3139-4e11-b418-894a042a44c2"
        },
        "item": {
          "id": "5955d62b-f7f3-4e39-a8e5-f96251b66309",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3982e0ce-7c5d-485a-ab47-5317a6ed10b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ce2880-8aae-4724-8cda-bd8f5005077f",
        "cursor": {
          "ref": "fd972c31-10cb-4671-ba7c-46b5c9ecd839",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "271a4ba3-6ffb-4560-b891-11848a950fca"
        },
        "item": {
          "id": "a4ce2880-8aae-4724-8cda-bd8f5005077f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63c379ab-c5c5-4121-9f60-728105ade761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66394dba-a373-493a-9fc7-9653b45718de",
        "cursor": {
          "ref": "69c346f9-b785-468b-b1cb-0db73e5d6e94",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8490d37f-83c6-4713-a207-c2c4192f55ef"
        },
        "item": {
          "id": "66394dba-a373-493a-9fc7-9653b45718de",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e16824d-c3df-48c9-949d-8f22b5333b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b43d4b6-e6ab-4642-b2eb-41f81ef104a0",
        "cursor": {
          "ref": "ec3e0da4-6f50-4bd2-9c64-5c1b2ce9aa4b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4fa5a64f-ea27-4d74-ac7e-036613c45d66"
        },
        "item": {
          "id": "3b43d4b6-e6ab-4642-b2eb-41f81ef104a0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1ba0b579-147d-479a-96d2-0d0a95afad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66927e88-b84c-4245-bdf8-da60f6263e0e",
        "cursor": {
          "ref": "9e32bc2b-c4a4-42c9-b910-b703d8c391bd",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c11effec-939e-4e28-a6e6-abff152d51d5"
        },
        "item": {
          "id": "66927e88-b84c-4245-bdf8-da60f6263e0e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b2ced20c-e9db-4be9-98fe-425b448e0038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4424c4-9a0a-45bb-81a8-aac6366cd9d2",
        "cursor": {
          "ref": "36610fc6-3a2c-425b-874b-9271d86338ba",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "094f7883-48d8-4ccd-849b-93237c93c9e9"
        },
        "item": {
          "id": "ec4424c4-9a0a-45bb-81a8-aac6366cd9d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "26350d6e-4a62-4d04-8ccf-634a3df70dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28343b4-1860-4f39-8e88-5ec4f374ea53",
        "cursor": {
          "ref": "98577196-0f56-4623-b9fc-f69e7df3efb2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4db88eea-455a-4137-ad51-54cf3d507c28"
        },
        "item": {
          "id": "f28343b4-1860-4f39-8e88-5ec4f374ea53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67b27ee0-2f3b-4fc3-8356-a2fbade2cdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b19a2-d8ad-4da2-8814-a7f5863788d4",
        "cursor": {
          "ref": "9d444002-c2d0-4a9f-9cbc-43aa8e873333",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "57868c22-9ebc-430e-985e-083fad2fdd3c"
        },
        "item": {
          "id": "462b19a2-d8ad-4da2-8814-a7f5863788d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "71441df9-1283-4be4-a641-4eca57cec5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a020a7d3-84d8-447c-8174-978dc91eca34",
        "cursor": {
          "ref": "31c3092e-7670-4e06-ad5a-3a1d69666adf",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02326633-735d-4514-bd2c-cedde15d4238"
        },
        "item": {
          "id": "a020a7d3-84d8-447c-8174-978dc91eca34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "366f843d-706a-4720-bea2-0f5da5ac589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0230d40a-2d1d-4435-b096-96f4ec306712",
        "cursor": {
          "ref": "dab04244-24ea-47ba-ad65-4bcc57f9d876",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26dc1a69-f50d-4f56-876a-005e2c32b338"
        },
        "item": {
          "id": "0230d40a-2d1d-4435-b096-96f4ec306712",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "df98489d-b0f0-4c05-9b51-2e80013cb8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1051,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945ce92a-d62c-4396-91b9-fa75e4589eac",
        "cursor": {
          "ref": "60f300ca-c233-4408-87f0-63df3eec44ca",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0ac08881-0ec2-429f-b6d6-84bb1cc38707"
        },
        "item": {
          "id": "945ce92a-d62c-4396-91b9-fa75e4589eac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ffa2583c-a35b-48cb-b908-85a0fd98c936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab23edf2-c8e3-44bb-adc2-fc017b39c02e",
        "cursor": {
          "ref": "c4858f81-252a-4e12-8abb-6a86bfcdeeb8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5f96228f-3e43-41bd-b0da-f56d63c77cd4"
        },
        "item": {
          "id": "ab23edf2-c8e3-44bb-adc2-fc017b39c02e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "adaa2cc5-1ea3-4988-9b66-6897ededf087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2383f067-b368-43f6-ba34-206c8e1da6de",
        "cursor": {
          "ref": "fcd9ab50-e8b2-4346-9d9d-131421653edf",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d404d7c7-3a43-49b1-9bc1-0b781274279c"
        },
        "item": {
          "id": "2383f067-b368-43f6-ba34-206c8e1da6de",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cfbf0e80-1915-4000-8962-2013ffa48604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c97c34-f169-4a2f-ba5f-86faf266f1b9",
        "cursor": {
          "ref": "94e73e23-77e0-41af-8e08-f2898da972d5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3928edb6-c7dc-4fb3-9169-c3401d588cbf"
        },
        "item": {
          "id": "54c97c34-f169-4a2f-ba5f-86faf266f1b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d3463cec-4635-4c08-9d9d-274c536a7ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46d18cd-5fab-445c-a3da-6f0a4b17f2ff",
        "cursor": {
          "ref": "e9c12320-f85d-4375-bc99-7e4177943c55",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6191df6d-8f74-46d5-9bdb-334900b5cd53"
        },
        "item": {
          "id": "d46d18cd-5fab-445c-a3da-6f0a4b17f2ff",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d3f13ad9-f89f-47e9-8c41-862679ccda53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd0ab09-0fef-4b51-ab40-fdfe3e6a8200",
        "cursor": {
          "ref": "e88aff22-5c38-4886-9fb0-fc7825c34021",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71900e5a-f75e-4445-8199-f2eecbde8026"
        },
        "item": {
          "id": "1fd0ab09-0fef-4b51-ab40-fdfe3e6a8200",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "01d911b2-5558-4dfe-8c96-48c023dee95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe8ad55-8ab5-4e8a-9780-eb60ce0b8199",
        "cursor": {
          "ref": "ef661d15-31d3-4257-af8e-f175fbb9b424",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "84d8a6cb-ac4a-4dc7-b193-b7f6256fd7bc"
        },
        "item": {
          "id": "bfe8ad55-8ab5-4e8a-9780-eb60ce0b8199",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "50ad47e9-268d-479c-8f0d-fad61fb969c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8590e169-a040-4f8d-8f46-570ecd38c9f0",
        "cursor": {
          "ref": "56eb9dfa-94da-40a8-b41a-8d09e437ba03",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d98c15f7-62bf-47b3-8621-7cb69a53aa09"
        },
        "item": {
          "id": "8590e169-a040-4f8d-8f46-570ecd38c9f0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d320fa4-720c-45fb-9ae0-8869b71537c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16438f92-ce7a-404a-983b-b97bb96e1046",
        "cursor": {
          "ref": "96c6eebe-f857-46a6-917e-279c1904b37e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fd0ce7f5-43b6-4a74-9cb1-1cb69e456d3a"
        },
        "item": {
          "id": "16438f92-ce7a-404a-983b-b97bb96e1046",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9513092e-a5c6-4592-908a-a74ac279cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b884d4c1-03dd-4054-b0b1-79cced5d7c27",
        "cursor": {
          "ref": "3bda4bfb-2e2b-4039-b260-0affa12ee82d",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5b6e62f0-a30a-4773-bce7-765000af94d8"
        },
        "item": {
          "id": "b884d4c1-03dd-4054-b0b1-79cced5d7c27",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6587d427-2a50-48d7-b65b-4c4d1d8e6c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0604c42-d578-4a32-bd48-414834fc8a6f",
        "cursor": {
          "ref": "40b838ba-b04b-47de-a82c-09da7cd47356",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "544089a2-2eeb-49f4-84ed-d4f15eacddef"
        },
        "item": {
          "id": "e0604c42-d578-4a32-bd48-414834fc8a6f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "288d618e-85bd-46f0-8731-245e60e4f78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690a8eb-cc02-4b85-8baa-117fd2eeb8c0",
        "cursor": {
          "ref": "71a94d84-d6b5-42da-a0df-e4836caa16c6",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b26beaa1-3d35-4e36-bc77-822991357d5a"
        },
        "item": {
          "id": "6690a8eb-cc02-4b85-8baa-117fd2eeb8c0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b561e16-e50a-4341-b856-d89887f2796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa1ab00-33ef-4f1b-9027-20bf6a0af368",
        "cursor": {
          "ref": "080e23fd-10c7-45ad-9507-7960d78be819",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c50b5668-cf0b-42ec-95bd-e87b10cefc4a"
        },
        "item": {
          "id": "3aa1ab00-33ef-4f1b-9027-20bf6a0af368",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c87ff068-d442-43df-8800-7158015f519e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ffe2a8-441c-4d94-9447-465cdb6a2e10",
        "cursor": {
          "ref": "ee0cf4e0-fc96-4896-961a-1f9c4062b431",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "15c6e74f-95e6-46ed-94e8-5018ba0e1f6a"
        },
        "item": {
          "id": "69ffe2a8-441c-4d94-9447-465cdb6a2e10",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "722dfdbe-7d45-4a68-979d-d369554ea3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0258e8f6-7dc7-4b97-a702-ecdeb490dda1",
        "cursor": {
          "ref": "324dd622-c439-4a49-bd34-7eb10866094f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "103ca76d-48f7-4357-a753-d66b8b4a7a6f"
        },
        "item": {
          "id": "0258e8f6-7dc7-4b97-a702-ecdeb490dda1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "839cb061-ddbe-4019-8db1-c0980cbfee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3ca06e-debe-4ad8-9b7a-1c9bde85a4fc",
        "cursor": {
          "ref": "b24d57b5-13bf-42c1-8d81-c64ca640dd34",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f711240-151d-47ee-9496-6d4f2f7d22ec"
        },
        "item": {
          "id": "ee3ca06e-debe-4ad8-9b7a-1c9bde85a4fc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db0ffbf2-ddb8-4054-9664-9608ffb60036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db2e66b-da9b-4d18-b21a-6cf6020c7aba",
        "cursor": {
          "ref": "7e1418fc-405c-40a3-9927-f7d199ba2235",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "20fff3bf-7a79-4420-a836-75102367a92c"
        },
        "item": {
          "id": "8db2e66b-da9b-4d18-b21a-6cf6020c7aba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b9765823-6f19-4323-847a-80c077116413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a00e5ba-2f80-4493-b443-08b7e8d1f200",
        "cursor": {
          "ref": "03a64f09-1695-451b-a502-fb8ca63a2b70",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f04ef376-4681-4992-85e1-e3c9248562da"
        },
        "item": {
          "id": "8a00e5ba-2f80-4493-b443-08b7e8d1f200",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9173db45-cb2c-4e27-9b82-47fb8a923bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa9af8-5f3a-48e6-9eec-629fd0085624",
        "cursor": {
          "ref": "7b0643c9-8373-4f18-8421-b062348a59e8",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "368d92a7-ad8d-4585-9e8f-9a81b71cea6d"
        },
        "item": {
          "id": "2eaa9af8-5f3a-48e6-9eec-629fd0085624",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "023321a3-accc-4ffe-8b1d-d3bada0f4066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2501ad-7207-4600-87c3-0431b4d7a9d3",
        "cursor": {
          "ref": "b514d546-6ab4-417d-9fe9-5a7d0e3c950b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "69f60ace-8719-43c3-b83c-320184de63ed"
        },
        "item": {
          "id": "7f2501ad-7207-4600-87c3-0431b4d7a9d3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "79b47cc0-ae31-42c3-a526-dd5f589c3663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e56339f-2b5c-42c6-9520-fba149651aea",
        "cursor": {
          "ref": "53d0918d-7acf-4f21-8351-566f02c3177f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3caff022-c447-4552-9966-29e58dc8e9d0"
        },
        "item": {
          "id": "7e56339f-2b5c-42c6-9520-fba149651aea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "19b4e054-d02f-4fe2-a708-d3c50443dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96ccb5-4b4f-4a3d-b4af-1fa18c5180f2",
        "cursor": {
          "ref": "20597558-de44-4169-a8f6-55cd6daad7a4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ece46407-2495-4046-b387-f4ab5b9c665f"
        },
        "item": {
          "id": "4c96ccb5-4b4f-4a3d-b4af-1fa18c5180f2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b7cd3158-edc9-4e16-bd67-617914832f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba13fa2-cf21-417f-8467-1be65606b43c",
        "cursor": {
          "ref": "b8c851f6-6c56-4a64-b252-666ccab35185",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8bc48f3f-a694-4c3a-afb9-1267f4f88463"
        },
        "item": {
          "id": "7ba13fa2-cf21-417f-8467-1be65606b43c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "592bba7c-f406-4093-814f-3410508e790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68403f-e3e4-4031-b453-a15bfe46276a",
        "cursor": {
          "ref": "65e3718e-f5d6-42d7-b056-ce1af4afe642",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "beb83f5d-70da-4e78-a55f-93811dc7a46e"
        },
        "item": {
          "id": "fa68403f-e3e4-4031-b453-a15bfe46276a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a319dd1e-aecf-425c-bdf9-bf00152bb174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 989,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce31256-fee5-40da-a909-0eced10287a7",
        "cursor": {
          "ref": "bcaa21c3-e2dd-4305-8974-4c8d7f3fe31f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd42bc51-8785-4d1a-a461-375bd5cb374e"
        },
        "item": {
          "id": "4ce31256-fee5-40da-a909-0eced10287a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5d386dc4-fce0-404b-85da-fb333276bd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373eefe0-2e64-4526-acd1-944926a52e7c",
        "cursor": {
          "ref": "50fa309d-234b-4f83-bda6-07963ba8cb02",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "33e8ccbc-9a6f-42db-84b9-d74ea8699d33"
        },
        "item": {
          "id": "373eefe0-2e64-4526-acd1-944926a52e7c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ac0fa9a-8a7f-4a57-b818-17b9ee7f194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1222,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30104502-3321-4cb1-aa0b-72dd833a4312",
        "cursor": {
          "ref": "c625c237-096f-4287-a508-f87076ae1412",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ab3c4cb2-cab6-4902-a271-e49b5dde3e59"
        },
        "item": {
          "id": "30104502-3321-4cb1-aa0b-72dd833a4312",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "451682ad-e916-497b-b2a2-958849d617b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd67a00e-4549-40b0-84b3-4c5215442f47",
        "cursor": {
          "ref": "a5d52b24-0cd4-4502-9aee-c645ae9dc3b7",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a67888a0-2894-494c-9bc6-6f7217a73484"
        },
        "item": {
          "id": "cd67a00e-4549-40b0-84b3-4c5215442f47",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "43ec2acd-c7f5-48d4-a305-8a4691a7591b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc7da44-dd4d-4c64-b101-464d96ec603a",
        "cursor": {
          "ref": "dcd2fa67-3c08-4e47-9d40-6adf6af25ded",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e2dfae66-ea95-4153-9a49-7ab2290f5c3f"
        },
        "item": {
          "id": "0dc7da44-dd4d-4c64-b101-464d96ec603a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f94ad3af-7b49-4560-baf6-9afdc108e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78993bd4-c5fb-40f8-9831-395991be7d55",
        "cursor": {
          "ref": "8b8edca1-ee7f-479f-a90c-d1fc92699106",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c5ea7448-c4e0-4392-843c-4909933c1b53"
        },
        "item": {
          "id": "78993bd4-c5fb-40f8-9831-395991be7d55",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d723f9aa-b35b-44b1-80a8-853e19b8f1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aae1a5-8ad2-48d0-b8a2-416c85f927c8",
        "cursor": {
          "ref": "3b818028-bf33-48d2-a462-3c2cda5834af",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8f4df157-9de3-4cbb-97b7-8c46b17a5031"
        },
        "item": {
          "id": "41aae1a5-8ad2-48d0-b8a2-416c85f927c8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "891a0551-d47d-4c57-bc46-685a1f7c8224",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1878755-0749-485f-93db-3fe5717dd434",
        "cursor": {
          "ref": "7cd8a70b-2622-45e0-8368-f6306d8100a0",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b7c7cf8b-10fe-4b0e-a74b-7ed272d9de83"
        },
        "item": {
          "id": "d1878755-0749-485f-93db-3fe5717dd434",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "768d81db-a5e2-4133-acb7-b7c6962182dd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 930,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64808a3-5ee5-48d2-8c05-c438216bec58",
        "cursor": {
          "ref": "ea901b5d-9172-4d7a-92a4-c7834deb265d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e72a9de-5dd3-4de0-9dc9-0595737451cd"
        },
        "item": {
          "id": "e64808a3-5ee5-48d2-8c05-c438216bec58",
          "name": "credentials_issue"
        },
        "response": {
          "id": "81d754dc-f739-469e-b9ce-7a6cb8d26168",
          "status": "Created",
          "code": 201,
          "responseTime": 14389,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a444b5-2846-4b00-b625-9ad54288c26a",
        "cursor": {
          "ref": "2aec33b1-dea4-43e6-b9d4-7122c1e7f6da",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e22592ad-9e7c-4853-ad60-503f74edea3f"
        },
        "item": {
          "id": "b4a444b5-2846-4b00-b625-9ad54288c26a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1776bb26-926b-48a4-8ac3-7499e4697f1e",
          "status": "Created",
          "code": 201,
          "responseTime": 8984,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d056a1f-e8c2-40e2-a8b8-99f3d6c1382f",
        "cursor": {
          "ref": "8b023202-de0a-4be4-92ba-4e94479f0481",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54be4c15-db72-49e3-b4a8-cf41fa0df4f8"
        },
        "item": {
          "id": "1d056a1f-e8c2-40e2-a8b8-99f3d6c1382f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8755ebf1-1bbf-42f1-9e3e-3cd3980ce6af",
          "status": "Created",
          "code": 201,
          "responseTime": 8025,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf017f9-8409-4ac4-8c8f-e47f71ed8a1c",
        "cursor": {
          "ref": "e5c246e5-78d5-4ed9-b234-1517aafdf29a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "56e6275d-bffd-46dc-8228-12b8c79ddfd4"
        },
        "item": {
          "id": "ddf017f9-8409-4ac4-8c8f-e47f71ed8a1c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2c26127d-1fdb-4fb7-8804-1b85262f0885",
          "status": "Created",
          "code": 201,
          "responseTime": 6773,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2b340c-f2bc-4686-9384-6867214e91bf",
        "cursor": {
          "ref": "d9560ff4-d69d-458f-b64b-0c31da70a0ae",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e91cf94-469b-4358-a3d5-e9de91d193de"
        },
        "item": {
          "id": "bc2b340c-f2bc-4686-9384-6867214e91bf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f3d3385-22eb-4dc6-a69a-307c19a65efb",
          "status": "Created",
          "code": 201,
          "responseTime": 5900,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb732ce5-cf0a-4fab-8156-0f530d396d78",
        "cursor": {
          "ref": "85b595e5-2cae-4c53-8432-43ec0913cf37",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a95cdf73-7818-4a5c-a4d0-5e3e5107194e"
        },
        "item": {
          "id": "cb732ce5-cf0a-4fab-8156-0f530d396d78",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c13eaeda-3927-4fa6-8568-4f9015072e60",
          "status": "Created",
          "code": 201,
          "responseTime": 7094,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdb789a-61c1-4474-b4d0-054247c6a823",
        "cursor": {
          "ref": "7e0a928c-2c39-4c50-a0cc-51e49745bb65",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc026785-5908-4731-8bba-cb3fa29c4d1b"
        },
        "item": {
          "id": "3bdb789a-61c1-4474-b4d0-054247c6a823",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16919153-0ed7-407b-a278-805e6108ac7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdb789a-61c1-4474-b4d0-054247c6a823",
        "cursor": {
          "ref": "7e0a928c-2c39-4c50-a0cc-51e49745bb65",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc026785-5908-4731-8bba-cb3fa29c4d1b"
        },
        "item": {
          "id": "3bdb789a-61c1-4474-b4d0-054247c6a823",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16919153-0ed7-407b-a278-805e6108ac7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54932105-39c9-42a2-b8a9-92395ea31806",
        "cursor": {
          "ref": "b2f08fdc-e359-4062-9526-f5c469132484",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a8c97771-8a3e-4c03-9c78-7bd32a081f64"
        },
        "item": {
          "id": "54932105-39c9-42a2-b8a9-92395ea31806",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3f0b8ff-3db9-47bc-a8a1-d1a18b341f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2197ff68-b622-41ca-a244-0fd40dbb6c9a",
        "cursor": {
          "ref": "eaf91268-3487-4a2f-92eb-b28d253beea8",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c5813546-cf2d-44a5-bba3-c6baa2bafc11"
        },
        "item": {
          "id": "2197ff68-b622-41ca-a244-0fd40dbb6c9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46d1a0bf-6cb2-4176-8b72-a4d00a5a1095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a3e2a1-bf3d-4dd2-b3ef-2092c849eedc",
        "cursor": {
          "ref": "b2a28e01-f7e2-4efd-aba6-ce8b3bff05dc",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "654bb1b2-9bd8-41c3-bf6b-2968ecc3b079"
        },
        "item": {
          "id": "83a3e2a1-bf3d-4dd2-b3ef-2092c849eedc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17d65a3e-f676-49cc-9a51-97d61889064c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f79ed70-fab7-4f7e-b85f-5902faddd612",
        "cursor": {
          "ref": "2343f482-8df6-4beb-9df0-e14c29071d4d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cffd34e1-50ef-4d80-be03-7881bffc500d"
        },
        "item": {
          "id": "0f79ed70-fab7-4f7e-b85f-5902faddd612",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8460ad7b-3ae8-456f-827c-18b17c3c04c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50864f-8835-40c4-b4e0-71f29c822063",
        "cursor": {
          "ref": "ac16e82e-ec5d-44ac-9383-c8c69f0cab78",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1fc93d45-ca80-4b77-b9ac-866babca92c6"
        },
        "item": {
          "id": "da50864f-8835-40c4-b4e0-71f29c822063",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c26ff1b-3601-432b-ac3b-22e1e02fb247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcffc5b-4b82-4e26-a348-f99c03f3e391",
        "cursor": {
          "ref": "2425fbae-f892-4ae0-b0b7-55619ede59fe",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "65690652-6da0-4b4e-bada-15afddfde334"
        },
        "item": {
          "id": "cdcffc5b-4b82-4e26-a348-f99c03f3e391",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bac05eec-14f6-463b-834a-036bc67e510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c90224-3a19-4666-9fbc-2ed47c00a557",
        "cursor": {
          "ref": "4c1465af-4a36-47b8-8e5c-1e85709d1e47",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecc84baf-fd23-4547-b185-d498b621cc68"
        },
        "item": {
          "id": "e3c90224-3a19-4666-9fbc-2ed47c00a557",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "13899070-a312-49ed-a6b6-8de800031bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8394b74a-c24b-428d-8fac-af4cbeb0edd9",
        "cursor": {
          "ref": "1b93c23d-1910-440c-a565-dd24475d71fc",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4b336f8f-9265-4e7a-bf01-0e618072a7c9"
        },
        "item": {
          "id": "8394b74a-c24b-428d-8fac-af4cbeb0edd9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "449b1c5c-236a-4e56-9773-18462402b77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7f7552-d5ab-4330-b2f8-70f909ba7fd6",
        "cursor": {
          "ref": "28f27edc-fbc4-413a-8988-6ebc194ad4d9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7d4f62bb-e5b5-4362-acaf-31b3d254c2af"
        },
        "item": {
          "id": "6b7f7552-d5ab-4330-b2f8-70f909ba7fd6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a94999f-d59d-436a-979e-eb487058133c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98267145-30cb-47f1-8832-4e5fae142fde",
        "cursor": {
          "ref": "93debd4d-4717-499c-a328-1200f99b20bf",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7653ec91-308d-4037-860b-988e0ea91b2a"
        },
        "item": {
          "id": "98267145-30cb-47f1-8832-4e5fae142fde",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ded81f37-f67e-45ed-bea8-5ca00d69a52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b4e0aa-9224-4399-8906-877e3f4235a3",
        "cursor": {
          "ref": "bbacd0ee-daea-4e3f-bbc6-49028331b248",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dea93d29-753f-4ce4-af99-9e2b60dd5ffe"
        },
        "item": {
          "id": "68b4e0aa-9224-4399-8906-877e3f4235a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50bcc94a-b8ec-4d6a-a915-5a1388aff398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d8f9fe-b1bd-4db7-a3d7-07e5eb67eb88",
        "cursor": {
          "ref": "06a2ff44-8081-4e8a-a962-2ef0cadc80e4",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2b60aff4-741f-40bc-a590-9537cfff236a"
        },
        "item": {
          "id": "e4d8f9fe-b1bd-4db7-a3d7-07e5eb67eb88",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a1a28d3-a2a0-40e1-8cec-2c184fe77e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b729f6-10a8-4035-a73b-dad9b3d66750",
        "cursor": {
          "ref": "b37a8048-5a4e-457e-844b-28bea3e3d23d",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "05d6b5b8-275d-4426-be01-192c97288496"
        },
        "item": {
          "id": "74b729f6-10a8-4035-a73b-dad9b3d66750",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d51db21-2f0a-4125-97dc-04714b580eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a367d6-7af1-4709-8cd2-5dcfa5113fff",
        "cursor": {
          "ref": "1561bfb2-a149-42c3-a1e1-298ccf785103",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e44e9a1c-eb0a-4b16-b9d2-6cce5e02a205"
        },
        "item": {
          "id": "89a367d6-7af1-4709-8cd2-5dcfa5113fff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "05e133ae-699a-46b7-a06e-862d28cf448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f57a65-2bfa-4396-bcd3-cc599be4e6bd",
        "cursor": {
          "ref": "910deca4-3284-47e6-b069-e3dabb3b6c81",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "256a4989-db45-47fb-a98e-b9d158058268"
        },
        "item": {
          "id": "33f57a65-2bfa-4396-bcd3-cc599be4e6bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3cec6ba8-6f61-4bd1-b35d-97d322c87adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f44f6d3-2423-40b3-bad0-a2a3e29126f8",
        "cursor": {
          "ref": "1dd6ac49-6b9a-4dfa-9dc4-c63f280e0314",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3d0c13a0-4d6d-4280-a63d-f121bacb5014"
        },
        "item": {
          "id": "4f44f6d3-2423-40b3-bad0-a2a3e29126f8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6ba2756a-aa44-495a-a5ed-d8d938ab59ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473c9661-26b3-4bb4-848f-8b8630004f6f",
        "cursor": {
          "ref": "453a9f80-0e3f-458a-89e3-76dae71511ca",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a8a8996d-6b7d-42dc-87c5-873b0ca8a116"
        },
        "item": {
          "id": "473c9661-26b3-4bb4-848f-8b8630004f6f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b9b467a6-9315-4602-a206-13a585b87a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd0985e-81b1-4196-bb61-b363b514ee50",
        "cursor": {
          "ref": "322007dd-7cb9-4f86-a7c7-0ce712d609c1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e62bab85-ab90-4ec6-80d1-ca93bf450ca8"
        },
        "item": {
          "id": "6cd0985e-81b1-4196-bb61-b363b514ee50",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "271c127f-fce9-4342-9a19-f6d0350ce3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a5b2bb-f220-485b-9dec-a038de7ce74c",
        "cursor": {
          "ref": "7c331cc4-3d10-4931-8ff6-855df74ca4d1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f188b86a-2905-4526-99e2-6894451fc3e3"
        },
        "item": {
          "id": "a6a5b2bb-f220-485b-9dec-a038de7ce74c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db097f7b-c3c5-4382-80e7-335b77dda8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25243b1-bc48-4038-973c-1a07ff82978b",
        "cursor": {
          "ref": "44bf7061-b579-41b6-a0bd-8ab644253217",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14009691-442c-4651-a3a3-d8d4565d38f5"
        },
        "item": {
          "id": "b25243b1-bc48-4038-973c-1a07ff82978b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "598b4eb9-ad07-46cf-a665-87b86e3175fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96045662-9ab4-4919-8da3-b867a5e28fb7",
        "cursor": {
          "ref": "e0072e00-c786-41f5-ad14-87c9d335d975",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "88d48699-9943-4df8-b364-f7c78acaf5a6"
        },
        "item": {
          "id": "96045662-9ab4-4919-8da3-b867a5e28fb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d49e9824-5f5d-4098-8edd-2508acb3de3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac71b80-5002-4d89-acea-701cadc7702c",
        "cursor": {
          "ref": "56b8cd75-8096-4649-9a0f-745604746c14",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7195f3a-574b-48b7-836f-340f4e0df831"
        },
        "item": {
          "id": "4ac71b80-5002-4d89-acea-701cadc7702c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b797757-39bd-42e5-8f31-3bde313429e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94afc99e-8b40-4ffb-a0b9-f926376f98c4",
        "cursor": {
          "ref": "c3eb44bd-37b3-40e8-a358-47a4ca50e065",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da9ff251-35b7-4b2b-8446-3bc60b20cc9f"
        },
        "item": {
          "id": "94afc99e-8b40-4ffb-a0b9-f926376f98c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57897e31-b406-4860-b6e7-eed435d9c545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f09c4-b79a-4089-8652-4faf4bfdf8fa",
        "cursor": {
          "ref": "2217a107-2a24-4600-85e0-63df136f17e1",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c466f487-8baf-4511-b983-7a45d6096cf5"
        },
        "item": {
          "id": "a55f09c4-b79a-4089-8652-4faf4bfdf8fa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1d6842a-7e69-4be6-b0d7-49e7ad979bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021ebeb0-6cc1-432b-bcf5-9665a4ead44f",
        "cursor": {
          "ref": "7fb1f483-f54f-47be-9cb5-141bf29e485e",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "583266a9-a6d3-42c2-8acb-5399631d75bf"
        },
        "item": {
          "id": "021ebeb0-6cc1-432b-bcf5-9665a4ead44f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a6ad864-cb16-4d4e-9c43-0aa39549c4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd51886-b338-40b3-a241-d1b34f3c76e1",
        "cursor": {
          "ref": "748f50ef-64b2-46bc-a91c-5fd414cf14e8",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f80e433-8115-47a1-addf-b7f8e695f1f4"
        },
        "item": {
          "id": "9bd51886-b338-40b3-a241-d1b34f3c76e1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c27db466-9b7b-4f4e-a406-fe4266861636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb3682d-c9f3-4592-8a04-09f893299079",
        "cursor": {
          "ref": "06dd36be-75f6-4883-beb2-7967d11dbe16",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a9ba24a0-830a-4cee-b3d6-4bf748afe5fa"
        },
        "item": {
          "id": "5eb3682d-c9f3-4592-8a04-09f893299079",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a56e21e-7d49-499c-9d1d-79ff976d4dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30c1db5-53bc-4d88-84af-095fc69ff295",
        "cursor": {
          "ref": "6b8643f1-3f50-419f-a91c-f6bb1fb0c1e4",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e88c15b9-3036-40d6-bed5-1c70d558c508"
        },
        "item": {
          "id": "c30c1db5-53bc-4d88-84af-095fc69ff295",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "58aa1110-6763-47fd-9c7d-a14e6e981722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435ceb95-a265-403b-bc0d-4663eb7b18db",
        "cursor": {
          "ref": "fa40c23a-4766-4d26-89d1-3d24413498de",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4aff6f62-55ce-4931-8dd2-af3ac0e0ccf4"
        },
        "item": {
          "id": "435ceb95-a265-403b-bc0d-4663eb7b18db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab327720-f4bc-48ab-8467-8c55056ef0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a7a19e-1341-4921-b0e1-d1658913c4f9",
        "cursor": {
          "ref": "8005ea7b-e64c-4bfe-8550-1f7a984dbe2c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "532504ce-b33c-4c28-895e-c9e366a7e03a"
        },
        "item": {
          "id": "21a7a19e-1341-4921-b0e1-d1658913c4f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "86e4b394-568c-47ea-9ebb-728c82317dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fb9343-63e6-4a33-b93c-95d5268c1ad2",
        "cursor": {
          "ref": "2c7f0336-13bf-485c-ad94-c68207eb4e06",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5667f48f-eaf9-4b1b-ac4e-660cd9deadf1"
        },
        "item": {
          "id": "68fb9343-63e6-4a33-b93c-95d5268c1ad2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "055d9b1d-c9c1-468f-a1c7-387dcb9a31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6198e461-9cf2-4802-97ca-3484fe52a3f0",
        "cursor": {
          "ref": "b2b7acd4-0389-435b-b9fd-8c01aaf806e9",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e16297ef-e5cf-4edb-8b7b-99994f9680e8"
        },
        "item": {
          "id": "6198e461-9cf2-4802-97ca-3484fe52a3f0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "73c0f53e-29fc-4576-8b0a-5b9ab3c0e72e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f249be9-f79b-4b55-8873-73cb2b01ee56",
        "cursor": {
          "ref": "42c2bc62-e75e-405a-ad4d-7736b5d5c519",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e65c57da-2cdb-440b-aca7-86e29f4a5663"
        },
        "item": {
          "id": "0f249be9-f79b-4b55-8873-73cb2b01ee56",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ffd4c968-dd80-4770-9e45-7854fec7a553",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 638,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b2d9a3-2c3e-4393-89bd-2c2e091589eb",
        "cursor": {
          "ref": "607ddcc1-a332-4585-9b8b-01f6f0a64375",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2670f39b-dc08-4083-b75b-a36ed0a6ceb0"
        },
        "item": {
          "id": "18b2d9a3-2c3e-4393-89bd-2c2e091589eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52451488-6388-4799-8742-48c07f1544b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b2d9a3-2c3e-4393-89bd-2c2e091589eb",
        "cursor": {
          "ref": "607ddcc1-a332-4585-9b8b-01f6f0a64375",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2670f39b-dc08-4083-b75b-a36ed0a6ceb0"
        },
        "item": {
          "id": "18b2d9a3-2c3e-4393-89bd-2c2e091589eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52451488-6388-4799-8742-48c07f1544b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993fb325-408d-4c30-ab01-b9bdb84a1e07",
        "cursor": {
          "ref": "34701056-2576-45c5-b40f-5b65b91ab037",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5fccb122-cb70-483c-9726-00f7bbd1d449"
        },
        "item": {
          "id": "993fb325-408d-4c30-ab01-b9bdb84a1e07",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48a334a7-d5cd-486c-86f2-729f5933d0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2394fefe-d70a-4e22-95a2-e2852097dc2f",
        "cursor": {
          "ref": "3e6f32c8-a79a-4501-a167-047b26139c0c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66df2a27-4f2f-4232-9b0c-f918377ccd59"
        },
        "item": {
          "id": "2394fefe-d70a-4e22-95a2-e2852097dc2f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bb5a9b52-e9e0-49a1-9de3-4605c60a65ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f4cc3d-28a6-48ee-823e-85ca3e26e958",
        "cursor": {
          "ref": "366ef06e-27cb-4fef-ab3d-3f655572c27a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f3dcaaaf-9302-4b05-9e08-3d5920c68c54"
        },
        "item": {
          "id": "f3f4cc3d-28a6-48ee-823e-85ca3e26e958",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe414fdb-438f-4e04-81cb-3dea1890d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be272b82-8d93-4e0c-87cc-8ceaa2bbe24e",
        "cursor": {
          "ref": "d5ab79d2-0336-417c-b014-e1e4f3122eb8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "abd6fa63-12d5-4c6d-aabb-9efd586490ec"
        },
        "item": {
          "id": "be272b82-8d93-4e0c-87cc-8ceaa2bbe24e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee4c6955-34ce-4b0d-af13-4eb836622da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0e8eae-80f3-49ad-9d3d-91cb95ce0613",
        "cursor": {
          "ref": "a8465a3c-e9cc-4144-8593-781d959f9fc5",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb5c6585-cd4e-4be0-be83-893dcd630c33"
        },
        "item": {
          "id": "ec0e8eae-80f3-49ad-9d3d-91cb95ce0613",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bc3d9575-ad8f-47ce-8048-8138cd9b62d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8837fa6f-2840-4657-97f0-52260ae568c7",
        "cursor": {
          "ref": "f8249914-9744-44af-9b4d-00f6fc6b813e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7319eb5-a09d-4b24-8580-2f4ac9d3b7c4"
        },
        "item": {
          "id": "8837fa6f-2840-4657-97f0-52260ae568c7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d7d1ad3-259c-42ea-abad-37fda9b29936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88db698e-a055-4517-876c-ac82d284a6ba",
        "cursor": {
          "ref": "256104ef-c4ff-4bfb-b23a-7986dd68ce91",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6a30dcae-3335-4ab5-8ab1-180a76960acc"
        },
        "item": {
          "id": "88db698e-a055-4517-876c-ac82d284a6ba",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6971e0a7-0e3d-47a0-b91a-2e96ec0e95a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee01364-f9c3-45bc-be8d-bdd78f796740",
        "cursor": {
          "ref": "975efe21-08e1-40a5-ac3b-991f16c33ee8",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f5316b78-992b-4cae-aee3-19268394a570"
        },
        "item": {
          "id": "2ee01364-f9c3-45bc-be8d-bdd78f796740",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3dc7c3db-97f1-4327-837b-e8e1c6fc395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1e6c79-4ee3-4319-b360-cbc23f79190b",
        "cursor": {
          "ref": "56a8814a-84dd-4c47-a3cb-7acf1a979ccf",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a65bd677-7042-4d6c-bfd8-cefc4c018330"
        },
        "item": {
          "id": "0c1e6c79-4ee3-4319-b360-cbc23f79190b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26a5f3d4-e420-431a-a71f-d87a0c0e3f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854146b-56fe-4ff1-bf49-4d5c80f7809c",
        "cursor": {
          "ref": "3b118f9d-1b8a-4d66-8893-7706e0c913bd",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6107d9c5-ae69-489d-9b42-1b4e3f82ffba"
        },
        "item": {
          "id": "0854146b-56fe-4ff1-bf49-4d5c80f7809c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a645f19-2b4c-4e26-8ab1-5b7f6170bc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e8d6e-2325-4fa9-b57a-30d2f2ef325d",
        "cursor": {
          "ref": "fdb41645-9b7a-4a09-9c85-7a8b6a36b26c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "275b7aab-9bd0-42e5-a947-385210b4faca"
        },
        "item": {
          "id": "ee7e8d6e-2325-4fa9-b57a-30d2f2ef325d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b659d2d-1018-444d-ba2a-749921abb48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c613f8-93eb-48f4-8650-7388af5bf97c",
        "cursor": {
          "ref": "50a5d5e8-1c37-44be-b9af-c2d6fd6a0ad3",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "600d9ca9-7052-4e52-9b9e-f6e54303be78"
        },
        "item": {
          "id": "71c613f8-93eb-48f4-8650-7388af5bf97c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bdf30bf9-0409-47e5-818a-07739636e78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79598da-89ca-473c-8a95-1b7d1177dc3e",
        "cursor": {
          "ref": "f0461792-6ef8-40d0-a5be-3f8199509fc0",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dfddf9ef-a4bb-4bfe-a56d-6d0c7b0e9737"
        },
        "item": {
          "id": "b79598da-89ca-473c-8a95-1b7d1177dc3e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "44fa0fac-4967-4d92-be2f-819b0e19f2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280b4d92-6d9a-4a9f-84cc-1ac8e3662ae9",
        "cursor": {
          "ref": "37206eb4-c9da-429a-b838-ee94131728b9",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89af4338-46c6-4eb1-95f2-b946786d5369"
        },
        "item": {
          "id": "280b4d92-6d9a-4a9f-84cc-1ac8e3662ae9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "697e256f-977e-47b2-94fc-0bc2bf78a5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a06bd1-b786-4108-b577-cc8bc17aaa8d",
        "cursor": {
          "ref": "b4bd9ed1-dc3c-45cb-af76-0e9ac793171e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "85d3b93e-7150-46e2-85a3-c0b163213e82"
        },
        "item": {
          "id": "c5a06bd1-b786-4108-b577-cc8bc17aaa8d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "009951a6-b384-491b-a74a-188b5e41bc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1362,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df38b3d2-c473-4f9f-954c-8f5c9894a7aa",
        "cursor": {
          "ref": "75b875f2-ee60-4b94-97db-2dff383bdc45",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bfdfd5ea-474a-4559-8c01-dbf3b02c1ff7"
        },
        "item": {
          "id": "df38b3d2-c473-4f9f-954c-8f5c9894a7aa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de35f236-08ff-425d-9532-49e07be3fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f161a6-682a-45b3-a552-9d1d269da21b",
        "cursor": {
          "ref": "283b38a6-49ce-4a17-a3a7-06c76bb7147f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95725f7a-6b77-42db-a281-0cf498fc4f37"
        },
        "item": {
          "id": "65f161a6-682a-45b3-a552-9d1d269da21b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1e98f601-f786-4f88-ab3a-408558004c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aaf3f4-f1d3-4d17-bf80-2d10cdcd48b5",
        "cursor": {
          "ref": "2c5358c7-13bf-4931-a417-58824f57494e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "360f7a0f-12f0-4b8d-8801-7cc076371ddf"
        },
        "item": {
          "id": "f8aaf3f4-f1d3-4d17-bf80-2d10cdcd48b5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "05594bd2-89d7-436d-a36f-0dd105aac086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9453f3d8-b1ae-4948-b93e-c13ace60d1e0",
        "cursor": {
          "ref": "87e7ce28-ecd4-4ef7-b165-45b1759301c2",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b67157a9-4ae9-41ad-8916-5444ebf928fd"
        },
        "item": {
          "id": "9453f3d8-b1ae-4948-b93e-c13ace60d1e0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "069ac6a4-3bb3-44ac-bd14-ffb63685295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1490,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca20c2cd-c309-445b-95b1-475338d44874",
        "cursor": {
          "ref": "862cb900-c49f-454b-a331-1b888e1fe29e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14bf425a-7255-4735-a89e-9345195404ca"
        },
        "item": {
          "id": "ca20c2cd-c309-445b-95b1-475338d44874",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1c431f10-cfe7-413b-af20-e09b0aad660f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1994,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3049eee-c513-45ba-94de-f26470bacbdb",
        "cursor": {
          "ref": "3724491e-58c6-4529-b1c5-10102bce79da",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f70f9cf4-3239-4da2-8160-413be0381253"
        },
        "item": {
          "id": "c3049eee-c513-45ba-94de-f26470bacbdb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "01c87710-e6cb-4d7f-9d81-fcbf8240fd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1515,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac0332a-3e10-44cc-b452-eeeb74721745",
        "cursor": {
          "ref": "682c88a2-d8d2-442c-913f-14ef22aeeca9",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9287075-bb39-40c1-8aac-060679808ca0"
        },
        "item": {
          "id": "6ac0332a-3e10-44cc-b452-eeeb74721745",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7c3949c2-d62e-45e4-aca0-29add7f65d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9452fb69-ad6c-4e95-9823-d694286c6d92",
        "cursor": {
          "ref": "28677931-79a4-4f08-b5f7-e3370d979a3b",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "91214859-d110-46b3-aa45-d5f7cc7a62ae"
        },
        "item": {
          "id": "9452fb69-ad6c-4e95-9823-d694286c6d92",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dee8ecb6-9dd9-4b3f-bf86-3ef7cb489924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6536e8-5ac7-4924-9459-3be69811dc7e",
        "cursor": {
          "ref": "0c05dae3-81cb-4c28-94eb-bf69a766c793",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9690e5cf-6fbe-4720-b4a8-bcc5112db89c"
        },
        "item": {
          "id": "3a6536e8-5ac7-4924-9459-3be69811dc7e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e65b9242-9ca7-4746-95e4-d22d96c562e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db59b9d5-7e90-441e-b607-e0ca25decc1f",
        "cursor": {
          "ref": "a4cedf67-4fe1-4f1c-833f-15e09b12789b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9505d5d9-56b9-4cf3-b08f-4f315ceca259"
        },
        "item": {
          "id": "db59b9d5-7e90-441e-b607-e0ca25decc1f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a644786-9d64-4790-99b8-452564aafd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbdf5f3-7762-4351-84c5-07f4cebd1408",
        "cursor": {
          "ref": "ba2f2e9b-64b8-4b5f-8c17-83b46aa137d9",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e80617a9-8dbb-4c85-bbda-943a9f16ec0e"
        },
        "item": {
          "id": "dfbdf5f3-7762-4351-84c5-07f4cebd1408",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c296d5d3-e630-47fc-a7ea-10f7fd10853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1066,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eecb73-eca4-4736-82d0-c62af02406e0",
        "cursor": {
          "ref": "c4711156-7389-4ba6-bd33-9eb3c261610c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0e96c6a0-f76d-400c-80ac-cb1b470453bd"
        },
        "item": {
          "id": "75eecb73-eca4-4736-82d0-c62af02406e0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "31ce72ff-a425-4b70-8ce6-dce8c9b063a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e09f2a-db02-4553-be1b-ae6e583ee839",
        "cursor": {
          "ref": "e794fa25-3a2c-470d-8d81-321ec984c4ca",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "127c0e71-5dee-4e05-90df-fd2ebdd64420"
        },
        "item": {
          "id": "90e09f2a-db02-4553-be1b-ae6e583ee839",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c17df045-bb4c-4927-a30c-6f0fe1894dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06f51b7-2552-4b9a-a7f5-9a3b148e2f67",
        "cursor": {
          "ref": "cd6f6800-d176-427c-930a-3b28989e69ac",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a773b068-d5c2-43cb-b017-a5d41b65cfef"
        },
        "item": {
          "id": "d06f51b7-2552-4b9a-a7f5-9a3b148e2f67",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cd480f78-7101-49df-854c-9da876edadb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2bc86-5c21-43db-ae78-06ea9812c8c8",
        "cursor": {
          "ref": "ab3bb692-ab7d-4eb2-aada-92c72ec9856f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0ec2cd60-8822-4eb8-af0a-a9b479fe9fc2"
        },
        "item": {
          "id": "57e2bc86-5c21-43db-ae78-06ea9812c8c8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "717db2d7-eb73-4e6f-a9ad-e66358d436c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857ff4c7-839f-498e-a3e0-f87461237ff5",
        "cursor": {
          "ref": "30d10cc2-887e-4c48-a401-391594bec925",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a0fb181-4f8f-4e7b-9c35-2a29fd3997c4"
        },
        "item": {
          "id": "857ff4c7-839f-498e-a3e0-f87461237ff5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2e4a4cc5-6c72-4886-a787-0a6e8084b910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8f040c-9251-4ac5-b94f-f045f5340417",
        "cursor": {
          "ref": "f8de9ab7-77d0-42c0-8135-b2a66590899c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7876f1f7-5850-4dee-b356-259fd850a0d9"
        },
        "item": {
          "id": "ba8f040c-9251-4ac5-b94f-f045f5340417",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0b09cf27-b8d9-4cee-aebd-d334f27170b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768eb2d2-aa6b-4564-b657-90055624fca2",
        "cursor": {
          "ref": "27141442-55b3-4a4b-897d-da4e7cd455ad",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1687b4ed-4781-4a1c-a876-5433e6f14067"
        },
        "item": {
          "id": "768eb2d2-aa6b-4564-b657-90055624fca2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "73d38429-58d3-4787-8082-a89797b97458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda8205d-1e82-46a7-9ac2-83e32a21d953",
        "cursor": {
          "ref": "e3c9c9c4-a411-428b-bb91-84057b3bb915",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f0e28662-ad50-4e3d-b39a-133c000a7b6f"
        },
        "item": {
          "id": "dda8205d-1e82-46a7-9ac2-83e32a21d953",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8328ba76-bc35-47af-a2e9-cdb64f59274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db49e244-9034-4302-ac90-1779a8be99fe",
        "cursor": {
          "ref": "91ccf241-400b-42da-813e-fff433ca7fe2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3b4b48f9-02a4-46d4-9b54-d0060b063d0d"
        },
        "item": {
          "id": "db49e244-9034-4302-ac90-1779a8be99fe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2a4324a5-a49b-409c-a517-259d3731c9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b0508a-127c-4a78-a48a-8de84eedd565",
        "cursor": {
          "ref": "9fa96045-1399-4d01-93dd-f37169c0cb9c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "10acd0eb-2453-4df1-860b-dd29b9c35ada"
        },
        "item": {
          "id": "28b0508a-127c-4a78-a48a-8de84eedd565",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cf5757d5-a0ee-41ef-beaa-1845fa5ef06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9e6071-c98c-4373-a103-38a76f69c44a",
        "cursor": {
          "ref": "1fde5729-1239-4c7a-8db6-c19059f43fd3",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a64f4298-978e-4033-aecf-4a138a7d73af"
        },
        "item": {
          "id": "8f9e6071-c98c-4373-a103-38a76f69c44a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d941649d-892d-4a61-8fb2-7926f1503937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1880c87c-a797-4321-903e-ba5c070570d3",
        "cursor": {
          "ref": "2e2358a4-f75a-45dd-8fb4-67d9c867cd7d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b3325885-b758-4ab5-aa89-e3cab9c47f25"
        },
        "item": {
          "id": "1880c87c-a797-4321-903e-ba5c070570d3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4493f756-f6aa-4231-bc4f-14120af281b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfde2a5c-8dbd-417e-b4bd-3ddb58ca117f",
        "cursor": {
          "ref": "d9ffca38-cf6b-4407-aebf-9b2ec8788f1f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cc9569f1-4f55-4de4-93d7-3fbf9c8c665f"
        },
        "item": {
          "id": "bfde2a5c-8dbd-417e-b4bd-3ddb58ca117f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "afea3bc8-5fc3-4638-ba9c-b0c62b0fd76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d4f699-3fee-41d3-bf1e-3d4d8fe954dc",
        "cursor": {
          "ref": "7bb1e3fe-a733-4fdc-8b25-3173d1b549cc",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "54c8a9e0-f38d-44d9-b430-946e8ee3154e"
        },
        "item": {
          "id": "67d4f699-3fee-41d3-bf1e-3d4d8fe954dc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "47267a35-5f02-4ed4-a855-ebf4bc2f83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d006f98b-4ba7-4195-9fda-b780719feca5",
        "cursor": {
          "ref": "c975ac13-2770-425e-9881-dcb5bec1edf3",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5ac7c9b7-687b-4279-a808-02b69128bb7e"
        },
        "item": {
          "id": "d006f98b-4ba7-4195-9fda-b780719feca5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "31aa710f-6393-4a49-993c-fa60cdad1b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b48392-282e-40ba-b103-4b4fe8b2199d",
        "cursor": {
          "ref": "5f81121c-96e9-4fb6-8d86-bbff4caafb54",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "90696657-4fcb-4eb3-acf5-c9dba61ec485"
        },
        "item": {
          "id": "95b48392-282e-40ba-b103-4b4fe8b2199d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "526e4de8-019c-435d-b3c2-2f7f0aab30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c246544-9c2b-4618-8440-bad0bc2cbcb0",
        "cursor": {
          "ref": "fadef75e-2c47-4b17-8d20-e97f8c6497ee",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f4c3d2d6-6b58-412c-8604-8505616251eb"
        },
        "item": {
          "id": "0c246544-9c2b-4618-8440-bad0bc2cbcb0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "32f1e76b-0e36-4e87-9150-4104b8b82654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae58d32f-d940-48fa-b13c-227947439aca",
        "cursor": {
          "ref": "2601a936-c0e0-4873-b8c6-2a7b45859f5c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c9943235-1464-41d7-b876-9db951c89f55"
        },
        "item": {
          "id": "ae58d32f-d940-48fa-b13c-227947439aca",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6e22d281-09ca-4647-a6b5-0d6e25bdca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f8a13a-7bb4-412d-a9e9-d80f29d84f78",
        "cursor": {
          "ref": "ea88ddcd-6a5e-42b8-bc35-00f65f9a2125",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "33f29328-2fe4-4f37-a841-6adf77ece30a"
        },
        "item": {
          "id": "f4f8a13a-7bb4-412d-a9e9-d80f29d84f78",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a38453f8-4f36-4e6e-a74f-b6a962074e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889429c0-f7b8-4c09-9d6d-06af891d7763",
        "cursor": {
          "ref": "101f569d-27b3-4dde-b172-a14ccddc4028",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e94e505-d463-4a46-9476-911bb23d2784"
        },
        "item": {
          "id": "889429c0-f7b8-4c09-9d6d-06af891d7763",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "add421d2-56e7-4c80-a902-d0c21a4b9704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48dea52-f2a8-4781-a105-37ef128b9906",
        "cursor": {
          "ref": "a5fcf018-ca6b-458c-bcc3-cbcd68cfc2b8",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d7e875a-5280-4f6b-921d-49ae7e69717f"
        },
        "item": {
          "id": "a48dea52-f2a8-4781-a105-37ef128b9906",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "113ccd25-c79d-42b0-a2af-3ddd0dc5d94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f9259-6c4e-4bcf-a8dd-e5bdbc098f28",
        "cursor": {
          "ref": "78e36f61-37c0-457c-8e8b-b6afdf069a36",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fd1cfaf3-af93-4208-b5f2-3ea8da053fe4"
        },
        "item": {
          "id": "940f9259-6c4e-4bcf-a8dd-e5bdbc098f28",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "13b5a00d-19f6-4cd8-b9f2-e8e49ccfc714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678778ea-5c4f-4221-81d6-4e7dfb4673d5",
        "cursor": {
          "ref": "dd17b70a-c030-4561-a7a3-e82c23254bb2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d84af83-9b47-47dc-8e04-252c7b02f4d3"
        },
        "item": {
          "id": "678778ea-5c4f-4221-81d6-4e7dfb4673d5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "727e695b-c711-4223-aaca-393e070f670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f002c31c-24c9-4338-820c-8ccab1129ae9",
        "cursor": {
          "ref": "f7db5027-11f8-4733-b203-32f854a7b5bf",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c1f9fa7-bef1-4f81-96aa-158e7ab0a8e5"
        },
        "item": {
          "id": "f002c31c-24c9-4338-820c-8ccab1129ae9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "42f540d4-9c37-4db8-b1b7-49a0cc25c5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcc4b40-5335-4ede-b0a3-29e3d4b542c6",
        "cursor": {
          "ref": "ca9ce533-9830-4d08-8c4d-e689a24efbe4",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "57d116eb-5611-407f-84d4-322811344b2c"
        },
        "item": {
          "id": "fdcc4b40-5335-4ede-b0a3-29e3d4b542c6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f9ef5cf2-fd3e-418d-9264-23bf8028aaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa524218-7e4c-42bb-b876-1291146172f6",
        "cursor": {
          "ref": "1dc573a5-7eb7-482d-ac14-ecaf2d9558bf",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "529e50a7-4451-4831-b3db-c684b5674dee"
        },
        "item": {
          "id": "fa524218-7e4c-42bb-b876-1291146172f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "04e96cc4-c1c9-44ae-b4e6-63b35cc266dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d91538c-2f5e-41a5-a383-0510af0b8eb2",
        "cursor": {
          "ref": "82d0bbae-76c2-4cb3-8ee0-ccb0fe2f0f2b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ad7371d-79fb-4d36-af91-e5174ab8470a"
        },
        "item": {
          "id": "2d91538c-2f5e-41a5-a383-0510af0b8eb2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4fbdbbc8-c752-4d86-a261-ea865dc22aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae54150-2561-4737-8f3f-e7a1296e2f92",
        "cursor": {
          "ref": "4d8ed170-5d85-4903-8894-ba881db7da6d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0c63ff9e-88b7-44e6-91ef-cd5db67c6e88"
        },
        "item": {
          "id": "fae54150-2561-4737-8f3f-e7a1296e2f92",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8877e482-0f6a-4dac-9d42-f1d91076c37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ac4ce9-3495-4254-9c6c-a5b9fce1890d",
        "cursor": {
          "ref": "9ec26355-3a3e-4ee8-a894-76c01eea219b",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "40390f1f-5f0e-41f9-9b58-238511b57f26"
        },
        "item": {
          "id": "d3ac4ce9-3495-4254-9c6c-a5b9fce1890d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8e4bd99-c8cb-46e9-8ec2-58d7251c9eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8a35b6-9aff-4fd8-ba91-45a3ab069f15",
        "cursor": {
          "ref": "2ce27bfe-9147-4532-a1ef-d41396a18659",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6d349ef4-f67c-4bdf-a9a5-d6ae35c3c56e"
        },
        "item": {
          "id": "6b8a35b6-9aff-4fd8-ba91-45a3ab069f15",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "31c55608-826f-47cb-a5f6-e5f750e967c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45fba04-a7be-4994-8ab6-48edf1add559",
        "cursor": {
          "ref": "aae99e2c-021b-4324-9aa7-f75e3156a8cf",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9124a945-00f9-4221-ab99-dcc72b024997"
        },
        "item": {
          "id": "e45fba04-a7be-4994-8ab6-48edf1add559",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "72c8e2f6-8911-4006-b3bf-c4f5d3dba04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db885eec-5b0f-42fb-97aa-1e9c2f328f29",
        "cursor": {
          "ref": "f22bcafd-52b0-4db3-88ed-435648bc6c78",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7f86c95a-6f27-4c5d-9738-d099ba24dd46"
        },
        "item": {
          "id": "db885eec-5b0f-42fb-97aa-1e9c2f328f29",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1fd649fe-f06f-4f3f-b35f-ad0b7dd0ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50412208-66ba-415a-a9fb-f9624775b88e",
        "cursor": {
          "ref": "ece61172-97bb-46fe-8c97-76b03a07d05c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eeba385c-3364-4e64-aa20-aa8da5d7bf58"
        },
        "item": {
          "id": "50412208-66ba-415a-a9fb-f9624775b88e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0b359f75-528c-4da8-b2a2-872ac47c767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124bb24f-876f-4100-9c45-e0b928e37b7a",
        "cursor": {
          "ref": "266b0f91-3dc5-4062-8ebc-5d273cc7f99d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0e611e1c-8cf3-4baa-8065-cdcb9c29a654"
        },
        "item": {
          "id": "124bb24f-876f-4100-9c45-e0b928e37b7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "35f87bf4-3b97-4749-a384-f2d5af27f866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65706544-3b3f-4663-a5d6-e49c7c4fea6c",
        "cursor": {
          "ref": "00b0bc4e-3f0b-46e0-8fa6-cc1d02455da5",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "57d6b788-7a40-4af4-87b3-b0fca2aaa698"
        },
        "item": {
          "id": "65706544-3b3f-4663-a5d6-e49c7c4fea6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5953f1d3-ccf4-43c0-bcbf-4f45d86da382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa5b19-2555-4bb7-886c-27e03d79649c",
        "cursor": {
          "ref": "96106ec9-32bc-4c02-a9b5-8cc10ed923c5",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5bfcd42e-b229-4f48-824b-b2de257957a3"
        },
        "item": {
          "id": "7ffa5b19-2555-4bb7-886c-27e03d79649c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a65ce75e-36aa-44e2-bff0-403074c7654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e5e02a-af3b-46b6-a414-4ee1e719c833",
        "cursor": {
          "ref": "888bea02-2e1a-4820-ad88-ed09f5c29c06",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "16f47b96-61f9-4b69-aa1b-2b1887feed13"
        },
        "item": {
          "id": "99e5e02a-af3b-46b6-a414-4ee1e719c833",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "370addd5-8458-4e69-8796-0562b8aa0fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d162b-39c7-4e52-930f-232744f6117d",
        "cursor": {
          "ref": "efdcb21e-2369-423b-8cbb-dc21c342251b",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "862cd52b-8508-42c0-a6f8-851d0fc7853f"
        },
        "item": {
          "id": "114d162b-39c7-4e52-930f-232744f6117d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c9adc345-15ba-4302-bff6-5d21a5664570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa958dc8-ce49-4151-8906-259d60fcff88",
        "cursor": {
          "ref": "333c6c72-d7bc-4794-83eb-fd2a8ca23bac",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8cd11a16-1690-4634-be82-a818611614ba"
        },
        "item": {
          "id": "aa958dc8-ce49-4151-8906-259d60fcff88",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80a136d4-3d54-4fa4-a360-a8a08cc27e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2dde6f-9b6d-4c30-9b5e-a673f34b6673",
        "cursor": {
          "ref": "0329f41b-b57a-451f-9dc8-83aedea1204d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ce69390c-fda1-467c-9af1-aa2112f20971"
        },
        "item": {
          "id": "6a2dde6f-9b6d-4c30-9b5e-a673f34b6673",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9a7c9acb-80bb-4041-ae80-3c66d8cc8f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b96d0b-71f2-4d6a-850f-17ad4ebe0c58",
        "cursor": {
          "ref": "89d3107f-3d4a-42d8-a12c-86d27f1f9a2b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ffeead92-a392-4c1e-8741-e68a38906e47"
        },
        "item": {
          "id": "b6b96d0b-71f2-4d6a-850f-17ad4ebe0c58",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7df92636-1170-4887-8cf0-e91fb6b4a498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3a456b-75ba-47ad-b150-3493d5a6c0ca",
        "cursor": {
          "ref": "2da8eb76-d955-4a84-a8e1-b40a77c9891a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6fe03a7-9a47-4d64-8cc2-e554fb6335c2"
        },
        "item": {
          "id": "6b3a456b-75ba-47ad-b150-3493d5a6c0ca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5da73229-d1ee-4603-86d2-9128a949ca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261f9026-7b7d-4492-ba0c-fabc14d63a6c",
        "cursor": {
          "ref": "49d5f4a2-f26d-4a35-9eac-0970ad90cad1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe542530-8ae7-4ceb-bae5-ad71d6197263"
        },
        "item": {
          "id": "261f9026-7b7d-4492-ba0c-fabc14d63a6c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79b9e832-4829-4435-a52f-0bc3071acf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445664e-b37a-43ef-a3fe-a474e1948e3d",
        "cursor": {
          "ref": "e4435b6e-4ce6-4cbf-9f86-daf06f9b438f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1c7f6b29-40ac-4e88-bcbf-6f8acb58f985"
        },
        "item": {
          "id": "7445664e-b37a-43ef-a3fe-a474e1948e3d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a08a87fc-833a-4854-845b-c2264e21abe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c079e850-527d-4a0c-b235-5c968a06822f",
        "cursor": {
          "ref": "1cb63734-ce7c-4a63-80fa-6e7677fe61d9",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1ff53baa-8723-4e56-a4d0-76e83cd9cbc1"
        },
        "item": {
          "id": "c079e850-527d-4a0c-b235-5c968a06822f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "900f7af6-4615-4717-a1cd-c97b7d43d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fae9f9-b151-4595-bd43-a551c962baed",
        "cursor": {
          "ref": "15caeef4-aa5a-4f92-925d-46f37ccd5514",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "83f74cb3-2c56-4849-a326-bb1b6b83ed7a"
        },
        "item": {
          "id": "d4fae9f9-b151-4595-bd43-a551c962baed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7204b013-1630-4889-a7fa-8791d90e6d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8de974-4e71-49a3-9a35-fc8c9d994f37",
        "cursor": {
          "ref": "c0c60141-6706-4d5d-802c-52cfbedccf0f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "abf10457-4822-4c97-968e-8589ccbd3ee9"
        },
        "item": {
          "id": "ec8de974-4e71-49a3-9a35-fc8c9d994f37",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4dda18e5-565d-4527-99f8-0b8249565efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d848057b-a790-46d8-9e30-4de994bbbb7a",
        "cursor": {
          "ref": "d1be581a-b571-4cf1-9a24-f47a14cd0bdb",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f9baad71-2553-44ef-9dfa-1125a5fce401"
        },
        "item": {
          "id": "d848057b-a790-46d8-9e30-4de994bbbb7a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f1553ad0-9dc5-44fb-918b-7e1a49ae77b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5dff47-9ad6-43a7-8ade-9310c032ec98",
        "cursor": {
          "ref": "a73aafef-95da-4f45-a563-058d7d0f59a3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1b5619a5-5773-46b8-aeda-1796b9b13a03"
        },
        "item": {
          "id": "0f5dff47-9ad6-43a7-8ade-9310c032ec98",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7efc7d46-9fed-47d8-a742-db3e40903b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b006a-9026-44a3-9e44-4ed3d3343358",
        "cursor": {
          "ref": "28f430ba-0d60-4597-8461-5ddcd612c310",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2cc69f5a-6a1b-4ea2-93a7-42ccaa18e810"
        },
        "item": {
          "id": "425b006a-9026-44a3-9e44-4ed3d3343358",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7707eb0e-27da-457c-89ac-6ce0b3935f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55a1f99-6bc9-47c4-a016-d2db71cbd0e7",
        "cursor": {
          "ref": "e9990347-0c6d-40cf-9c84-0ea2d0fbbcb5",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9fff1245-f468-4e38-8b05-311ad2a4f962"
        },
        "item": {
          "id": "b55a1f99-6bc9-47c4-a016-d2db71cbd0e7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b0ac8d4c-89ba-4703-985a-d2fcb64cad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e596952c-d04b-46e5-8160-32edf0e06fd3",
        "cursor": {
          "ref": "8d8bc379-baca-4c0c-bdd9-d950aef3148f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f344d7ce-0161-429a-bc04-ebf2943598e1"
        },
        "item": {
          "id": "e596952c-d04b-46e5-8160-32edf0e06fd3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27ee0ba4-678b-46fd-8f80-c2d70ef7e984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93938f9b-ed35-4117-94d8-d3ffff806618",
        "cursor": {
          "ref": "a226daa4-c476-4edf-b104-e1bb6b45e27c",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d8e88803-2102-48ff-9a5b-2bfdd91cc901"
        },
        "item": {
          "id": "93938f9b-ed35-4117-94d8-d3ffff806618",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cc45acb6-969d-4ac6-a989-4a70a7660390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064491c1-053a-4152-8b2b-01980220ebdf",
        "cursor": {
          "ref": "96053faf-fae4-4a2f-ac61-a1c05614bdb6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "93556b03-4fa1-4440-967a-b8dd13f63ba2"
        },
        "item": {
          "id": "064491c1-053a-4152-8b2b-01980220ebdf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbaa6062-c86f-413d-80ff-a97124b19b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7e00d1-f0b6-442f-81c4-b2f823aa8b7b",
        "cursor": {
          "ref": "81e6ec48-fe89-4ede-b1af-9c2ff348389f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8f310390-21ba-48d5-b568-fb873b09d2df"
        },
        "item": {
          "id": "7b7e00d1-f0b6-442f-81c4-b2f823aa8b7b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3cbd8f4b-0749-451f-90aa-b63496f84aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece94684-e2bf-4134-9fc1-f5b5138233d3",
        "cursor": {
          "ref": "f4a689c0-0492-46a0-be1e-180dabebc6f4",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cbdf881b-5740-41f4-a46b-5abe1e2d4e2f"
        },
        "item": {
          "id": "ece94684-e2bf-4134-9fc1-f5b5138233d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "afc605e6-84cb-4c91-83d6-2b1c78a0a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c29c07-b534-4b8d-b653-5936be2314e3",
        "cursor": {
          "ref": "45219303-3390-43c3-8caa-ff4b55e7dd77",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d7aa46ac-27e1-49a6-bd7e-ec89b5e8cf37"
        },
        "item": {
          "id": "13c29c07-b534-4b8d-b653-5936be2314e3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf5875a7-5c6e-4578-b260-0600a6ff61dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00d7ee2-62d7-4fbb-a346-6ba9a438625b",
        "cursor": {
          "ref": "204ed225-de7e-400e-be44-286bb821634b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1d30a5ee-d2dd-4e94-9a57-749faafe8e9a"
        },
        "item": {
          "id": "f00d7ee2-62d7-4fbb-a346-6ba9a438625b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f6efdadf-6da5-429a-ade4-a9b8b7215b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0d3b5b-7bb7-46f8-b638-0ba7ea146850",
        "cursor": {
          "ref": "4d878fb5-d268-4e4b-8370-4aef191f46b2",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "113f78d0-f441-4c40-b69a-7d35d18ddb0f"
        },
        "item": {
          "id": "8a0d3b5b-7bb7-46f8-b638-0ba7ea146850",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7bf4e2d7-7c53-488b-85a0-7552d0e1b173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61341bc-cace-4172-8b99-2f95fcaa3e52",
        "cursor": {
          "ref": "68affcc2-ab0d-4347-954e-df1a2eec050c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c4808c5c-0fcb-4fe2-90f1-fc0154cec5a3"
        },
        "item": {
          "id": "d61341bc-cace-4172-8b99-2f95fcaa3e52",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c5a437bd-ba73-4ddd-bc78-94c19c6bccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def121ab-eced-4919-bddb-2bc4f919c438",
        "cursor": {
          "ref": "aff0d8bd-8c56-430b-9beb-609cdcc34aef",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96faf7c0-155b-4027-ac4f-1c134a1e6f92"
        },
        "item": {
          "id": "def121ab-eced-4919-bddb-2bc4f919c438",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "156f97c5-b62a-43ef-b2ec-96fcb82a1195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dadb68-54a3-4027-9bb2-bbe05f88974a",
        "cursor": {
          "ref": "926bdc8e-495c-4db5-b8a4-a451ff7fa4f4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca203c17-15ed-4b06-81ef-4aae8753e788"
        },
        "item": {
          "id": "74dadb68-54a3-4027-9bb2-bbe05f88974a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3ca2502-221b-4767-8b13-d6700cb16031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4cd445-1218-41f6-aeb7-783e8b243b58",
        "cursor": {
          "ref": "518a2549-6aa4-47b1-b6ce-7f9f73f94b33",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5f22495b-f2b3-474b-bc87-ea2d36eadd63"
        },
        "item": {
          "id": "9b4cd445-1218-41f6-aeb7-783e8b243b58",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c7346161-cc9d-4f6e-8b12-bea4786ac760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8361cf28-aa6c-45b8-87da-474508b5075f",
        "cursor": {
          "ref": "c18b431d-4f33-4c89-bbf5-82359147373a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "49789087-694b-425c-a044-298475831d79"
        },
        "item": {
          "id": "8361cf28-aa6c-45b8-87da-474508b5075f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "43c18fc4-e4cc-4be6-8a4c-337bddab199d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580dbf28-35ea-48e4-925b-84805d0879a5",
        "cursor": {
          "ref": "62ce4e70-5111-48df-aae0-81831291246f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8c75f4d7-5e77-4d12-bfc8-c47b1a445dfa"
        },
        "item": {
          "id": "580dbf28-35ea-48e4-925b-84805d0879a5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2e136eef-5a1b-4bfd-a8c6-1b50f9361ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092a7a32-5191-4f00-92e0-816cf453e35e",
        "cursor": {
          "ref": "4fb382a6-762e-409e-8944-9a19e1b9de4b",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4612efdd-7557-45db-93a4-43330c75ea76"
        },
        "item": {
          "id": "092a7a32-5191-4f00-92e0-816cf453e35e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "64475eab-5992-4c12-b990-edf1d7ba2848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd518c65-b8a9-4167-936a-0f5753956234",
        "cursor": {
          "ref": "985f927d-78b5-4678-bf89-097e31c9856c",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e5e3cca6-c023-4666-a6ab-0dd4740fec84"
        },
        "item": {
          "id": "bd518c65-b8a9-4167-936a-0f5753956234",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "178a3487-f966-4afa-b623-602eaf3abf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79286946-a342-4cc5-94cc-2e58722180dc",
        "cursor": {
          "ref": "0839666c-3300-4b85-89b9-90a06c592cb8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b36130ab-9bc5-49a5-8a18-5357b2dfe105"
        },
        "item": {
          "id": "79286946-a342-4cc5-94cc-2e58722180dc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f75cdb3-2027-4a74-b47a-00c9fea609f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574ef68b-2095-46a3-becd-97e4fe42526f",
        "cursor": {
          "ref": "a1e57fe6-e951-4b4c-bd1b-9b23f35c6d4d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fc6c08f6-328c-4247-b72f-556dbd34bc54"
        },
        "item": {
          "id": "574ef68b-2095-46a3-becd-97e4fe42526f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87aa053f-37cc-4562-8f2a-6788132d06a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c47f52-deb3-4974-9d5b-ae08ef0e651d",
        "cursor": {
          "ref": "f1c6f0c2-380e-42b0-b47c-a4774a1c9bae",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "12dbc3c6-17ab-4121-8465-82d343c50d8a"
        },
        "item": {
          "id": "46c47f52-deb3-4974-9d5b-ae08ef0e651d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d7e6a31b-7f40-46f1-839f-875a5699a228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e807b861-a68e-4cbb-a551-f33191c8f8e2",
        "cursor": {
          "ref": "132deae0-f876-4760-bc27-6b71fb641da1",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ee036de-b8a4-45f4-873f-444b781810dd"
        },
        "item": {
          "id": "e807b861-a68e-4cbb-a551-f33191c8f8e2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1ed8f763-2774-4f80-b9ea-47edc8eebfe2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4734f7c7-e51a-4b9d-9d46-8cb9c0ce4f55",
        "cursor": {
          "ref": "d8689233-13b3-4a1a-9614-e754f929d0d7",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8eb7ad81-1d1a-406d-8f09-c981e11e5b35"
        },
        "item": {
          "id": "4734f7c7-e51a-4b9d-9d46-8cb9c0ce4f55",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7ac4396b-31b0-44ea-ac90-9da69f0578a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3712da5-857a-4932-895b-79b81c20fed7",
        "cursor": {
          "ref": "d7e2cf45-0dd8-45cd-9a19-74141985b559",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "deebb547-fbea-41a3-b9d0-65232cd2d988"
        },
        "item": {
          "id": "b3712da5-857a-4932-895b-79b81c20fed7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7cb3eec9-5e68-480d-9247-1225105e0f43",
          "status": "OK",
          "code": 200,
          "responseTime": 584,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e300b-9efa-4977-928a-aba5d206d738",
        "cursor": {
          "ref": "ef5a3bc0-44f2-4393-906b-685e5cfc82be",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "30ab7ce6-d780-42e4-981e-91f330729fd7"
        },
        "item": {
          "id": "d45e300b-9efa-4977-928a-aba5d206d738",
          "name": "credentials_verify"
        },
        "response": {
          "id": "180f9543-fe5e-4815-baa9-1a9179a3c183",
          "status": "OK",
          "code": 200,
          "responseTime": 1873,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d6f59-89ae-43dc-b1df-d50abe21609e",
        "cursor": {
          "ref": "1edf0528-ebee-4cf3-9b7c-09cbf36962f0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6f4beeec-a546-4f7a-b351-d6bbaab5faa2"
        },
        "item": {
          "id": "789d6f59-89ae-43dc-b1df-d50abe21609e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d0ee509-fc02-4c40-bf65-189cd87b52d3",
          "status": "OK",
          "code": 200,
          "responseTime": 2190,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
        "cursor": {
          "ref": "77a8357e-de17-4d7c-a432-d35dc6ac578c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bca1d2fa-255f-46f7-b87b-47683d442540"
        },
        "item": {
          "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dba47613-a355-4ac3-ba6d-80083a208413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
        "cursor": {
          "ref": "77a8357e-de17-4d7c-a432-d35dc6ac578c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bca1d2fa-255f-46f7-b87b-47683d442540"
        },
        "item": {
          "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dba47613-a355-4ac3-ba6d-80083a208413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
        "cursor": {
          "ref": "77a8357e-de17-4d7c-a432-d35dc6ac578c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bca1d2fa-255f-46f7-b87b-47683d442540"
        },
        "item": {
          "id": "82437e2b-41a8-40c5-bda8-1746ceccfd1e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dba47613-a355-4ac3-ba6d-80083a208413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e8b900-2337-46d2-902e-5affe6ac0d6a",
        "cursor": {
          "ref": "cd3e8229-2edd-41ec-b633-1d9d929d3e20",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d02c563b-dbb7-4530-bf02-06936dd93940"
        },
        "item": {
          "id": "45e8b900-2337-46d2-902e-5affe6ac0d6a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2bb644e2-c5ee-4107-90cb-96da5e557326",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afcf2dc-6fe6-4215-8fd2-8decd663499e",
        "cursor": {
          "ref": "f6a750f7-0a55-4659-95b2-af1f8b346b6b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b6bc8efd-5e96-4510-b90a-486609d3909f"
        },
        "item": {
          "id": "9afcf2dc-6fe6-4215-8fd2-8decd663499e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80ef7e85-a010-410a-87f9-87339eca29db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afcf2dc-6fe6-4215-8fd2-8decd663499e",
        "cursor": {
          "ref": "f6a750f7-0a55-4659-95b2-af1f8b346b6b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b6bc8efd-5e96-4510-b90a-486609d3909f"
        },
        "item": {
          "id": "9afcf2dc-6fe6-4215-8fd2-8decd663499e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80ef7e85-a010-410a-87f9-87339eca29db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4346b9b0-5dd2-4d0e-9482-dfefb0f40a45",
        "cursor": {
          "ref": "8b2b76d3-f7b1-4f03-8f15-b371f9f3f98c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7380531-b146-42fd-a52c-9a60a7b0c372"
        },
        "item": {
          "id": "4346b9b0-5dd2-4d0e-9482-dfefb0f40a45",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c13a397c-d47e-4348-9350-7e51ced45e1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1176,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5572ff-c810-4375-aa97-fb81572972f3",
        "cursor": {
          "ref": "d035b68e-2a6b-4db0-9936-0ff33713f0ae",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5dbbd6d6-af99-4364-9906-cb5983a9907a"
        },
        "item": {
          "id": "9a5572ff-c810-4375-aa97-fb81572972f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c1b0d8af-5827-485d-8baa-8176f832d36d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5572ff-c810-4375-aa97-fb81572972f3",
        "cursor": {
          "ref": "d035b68e-2a6b-4db0-9936-0ff33713f0ae",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5dbbd6d6-af99-4364-9906-cb5983a9907a"
        },
        "item": {
          "id": "9a5572ff-c810-4375-aa97-fb81572972f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c1b0d8af-5827-485d-8baa-8176f832d36d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb0ad25-5428-4926-a916-fe081a1a1130",
        "cursor": {
          "ref": "954e8841-2c70-4fb1-8a12-c17db7ef6e90",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e4ac0fcc-ed37-41ff-8389-e92b987b156f"
        },
        "item": {
          "id": "3eb0ad25-5428-4926-a916-fe081a1a1130",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3b5802f5-758d-46a0-9831-8b170703c91e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1269,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}